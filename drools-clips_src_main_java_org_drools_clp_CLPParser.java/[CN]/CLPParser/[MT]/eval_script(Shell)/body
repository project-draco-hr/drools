{
  ImportDescr i=null;
  RuleDescr r=null;
  ValueHandler fc=null;
  try {
{
      loop1:       do {
        int alt1=4;
        int LA1_0=input.LA(1);
        if ((LA1_0 == LEFT_PAREN)) {
switch (input.LA(2)) {
case 42:
{
              alt1=1;
            }
          break;
case DEFRULE:
{
          alt1=2;
        }
      break;
case LEFT_PAREN:
case NAME:
case RIGHT_PAREN:
case VAR:
case STRING:
case INT:
case FLOAT:
case BOOL:
case NULL:
{
      alt1=3;
    }
  break;
}
}
switch (alt1) {
case 1:
{
pushFollow(FOLLOW_importDescr_in_eval_script55);
i=importDescr();
_fsp--;
if (failed) return;
if (backtracking == 0) {
  shell.importDescrHandler(i);
}
}
break;
case 2:
{
pushFollow(FOLLOW_defrule_in_eval_script66);
r=defrule();
_fsp--;
if (failed) return;
if (backtracking == 0) {
shell.ruleDescrHandler(r);
}
}
break;
case 3:
{
pushFollow(FOLLOW_lisp_list_in_eval_script83);
fc=lisp_list(shell,new LispForm(shell));
_fsp--;
if (failed) return;
if (backtracking == 0) {
shell.lispFormHandler(fc);
}
}
break;
default :
break loop1;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
