{
  ValueHandler fc=null;
  ExecutionEngine engine=new CLPPredicate();
  ExecutionBuildContext context=new ExecutionBuildContext(engine,functionRegistry);
  try {
{
      match(input,COLON,FOLLOW_COLON_in_predicate_constraint916);
      pushFollow(FOLLOW_lisp_list_in_predicate_constraint922);
      fc=lisp_list(context,new LispForm(context));
      _fsp--;
      engine.addFunction((FunctionCaller)fc);
      pattern.addDescr(new PredicateDescr(engine));
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return;
}
