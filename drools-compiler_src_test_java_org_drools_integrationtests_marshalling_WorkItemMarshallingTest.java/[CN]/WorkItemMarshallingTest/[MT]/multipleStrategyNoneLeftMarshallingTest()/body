{
  WorkItem workItem=createWorkItem(input);
  byte[] byteArray;
{
    ObjectMarshallingStrategy[] strats=new ObjectMarshallingStrategy[]{MarshallerFactory.newSerializeMarshallingStrategy(),new MarshallerProviderImpl().newIdentityMarshallingStrategy()};
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    MarshallerWriteContext outContext=new MarshallerWriteContext(baos,null,null,null,new ObjectMarshallingStrategyStore(strats),true,true,null);
    OutputMarshaller.writeWorkItem(outContext,workItem);
    byteArray=baos.toByteArray();
  }
{
    ObjectMarshallingStrategy[] newStrats=new ObjectMarshallingStrategy[]{};
    ByteArrayInputStream bais=new ByteArrayInputStream(byteArray);
    MarshallerReaderContext inContext=new MarshallerReaderContext(bais,null,null,new ObjectMarshallingStrategyStore(newStrats),true,true,null);
    try {
      workItem=InputMarshaller.readWorkItem(inContext);
      fail("An exception was expected here.");
    }
 catch (    IllegalStateException e) {
      assertTrue(e.getMessage() != null && e.getMessage().startsWith("No strategy of type"));
    }
  }
}
