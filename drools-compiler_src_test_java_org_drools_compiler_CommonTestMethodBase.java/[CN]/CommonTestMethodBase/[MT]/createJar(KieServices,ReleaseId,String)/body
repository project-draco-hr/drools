{
  KieFileSystem kfs=ks.newKieFileSystem().generateAndWritePomXML(releaseId);
  for (int i=0; i < drls.length; i++) {
    if (drls[i] != null) {
      kfs.write("src/main/resources/r" + i + ".drl",drls[i]);
    }
  }
  KieBuilder kb=ks.newKieBuilder(kfs).buildAll();
  assertFalse(kb.getResults().getMessages(org.kie.api.builder.Message.Level.ERROR).toString(),kb.getResults().hasMessages(org.kie.api.builder.Message.Level.ERROR));
  InternalKieModule kieModule=(InternalKieModule)ks.getRepository().getKieModule(releaseId);
  byte[] jar=kieModule.getBytes();
  return jar;
}
