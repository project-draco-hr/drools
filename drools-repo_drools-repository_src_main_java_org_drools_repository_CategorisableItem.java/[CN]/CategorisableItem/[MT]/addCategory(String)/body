{
  try {
    checkIsUpdateable();
    CategoryItem tagItem=this.rulesRepository.loadCategory(tag);
    String tagItemUUID=this.node.getSession().getValueFactory().createValue(tagItem.getNode()).getString();
    try {
      Property tagReferenceProperty=this.node.getProperty(CATEGORY_PROPERTY_NAME);
      Value[] oldTagValues=tagReferenceProperty.getValues();
      for (int j=0; j < oldTagValues.length; j++) {
        if (oldTagValues[j].getString().equals(tagItemUUID)) {
          log.info("tag '" + tag + "' already existed for rule node: "+ this.node.getName());
          return;
        }
      }
      Value[] newTagValues=new Value[oldTagValues.length + 1];
      for (int i=0; i < oldTagValues.length; i++) {
        newTagValues[i]=oldTagValues[i];
      }
      newTagValues[oldTagValues.length]=this.node.getSession().getValueFactory().createValue(tagItem.getNode());
      updateCategories(newTagValues);
    }
 catch (    PathNotFoundException e) {
      Value[] newTagValues=new Value[1];
      newTagValues[0]=this.node.getSession().getValueFactory().createValue(tagItem.getNode());
      updateCategories(newTagValues);
    }
  }
 catch (  Exception e) {
    log.error("Caught exception",e);
    throw new RulesRepositoryException(e);
  }
}
