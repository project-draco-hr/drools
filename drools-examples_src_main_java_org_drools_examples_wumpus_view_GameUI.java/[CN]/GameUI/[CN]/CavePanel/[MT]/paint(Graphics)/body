{
  super.paintComponent(g);
  try {
    int rowIndent=20;
    int colIndent=5;
    int rowPad=0;
    for (int row=0; row < 5; row++) {
      int colPad=0;
      for (int col=0; col < 5; col++) {
        int x=(4 - row) * 50 - rowPad + rowIndent;
        int y=col * 50 + colPad + colIndent;
        BufferedImage image=null;
        if (!gameData.isShowAllCells() && (gameData.getCells() != null && gameData.getCells()[row][col].isHidden())) {
          image=javax.imageio.ImageIO.read(getClass().getResource("hidden_room.png"));
        }
 else {
          if (gameData.getPits().contains(new Pitt(row,col))) {
            image=javax.imageio.ImageIO.read(getClass().getResource("pitt.png"));
          }
 else           if (row == gameData.getWumpus().getRow() && col == gameData.getWumpus().getCol()) {
            if (gameData.getWumpus().isAlive()) {
              image=javax.imageio.ImageIO.read(getClass().getResource("alive_wumpus.png"));
            }
 else {
              image=javax.imageio.ImageIO.read(getClass().getResource("dead_wumpus.png"));
            }
          }
 else           if (row == gameData.getGold().getRow() && col == gameData.getGold().getCol()) {
            image=javax.imageio.ImageIO.read(getClass().getResource("g.png"));
          }
 else           if (row == gameData.getHero().getRow() && col == gameData.getHero().getCol()) {
            Hero hero=gameData.getHero();
switch (hero.getDirection()) {
case UP:
              image=javax.imageio.ImageIO.read(getClass().getResource("hero_up.png"));
            break;
case DOWN:
          image=javax.imageio.ImageIO.read(getClass().getResource("hero_down.png"));
        break;
case LEFT:
      image=javax.imageio.ImageIO.read(getClass().getResource("hero_left.png"));
    break;
case RIGHT:
  image=javax.imageio.ImageIO.read(getClass().getResource("hero_right.png"));
break;
}
}
 else {
image=javax.imageio.ImageIO.read(getClass().getResource("empty_room.png"));
}
}
g.drawImage(image,y,x,50,50,this);
colPad=colPad + 3;
}
rowPad=rowPad + 3;
}
}
 catch (Exception e) {
e.printStackTrace();
throw new RuntimeException(e);
}
}
