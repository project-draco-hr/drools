{
  GameView gameView=gameUI.getGameView();
  super.paintComponent(g);
  try {
    int rowIndent=20;
    int colIndent=5;
    int rowPad=0;
    for (int row=0; row < 5; row++) {
      int colPad=0;
      for (int col=0; col < 5; col++) {
        int x=(4 - row) * 50 - rowPad + rowIndent;
        int y=col * 50 + colPad + colIndent;
        BufferedImage image;
        if (!gameView.isShowAllCells() && (gameView.getCells() != null && gameView.getCells()[row][col].isHidden())) {
          image=javax.imageio.ImageIO.read(getClass().getResource("hidden_room.png"));
        }
 else {
          if (row == gameView.getHero().getRow() && col == gameView.getHero().getCol()) {
            Hero hero=gameView.getHero();
switch (hero.getDirection()) {
case UP:
              image=javax.imageio.ImageIO.read(getClass().getResource("hero_up.png"));
            break;
case DOWN:
          image=javax.imageio.ImageIO.read(getClass().getResource("hero_down.png"));
        break;
case LEFT:
      image=javax.imageio.ImageIO.read(getClass().getResource("hero_left.png"));
    break;
case RIGHT:
  image=javax.imageio.ImageIO.read(getClass().getResource("hero_right.png"));
break;
default :
throw new IllegalStateException("invalid direction: " + hero.getDirection());
}
}
 else {
boolean containsPit=gameView.getPits().contains(new Pit(row,col));
boolean containsAliveWumpus=false;
boolean containsDeadWumpus=false;
if (row == gameView.getWumpus().getRow() && col == gameView.getWumpus().getCol()) {
if (gameView.getWumpus().isAlive()) {
containsAliveWumpus=true;
}
 else {
containsDeadWumpus=true;
}
}
boolean containsGold=(row == gameView.getGold().getRow() && col == gameView.getGold().getCol());
if (!containsPit && !containsAliveWumpus && !containsDeadWumpus&& !containsGold) {
image=javax.imageio.ImageIO.read(getClass().getResource("empty_room.png"));
}
 else {
String pit="";
String wumpus="";
String gold="";
if (containsPit) {
pit="pit";
}
if (containsAliveWumpus) {
wumpus="alive_wumpus";
}
 else if (containsDeadWumpus) {
wumpus="dead_wumpus";
}
if (containsGold) {
gold="gold";
}
image=javax.imageio.ImageIO.read(getClass().getResource(pit + wumpus + gold+ ".png"));
}
}
}
g.drawImage(image,y,x,50,50,this);
colPad=colPad + 3;
}
rowPad=rowPad + 3;
}
}
 catch (Exception e) {
e.printStackTrace();
throw new RuntimeException(e);
}
}
