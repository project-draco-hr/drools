{
  JPanel actionPanel=new JPanel();
  actionPanel.setBackground(Color.WHITE);
  actionPanel.setLayout(new GridLayout(0,2,0,0));
  JButton restartButton=new JButton("RESTART");
  restartButton.setToolTipText("Restart game");
  restartButton.setBackground(Color.LIGHT_GRAY);
  restartButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      gameView.getKsession().insert(new Reset());
      gameView.getKsession().fireAllRules();
      updateCave();
      updateSensors();
    }
  }
);
  actionPanel.add(restartButton);
  JButton shootButton=new JButton("SHOOT");
  shootButton.setToolTipText("Shoot Arrow");
  shootButton.setBackground(Color.LIGHT_GRAY);
  shootButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      gameView.getKsession().insert(new ShootCommand());
      gameView.getKsession().fireAllRules();
      updateCave();
      updateSensors();
    }
  }
);
  actionPanel.add(shootButton);
  JButton grabButton=new JButton("GRAB");
  grabButton.setToolTipText("Grab gold");
  grabButton.setBackground(Color.LIGHT_GRAY);
  grabButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      gameView.getKsession().insert(new GrabCommand());
      gameView.getKsession().fireAllRules();
      updateCave();
      updateSensors();
    }
  }
);
  actionPanel.add(grabButton);
  JButton climbButton=new JButton("CLIMB");
  climbButton.setToolTipText("Climb out of the cave");
  climbButton.setBackground(Color.LIGHT_GRAY);
  climbButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      gameView.getKsession().insert(new ClimbCommand());
      gameView.getKsession().fireAllRules();
      updateCave();
      updateSensors();
    }
  }
);
  actionPanel.add(climbButton);
  final JButton showCaveButton=new JButton("HIDE");
  showCaveButton.setToolTipText("Hide/Show the cave");
  showCaveButton.setBackground(Color.LIGHT_GRAY);
  showCaveButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      if (cavePanel.isVisible()) {
        cavePanel.setVisible(false);
        showCaveButton.setText("SHOW");
      }
 else {
        cavePanel.setVisible(true);
        showCaveButton.setText("HIDE");
      }
    }
  }
);
  actionPanel.add(showCaveButton);
  JButton cheatButton=new JButton("CHEAT");
  cheatButton.setToolTipText("Reveal all squares");
  cheatButton.setBackground(Color.LIGHT_GRAY);
  cheatButton.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      FactHandle fh=gameView.getKsession().getFactHandle(gameView);
      if (gameView.isShowAllCells()) {
        gameView.setShowAllCells(false);
      }
 else {
        gameView.setShowAllCells(true);
      }
      gameView.getKsession().update(fh,gameView);
      gameView.getKsession().fireAllRules();
      updateCave();
    }
  }
);
  actionPanel.add(cheatButton);
  return actionPanel;
}
