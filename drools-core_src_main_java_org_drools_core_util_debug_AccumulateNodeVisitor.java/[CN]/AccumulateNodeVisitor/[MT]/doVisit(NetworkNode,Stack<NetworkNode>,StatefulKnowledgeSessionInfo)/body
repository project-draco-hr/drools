{
  AccumulateNode an=(AccumulateNode)node;
  DefaultNodeInfo ni=(DefaultNodeInfo)info.getNodeInfo(node);
  final AccumulateMemory memory=(AccumulateMemory)info.getSession().getNodeMemory(an);
  ni.setMemoryEnabled(true);
  if (an.isObjectMemoryEnabled()) {
    ni.setFactMemorySize(memory.betaMemory.getRightTupleMemory().size());
  }
  if (an.isLeftTupleMemoryEnabled()) {
    ni.setTupleMemorySize(memory.betaMemory.getLeftTupleMemory().size());
    FastIterator it=memory.betaMemory.getLeftTupleMemory().fullFastIterator();
    int i=0;
    for (LeftTuple leftTuple=BetaNode.getFirstLeftTuple(memory.betaMemory.getLeftTupleMemory(),it); leftTuple != null; leftTuple=(LeftTuple)it.next(leftTuple)) {
      AccumulateContext ctx=(AccumulateContext)leftTuple.getObject();
      if (ctx != null && ctx.result != null) {
        i++;
      }
    }
    ni.setCreatedFactHandles(i);
  }
}
