{
  final String MY_NAME="myName";
  ClassGenerator generator=new ClassGenerator("pkg.Bean");
  generator.addField(ACC_PRIVATE + ACC_FINAL,"name",String.class);
  generator.addDefaultConstructor(new ClassGenerator.MethodBody(){
    public void body(    ClassGenerator cg,    MethodVisitor mv,    ClassGenerator.MethodHelper mh){
      mv.visitVarInsn(ALOAD,0);
      mv.visitLdcInsn(MY_NAME);
      mv.visitFieldInsn(PUTFIELD,cg.getClassDescriptor(),"name",getDescriptor(String.class));
    }
  }
).addMethod(ACC_PUBLIC,"toString",generator.toMethodDescriptor(String.class),new ClassGenerator.MethodBody(){
    public void body(    ClassGenerator cg,    MethodVisitor mv,    ClassGenerator.MethodHelper mh){
      mv.visitVarInsn(ALOAD,0);
      mv.visitFieldInsn(GETFIELD,cg.getClassDescriptor(),"name",getDescriptor(String.class));
      mv.visitInsn(ARETURN);
    }
  }
);
  Object instance=generator.newInstance();
  assertEquals(MY_NAME,instance.toString());
}
