{
  this.fileManager.write("myExpander.dsl",this.createCommonDSL(null));
  this.fileManager.write("rules.dslr",this.createCommonDSLRRule("Rule1"));
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rules.dslr' type='DSLR' />";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/myExpander.dsl' type='DSL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.write("changeset.xml",xml);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase,false);
  this.applyChangeSet(kagent,ResourceFactory.newUrlResource(fxml.toURI().toURL()));
  resourceChangeNotificationCount=0;
  this.fileManager.write("myExpander.dsl",this.createCommonDSL("name == \"John\""));
  this.fileManager.write("rules.dslr",this.createCommonDSLRRule("Rule1"));
  this.scan(kagent);
  assertEquals(1,resourceChangeNotificationCount);
  resourceChangeNotificationCount=0;
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  ksession.setGlobal("list",new ArrayList<String>());
  ksession.fireAllRules();
  this.fileManager.write("rules.dslr",this.createCommonDSLRRule(new String[]{"Rule1","Rule2"}));
  this.scan(kagent);
  assertEquals(1,resourceChangeNotificationCount);
  resourceChangeNotificationCount=0;
  ksession.fireAllRules();
  try {
    kagent.dispose();
    fail("The agent should failed");
  }
 catch (  IllegalStateException ex) {
  }
  ksession.dispose();
  kagent.dispose();
  this.fileManager.write("rules.dslr",this.createCommonDSLRRule("Rule1"));
  try {
    this.scan(kagent);
    fail("The agent didn't process any change set. This should be failed.");
  }
 catch (  RuntimeException e) {
    assertEquals(e.getMessage(),"Event for KnowledgeBase update, due to scan, was never received");
  }
  assertEquals(0,resourceChangeNotificationCount);
}
