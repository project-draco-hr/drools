{
  RepositoryManager repo=getRepo();
  RuleDef def=new RuleDef("myRule","A rule");
  repo.save(def);
  assertNotNull(def.getId());
  repo.save(new RuleDef("myRule2","A rule2"));
  def=new RuleDef("myRule3","A rule3");
  def.addTag("tag1").addTag("tag2").addTag("HR");
  repo.save(def);
  assertNotNull(def.getId());
  Long id=def.getId();
  def.setContent("new content");
  repo.save(def);
  def=repo.loadRule("myRule3",1);
  assertEquals(id,def.getId());
  Properties q=new Properties();
  q.setProperty("name","myRule3");
  List list=repo.query("select name from RuleDef where name = :name",q);
  assertEquals("new content",def.getContent());
  assertEquals(3,def.getTags().size());
  def.removeTag("tag1");
  repo.save(def);
  def=repo.loadRule("myRule3",1);
  assertEquals(null,def.getOwningRuleSetName());
  assertEquals(2,def.getTags().size());
  RepositorySecurityManager mgr=new RepositorySecurityManager();
  mgr.enableSecurity(true);
  PermissionGroup group=new PermissionGroup("michaelhome");
  group.addUserIdentity(getUserPrincipal().getName());
  mgr.saveGroup(group);
  String clazz=def.getClass().getName();
  mgr.addPermissionToGroup("michaelhome",new AssetPermission(clazz,def.getId(),AssetPermission.WRITE));
  mgr.addPermissionToGroup("michaelhome",new AssetPermission(clazz,AssetPermission.ALL_INSTANCES,AssetPermission.READ));
  repo=RepositoryFactory.getRepository(getUserPrincipal(),true);
  def=repo.loadRule("myRule3",1);
  def.setContent("something else");
  repo.save(def);
  mgr.enableSecurity(false);
  assertNotNull(def.getLastSavedDate());
  assertEquals("michael",def.getLastSavedByUser());
  repo.close();
  mgr.commitAndClose();
}
