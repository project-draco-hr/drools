{
  RuleFlowProcess process=new RuleFlowProcess(){
    private static final long serialVersionUID=400L;
    int id=0;
    public void addNode(    Node node){
      node.setId(++id);
      super.addNode(node);
    }
  }
;
  process.addNode(new StartNode());
  process.addNode(new EndNode());
  process.addNode(new ActionNode());
  process.addNode(new Split());
  process.addNode(new Join());
  process.addNode(new MilestoneNode());
  process.addNode(new RuleSetNode());
  process.addNode(new SubProcessNode());
  process.addNode(new WorkItemNode());
  process.addNode(new TimerNode());
  String xml=XmlRuleFlowProcessDumper.INSTANCE.dump(process,false);
  if (xml == null) {
    throw new IllegalArgumentException("Failed to persist empty nodes!");
  }
  System.out.println(xml);
  System.out.println("-------------------");
  XmlProcessReader reader=new XmlProcessReader(new PackageBuilderConfiguration().getSemanticModules());
  process=(RuleFlowProcess)reader.read(new StringReader(xml));
  if (process == null) {
    throw new IllegalArgumentException("Failed to reload process!");
  }
  assertEquals(10,process.getNodes().length);
  String xml2=XmlRuleFlowProcessDumper.INSTANCE.dump(process,false);
  if (xml2 == null) {
    throw new IllegalArgumentException("Failed to persist empty nodes!");
  }
  System.out.println(xml2);
}
