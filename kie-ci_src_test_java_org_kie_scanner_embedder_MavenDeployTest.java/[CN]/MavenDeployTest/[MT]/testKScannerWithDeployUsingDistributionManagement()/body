{
  KieServices ks=KieServices.Factory.get();
  ReleaseId releaseId=ks.newReleaseId("org.kie","scanner-test-deploy-dist","1.0-SNAPSHOT");
  Path m2Folder=Files.createTempDirectory("temp-m2-dist");
  Path settingsXmlPath=generateSettingsXml(m2Folder);
  String oldSettingsXmlPath=System.getProperty(CUSTOM_SETTINGS_PROPERTY);
  try {
    System.setProperty(CUSTOM_SETTINGS_PROPERTY,settingsXmlPath.toString());
    MavenSettings.reinitSettings();
    InternalKieModule kJar1=createKieJar(ks,releaseId,"rule1","rule2");
    KieContainer kieContainer=ks.newKieContainer(releaseId);
    MavenRepository repository=getMavenRepository();
    repository.deployArtifact(releaseId,kJar1,createKPomWithDistributionManagement(m2Folder,releaseId).toFile());
    KieSession ksession=kieContainer.newKieSession("KSession1");
    checkKSession(ksession,"rule1","rule2");
    InternalKieModule kJar2=createKieJar(ks,releaseId,"rule2","rule3");
    repository.deployArtifact(releaseId,kJar2,createKPomWithDistributionManagement(m2Folder,releaseId).toFile());
    KieScanner scanner=ks.newKieScanner(kieContainer);
    scanner.scanNow();
    KieSession ksession2=kieContainer.newKieSession("KSession1");
    checkKSession(ksession2,"rule2","rule3");
    ks.getRepository().removeKieModule(releaseId);
  }
  finally {
    if (oldSettingsXmlPath == null) {
      System.clearProperty(CUSTOM_SETTINGS_PROPERTY);
    }
 else {
      System.setProperty(CUSTOM_SETTINGS_PROPERTY,oldSettingsXmlPath);
    }
    MavenSettings.reinitSettings();
  }
}
