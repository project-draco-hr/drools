{
  BuildContext buildContext=(BuildContext)context.get("BuildContext");
  if (args.size() != 0) {
    String[] a=args.get(0);
    String name=a[0].trim();
    String leftInput=a[1].trim();
    LeftTupleSource leftTupleSource;
    if ("mock".equals(leftInput)) {
      leftTupleSource=new MockTupleSource(buildContext.getNextId());
    }
 else {
      leftTupleSource=(LeftTupleSource)context.get(leftInput);
    }
    Rule rule=new Rule(name);
    final RuleTerminalNode rtn=new RuleTerminalNode(buildContext.getNextId(),leftTupleSource,rule,null,buildContext);
    Consequence consequence=new Consequence(){
      public void evaluate(      KnowledgeHelper knowledgeHelper,      WorkingMemory workingMemory) throws Exception {
      }
      public String getName(){
        return "default";
      }
    }
;
    rule.setConsequence(consequence);
    rtn.attach();
    context.put(name,rtn);
  }
 else {
    throw new IllegalArgumentException("Cannot arguments " + args);
  }
}
