{
  StringTemplateGroup ruleGroup=new StringTemplateGroup(new InputStreamReader(RuleBuilder.class.getResourceAsStream("javaInvokers.stg")),AngleBracketTemplateLexer.class);
  StringTemplate accMethod=ruleGroup.getInstanceOf("accumulateInvoker");
  final String[] declarationTypes=new String[]{"String","int"};
  final Declaration[] declarations=new Declaration[]{new Declaration("name",new ClassFieldExtractor(Person.class,"name"),null),new Declaration("age",new ClassFieldExtractor(Person.class,"age"),null)};
  final String[] globals=new String[]{"aGlobal","anotherGlobal"};
  final List globalTypes=Arrays.asList(new String[]{"String","String"});
  accMethod.setAttribute("declarations",declarations);
  accMethod.setAttribute("declarationTypes",declarationTypes);
  accMethod.setAttribute("globals",globals);
  accMethod.setAttribute("globalTypes",globalTypes);
  accMethod.setAttribute("package","org.drools.semantics.java");
  accMethod.setAttribute("invokerClassName","AccumulateInvokerClass");
  accMethod.setAttribute("ruleClassName","RuleWithAccumulate");
  accMethod.setAttribute("methodName","accumulateTestMethod");
  accMethod.setAttribute("hashCode",new Integer(13));
  System.out.println(accMethod.toString());
}
