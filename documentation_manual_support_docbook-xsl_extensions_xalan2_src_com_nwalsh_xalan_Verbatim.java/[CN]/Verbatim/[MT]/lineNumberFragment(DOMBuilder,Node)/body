{
  try {
    if (node.getNodeType() == Node.DOCUMENT_FRAGMENT_NODE || node.getNodeType() == Node.DOCUMENT_NODE) {
      Node child=node.getFirstChild();
      while (child != null) {
        lineNumberFragment(rtf,child);
        child=child.getNextSibling();
      }
    }
 else     if (node.getNodeType() == Node.ELEMENT_NODE) {
      String ns=node.getNamespaceURI();
      String localName=node.getLocalName();
      String name=((Element)node).getTagName();
      rtf.startElement(ns,localName,name,copyAttributes((Element)node));
      elementStack.push(node);
      Node child=node.getFirstChild();
      while (child != null) {
        lineNumberFragment(rtf,child);
        child=child.getNextSibling();
      }
    }
 else     if (node.getNodeType() == Node.TEXT_NODE) {
      String text=node.getNodeValue();
      if (lineNumber == 0) {
        formatLineNumber(rtf,++lineNumber);
      }
      char chars[]=text.toCharArray();
      int pos=0;
      for (int count=0; count < text.length(); count++) {
        if (text.charAt(count) == '\n') {
          if (pos > 0) {
            rtf.characters(chars,0,pos);
            pos=0;
          }
          closeOpenElements(rtf);
          chars[pos++]=text.charAt(count);
          rtf.characters(chars,0,pos);
          pos=0;
          formatLineNumber(rtf,++lineNumber);
          openClosedElements(rtf);
        }
 else {
          chars[pos++]=text.charAt(count);
        }
      }
      if (pos > 0) {
        rtf.characters(chars,0,pos);
      }
    }
 else     if (node.getNodeType() == Node.COMMENT_NODE) {
      String text=node.getNodeValue();
      char chars[]=text.toCharArray();
      rtf.comment(chars,0,text.length());
    }
 else     if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
      rtf.processingInstruction(node.getNodeName(),node.getNodeValue());
    }
 else {
      System.out.println("Warning: unexpected node type in lineNumberFragment");
    }
    if (node.getNodeType() == Node.ELEMENT_NODE) {
      String ns=node.getNamespaceURI();
      String localName=node.getLocalName();
      String name=((Element)node).getTagName();
      rtf.endElement(ns,localName,name);
      elementStack.pop();
    }
  }
 catch (  SAXException e) {
    System.out.println("SAX Exception in lineNumberFragment");
  }
}
