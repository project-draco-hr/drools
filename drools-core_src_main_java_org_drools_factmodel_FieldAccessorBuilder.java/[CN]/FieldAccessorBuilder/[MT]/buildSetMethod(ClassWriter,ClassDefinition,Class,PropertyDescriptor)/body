{
  MethodVisitor mv;
{
    mv=cw.visitMethod(Opcodes.ACC_PUBLIC,"setValue",Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{Type.getType(Object.class),Type.getType(Object.class)}),null,null);
    mv.visitCode();
    if (field.getPropertyType().isPrimitive()) {
      mv.visitVarInsn(Opcodes.ALOAD,2);
      Label ifnull=new Label();
      mv.visitJumpInsn(Opcodes.IFNULL,ifnull);
      mv.visitVarInsn(Opcodes.ALOAD,2);
      mv.visitTypeInsn(Opcodes.CHECKCAST,Type.getInternalName((Class)typeMap.get(field.getPropertyType())));
      mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName((Class)typeMap.get(field.getPropertyType())),field.getPropertyType().getName() + "Value",Type.getMethodDescriptor(Type.getType(field.getPropertyType()),new Type[]{}));
      Label afterif=new Label();
      mv.visitJumpInsn(Opcodes.GOTO,afterif);
      mv.visitLabel(ifnull);
      if (field.getPropertyType().isAssignableFrom(long.class)) {
        mv.visitInsn(Opcodes.LCONST_0);
      }
 else       if (field.getPropertyType().isAssignableFrom(double.class)) {
        mv.visitInsn(Opcodes.DCONST_0);
      }
 else       if (field.getPropertyType().isAssignableFrom(float.class)) {
        mv.visitInsn(Opcodes.FCONST_0);
      }
 else {
        mv.visitInsn(Opcodes.ICONST_0);
      }
      mv.visitLabel(afterif);
      mv.visitVarInsn(Type.getType(field.getPropertyType()).getOpcode(Opcodes.ISTORE),3);
    }
 else {
      mv.visitVarInsn(Opcodes.ALOAD,2);
      mv.visitTypeInsn(Opcodes.CHECKCAST,Type.getInternalName(field.getPropertyType()));
      mv.visitVarInsn(Opcodes.ASTORE,3);
    }
    mv.visitVarInsn(Opcodes.ALOAD,1);
    mv.visitTypeInsn(Opcodes.CHECKCAST,Type.getInternalName(clazz));
    mv.visitVarInsn(Type.getType(field.getPropertyType()).getOpcode(Opcodes.ILOAD),3);
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(clazz),field.getWriteMethod().getName(),Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{Type.getType(field.getPropertyType())}));
    mv.visitInsn(Opcodes.RETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
