{
  File pkg1=fileManager.newFile("pkg1.pkg");
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(createLhsRule("rule1","String()\n").getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgePackage pkg=(KnowledgePackage)kbuilder.getKnowledgePackages().iterator().next();
  writePackage(pkg,pkg1);
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/pkg1.pkg' type='PKG' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.write("changeset.xml",xml);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=createKAgent(kbase,false);
  applyChangeSet(kagent,ResourceFactory.newUrlResource(fxml.toURI().toURL()));
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.insert("String1");
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("rule1"));
  list.clear();
  kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(createLhsRule("rule3","String()\n").getBytes()),ResourceType.DRL);
  kbuilder.add(ResourceFactory.newByteArrayResource(createLhsRule("rule2","String()\n").getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  pkg=(KnowledgePackage)kbuilder.getKnowledgePackages().iterator().next();
  writePackage(pkg,pkg1);
  scan(kagent);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule3"));
  assertTrue(list.contains("rule2"));
  list.clear();
  ksession.insert("String2");
  ksession.fireAllRules();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule3"));
  assertTrue(list.contains("rule2"));
  ksession.dispose();
  kagent.dispose();
}
