{
  File f1=fileManager.write("rule1.drl",createCustomRule(true,null,new String[]{"rule1"},null,"String()\n","function1 (list,drools.getRule().getName());\n"));
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rule1.drl' type='DRL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.write("changeset.xml",xml);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase,false);
  try {
    applyChangeSet(kagent,ResourceFactory.newUrlResource(fxml.toURI().toURL()));
    fail("Knowledge should fail to compile");
  }
 catch (  Exception e) {
  }
  KnowledgePackage knowledgePackage=kbase.getKnowledgePackage("org.drools.test");
  assertNull(knowledgePackage);
  String function1=this.createCommonFunction("function1","function1");
  fileManager.write("rule1.drl",function1 + createCustomRule(false,null,new String[]{"rule1"},null,"String()\n","function1 (list, drools.getRule().getName());\n"));
  scan(kagent);
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.insert("String1");
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("function1 from rule1"));
  list.clear();
  String function2=this.createCommonFunction("function1","function1-V2");
  fileManager.write("rule1.drl",function2 + createCustomRule(false,null,new String[]{"rule1"},null,"String()\n","function1 (list, drools.getRule().getName());\n"));
  scan(kagent);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  ksession.insert("String2");
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("function1-V2 from rule1"));
  ksession.dispose();
  kagent.dispose();
}
