{
  String header="";
  header+="package org.drools.test\n";
  header+="global java.util.List list\n\n";
  String query1="";
  query1+="query \"all the Strings\"\n";
  query1+="     $strings : String()\n";
  query1+="end\n";
  String rule1=this.createCommonRule("rule1");
  File f1=fileManager.newFile("rule1.drl");
  Writer output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(rule1);
  output.close();
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set drools-change-set-5.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rule1.drl' type='DRL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.newFile("changeset.xml");
  output=new BufferedWriter(new FileWriter(fxml));
  output.write(xml);
  output.close();
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase);
  kagent.applyChangeSet(ResourceFactory.newUrlResource(fxml.toURI().toURL()));
  KnowledgePackage knowledgePackage=kbase.getKnowledgePackage("org.drools.test");
  assertNotNull(knowledgePackage);
  Rule allTheStringsQuery=((KnowledgePackageImp)knowledgePackage).getRule("all the Strings");
  assertNull(allTheStringsQuery);
  System.gc();
  Thread.sleep(2000);
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(query1);
  output.write(rule1);
  output.close();
  System.gc();
  Thread.sleep(3000);
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.insert("Some String");
  ksession.insert("Some Other String");
  QueryResults queryResults=ksession.getQueryResults("all the Strings");
  ksession.dispose();
  assertEquals(2,queryResults.size());
  Iterator<QueryResultsRow> iterator=queryResults.iterator();
  while (iterator.hasNext()) {
    System.out.println("Row= " + iterator.next().get("$strings"));
  }
  System.gc();
  Thread.sleep(2000);
  String query1V2="";
  query1V2+="query \"all the Strings\"\n";
  query1V2+="     $strings : String(this == \"Some String\")\n";
  query1V2+="end\n";
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(query1V2);
  output.write(rule1);
  output.close();
  System.gc();
  Thread.sleep(3000);
  ksession=kbase.newStatefulKnowledgeSession();
  list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.insert("Some String");
  ksession.insert("Some Other String");
  queryResults=ksession.getQueryResults("all the Strings");
  ksession.dispose();
  assertEquals(1,queryResults.size());
  assertEquals("Some String",queryResults.iterator().next().get("$strings"));
  kagent.monitorResourceChangeEvents(false);
}
