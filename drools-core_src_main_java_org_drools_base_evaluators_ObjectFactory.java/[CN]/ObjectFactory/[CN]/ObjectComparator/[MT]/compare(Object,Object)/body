{
  if (arg0 instanceof Double || arg0 instanceof Float) {
    double val0=((Number)arg0).doubleValue();
    double val1=0;
    if (arg1 instanceof Number) {
      val1=((Number)arg1).doubleValue();
    }
 else     if (arg1 instanceof String) {
      val1=Double.parseDouble((String)arg1);
    }
 else {
      throw new ClassCastException("Not possible to convert " + arg1.getClass() + " into a double value to compare it to "+ arg0.getClass());
    }
    return val0 > val1 ? 1 : val0 < val1 ? -1 : 0;
  }
 else   if (arg0 instanceof Number) {
    long val0=((Number)arg0).longValue();
    long val1=0;
    if (arg1 instanceof Number) {
      val1=((Number)arg1).longValue();
    }
 else     if (arg1 instanceof String) {
      val1=Long.parseLong((String)arg1);
    }
 else {
      throw new ClassCastException("Not possible to convert " + arg1.getClass() + " into a long value to compare it to "+ arg0.getClass());
    }
    return val0 > val1 ? 1 : val0 < val1 ? -1 : 0;
  }
 else   if (arg0 instanceof String) {
    try {
      double val0=Double.parseDouble((String)arg0);
      double val1=0;
      if (arg1 instanceof Number) {
        val1=((Number)arg1).doubleValue();
      }
 else       if (arg1 instanceof String) {
        val1=Double.parseDouble((String)arg1);
      }
 else {
        throw new ClassCastException("Not possible to convert " + arg1.getClass() + " into a double value to compare it to "+ arg0.getClass());
      }
      return val0 > val1 ? 1 : val0 < val1 ? -1 : 0;
    }
 catch (    NumberFormatException nfe) {
      return ((String)arg0).compareTo(arg1.toString());
    }
  }
  return ((Comparable)arg0).compareTo(arg1);
}
