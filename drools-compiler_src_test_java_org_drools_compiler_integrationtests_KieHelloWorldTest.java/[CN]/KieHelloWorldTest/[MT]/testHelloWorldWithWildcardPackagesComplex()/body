{
  KieServices ks=KieServices.Factory.get();
  ReleaseId releaseId=ks.newReleaseId("org.kie","hello-world","1.0-SNAPSHOT");
  KieFileSystem kfs=ks.newKieFileSystem().generateAndWritePomXML(releaseId).write("src/main/resources/rules/rules.drl",createDrlWithGlobal("R1")).write("src/main/resources/rules/tests/tests.drl",createDrlWithGlobal("R2")).write("src/main/resources/aaarules/aaarules.drl",createDrlWithGlobal("R3")).write("src/main/resources/sample/brms601_1310778/rules/rules.drl",createDrlWithGlobal("R4")).write("src/main/resources/sample/brms601_1310778/tests/tests.drl",createDrlWithGlobal("R5")).write("src/main/resources/tests/tests.drl",createDrlWithGlobal("R6")).write("src/main/resources/rules2/rules2.drl",createDrlWithGlobal("R7")).writeKModuleXML(createKieProjectWithPackages(ks,"rules.*").toXML());
  ks.newKieBuilder(kfs).buildAll();
  KieSession ksession=ks.newKieContainer(releaseId).newKieSession("KSession1");
  ksession.insert(new Message("Hello World"));
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  assertEquals(2,ksession.fireAllRules());
  assertTrue(list.contains("R1"));
  assertTrue(list.contains("R2"));
}
