{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  if (isUnlinkingEnabled()) {
    rightTuple.setPropagationContext(pctx);
    doDeleteRightTuple(rightTuple,workingMemory,memory);
    return;
  }
  RightTupleMemory rtm=memory.getRightTupleMemory();
  if (rightTuple.getBlocked() != null) {
    updateLeftTupleToNewBlocker(rightTuple,pctx,workingMemory,memory,memory.getLeftTupleMemory(),rightTuple.getBlocked(),rtm,false);
    rightTuple.nullBlocked();
  }
 else {
    rtm.remove(rightTuple);
  }
  this.constraints.resetTuple(memory.getContext());
}
