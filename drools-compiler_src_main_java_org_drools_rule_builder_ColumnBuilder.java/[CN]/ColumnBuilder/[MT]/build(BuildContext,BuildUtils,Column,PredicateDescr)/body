{
  final List[] usedIdentifiers=utils.getUsedIdentifiers(context,predicateDescr,predicateDescr.getContent());
  final List tupleDeclarations=new ArrayList();
  final List factDeclarations=new ArrayList();
  for (int i=0, size=usedIdentifiers[0].size(); i < size; i++) {
    final Declaration decl=context.getDeclarationResolver().getDeclaration((String)usedIdentifiers[0].get(i));
    if (decl.getColumn() == column) {
      factDeclarations.add(decl);
    }
 else {
      tupleDeclarations.add(decl);
    }
  }
  final int NOT_BOUND_INDEX=usedIdentifiers.length - 1;
  this.createImplicitBindings(context,utils,column,usedIdentifiers[NOT_BOUND_INDEX],factDeclarations);
  final Declaration[] previousDeclarations=(Declaration[])tupleDeclarations.toArray(new Declaration[tupleDeclarations.size()]);
  final Declaration[] localDeclarations=(Declaration[])factDeclarations.toArray(new Declaration[factDeclarations.size()]);
  final String[] requiredGlobals=(String[])usedIdentifiers[1].toArray(new String[usedIdentifiers[1].size()]);
  final PredicateConstraint predicateConstraint=new PredicateConstraint(null,previousDeclarations,localDeclarations,requiredGlobals);
  column.addConstraint(predicateConstraint);
  final PredicateBuilder builder=this.dialect.getPredicateBuilder();
  builder.build(context,utils,usedIdentifiers,previousDeclarations,localDeclarations,predicateConstraint,predicateDescr);
}
