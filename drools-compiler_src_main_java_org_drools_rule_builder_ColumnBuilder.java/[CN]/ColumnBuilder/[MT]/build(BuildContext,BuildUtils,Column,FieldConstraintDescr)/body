{
  final FieldExtractor extractor=getFieldExtractor(context,utils,fieldConstraintDescr,column.getObjectType(),fieldConstraintDescr.getFieldName(),true);
  if (extractor == null) {
    return;
  }
  if (fieldConstraintDescr.getRestrictions().size() == 1) {
    final Object object=fieldConstraintDescr.getRestrictions().get(0);
    final Restriction restriction=buildRestriction(context,utils,column,extractor,fieldConstraintDescr,(RestrictionDescr)object);
    if (restriction == null) {
      return;
    }
    if (object instanceof LiteralRestrictionDescr) {
      column.addConstraint(new LiteralConstraint(extractor,(LiteralRestriction)restriction));
    }
 else     if (object instanceof VariableRestrictionDescr) {
      column.addConstraint(new VariableConstraint(extractor,(VariableRestriction)restriction));
    }
 else     if (object instanceof ReturnValueRestrictionDescr) {
      column.addConstraint(new ReturnValueConstraint(extractor,(ReturnValueRestriction)restriction));
    }
    return;
  }
  final List orList=new ArrayList();
  List andList=null;
  RestrictionDescr currentRestriction=null;
  RestrictionDescr previousRestriction=null;
  List currentList=null;
  List previousList=null;
  for (final Iterator it=fieldConstraintDescr.getRestrictions().iterator(); it.hasNext(); ) {
    final Object object=it.next();
    if (object instanceof RestrictionConnectiveDescr) {
      if (((RestrictionConnectiveDescr)object).getConnective() == RestrictionConnectiveDescr.AND) {
        if (andList == null) {
          andList=new ArrayList();
        }
        previousList=currentList;
        currentList=andList;
      }
 else {
        previousList=currentList;
        currentList=orList;
      }
    }
 else {
      Restriction restriction=null;
      if (currentList != null) {
        if (previousList == null) {
          restriction=buildRestriction(context,utils,column,extractor,fieldConstraintDescr,previousRestriction);
          if (currentList == andList) {
            andList.add(restriction);
          }
 else {
            orList.add(restriction);
          }
        }
 else {
          restriction=buildRestriction(context,utils,column,extractor,fieldConstraintDescr,previousRestriction);
          if (previousList == andList && currentList == orList) {
            andList.add(restriction);
            if (andList.size() == 1) {
              orList.add(andList.get(0));
            }
 else {
              final Restriction restrictions=new AndCompositeRestriction((Restriction[])andList.toArray(new Restriction[andList.size()]));
              orList.add(restrictions);
            }
            andList=null;
          }
 else           if (previousList == andList && currentList == andList) {
            andList.add(restriction);
          }
 else           if (previousList == orList && currentList == andList) {
            andList.add(restriction);
          }
 else           if (previousList == orList && currentList == orList) {
            orList.add(restriction);
          }
        }
      }
    }
    previousRestriction=currentRestriction;
    currentRestriction=(RestrictionDescr)object;
  }
  final Restriction restriction=buildRestriction(context,utils,column,extractor,fieldConstraintDescr,currentRestriction);
  currentList.add(restriction);
  Restriction restrictions=null;
  if (currentList == andList && !orList.isEmpty()) {
    if (andList != null) {
      if (andList.size() == 1) {
        orList.add(andList.get(0));
      }
 else {
        orList.add(new AndCompositeRestriction((Restriction[])andList.toArray(new Restriction[andList.size()])));
      }
      andList=null;
    }
  }
  if (!orList.isEmpty()) {
    restrictions=new OrCompositeRestriction((Restriction[])orList.toArray(new Restriction[orList.size()]));
  }
 else   if (andList != null && !andList.isEmpty()) {
    restrictions=new AndCompositeRestriction((Restriction[])andList.toArray(new Restriction[andList.size()]));
  }
 else {
  }
  column.addConstraint(new MultiRestrictionFieldConstraint(extractor,restrictions));
}
