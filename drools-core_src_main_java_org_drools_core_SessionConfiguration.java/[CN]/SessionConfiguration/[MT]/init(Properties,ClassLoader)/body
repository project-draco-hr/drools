{
  if (classLoaders != null && classLoaders.length > 1) {
    throw new RuntimeException("Multiple classloaders are no longer supported");
  }
  this.classLoader=ProjectClassLoader.getClassLoader(classLoaders == null || classLoaders.length == 0 ? null : classLoaders[0],getClass(),false);
  this.immutable=false;
  this.chainedProperties=new ChainedProperties("session.conf",this.classLoader);
  if (properties != null) {
    this.chainedProperties.addProperties(properties);
  }
  setKeepReference(Boolean.valueOf(this.chainedProperties.getProperty(KeepReferenceOption.PROPERTY_NAME,"true")).booleanValue());
  setThreadSafe(Boolean.valueOf(this.chainedProperties.getProperty(ThreadSafeOption.PROPERTY_NAME,"true")).booleanValue());
  setForceEagerActivationFilter(ForceEagerActivationOption.resolve(this.chainedProperties.getProperty(ForceEagerActivationOption.PROPERTY_NAME,"false")).getFilter());
  setTimedRuleExecutionFilter(TimedRuleExectionOption.resolve(this.chainedProperties.getProperty(TimedRuleExectionOption.PROPERTY_NAME,"false")).getFilter());
  setBeliefSystemType(BeliefSystemType.resolveBeliefSystemType(this.chainedProperties.getProperty(BeliefSystemTypeOption.PROPERTY_NAME,BeliefSystemType.SIMPLE.getId())));
  setClockType(ClockType.resolveClockType(this.chainedProperties.getProperty(ClockTypeOption.PROPERTY_NAME,ClockType.REALTIME_CLOCK.getId())));
  setQueryListenerClass(this.chainedProperties.getProperty(QueryListenerOption.PROPERTY_NAME,QueryListenerOption.STANDARD.getAsString()));
  setTimerJobFactoryType(TimerJobFactoryType.resolveTimerJobFactoryType(this.chainedProperties.getProperty(TimerJobFactoryOption.PROPERTY_NAME,TimerJobFactoryType.DEFUALT.getId())));
}
