{
  DroolsMVELFactory factory=(DroolsMVELFactory)this.prototype.clone();
  factory.addResolver("context",new SimpleValueResolver(context));
  factory.addResolver("kcontext",new SimpleValueResolver(context));
  if (variableNames != null) {
    for (    String variableName : variableNames) {
      factory.addResolver(variableName,new SimpleValueResolver(context.getVariable(variableName)));
    }
  }
  factory.setContext(null,null,null,workingMemory,null);
  Package pkg=workingMemory.getRuleBase().getPackage("MAIN");
  if (pkg != null) {
    MVELDialectRuntimeData data=(MVELDialectRuntimeData)pkg.getDialectRuntimeRegistry().getDialectData(this.id);
    factory.setNextFactory(data.getFunctionFactory());
  }
  CompiledExpression compexpr=(CompiledExpression)this.expr;
  Object value;
  if (MVELDebugHandler.isDebugMode()) {
    if (MVELDebugHandler.verbose) {
      System.out.println(DebugTools.decompile(compexpr));
    }
    value=MVEL.executeDebugger(compexpr,null,factory);
  }
 else {
    value=MVEL.executeExpression(compexpr,null,factory);
  }
  if (!(value instanceof Boolean)) {
    throw new RuntimeException("Constraints must return boolean values");
  }
  return ((Boolean)value).booleanValue();
}
