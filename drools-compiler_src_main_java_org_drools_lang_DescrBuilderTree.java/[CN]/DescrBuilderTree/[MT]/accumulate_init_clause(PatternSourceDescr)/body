{
  DescrBuilderTree.accumulate_init_clause_return retval=new DescrBuilderTree.accumulate_init_clause_return();
  retval.start=input.LT(1);
  DroolsTree start=null;
  DroolsTree pc1=null;
  DroolsTree pc2=null;
  DroolsTree pc3=null;
  DescrBuilderTree.accumulate_init_reverse_clause_return rev=null;
  try {
{
      match(input,VT_ACCUMULATE_INIT_CLAUSE,FOLLOW_VT_ACCUMULATE_INIT_CLAUSE_in_accumulate_init_clause1400);
      match(input,Token.DOWN,null);
      start=(DroolsTree)match(input,INIT,FOLLOW_INIT_in_accumulate_init_clause1409);
      match(input,Token.DOWN,null);
      pc1=(DroolsTree)match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_accumulate_init_clause1413);
      match(input,Token.UP,null);
      match(input,VK_ACTION,FOLLOW_VK_ACTION_in_accumulate_init_clause1421);
      match(input,Token.DOWN,null);
      pc2=(DroolsTree)match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_accumulate_init_clause1425);
      match(input,Token.UP,null);
      int alt36=2;
      int LA36_0=input.LA(1);
      if ((LA36_0 == VK_REVERSE)) {
        alt36=1;
      }
switch (alt36) {
case 1:
{
          pushFollow(FOLLOW_accumulate_init_reverse_clause_in_accumulate_init_clause1434);
          rev=accumulate_init_reverse_clause();
          state._fsp--;
        }
      break;
  }
  match(input,VK_RESULT,FOLLOW_VK_RESULT_in_accumulate_init_clause1441);
  match(input,Token.DOWN,null);
  pc3=(DroolsTree)match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_accumulate_init_clause1445);
  match(input,Token.UP,null);
  match(input,Token.UP,null);
  if (null == rev) {
    retval.accumulateDescr=factory.setupAccumulateInit(accumulateParam,start,pc1,pc2,pc3,null);
  }
 else {
    retval.accumulateDescr=factory.setupAccumulateInit(accumulateParam,start,pc1,pc2,pc3,(rev != null ? rev.vkReverseChunk : null));
  }
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
