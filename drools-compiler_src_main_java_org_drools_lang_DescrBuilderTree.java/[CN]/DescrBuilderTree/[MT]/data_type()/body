{
  BaseDescr dataType=null;
  DroolsTree idList=null;
  DroolsTree rightList=null;
  List list_idList=null;
  List list_rightList=null;
  try {
{
      match(input,VT_DATA_TYPE,FOLLOW_VT_DATA_TYPE_in_data_type2182);
      match(input,Token.DOWN,null);
      int cnt57=0;
      loop57:       do {
        int alt57=2;
        int LA57_0=input.LA(1);
        if ((LA57_0 == ID)) {
          alt57=1;
        }
switch (alt57) {
case 1:
{
            idList=(DroolsTree)match(input,ID,FOLLOW_ID_in_data_type2186);
            if (list_idList == null)             list_idList=new ArrayList();
            list_idList.add(idList);
          }
        break;
default :
      if (cnt57 >= 1)       break loop57;
    EarlyExitException eee=new EarlyExitException(57,input);
  throw eee;
}
cnt57++;
}
 while (true);
loop58: do {
int alt58=2;
int LA58_0=input.LA(1);
if ((LA58_0 == LEFT_SQUARE)) {
alt58=1;
}
switch (alt58) {
case 1:
{
  match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_data_type2190);
  rightList=(DroolsTree)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_data_type2194);
  if (list_rightList == null)   list_rightList=new ArrayList();
  list_rightList.add(rightList);
}
break;
default :
break loop58;
}
}
 while (true);
match(input,Token.UP,null);
dataType=factory.createDataType(list_idList,list_rightList);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return dataType;
}
