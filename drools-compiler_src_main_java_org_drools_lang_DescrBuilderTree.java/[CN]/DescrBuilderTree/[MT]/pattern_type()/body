{
  BaseDescr dataType=null;
  DroolsTree idList=null;
  DroolsTree rightList=null;
  List list_idList=null;
  List list_rightList=null;
  try {
{
      match(input,VT_PATTERN_TYPE,FOLLOW_VT_PATTERN_TYPE_in_pattern_type2236);
      match(input,Token.DOWN,null);
      int cnt62=0;
      loop62:       do {
        int alt62=2;
        int LA62_0=input.LA(1);
        if ((LA62_0 == ID)) {
          alt62=1;
        }
switch (alt62) {
case 1:
{
            idList=(DroolsTree)match(input,ID,FOLLOW_ID_in_pattern_type2240);
            if (list_idList == null)             list_idList=new ArrayList();
            list_idList.add(idList);
          }
        break;
default :
      if (cnt62 >= 1)       break loop62;
    EarlyExitException eee=new EarlyExitException(62,input);
  throw eee;
}
cnt62++;
}
 while (true);
loop63: do {
int alt63=2;
int LA63_0=input.LA(1);
if ((LA63_0 == LEFT_SQUARE)) {
alt63=1;
}
switch (alt63) {
case 1:
{
  match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_pattern_type2244);
  rightList=(DroolsTree)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_pattern_type2248);
  if (list_rightList == null)   list_rightList=new ArrayList();
  list_rightList.add(rightList);
}
break;
default :
break loop63;
}
}
 while (true);
match(input,Token.UP,null);
dataType=factory.createDataType(list_idList,list_rightList);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return dataType;
}
