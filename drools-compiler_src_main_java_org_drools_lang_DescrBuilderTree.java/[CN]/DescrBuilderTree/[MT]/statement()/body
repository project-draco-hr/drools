{
  AttributeDescr a=null;
  FunctionImportDescr fi=null;
  ImportDescr is=null;
  DescrBuilderTree.global_return gl=null;
  DescrBuilderTree.function_return fn=null;
  DescrBuilderTree.rule_return rl=null;
  DescrBuilderTree.query_return qr=null;
  TypeDeclarationDescr td=null;
  try {
    int alt4=8;
switch (input.LA(1)) {
case VK_DATE_EFFECTIVE:
case VK_DATE_EXPIRES:
case VK_LOCK_ON_ACTIVE:
case VK_NO_LOOP:
case VK_AUTO_FOCUS:
case VK_ACTIVATION_GROUP:
case VK_AGENDA_GROUP:
case VK_RULEFLOW_GROUP:
case VK_TIMER:
case VK_CALENDARS:
case VK_DIALECT:
case VK_SALIENCE:
case VK_ENABLED:
{
        alt4=1;
      }
    break;
case VT_FUNCTION_IMPORT:
{
    alt4=2;
  }
break;
case VK_IMPORT:
{
alt4=3;
}
break;
case VK_GLOBAL:
{
alt4=4;
}
break;
case VK_FUNCTION:
{
alt4=5;
}
break;
case VK_RULE:
{
alt4=6;
}
break;
case VK_QUERY:
{
alt4=7;
}
break;
case VK_DECLARE:
{
alt4=8;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("",4,0,input);
throw nvae;
}
switch (alt4) {
case 1:
{
pushFollow(FOLLOW_rule_attribute_in_statement124);
a=rule_attribute();
state._fsp--;
this.packageDescr.addAttribute(a);
}
break;
case 2:
{
pushFollow(FOLLOW_function_import_statement_in_statement134);
fi=function_import_statement();
state._fsp--;
this.packageDescr.addFunctionImport(fi);
}
break;
case 3:
{
pushFollow(FOLLOW_import_statement_in_statement144);
is=import_statement();
state._fsp--;
this.packageDescr.addImport(is);
}
break;
case 4:
{
pushFollow(FOLLOW_global_in_statement155);
gl=global();
state._fsp--;
this.packageDescr.addGlobal((gl != null ? gl.globalDescr : null));
}
break;
case 5:
{
pushFollow(FOLLOW_function_in_statement165);
fn=function();
state._fsp--;
this.packageDescr.addFunction((fn != null ? fn.functionDescr : null));
}
break;
case 6:
{
pushFollow(FOLLOW_rule_in_statement175);
rl=rule();
state._fsp--;
this.packageDescr.addRule((rl != null ? rl.ruleDescr : null));
}
break;
case 7:
{
pushFollow(FOLLOW_query_in_statement185);
qr=query();
state._fsp--;
this.packageDescr.addRule((qr != null ? qr.queryDescr : null));
}
break;
case 8:
{
pushFollow(FOLLOW_type_declaration_in_statement195);
td=type_declaration();
state._fsp--;
this.packageDescr.addTypeDeclaration(td);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
