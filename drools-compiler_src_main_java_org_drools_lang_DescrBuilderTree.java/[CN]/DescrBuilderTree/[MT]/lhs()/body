{
  DescrBuilderTree.lhs_return retval=new DescrBuilderTree.lhs_return();
  retval.start=input.LT(1);
  DroolsTree start=null;
  DroolsTree pc=null;
  DescrBuilderTree.lhs_return dt=null;
  DescrBuilderTree.lhs_return dt1=null;
  DescrBuilderTree.lhs_return dt2=null;
  BaseDescr pn=null;
  DescrBuilderTree.from_elements_return fe=null;
  List<BaseDescr> lhsList=new LinkedList<BaseDescr>();
  try {
    int alt34=10;
switch (input.LA(1)) {
case VT_OR_PREFIX:
{
        alt34=1;
      }
    break;
case VT_OR_INFIX:
{
    alt34=2;
  }
break;
case VT_AND_PREFIX:
{
alt34=3;
}
break;
case VT_AND_INFIX:
{
alt34=4;
}
break;
case VK_EXISTS:
{
alt34=5;
}
break;
case VK_NOT:
{
alt34=6;
}
break;
case VK_EVAL:
{
alt34=7;
}
break;
case VK_FORALL:
{
alt34=8;
}
break;
case FROM:
{
alt34=9;
}
break;
case VT_PATTERN:
{
alt34=10;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("",34,0,input);
throw nvae;
}
switch (alt34) {
case 1:
{
start=(DroolsTree)match(input,VT_OR_PREFIX,FOLLOW_VT_OR_PREFIX_in_lhs1034);
match(input,Token.DOWN,null);
int cnt31=0;
loop31: do {
int alt31=2;
int LA31_0=input.LA(1);
if (((LA31_0 >= VT_AND_PREFIX && LA31_0 <= VT_OR_INFIX) || LA31_0 == VT_PATTERN || LA31_0 == VK_EVAL || LA31_0 == VK_NOT || (LA31_0 >= VK_EXISTS && LA31_0 <= VK_FORALL) || LA31_0 == FROM)) {
alt31=1;
}
switch (alt31) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs1039);
dt=lhs();
state._fsp--;
lhsList.add((dt != null ? dt.baseDescr : null));
}
break;
default :
if (cnt31 >= 1) break loop31;
EarlyExitException eee=new EarlyExitException(31,input);
throw eee;
}
cnt31++;
}
 while (true);
match(input,Token.UP,null);
retval.baseDescr=factory.createOr(start,lhsList);
}
break;
case 2:
{
start=(DroolsTree)match(input,VT_OR_INFIX,FOLLOW_VT_OR_INFIX_in_lhs1055);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs1059);
dt1=lhs();
state._fsp--;
pushFollow(FOLLOW_lhs_in_lhs1063);
dt2=lhs();
state._fsp--;
match(input,Token.UP,null);
lhsList.add((dt1 != null ? dt1.baseDescr : null));
lhsList.add((dt2 != null ? dt2.baseDescr : null));
retval.baseDescr=factory.createOr(start,lhsList);
}
break;
case 3:
{
start=(DroolsTree)match(input,VT_AND_PREFIX,FOLLOW_VT_AND_PREFIX_in_lhs1075);
match(input,Token.DOWN,null);
int cnt32=0;
loop32: do {
int alt32=2;
int LA32_0=input.LA(1);
if (((LA32_0 >= VT_AND_PREFIX && LA32_0 <= VT_OR_INFIX) || LA32_0 == VT_PATTERN || LA32_0 == VK_EVAL || LA32_0 == VK_NOT || (LA32_0 >= VK_EXISTS && LA32_0 <= VK_FORALL) || LA32_0 == FROM)) {
alt32=1;
}
switch (alt32) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs1080);
dt=lhs();
state._fsp--;
lhsList.add((dt != null ? dt.baseDescr : null));
}
break;
default :
if (cnt32 >= 1) break loop32;
EarlyExitException eee=new EarlyExitException(32,input);
throw eee;
}
cnt32++;
}
 while (true);
match(input,Token.UP,null);
retval.baseDescr=factory.createAnd(start,lhsList);
}
break;
case 4:
{
start=(DroolsTree)match(input,VT_AND_INFIX,FOLLOW_VT_AND_INFIX_in_lhs1096);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs1100);
dt1=lhs();
state._fsp--;
pushFollow(FOLLOW_lhs_in_lhs1104);
dt2=lhs();
state._fsp--;
match(input,Token.UP,null);
lhsList.add((dt1 != null ? dt1.baseDescr : null));
lhsList.add((dt2 != null ? dt2.baseDescr : null));
retval.baseDescr=factory.createAnd(start,lhsList);
}
break;
case 5:
{
start=(DroolsTree)match(input,VK_EXISTS,FOLLOW_VK_EXISTS_in_lhs1116);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs1120);
dt=lhs();
state._fsp--;
match(input,Token.UP,null);
retval.baseDescr=factory.createExists(start,(dt != null ? dt.baseDescr : null));
}
break;
case 6:
{
start=(DroolsTree)match(input,VK_NOT,FOLLOW_VK_NOT_in_lhs1132);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs1136);
dt=lhs();
state._fsp--;
match(input,Token.UP,null);
retval.baseDescr=factory.createNot(start,(dt != null ? dt.baseDescr : null));
}
break;
case 7:
{
start=(DroolsTree)match(input,VK_EVAL,FOLLOW_VK_EVAL_in_lhs1148);
match(input,Token.DOWN,null);
pc=(DroolsTree)match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_lhs1152);
match(input,Token.UP,null);
retval.baseDescr=factory.createEval(start,pc);
}
break;
case 8:
{
start=(DroolsTree)match(input,VK_FORALL,FOLLOW_VK_FORALL_in_lhs1164);
match(input,Token.DOWN,null);
int cnt33=0;
loop33: do {
int alt33=2;
int LA33_0=input.LA(1);
if (((LA33_0 >= VT_AND_PREFIX && LA33_0 <= VT_OR_INFIX) || LA33_0 == VT_PATTERN || LA33_0 == VK_EVAL || LA33_0 == VK_NOT || (LA33_0 >= VK_EXISTS && LA33_0 <= VK_FORALL) || LA33_0 == FROM)) {
alt33=1;
}
switch (alt33) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs1169);
dt=lhs();
state._fsp--;
lhsList.add((dt != null ? dt.baseDescr : null));
}
break;
default :
if (cnt33 >= 1) break loop33;
EarlyExitException eee=new EarlyExitException(33,input);
throw eee;
}
cnt33++;
}
 while (true);
match(input,Token.UP,null);
retval.baseDescr=factory.createForAll(start,lhsList);
}
break;
case 9:
{
match(input,FROM,FOLLOW_FROM_in_lhs1183);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_pattern_in_lhs1187);
pn=lhs_pattern();
state._fsp--;
pushFollow(FOLLOW_from_elements_in_lhs1191);
fe=from_elements();
state._fsp--;
match(input,Token.UP,null);
retval.baseDescr=factory.setupFrom(pn,(fe != null ? fe.patternSourceDescr : null));
}
break;
case 10:
{
pushFollow(FOLLOW_lhs_pattern_in_lhs1202);
pn=lhs_pattern();
state._fsp--;
retval.baseDescr=pn;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
