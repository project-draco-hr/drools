{
  AccumulateDescr accumulateDescr=null;
  accumulate_init_clause_return ac1=null;
  AccumulateDescr ac2=null;
  try {
    int alt34=2;
    int LA34_0=input.LA(1);
    if ((LA34_0 == VT_ACCUMULATE_INIT_CLAUSE)) {
      alt34=1;
    }
 else     if ((LA34_0 == VT_ACCUMULATE_ID_CLAUSE)) {
      alt34=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("258:1: accumulate_parts[PatternSourceDescr patternSourceDescr] returns [AccumulateDescr accumulateDescr] : (ac1= accumulate_init_clause[$patternSourceDescr] | ac2= accumulate_id_clause[$patternSourceDescr] );",34,0,input);
      throw nvae;
    }
switch (alt34) {
case 1:
{
        pushFollow(FOLLOW_accumulate_init_clause_in_accumulate_parts1356);
        ac1=accumulate_init_clause(patternSourceDescr);
        _fsp--;
        accumulateDescr=ac1.accumulateDescr;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_accumulate_id_clause_in_accumulate_parts1367);
    ac2=accumulate_id_clause(patternSourceDescr);
    _fsp--;
    accumulateDescr=ac2;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return accumulateDescr;
}
