{
  TypeDeclarationDescr declaration=null;
  DroolsTree id=null;
  Map dm=null;
  TypeFieldDescr df=null;
  List<Map> declMetadaList=new LinkedList<Map>();
  List<TypeFieldDescr> declFieldList=new LinkedList<TypeFieldDescr>();
  try {
{
      match(input,VK_DECLARE,FOLLOW_VK_DECLARE_in_type_declaration622);
      match(input,Token.DOWN,null);
      id=(DroolsTree)match(input,VT_TYPE_DECLARE_ID,FOLLOW_VT_TYPE_DECLARE_ID_in_type_declaration626);
      loop18:       do {
        int alt18=2;
        int LA18_0=input.LA(1);
        if ((LA18_0 == AT)) {
          alt18=1;
        }
switch (alt18) {
case 1:
{
            pushFollow(FOLLOW_decl_metadata_in_type_declaration635);
            dm=decl_metadata();
            state._fsp--;
            declMetadaList.add(dm);
          }
        break;
default :
      break loop18;
  }
}
 while (true);
loop19: do {
  int alt19=2;
  int LA19_0=input.LA(1);
  if ((LA19_0 == ID)) {
    alt19=1;
  }
switch (alt19) {
case 1:
{
      pushFollow(FOLLOW_decl_field_in_type_declaration648);
      df=decl_field();
      state._fsp--;
      declFieldList.add(df);
    }
  break;
default :
break loop19;
}
}
 while (true);
match(input,VK_END,FOLLOW_VK_END_in_type_declaration654);
match(input,Token.UP,null);
declaration=factory.createTypeDeclr(id,declMetadaList,declFieldList);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return declaration;
}
