{
  String drl1="package org.kie.test1; \n" + "\n" + "declare Bean \n"+ "  id : String \n"+ "end";
  this.fileManager.write("rules1.drl",drl1);
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rules1.drl' type='DRL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase,false);
  List<String> list=new ArrayList<String>();
  kagent.setSystemEventListener(new PrintStreamSystemEventListener(System.out));
  this.applyChangeSet(kagent,ResourceFactory.newByteArrayResource(xml.getBytes()));
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  ksession.fireAllRules();
  String drl2="package org.kie.test2;\n" + "\n" + "import org.drools.Person;\n"+ "\n"+ "global java.util.List list;\n"+ "\n"+ "declare Person\n"+ "@role(event)\n"+ "end\n"+ "\n"+ "declare Bean2\n"+ "  id : String\n"+ "end\n"+ "\n"+ "rule \"Data\"\n"+ "when\n"+ "  $b : Person()\n"+ "  not  Bean2( this before $b )\n"+ "then\n"+ "  list.add(\"foo\");\n"+ "end\n"+ "\n"+ "rule \"Init\"\n"+ "when\n"+ "then\n"+ "  insert( new Person( \"x\" ) );\n"+ "end";
  this.fileManager.write("rules2.drl",drl2);
  System.out.println("\n\n\n----------------\n\n\n");
  xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rules2.drl' type='DRL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  this.applyChangeSet(kagent,ResourceFactory.newByteArrayResource(xml.getBytes()));
  Rule[] rules=((KnowledgeBaseImpl)kagent.getKnowledgeBase()).getRuleBase().getPackages()[0].getRules();
  for (  Rule rule : rules) {
    System.out.println("\t" + rule.getName());
  }
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  Assert.assertEquals(1,list.size());
  Assert.assertEquals("foo",list.get(0));
  ksession.dispose();
  kagent.dispose();
}
