{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  String rule="package org.drools.persistence.map.impl\n";
  rule+="import org.drools.persistence.map.impl.Buddy;\n";
  rule+="rule \"echo2\" \n";
  rule+="dialect \"mvel\"\n";
  rule+="when\n";
  rule+="    $m : Buddy()\n";
  rule+="then\n";
  rule+="    System.out.println(\"buddy inserted\")";
  rule+="end\n";
  kbuilder.add(new ByteArrayResource(rule.getBytes()),ResourceType.DRL);
  KnowledgeBuilderErrors errors=kbuilder.getErrors();
  if (errors != null && errors.size() > 0) {
    for (    KnowledgeBuilderError error : errors) {
      System.out.println("Error: " + error.getMessage());
    }
    Assert.fail("KnowledgeBase did not build");
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  KnowledgeSessionStorage storage=getSimpleStorage();
  StatefulKnowledgeSession ksession=createSession(kbase,storage);
  FactHandle buddyFactHandle=ksession.insert(new Buddy());
  ksession.fireAllRules();
  Assert.assertEquals(1,ksession.getObjects().size());
  ksession=disposeAndReloadSession(ksession,kbase,storage);
  Assert.assertNotNull(ksession);
  Assert.assertEquals(1,ksession.getObjects().size());
  Assert.assertNull("An object can't be retrieved with a FactHandle from a disposed session",ksession.getObject(buddyFactHandle));
}
