{
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  final Map<Long,SessionInfo> savedEntities=new HashMap<Long,SessionInfo>();
  KnowledgeSessionStorage storage=new KnowledgeSessionStorage(){
    public void saveOrUpdate(    SessionInfo storedObject){
      storedObject.update();
      savedEntities.put(storedObject.getId(),storedObject);
    }
    public SessionInfo findSessionInfo(    Long id){
      return savedEntities.get(id);
    }
  }
;
  StatefulKnowledgeSession crmPersistentSession=createSession(kbase,storage);
  long ksessionId=crmPersistentSession.getId();
  crmPersistentSession.fireAllRules();
  crmPersistentSession=disposeAndReloadSession(crmPersistentSession,kbase,storage);
  Assert.assertEquals(ksessionId,crmPersistentSession.getId());
  ksessionId=crmPersistentSession.getId();
  crmPersistentSession.fireAllRules();
  crmPersistentSession=disposeAndReloadSession(crmPersistentSession,kbase,storage);
  crmPersistentSession.fireAllRules();
  Assert.assertEquals(1,savedEntities.size());
  crmPersistentSession.dispose();
}
