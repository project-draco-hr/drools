{
  final String KBASE_NAME="kieBase";
  final String KSESSION_NAME="kieSession";
  String drl="declare TestEvent\n" + "    @role( event )\n" + "    name : String\n"+ "end\n"+ "\n"+ "declare window DeclaredTimeWindow\n"+ "    TestEvent ( name == \"timeDec\" ) over window:time( 50ms ) from entry-point EventStream\n"+ "end";
  KieServices ks=KieServices.Factory.get();
  KieFileSystem kfs=ks.newKieFileSystem();
  kfs.write("src/main/resources/window.drl",drl);
  KieModuleModel kmoduleModel=ks.newKieModuleModel();
  kmoduleModel.newKieBaseModel(KBASE_NAME).addPackage("*").newKieSessionModel(KSESSION_NAME).setDefault(true).setClockType(ClockTypeOption.get("pseudo"));
  kfs.writeKModuleXML(kmoduleModel.toXML());
  KieBuilder builder=ks.newKieBuilder(kfs).buildAll();
  assertEquals(0,builder.getResults().getMessages().size());
  ks.getRepository().addKieModule(builder.getKieModule());
  KieSession kieSession=ks.newKieContainer(ks.getRepository().getDefaultReleaseId()).newKieSession(KSESSION_NAME);
  assertNotNull(kieSession);
  KieBase kieBase=ks.newKieContainer(ks.getRepository().getDefaultReleaseId()).getKieBase(KBASE_NAME);
  assertNotNull(kieBase);
}
