{
  PackageDescrBuilder builder=DescrFactory.newPackage().name("foo");
  String className=Person.class.getName();
  builder.newImport().target(className).end();
  PackageDescr descr=builder.getDescr();
  ImportDescr importDescr=new ImportDescr(className);
  ImportDescr badImportDescr=new ImportDescr(null);
  assertTrue(descr.getImports().contains(importDescr));
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ObjectOutput out=new ObjectOutputStream(baos);
    descr.writeExternal(out);
    ObjectInput in=new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));
    PackageDescr newDescr=new PackageDescr();
    newDescr.readExternal(in);
    assertFalse(newDescr.getImports().contains(badImportDescr));
    assertTrue(newDescr.getImports().contains(importDescr));
  }
 catch (  IOException ioe) {
    fail(ioe.getMessage());
  }
catch (  ClassNotFoundException cnfe) {
    fail(cnfe.getMessage());
  }
}
