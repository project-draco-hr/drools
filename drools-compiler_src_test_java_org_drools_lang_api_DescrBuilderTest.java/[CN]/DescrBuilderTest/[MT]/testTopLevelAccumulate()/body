{
  PackageDescr pkg=DescrFactory.newPackage().name("org.kie").newRule().name("r1").lhs().accumulate().source().pattern("StockTick").constraint("company == \"RHT\"").bind("$p","price",false).end().end().function("sum","$sum","$p").function("count","$cnt","$p").end().end().rhs("// some comment").end().getDescr();
  KnowledgePackage kpkg=compilePkgDescr(pkg);
  assertEquals("org.kie",kpkg.getName());
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(Collections.singletonList(kpkg));
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  AgendaEventListener ael=mock(AgendaEventListener.class);
  ksession.addEventListener(ael);
  ksession.insert(new StockTick(1,"RHT",80,1));
  ksession.insert(new StockTick(2,"RHT",100,10));
  int rules=ksession.fireAllRules();
  assertEquals(1,rules);
  ArgumentCaptor<AfterActivationFiredEvent> cap=ArgumentCaptor.forClass(AfterActivationFiredEvent.class);
  verify(ael).afterActivationFired(cap.capture());
  assertThat(((Number)cap.getValue().getActivation().getDeclarationValue("$sum")).intValue(),is(180));
  assertThat(((Number)cap.getValue().getActivation().getDeclarationValue("$cnt")).intValue(),is(2));
}
