{
  if (type == null) {
    return val.toString();
  }
 else   if (val == null) {
    return null;
  }
 else   if ("Integer".endsWith(type) || "int".equalsIgnoreCase(type)) {
    return "" + val.intValue();
  }
 else   if ("Float".endsWith(type) || "float".equalsIgnoreCase(type)) {
    return "" + val.floatValue();
  }
 else   if ("Double".endsWith(type) || "double".equalsIgnoreCase(type)) {
    return "" + val.doubleValue();
  }
 else   if ("Boolean".endsWith(type) || "boolean".equalsIgnoreCase(type)) {
    if (val.doubleValue() == 1.0)     return "true";
    if (val.doubleValue() == 0.0)     return "false";
    throw new NumberFormatException("Boolean expected, found " + val);
  }
 else   if ("String".endsWith(type)) {
    return "\"" + val.toString() + "\"";
  }
 else   if ("Date".endsWith(type)) {
    return "\"" + (new SimpleDateFormat().format(new Date(val.longValue()))) + "\"";
  }
 else   if ("Time".endsWith(type)) {
    return "\"" + val.toString() + "\"";
  }
 else   if ("DateTime".endsWith(type)) {
    return "\"" + (new SimpleDateFormat().format(new Date(val.longValue()))) + "\"";
  }
 else   if ("DateDaysSince[0]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateDaysSince[1960]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateDaysSince[1970]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateDaysSince[1980]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("TimeSeconds".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateTimeSecondsSince[0]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateTimeSecondsSince[1960]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateTimeSecondsSince[1970]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else   if ("DateTimeSecondsSince[1980]".equalsIgnoreCase(type)) {
    throw new UnsupportedOperationException("TODO");
  }
 else {
    return val.toString();
  }
}
