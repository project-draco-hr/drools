{
  if (prop.length() > 0)   ctx=getBeanProperty(ctx,prop);
  int start=++cursor;
  whiteSpaceSkip();
  if (cursor == length)   throw new PropertyAccessException("unterminated '['");
  String item;
  if (property[cursor] == '\'' || property[cursor] == '"') {
    start++;
    int end;
    if (!scanTo(']'))     throw new PropertyAccessException("unterminated '['");
    if ((end=containsStringLiteralTermination()) == -1)     throw new PropertyAccessException("unterminated string literal in collection accessor");
    item=new String(property,start,end - start);
  }
 else {
    if (!scanTo(']'))     throw new PropertyAccessException("unterminated '['");
    item=new String(property,start,cursor - start);
  }
  ++cursor;
  if (ctx instanceof Map) {
    return ((Map)ctx).get(item);
  }
 else   if (ctx instanceof List) {
    return ((List)ctx).get(parseInt(item));
  }
 else   if (ctx instanceof Collection) {
    int count=parseInt(item);
    if (count > ((Collection)ctx).size())     throw new PropertyAccessException("index [" + count + "] out of bounds on collection");
    Iterator iter=((Collection)ctx).iterator();
    for (int i=0; i < count; i++)     iter.next();
    return iter.next();
  }
 else   if (ctx instanceof Object[]) {
    return ((Object[])ctx)[parseInt(item)];
  }
 else   if (ctx instanceof CharSequence) {
    return ((CharSequence)ctx).charAt(parseInt(item));
  }
 else {
    throw new PropertyAccessException("illegal use of []: unknown type: " + (ctx == null ? null : ctx.getClass().getName()));
  }
}
