{
  final Rule rule1=new Rule("test-rule1");
  rule1.setConsequence(this.consequence);
  FactHandleImpl[] factHandles=new FactHandleImpl[1];
  PropagationContext context1;
  LeapsTuple tuple1;
  String logicalString1=new String("logical");
  FactHandle handle1=((HandleFactory)ruleBase.getFactHandleFactory()).newFactHandle(logicalString1);
  context1=new PropagationContextImpl(1,PropagationContext.ASSERTION,rule1,null);
  factHandles[0]=(FactHandleImpl)handle1;
  tuple1=new LeapsTuple(factHandles,null,context1);
  this.workingMemory.assertTuple(tuple1);
  FactHandle logicalHandle1=this.workingMemory.assertObject(logicalString1,false,true,null,this.workingMemory.getAgenda().getActivations()[0]);
  String logicalString2=new String("logical");
  FactHandle logicalHandle2=this.workingMemory.assertObject(logicalString2,false,true,rule1,this.workingMemory.getAgenda().getActivations()[0]);
  factHandles[0]=(FactHandleImpl)logicalHandle2;
  tuple1=new LeapsTuple(factHandles,null,context1);
  this.workingMemory.assertTuple(tuple1);
  assertSame(logicalHandle1,logicalHandle2);
  logicalHandle1=this.workingMemory.assertObject(logicalString1);
  logicalHandle2=this.workingMemory.assertObject(logicalString2);
  assertNotSame(logicalHandle1,logicalHandle2);
}
