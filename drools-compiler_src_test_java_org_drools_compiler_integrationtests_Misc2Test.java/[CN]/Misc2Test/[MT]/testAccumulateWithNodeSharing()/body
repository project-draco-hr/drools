{
  String drl="import " + TypeA.class.getCanonicalName() + ";\n"+ "import "+ TypeB.class.getCanonicalName()+ ";\n"+ "import "+ TypeC.class.getCanonicalName()+ ";\n"+ "import "+ TypeD.class.getCanonicalName()+ ";\n"+ "rule R1 when\n"+ "    $a : TypeA()\n"+ "    $b : TypeB( parentId == $a.id )\n"+ "    $d : TypeD( parentId == $b.id, value == 1 )\n"+ "then\n"+ "end\n"+ "\n"+ "rule R2 no-loop when\n"+ "    $a : TypeA()\n"+ "    $b : TypeB( parentId == $a.id )\n"+ "then\n"+ "    update($b);"+ "end\n"+ "\n"+ "rule R3 when\n"+ "    $a : TypeA()\n"+ "    $b : TypeB( parentId == $a.id )\n"+ "    $d : TypeD( parentId == $b.id )\n"+ "    $result : Number() from accumulate(\n"+ "        $b_acc : TypeB()\n"+ "        and\n"+ "        $c : TypeC( parentId == $b_acc.id, $value : value );\n"+ "        sum($value)\n"+ "    )\n"+ "then\n"+ "    $d.setValue($result.intValue());\n"+ "end";
  KieHelper helper=new KieHelper();
  helper.addContent(drl,ResourceType.DRL);
  KieSession ksession=helper.build().newKieSession();
  ksession.insert(new TypeA());
  ksession.insert(new TypeB());
  ksession.insert(new TypeC());
  TypeD d=new TypeD();
  ksession.insert(d);
  ksession.fireAllRules();
  assertEquals(1,d.getValue());
}
