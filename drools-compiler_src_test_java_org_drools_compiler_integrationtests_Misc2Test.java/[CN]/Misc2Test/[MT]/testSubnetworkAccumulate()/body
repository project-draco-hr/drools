{
  String drl="import " + StringWrapper.class.getCanonicalName() + ";\n"+ "global StringBuilder sb;"+ "rule R when\n"+ "  $s : String()\n"+ "  Number( $i : intValue ) from accumulate ($sw : StringWrapper( $value : value ) "+ "                                       and eval( $sw.contains($s) ), "+ "                                 sum($value) )\n"+ "then\n"+ "  sb.append($i);\n"+ "end\n";
  KieSession ksession=new KieHelper().addContent(drl,ResourceType.DRL).build().newKieSession();
  StringBuilder sb=new StringBuilder();
  ksession.setGlobal("sb",sb);
  ksession.insert("test");
  StringWrapper sw=new StringWrapper();
  FactHandle swFH=ksession.insert(sw);
  ksession.fireAllRules();
  sw.setWrapped("test");
  ksession.update(swFH,sw);
  ksession.fireAllRules();
  sw.setWrapped(null);
  ksession.update(swFH,sw);
  ksession.fireAllRules();
  sw.setWrapped("test");
  ksession.update(swFH,sw);
  ksession.fireAllRules();
  sw.setWrapped(null);
  ksession.update(swFH,sw);
  ksession.fireAllRules();
  sw.setWrapped("test");
  ksession.update(swFH,sw);
  ksession.fireAllRules();
  assertEquals("040404",sb.toString());
}
