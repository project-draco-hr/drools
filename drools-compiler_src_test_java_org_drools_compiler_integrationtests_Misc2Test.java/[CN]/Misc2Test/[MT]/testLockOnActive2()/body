{
  String drl="" + "package org.drools.test; \n" + "import org.drools.compiler.integrationtests.Misc2Test.TradeBooking;\n"+ "import org.drools.compiler.integrationtests.Misc2Test.TradeHeader;\n"+ "rule \"Rule1\" \n"+ "lock-on-active true\n"+ "salience 1 \n"+ "when\n"+ "  $booking: TradeBooking()\n"+ "  $trade: TradeHeader() from $booking.getTrade()\n"+ "then\n"+ "  $trade.setAction(\"New\");\n"+ "  modify($booking) {}\n"+ "end;\n"+ "\n"+ "rule \"Rule2\"\n"+ "when\n"+ "  $booking: TradeBooking( )\n"+ "  $trade: Object( ) from $booking.getTrade()\n"+ "then\n"+ "end";
  KnowledgeBase kb=loadKnowledgeBaseFromString(drl);
  StatefulKnowledgeSession ks=kb.newStatefulKnowledgeSession();
  final List created=new ArrayList();
  final List cancelled=new ArrayList();
  final List fired=new ArrayList();
  ks.addEventListener(new DefaultAgendaEventListener(){
    public void matchCreated(    MatchCreatedEvent event){
      created.add(event.getMatch().getRule().getName());
    }
    public void matchCancelled(    MatchCancelledEvent event){
      cancelled.add(event.getMatch().getRule().getName());
    }
    public void afterMatchFired(    AfterMatchFiredEvent event){
      fired.add(event.getMatch().getRule().getName());
    }
  }
);
  ks.fireAllRules();
  TradeBooking tb=new TradeBookingImpl(new TradeHeaderImpl());
  ks.insert(tb);
  assertEquals(2,ks.fireAllRules());
  assertEquals(3,created.size());
  assertEquals(1,cancelled.size());
  assertEquals(2,fired.size());
  assertEquals("Rule1",created.get(0));
  assertEquals("Rule1",created.get(1));
  assertEquals("Rule2",created.get(2));
  assertEquals("Rule1",cancelled.get(0));
  assertEquals("Rule1",fired.get(0));
  assertEquals("Rule2",fired.get(1));
}
