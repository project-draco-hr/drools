{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_" + name + ".drl")));
  final Package pkg=builder.getPackage();
  final ReteooRuleBase ruleBase=(ReteooRuleBase)getRuleBase();
  ruleBase.addPackage(pkg);
  if (this.showRete) {
    final ReteooJungViewer viewer=new ReteooJungViewer(ruleBase);
    javax.swing.SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        viewer.showGUI();
      }
    }
);
    while (viewer.isRunning()) {
      Thread.yield();
      Thread.sleep(100);
    }
  }
  if (this.writeTree) {
    writeRuleBase(ruleBase,name);
  }
  final XStream xstream=new XStream();
  final RuleBase goodRuleBase=(RuleBase)xstream.fromXML(getClass().getResourceAsStream(name));
  nodesEquals(((ReteooRuleBase)goodRuleBase).getRete(),(ruleBase).getRete());
}
