{
  assertEquals(object1 + " is not of the same type as " + object2,object1.getClass(),object2.getClass());
  assertEquals(object1 + " is not equal to " + object2,object1,object2);
  if (object1 instanceof ObjectSource) {
    final ObjectSource source1=(ObjectSource)object1;
    final ObjectSource source2=(ObjectSource)object2;
    ObjectSink[] list1=source1.sink.getSinks();
    ObjectSink[] list2=source2.sink.getSinks();
    assertEquals(object1.getClass() + " nodes have different number of sinks",list1.length,list2.length);
    for (int i=0, size=list1.length; i < size; i++) {
      nodesEquals(list1[i],list2[i]);
    }
  }
 else   if (object1 instanceof TupleSource) {
    final TupleSource source1=(TupleSource)object1;
    final TupleSource source2=(TupleSource)object2;
    TupleSink[] list1=source1.sink.getSinks();
    TupleSink[] list2=source2.sink.getSinks();
    assertEquals(object1.getClass() + " nodes have different number of sinks",list1.length,list2.length);
    for (int i=0, size=list1.length; i < size; i++) {
      nodesEquals(list1[i],list2[i]);
    }
  }
}
