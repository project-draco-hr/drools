{
  List<String> codeAndMessage=new ArrayList<String>(2);
  String message="";
  if (e instanceof MismatchedTokenException) {
    MismatchedTokenException mte=(MismatchedTokenException)e;
    if (mte.expecting >= 0 && mte.expecting < tokenNames.length) {
      message=String.format(DroolsParserExceptionFactory.MISMATCHED_TOKEN_MESSAGE_COMPLETE,e.line,e.charPositionInLine,getBetterToken(e.token),getBetterToken(mte.expecting),formatParserLocation());
      codeAndMessage.add(message);
      codeAndMessage.add("ERR 101");
    }
 else {
      message=String.format(DroolsParserExceptionFactory.MISMATCHED_TOKEN_MESSAGE_PART,e.line,e.charPositionInLine,getBetterToken(e.token),formatParserLocation());
      codeAndMessage.add(message);
      codeAndMessage.add("ERR 101");
    }
  }
 else   if (e instanceof MismatchedTreeNodeException) {
    MismatchedTreeNodeException mtne=(MismatchedTreeNodeException)e;
    if (mtne.expecting >= 0 && mtne.expecting < tokenNames.length) {
      message=String.format(DroolsParserExceptionFactory.MISMATCHED_TREE_NODE_MESSAGE_COMPLETE,e.line,e.charPositionInLine,getBetterToken(e.token),getBetterToken(mtne.expecting),formatParserLocation());
      codeAndMessage.add(message);
      codeAndMessage.add("ERR 102");
    }
 else {
      message=String.format(DroolsParserExceptionFactory.MISMATCHED_TREE_NODE_MESSAGE_PART,e.line,e.charPositionInLine,getBetterToken(e.token),formatParserLocation());
      codeAndMessage.add(message);
      codeAndMessage.add("ERR 102");
    }
  }
 else   if (e instanceof NoViableAltException) {
    message=String.format(DroolsParserExceptionFactory.NO_VIABLE_ALT_MESSAGE,e.line,e.charPositionInLine,getBetterToken(e.token),formatParserLocation());
    codeAndMessage.add(message);
    codeAndMessage.add("ERR 103");
  }
 else   if (e instanceof EarlyExitException) {
    message=String.format(DroolsParserExceptionFactory.EARLY_EXIT_MESSAGE,e.line,e.charPositionInLine,getBetterToken(e.token),formatParserLocation());
    codeAndMessage.add(message);
    codeAndMessage.add("ERR 104");
  }
 else   if (e instanceof MismatchedSetException) {
    MismatchedSetException mse=(MismatchedSetException)e;
    message=String.format(DroolsParserExceptionFactory.MISMATCHED_SET_MESSAGE,e.line,e.charPositionInLine,getBetterToken(e.token),mse.expecting,formatParserLocation());
    codeAndMessage.add(message);
    codeAndMessage.add("ERR 105");
  }
 else   if (e instanceof MismatchedNotSetException) {
    MismatchedNotSetException mse=(MismatchedNotSetException)e;
    message=String.format(DroolsParserExceptionFactory.MISMATCHED_NOT_SET_MESSAGE,e.line,e.charPositionInLine,getBetterToken(e.token),mse.expecting,formatParserLocation());
    codeAndMessage.add(message);
    codeAndMessage.add("ERR 106");
  }
 else   if (e instanceof FailedPredicateException) {
    FailedPredicateException fpe=(FailedPredicateException)e;
    message=String.format(DroolsParserExceptionFactory.FAILED_PREDICATE_MESSAGE,e.line,e.charPositionInLine,fpe.ruleName,fpe.predicateText,formatParserLocation());
    codeAndMessage.add(message);
    codeAndMessage.add("ERR 107");
  }
  if (codeAndMessage.get(0).length() == 0) {
    codeAndMessage.add("?????");
  }
  return codeAndMessage;
}
