{
switch (tokenType) {
case DRL5xLexer.INT:
    return defaultValue == null ? "int" : defaultValue;
case DRL5xLexer.FLOAT:
  return defaultValue == null ? "float" : defaultValue;
case DRL5xLexer.STRING:
return defaultValue == null ? "string" : defaultValue;
case DRL5xLexer.BOOL:
return defaultValue == null ? "boolean" : defaultValue;
case DRL5xLexer.NULL:
return "null";
case DRL5xLexer.THEN:
return "then";
case DRL5xLexer.SEMICOLON:
return ";";
case DRL5xLexer.DOT_STAR:
return ".*";
case DRL5xLexer.COLON:
return ":";
case DRL5xLexer.EQUALS:
return "==";
case DRL5xLexer.NOT_EQUAL:
return "!=";
case DRL5xLexer.GREATER:
return ">";
case DRL5xLexer.GREATER_EQUAL:
return ">=";
case DRL5xLexer.LESS:
return "<";
case DRL5xLexer.LESS_EQUAL:
return "<=";
case DRL5xLexer.ARROW:
return "->";
case DRL5xLexer.ID:
return defaultValue == null ? "identifier" : defaultValue;
case DRL5xLexer.LEFT_PAREN:
return "(";
case DRL5xLexer.RIGHT_PAREN:
return ")";
case DRL5xLexer.LEFT_SQUARE:
return "[";
case DRL5xLexer.RIGHT_SQUARE:
return "]";
case DRL5xLexer.LEFT_CURLY:
return "{";
case DRL5xLexer.RIGHT_CURLY:
return "}";
case DRL5xLexer.COMMA:
return ",";
case DRL5xLexer.DOT:
return ".";
case DRL5xLexer.DOUBLE_AMPER:
return "&&";
case DRL5xLexer.DOUBLE_PIPE:
return "||";
case DRL5xLexer.MISC:
return defaultValue == null ? "misc" : defaultValue;
case DRL5xLexer.EOF:
return "<eof>";
default :
return tokenType > tokenNames.length ? "unknown" : tokenNames[tokenType];
}
}
