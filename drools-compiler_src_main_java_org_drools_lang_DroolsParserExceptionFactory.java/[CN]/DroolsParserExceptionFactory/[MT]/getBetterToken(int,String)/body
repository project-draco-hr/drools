{
switch (tokenType) {
case DRLLexer.INT:
    return defaultValue == null ? "int" : defaultValue;
case DRLLexer.FLOAT:
  return defaultValue == null ? "float" : defaultValue;
case DRLLexer.STRING:
return defaultValue == null ? "string" : defaultValue;
case DRLLexer.BOOL:
return defaultValue == null ? "boolean" : defaultValue;
case DRLLexer.NULL:
return "null";
case DRLLexer.THEN:
return "then";
case DRLLexer.END:
return "end";
case DRLLexer.GRAVE_ACCENT:
return "`";
case DRLLexer.SEMICOLON:
return ";";
case DRLLexer.DOT_STAR:
return ".*";
case DRLLexer.COLON:
return ":";
case DRLLexer.EQUAL:
return "==";
case DRLLexer.NOT_EQUAL:
return "!=";
case DRLLexer.GREATER:
return ">";
case DRLLexer.GREATER_EQUAL:
return ">=";
case DRLLexer.LESS:
return "<";
case DRLLexer.LESS_EQUAL:
return "<=";
case DRLLexer.ARROW:
return "->";
case DRLLexer.ID:
return defaultValue == null ? "identifier" : defaultValue;
case DRLLexer.LEFT_PAREN:
return "(";
case DRLLexer.RIGHT_PAREN:
return ")";
case DRLLexer.LEFT_SQUARE:
return "[";
case DRLLexer.RIGHT_SQUARE:
return "]";
case DRLLexer.LEFT_CURLY:
return "{";
case DRLLexer.RIGHT_CURLY:
return "}";
case DRLLexer.COMMA:
return ",";
case DRLLexer.DOT:
return ".";
case DRLLexer.DOUBLE_AMPER:
return "&&";
case DRLLexer.DOUBLE_PIPE:
return "||";
case DRLLexer.MISC:
return defaultValue == null ? "misc" : defaultValue;
case DRLLexer.EOF:
return "<eof>";
default :
return tokenType > tokenNames.length ? "unknown" : tokenNames[tokenType];
}
}
