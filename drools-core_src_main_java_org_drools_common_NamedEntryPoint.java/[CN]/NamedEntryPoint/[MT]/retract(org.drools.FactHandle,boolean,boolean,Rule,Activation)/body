{
  if (factHandle == null) {
    throw new IllegalArgumentException("FactHandle cannot be null ");
  }
  try {
    this.ruleBase.readLock();
    this.lock.lock();
    this.wm.startOperation();
    this.ruleBase.executeQueuedActions();
    InternalFactHandle handle=(InternalFactHandle)factHandle;
    if (handle.getId() == -1) {
      return;
    }
    if (handle.isDisconnected()) {
      handle=this.objectStore.reconnect(handle);
    }
    if (handle.getEntryPoint() != this) {
      throw new IllegalArgumentException("Invalid Entry Point. You updated the FactHandle on entry point '" + handle.getEntryPoint().getEntryPointId() + "' instead of '"+ getEntryPointId()+ "'");
    }
    removePropertyChangeListener(handle);
    if (activation != null) {
      activation.getPropagationContext().releaseResources();
    }
    final PropagationContext propagationContext=new PropagationContextImpl(this.wm.getNextPropagationIdCounter(),PropagationContext.RETRACTION,rule,(activation == null) ? null : (LeftTuple)activation.getTuple(),handle,this.wm.agenda.getActiveActivations(),this.wm.agenda.getDormantActivations(),this.entryPoint);
    final Object object=handle.getObject();
    final ObjectTypeConf typeConf=this.typeConfReg.getObjectTypeConf(this.entryPoint,object);
    this.entryPointNode.retractObject(handle,propagationContext,typeConf,this.wm);
    if (typeConf.isTMSEnabled()) {
      final EqualityKey key=handle.getEqualityKey();
      if (key.getStatus() == EqualityKey.JUSTIFIED) {
        this.wm.tms.removeLogicalDependencies(handle);
      }
      key.removeFactHandle(handle);
      handle.setEqualityKey(null);
      if (key.isEmpty()) {
        this.wm.tms.remove(key);
      }
    }
    this.wm.workingMemoryEventSupport.fireObjectRetracted(propagationContext,handle,object,this.wm);
    this.objectStore.removeHandle(handle);
    this.handleFactory.destroyFactHandle(handle);
    this.wm.executeQueuedActions();
  }
  finally {
    this.wm.endOperation();
    this.lock.unlock();
    this.ruleBase.readUnlock();
  }
}
