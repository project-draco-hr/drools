{
  if (object == null) {
    return null;
  }
  try {
    this.wm.startOperation();
    ObjectTypeConf typeConf=this.typeConfReg.getObjectTypeConf(this.entryPoint,object);
    if (logical && !typeConf.isTMSEnabled()) {
      enableTMS(object,typeConf);
    }
    InternalFactHandle handle=null;
    if (this.wm.isSequential()) {
      handle=createHandle(object,typeConf);
      insert(handle,object,rule,activation,typeConf);
      return handle;
    }
    try {
      this.lock.lock();
      this.ruleBase.readLock();
      handle=this.objectStore.getHandleForObject(object);
      if (typeConf.isTMSEnabled()) {
        EqualityKey key;
        TruthMaintenanceSystem tms=wm.getTruthMaintenanceSystem();
        if (handle == null) {
          key=tms.get(object);
        }
 else {
          key=handle.getEqualityKey();
          if (key.getStatus() == EqualityKey.STATED) {
            return handle;
          }
          if (!logical) {
            key.setStatus(EqualityKey.STATED);
            tms.removeLogicalDependencies(handle);
          }
 else {
            tms.addLogicalDependency(handle,tmsValue,activation,activation.getPropagationContext(),rule,typeConf);
          }
          return handle;
        }
        if (key == null) {
          handle=createHandle(object,typeConf);
          key=createEqualityKey(handle);
          tms.put(key);
          if (!logical) {
            key.setStatus(EqualityKey.STATED);
          }
 else {
            key.setStatus(EqualityKey.JUSTIFIED);
            tms.addLogicalDependency(handle,tmsValue,activation,activation.getPropagationContext(),rule,typeConf);
            return handle;
          }
        }
 else         if (!logical) {
          if (key.getStatus() == EqualityKey.JUSTIFIED) {
            final InternalFactHandle justifiedHandle=key.getFactHandle();
            tms.removeLogicalDependencies(justifiedHandle);
            if (this.wm.discardOnLogicalOverride) {
              key.setStatus(EqualityKey.STATED);
              handle=key.getFactHandle();
              if (AssertBehaviour.IDENTITY.equals(this.ruleBase.getConfiguration().getAssertBehaviour())) {
                this.objectStore.updateHandle(handle,object);
              }
              return handle;
            }
 else {
              key.setStatus(EqualityKey.STATED);
              handle=createHandle(object,typeConf);
              handle.setEqualityKey(key);
              key.addFactHandle(handle);
            }
          }
 else {
            handle=createHandle(object,typeConf);
            key.addFactHandle(handle);
            handle.setEqualityKey(key);
          }
        }
 else {
          if (key.getStatus() == EqualityKey.JUSTIFIED) {
            tms.addLogicalDependency(key.getFactHandle(),tmsValue,activation,activation.getPropagationContext(),rule,typeConf);
            return key.getFactHandle();
          }
 else {
            return null;
          }
        }
      }
 else {
        if (handle != null) {
          return handle;
        }
        handle=createHandle(object,typeConf);
      }
      if (dynamic || typeConf.isDynamic()) {
        addPropertyChangeListener(handle,dynamic);
      }
      insert(handle,object,rule,activation,typeConf);
    }
  finally {
      this.ruleBase.readUnlock();
      this.lock.unlock();
    }
    return handle;
  }
  finally {
    this.wm.endOperation();
  }
}
