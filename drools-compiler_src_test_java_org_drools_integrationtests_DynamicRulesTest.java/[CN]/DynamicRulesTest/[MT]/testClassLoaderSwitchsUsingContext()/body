{
  try {
    ClassLoader original=Thread.currentThread().getContextClassLoader();
    ClassLoader loader1=new SubvertedClassLoader(new URL[]{getClass().getResource("/").toURI().toURL()},this.getClass().getClassLoader());
    Thread.currentThread().setContextClassLoader(loader1);
    Class cheeseClass=loader1.loadClass("org.drools.Cheese");
    PackageBuilder builder=new PackageBuilder();
    builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1.drl")));
    RuleBase ruleBase=RuleBaseFactory.newRuleBase();
    Package pkg=builder.getPackage();
    ruleBase.addPackage(pkg);
    StatefulSession wm=ruleBase.newStatefulSession();
    wm.insert(cheeseClass.newInstance());
    wm.fireAllRules();
    ClassLoader loader2=new SubvertedClassLoader(new URL[]{getClass().getResource("/").toURI().toURL()},this.getClass().getClassLoader());
    Thread.currentThread().setContextClassLoader(loader2);
    cheeseClass=loader2.loadClass("org.drools.Cheese");
    builder=new PackageBuilder();
    builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1.drl")));
    ruleBase=RuleBaseFactory.newRuleBase();
    pkg=builder.getPackage();
    ruleBase.addPackage(pkg);
    wm=ruleBase.newStatefulSession();
    wm.insert(cheeseClass.newInstance());
    wm.fireAllRules();
    Thread.currentThread().setContextClassLoader(original);
  }
 catch (  ClassCastException cce) {
    cce.printStackTrace();
    fail("No ClassCastException should be raised.");
  }
}
