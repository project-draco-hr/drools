{
  Collection<KnowledgePackage> kpkgs=SerializationHelper.serializeObject(loadKnowledgePackages("test_RemovePackage.drl"));
  final String packageName=kpkgs.iterator().next().getName();
  KnowledgeBase kbase=loadKnowledgeBase();
  kbase.addKnowledgePackages(kpkgs);
  kbase=SerializationHelper.serializeObject(kbase);
  StatefulKnowledgeSession session=createKnowledgeSession(kbase);
  session.insert(new Precondition("genericcode","genericvalue"));
  session.fireAllRules();
  KnowledgeBase ruleBaseWM=session.getKieBase();
  ruleBaseWM.removeKnowledgePackage(packageName);
  kpkgs=SerializationHelper.serializeObject(loadKnowledgePackages("test_RemovePackage.drl"));
  ruleBaseWM.addKnowledgePackages(kpkgs);
  ruleBaseWM=SerializationHelper.serializeObject(ruleBaseWM);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,true);
  session.fireAllRules();
  ruleBaseWM.removeKnowledgePackage(packageName);
  ruleBaseWM.addKnowledgePackages(SerializationHelper.serializeObject(kpkgs));
  ruleBaseWM.removeKnowledgePackage(packageName);
  ruleBaseWM.addKnowledgePackages(SerializationHelper.serializeObject(kpkgs));
}
