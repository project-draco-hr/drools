{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RemovePackage.drl")));
  RuleBase ruleBase=getRuleBase();
  final String packageName=builder.getPackage().getName();
  ruleBase.addPackage(SerializationHelper.serializeObject(builder.getPackage()));
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  WorkingMemory workingMemory=ruleBase.newStatefulSession();
  workingMemory.insert(new Precondition("genericcode","genericvalue"));
  workingMemory.fireAllRules();
  RuleBase ruleBaseWM=workingMemory.getRuleBase();
  ruleBaseWM.removePackage(packageName);
  final PackageBuilder builder1=new PackageBuilder();
  builder1.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RemovePackage.drl")));
  ruleBaseWM.addPackage(SerializationHelper.serializeObject(builder1.getPackage()));
  ruleBaseWM=SerializationHelper.serializeObject(ruleBaseWM);
  workingMemory=SerializationHelper.serializeObject(workingMemory);
  workingMemory.fireAllRules();
  ruleBaseWM.removePackage(packageName);
  ruleBaseWM.addPackage(SerializationHelper.serializeObject(builder1.getPackage()));
  ruleBaseWM.removePackage(packageName);
  ruleBaseWM.addPackage(SerializationHelper.serializeObject(builder1.getPackage()));
}
