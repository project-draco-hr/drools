{
  String drl="" + "\n" + "\n"+ "package org.drools.core.factmodel.traits.test;\n"+ "\n"+ "import java.util.*;\n"+ "import org.drools.core.factmodel.traits.Alias\n"+ "\n"+ "global java.util.List list;\n"+ "\n"+ "\n"+ "declare trait Citizen\n"+ "    citizenship : String = \"Unknown\"\n"+ "    socialSecurity : String = \"0\"\n"+ "end\n"+ "\n"+ "declare trait Student extends Citizen\n"+ "@propertyReactive\n"+ "   ID : String = \"412314\" @Alias(\"personID\") \n"+ "   GPA : Double = 3.99\n"+ "   SSN : String = \"888111155555\" @Alias(\"socialSecurity\")\n"+ "end\n"+ "\n"+ "declare Person\n"+ "@Traitable(logical=true)\n"+ "    personID : String\n"+ "    isStudent : boolean\n"+ "end\n"+ "\n"+ "rule \"1\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "then\n"+ "    Person p = new Person( null, true );\n"+ "    insert(p);\n"+ "    list.add(\"initialized\");\n"+ "end\n"+ "\n"+ "rule \"2\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "    $stu : Person(isStudent == true)\n"+ "then\n"+ "    Student s = don( $stu , Student.class );\n"+ "    System.out.println(\"don: Person -> Student \" + s);\n"+ "    list.add(\"student is donned\");\n"+ "end\n"+ "\n"+ "rule \"3\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "    $stu : Student(ID == \"412314\", SSN == \"888111155555\")\n"+ "then\n"+ "    list.add(\"student has ID and SSN\");\n"+ "end\n"+ "\n"+ "rule \"4\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "    Student(fields[\"personID\"] == \"412314\", fields[\"socialSecurity\"] == \"888111155555\")\n"+ "then\n"+ "    list.add(\"student has personID and socialSecurity\");\n"+ "end\n"+ "\n"+ "rule \"5\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "    $ctz : Citizen(socialSecurity == \"888111155555\")\n"+ "then\n"+ "    list.add(\"citizen has socialSecurity\");\n"+ "end\n"+ "\n"+ "rule \"6\"\n"+ "salience 1\n"+ "no-loop\n"+ "when\n"+ "    $p : Person(personID == \"412314\")\n"+ "then\n"+ "    list.add(\"person has personID\");\n"+ "end\n";
  StatefulKnowledgeSession ksession=loadKnowledgeBaseFromString(drl).newStatefulKnowledgeSession();
  TraitFactory.setMode(VirtualPropertyMode.MAP,ksession.getKieBase());
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertTrue(list.contains("initialized"));
  assertTrue(list.contains("student is donned"));
  assertTrue(list.contains("student has ID and SSN"));
  assertTrue(list.contains("student has personID and socialSecurity"));
  assertTrue(list.contains("citizen has socialSecurity"));
  assertTrue(list.contains("person has personID"));
}
