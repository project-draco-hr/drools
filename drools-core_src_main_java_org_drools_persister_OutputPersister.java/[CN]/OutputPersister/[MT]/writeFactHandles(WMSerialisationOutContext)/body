{
  ObjectOutputStream stream=context.stream;
  InternalWorkingMemory wm=context.wm;
  PlaceholderResolverStrategyFactory resolverStrategyFactory=context.resolverStrategyFactory;
  ((AbstractFactHandleFactory)wm.getFactHandleFactory()).writeExternal(stream);
  stream.writeInt(wm.getObjectStore().size());
  for (Iterator it=wm.getObjectStore().iterateFactHandles(); it.hasNext(); ) {
    InternalFactHandle handle=(InternalFactHandle)it.next();
    stream.writeInt(handle.getId());
    stream.writeLong(handle.getRecency());
    PlaceholderResolverStrategy strategy=resolverStrategyFactory.get(handle.getObject());
    Object object=handle.getObject();
    if (object instanceof ShadowProxy) {
      object=((ShadowProxy)object).getShadowedObject();
    }
    strategy.write(stream,object);
    if (handle.getRightTuple() != null) {
      stream.writeInt(PersisterEnums.RIGHT_TUPLE);
      int i=0;
      for (RightTuple rightTuple=handle.getRightTuple(); rightTuple != null; rightTuple=(RightTuple)rightTuple.getHandleNext()) {
        if (i != 0) {
          stream.writeInt(PersisterEnums.REPEAT);
        }
        writeRightTuple(rightTuple,context);
        i++;
      }
    }
    stream.writeInt(PersisterEnums.END);
  }
  for (Iterator it=wm.getObjectStore().iterateFactHandles(); it.hasNext(); ) {
    InternalFactHandle handle=(InternalFactHandle)it.next();
    if (handle.getLeftTuple() != null) {
      stream.writeInt(PersisterEnums.LEFT_TUPLE);
      int i=0;
      for (LeftTuple leftTuple=handle.getLeftTuple(); leftTuple != null; leftTuple=(LeftTuple)leftTuple.getLeftParentNext()) {
        if (i != 0) {
          stream.writeInt(PersisterEnums.REPEAT);
        }
        stream.writeInt(leftTuple.getLeftTupleSink().getId());
        stream.writeInt(leftTuple.getLastHandle().getId());
        writeLeftTuple(leftTuple,context);
      }
      stream.writeInt(PersisterEnums.END);
    }
  }
  writePropagationContexts(context);
  writeActivations(context);
  stream.writeInt(PersisterEnums.END);
}
