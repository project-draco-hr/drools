{
  getRepo().loadCategory("/").addCategory("testGetPrecedingVersionAndRestoreCat","ka");
  AssetItem asset=getRepo().loadGlobalArea().addAsset("testGetPrecedingVersionAndRestoreForShareableAsset","desc");
  asset.checkin("version0");
  AssetItem linkedAsset=getDefaultPackage().addAssetImportedFromGlobalArea(asset.getName());
  assertNotNull(asset.getPrecedingVersion());
  assertNotNull(linkedAsset.getPrecedingVersion());
  linkedAsset.addCategory("testGetPrecedingVersionAndRestoreCat");
  linkedAsset.updateContent("test content");
  linkedAsset.updateDescription("descr2");
  Thread.sleep(100);
  linkedAsset.checkin("boo");
  AssetItem predecessorRuleItem=(AssetItem)linkedAsset.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertNotNull(predecessorRuleItem.getVersionSnapshotUUID());
  assertFalse(predecessorRuleItem.getVersionSnapshotUUID().equals(asset.getUUID()));
  assertEquals(asset.getState().getName(),predecessorRuleItem.getState().getName());
  AssetItem loadedHistorical=getRepo().loadAssetByUUID(predecessorRuleItem.getVersionSnapshotUUID());
  assertTrue(loadedHistorical.isHistoricalVersion());
  assertFalse(asset.getVersionNumber() == loadedHistorical.getVersionNumber());
  linkedAsset.updateContent("new content");
  linkedAsset.checkin("two changes");
  predecessorRuleItem=(AssetItem)linkedAsset.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals(1,predecessorRuleItem.getCategories().size());
  CategoryItem cat=(CategoryItem)predecessorRuleItem.getCategories().get(0);
  assertEquals("testGetPrecedingVersionAndRestoreCat",cat.getName());
  assertEquals("test content",predecessorRuleItem.getContent());
  assertEquals(getRepo().loadGlobalArea().getName(),predecessorRuleItem.getPackageName());
  linkedAsset.updateContent("newer lhs");
  linkedAsset.checkin("another");
  predecessorRuleItem=(AssetItem)linkedAsset.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals("new content",predecessorRuleItem.getContent());
  predecessorRuleItem=(AssetItem)predecessorRuleItem.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals("test content",predecessorRuleItem.getContent());
  long oldVersionNumber=asset.getVersionNumber();
  AssetItem toRestore=getRepo().loadAssetByUUID(predecessorRuleItem.getVersionSnapshotUUID());
  getRepo().restoreHistoricalAsset(toRestore,linkedAsset,"cause I want to");
  AssetItem restored=getRepo().loadDefaultPackage().loadAsset("testGetPrecedingVersionAndRestoreForShareableAsset");
  assertEquals(predecessorRuleItem.getDescription(),restored.getDescription());
  assertEquals("cause I want to",restored.getCheckinComment());
  assertEquals(6,restored.getVersionNumber());
  assertFalse(oldVersionNumber == restored.getVersionNumber());
}
