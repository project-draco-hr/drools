{
  Node node=getRepo().getSession().getNode("/drools:repository/drools:package_area/globalArea/");
  Node assetNode=node.getNode("assets").addNode("testKurt","drools:assetNodeType");
  assetNode.setProperty("drools:packageName","one");
  assetNode.setProperty("drools:title","title");
  assetNode.setProperty("drools:format","format");
  assetNode.setProperty("drools:description","description");
  Calendar lastModified=Calendar.getInstance();
  assetNode.setProperty("drools:lastModified",lastModified);
  getRepo().getSession().save();
  assetNode.checkin();
  findAndPrintNodeName(assetNode);
  assetNode.checkout();
  assetNode.addMixin("mix:shareable");
  getRepo().getSession().save();
  assetNode.checkin();
  Workspace workspace=getRepo().getSession().getWorkspace();
  String srcPath="/drools:repository/drools:package_area/globalArea/assets/testKurt";
  String path="/drools:repository/drools:package_area/defaultPackage/assets/testKurt";
  workspace.clone(workspace.getName(),srcPath,path,false);
  findAndPrintNodeName(assetNode);
  String packageName=getDefaultPackage().getName();
  try {
    Node snaps=getRepo().getAreaNode("drools:packagesnapshot_area");
    if (!snaps.hasNode(packageName)) {
      snaps.addNode(packageName,"nt:folder");
      getRepo().save();
    }
    String source="/drools:repository/drools:package_area/defaultPackage";
    String newName="/drools:repository/drools:packagesnapshot_area/defaultPackage/SNAP";
    getRepo().getSession().getWorkspace().copy(source,newName);
  }
 catch (  Exception e) {
    fail();
  }
  findAndPrintNodeName(assetNode);
}
