{
  if (this.computeMaxs) {
    --this.stackSize;
    if (this.currentBlock != null) {
      this.currentBlock.maxStackSize=this.maxStackSize;
      addSuccessor(this.stackSize,dflt);
      for (int i=0; i < labels.length; ++i) {
        addSuccessor(this.stackSize,labels[i]);
      }
      this.currentBlock=null;
    }
  }
  final int source=this.code.length;
  this.code.putByte(Opcodes.TABLESWITCH);
  while (this.code.length % 4 != 0) {
    this.code.putByte(0);
  }
  dflt.put(this,this.code,source,true);
  this.code.putInt(min).putInt(max);
  for (int i=0; i < labels.length; ++i) {
    labels[i].put(this,this.code,source,true);
  }
}
