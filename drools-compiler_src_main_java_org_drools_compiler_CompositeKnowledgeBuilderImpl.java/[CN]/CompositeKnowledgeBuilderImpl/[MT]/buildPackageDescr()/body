{
  Map<String,CompositePackageDescr> packages=new HashMap<String,CompositePackageDescr>();
  try {
    List<ResourceDescr> resourcesByType=this.resourcesByType.remove(ResourceType.DRL);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.drlToPackageDescr(resourceDescr.resource));
      }
    }
    resourcesByType=this.resourcesByType.remove(ResourceType.DESCR);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.drlToPackageDescr(resourceDescr.resource));
      }
    }
    resourcesByType=this.resourcesByType.remove(ResourceType.DSLR);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.dslrToPackageDescr(resourceDescr.resource));
      }
    }
    resourcesByType=this.resourcesByType.remove(ResourceType.XDRL);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.xmlToPackageDescr(resourceDescr.resource));
      }
    }
    resourcesByType=this.resourcesByType.remove(ResourceType.BRL);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.brlToPackageDescr(resourceDescr.resource));
      }
    }
    resourcesByType=this.resourcesByType.remove(ResourceType.DTABLE);
    if (resourcesByType != null) {
      for (      ResourceDescr resourceDescr : resourcesByType) {
        registerPackageDescr(packages,resourceDescr.resource,pkgBuilder.decisionTableToPackageDescr(resourceDescr.resource,resourceDescr.configuration));
      }
    }
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new RuntimeException(e);
  }
  return packages.values();
}
