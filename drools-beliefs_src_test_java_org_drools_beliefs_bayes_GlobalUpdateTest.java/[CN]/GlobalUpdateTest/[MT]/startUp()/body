{
  int i=0;
  List<JunctionTreeSeparator> list=new ArrayList<JunctionTreeSeparator>();
  connectChildren(graph,n0,list,n1);
  connectChildren(graph,n1,list,n2,n5);
  connectChildren(graph,n2,list,n3,n4);
  connectChildren(graph,n5,list,n6);
  connectChildren(graph,n6,list,n7,n8);
  tree=new JunctionTree(graph,n0,new JunctionTreeClique[]{n0,n1,n2,n3,n4,n5,n6,n7,n8},list.toArray(new JunctionTreeSeparator[list.size()]));
  bayesInstance=new BayesInstance(tree);
  bayesInstance.setPassMessageListener(new PassMessageListener(){
    @Override public void beforeProjectAndAbsorb(    JunctionTreeClique sourceNode,    JunctionTreeSeparator sep,    JunctionTreeClique targetNode,    double[] oldSeparatorPotentials){
      messageResults.add(sourceNode.getId() + ":" + targetNode.getId());
    }
    @Override public void afterProject(    JunctionTreeClique sourceNode,    JunctionTreeSeparator sep,    JunctionTreeClique targetNode,    double[] oldSeparatorPotentials){
    }
    @Override public void afterAbsorb(    JunctionTreeClique sourceNode,    JunctionTreeSeparator sep,    JunctionTreeClique targetNode,    double[] oldSeparatorPotentials){
    }
  }
);
  bayesInstance.setGlobalUpdateListener(new GlobalUpdateListener(){
    @Override public void beforeGlobalUpdate(    CliqueState clique){
      globalUpdateResults.add("" + clique.getJunctionTreeClique().getId());
    }
    @Override public void afterGlobalUpdate(    CliqueState clique){
    }
  }
);
}
