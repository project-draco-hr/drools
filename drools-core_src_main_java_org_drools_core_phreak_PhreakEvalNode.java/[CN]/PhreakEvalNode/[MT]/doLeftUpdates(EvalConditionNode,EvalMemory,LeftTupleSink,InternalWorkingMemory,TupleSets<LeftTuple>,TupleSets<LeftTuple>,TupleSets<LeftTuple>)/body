{
  EvalCondition condition=evalNode.getCondition();
  for (LeftTuple leftTuple=srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {
    LeftTuple next=leftTuple.getStagedNext();
    boolean wasPropagated=leftTuple.getFirstChild() != null && leftTuple.getContextObject() != EVAL_LEFT_TUPLE_DELETED;
    boolean allowed=condition.isAllowed(leftTuple,wm,em.context);
    if (allowed) {
      leftTuple.setContextObject(null);
      if (wasPropagated) {
        LeftTuple childLeftTuple=leftTuple.getFirstChild();
        childLeftTuple.setPropagationContext(leftTuple.getPropagationContext());
        normalizeStagedTuples(stagedLeftTuples,childLeftTuple);
        trgLeftTuples.addUpdate(childLeftTuple);
      }
 else {
        trgLeftTuples.addInsert(sink.createLeftTuple(leftTuple,sink,leftTuple.getPropagationContext(),true));
      }
    }
 else {
      if (wasPropagated) {
        leftTuple.setContextObject(EVAL_LEFT_TUPLE_DELETED);
        LeftTuple childLeftTuple=leftTuple.getFirstChild();
        childLeftTuple.setPropagationContext(leftTuple.getPropagationContext());
        RuleNetworkEvaluator.unlinkAndDeleteChildLeftTuple(childLeftTuple,trgLeftTuples,stagedLeftTuples);
      }
    }
    leftTuple.clearStaged();
    leftTuple=next;
  }
}
