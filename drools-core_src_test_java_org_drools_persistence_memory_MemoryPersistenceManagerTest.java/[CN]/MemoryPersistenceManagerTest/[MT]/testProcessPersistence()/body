{
  MemoryPersisterManager manager=new MemoryPersisterManager();
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  Package pkg=new Package("org.drools.test");
  pkg.addProcess(getProcess());
  ruleBase.addPackage(pkg);
  StatefulSession session=ruleBase.newStatefulSession();
  Persister<StatefulSession> persister=manager.getSessionPersister(session);
  session.getWorkItemManager().registerWorkItemHandler("MyWork",new WorkItemHandler(){
    public void executeWorkItem(    WorkItem workItem,    WorkItemManager manager){
      MemoryPersistenceManagerTest.this.workItems.put(workItem.getProcessInstanceId(),workItem);
    }
    public void abortWorkItem(    WorkItem workItem,    WorkItemManager manager){
    }
  }
);
  ProcessInstance processInstance=(ProcessInstance)session.startProcess("org.drools.test.TestProcess");
  long processInstanceId=processInstance.getId();
  persister.setUniqueId(processInstanceId + "");
  persister.save();
  persister=manager.getSessionPersister(processInstanceId + "",ruleBase);
  session=persister.getObject();
  processInstance=(ProcessInstance)session.getProcessInstance(processInstanceId);
  assertEquals(ProcessInstance.STATE_ACTIVE,processInstance.getState());
  session.getWorkItemManager().completeWorkItem(workItems.get(processInstanceId).getId(),null);
  assertEquals(ProcessInstance.STATE_COMPLETED,processInstance.getState());
  persister.save();
  persister=manager.getSessionPersister(processInstanceId + "",ruleBase);
  session=persister.getObject();
  processInstance=(ProcessInstance)session.getProcessInstance(processInstanceId);
  assertNull(processInstance);
}
