{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST whenBlock_AST=null;
  AST tmp16_AST=null;
  tmp16_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp16_AST);
  match(WHEN);
  match(LCURLY);
{
    int _cnt20=0;
    _loop20:     do {
      if ((_tokenSet_4.member(LA(1)))) {
{
          if ((LA(1) == IDENT) && (LA(2) == ASSIGN)) {
            consistentAssignmentExpression();
            astFactory.addASTChild(currentAST,returnAST);
          }
 else           if ((_tokenSet_4.member(LA(1))) && (_tokenSet_5.member(LA(2)))) {
            inclusiveOrExpression();
            astFactory.addASTChild(currentAST,returnAST);
          }
 else {
            throw new NoViableAltException(LT(1),getFilename());
          }
        }
        match(SEMI);
      }
 else {
        if (_cnt20 >= 1) {
          break _loop20;
        }
 else {
          throw new NoViableAltException(LT(1),getFilename());
        }
      }
      _cnt20++;
    }
 while (true);
  }
  match(RCURLY);
  whenBlock_AST=(AST)currentAST.root;
  returnAST=whenBlock_AST;
}
