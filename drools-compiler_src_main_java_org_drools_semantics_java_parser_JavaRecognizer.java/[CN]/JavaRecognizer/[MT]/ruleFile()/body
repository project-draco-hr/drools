{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST ruleFile_AST=null;
{
switch (LA(1)) {
case LITERAL_package:
{
        packageDefinition();
        astFactory.addASTChild(currentAST,returnAST);
        break;
      }
case RULE_SET:
case LITERAL_import:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
{
_loop10: do {
if ((LA(1) == LITERAL_import)) {
  importDefinition();
  astFactory.addASTChild(currentAST,returnAST);
}
 else {
  break _loop10;
}
}
 while (true);
}
ruleSet();
astFactory.addASTChild(currentAST,returnAST);
ruleFile_AST=(AST)currentAST.root;
returnAST=ruleFile_AST;
}
