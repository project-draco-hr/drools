{
  final String drl1="rule \"test_0\"" + "when \n" + "  Person( )\n"+ "then \n"+ "end \n";
  final String drl2="rule \"test_1\"" + "when \n" + "  Cheese( )\n"+ "then \n"+ "end \n";
  final GuidedDecisionTree expected=new GuidedDecisionTree();
  expected.setTreeName("test");
  final TypeNode type=new TypeNodeImpl("Person");
  expected.setRoot(type);
  addModelField("Person","this","Person",DataType.TYPE_THIS);
  addModelField("Cheese","this","Cheese",DataType.TYPE_THIS);
  final GuidedDecisionTree model=GuidedDecisionTreeDRLPersistence.getInstance().unmarshal(drl1 + drl2,"test",dmo);
  assertNotNull(model);
  assertEquals(expected.getTreeName(),model.getTreeName());
  assertNotNull(model.getRoot());
  assertEquals(type.getClassName(),model.getRoot().getClassName());
  assertFalse(model.getRoot().isBound());
  assertEquals(0,model.getRoot().getChildren().size());
  assertEquals(1,model.getParserErrors().size());
  assertEquals("test_1",model.getParserErrors().get(0).getOriginalRuleName());
  assertEqualsIgnoreWhitespace(drl2,model.getParserErrors().get(0).getOriginalDrl());
  assertNotNull(model.getParserErrors().get(0).getMessages());
  assertEquals(1,model.getParserErrors().get(0).getMessages().size());
  assertTrue(model.getParserErrors().get(0).getMessages().get(0) instanceof AmbiguousRootParserMessage);
  final String drl3=GuidedDecisionTreeDRLPersistence.getInstance().marshal(model);
  assertEqualsIgnoreWhitespace(drl1 + drl2,drl3);
}
