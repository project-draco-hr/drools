{
  if (getCore() == null) {
    return null;
  }
  if (factory != null && factory instanceof StandaloneTraitFactory) {
    StandaloneTraitFactory stf=(StandaloneTraitFactory)factory;
    try {
      T x=(T)stf.don(getCore() instanceof TraitableBean ? ((TraitableBean)getCore()) : stf.makeTraitable(getCore(),getCore().getClass()),getTrait() != null ? getTrait() : Thing.class);
      if (setter != null) {
        setter.call(x);
      }
      return x;
    }
 catch (    LogicalTypeInconsistencyException e) {
      e.printStackTrace();
    }
  }
 else {
    throw new UnsupportedOperationException();
  }
  return null;
}
