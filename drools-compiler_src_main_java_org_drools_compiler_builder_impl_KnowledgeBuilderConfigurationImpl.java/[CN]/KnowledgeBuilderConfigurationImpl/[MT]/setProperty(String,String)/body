{
  name=name.trim();
  if (StringUtils.isEmpty(name)) {
    return;
  }
  if (name.equals(DefaultDialectOption.PROPERTY_NAME)) {
    setDefaultDialect(value);
  }
 else   if (name.startsWith(AccumulateFunctionOption.PROPERTY_NAME)) {
    addAccumulateFunction(name.substring(AccumulateFunctionOption.PROPERTY_NAME.length()),value);
  }
 else   if (name.startsWith(EvaluatorOption.PROPERTY_NAME)) {
    this.evaluatorRegistry.addEvaluatorDefinition(value);
  }
 else   if (name.equals(DumpDirOption.PROPERTY_NAME)) {
    buildDumpDirectory(value);
  }
 else   if (name.equals(DefaultPackageNameOption.PROPERTY_NAME)) {
    setDefaultPackageName(value);
  }
 else   if (name.equals(ProcessStringEscapesOption.PROPERTY_NAME)) {
    setProcessStringEscapes(Boolean.parseBoolean(value));
  }
 else   if (name.equals(ClassLoaderCacheOption.PROPERTY_NAME)) {
    setClassLoaderCacheEnabled(Boolean.parseBoolean(value));
  }
 else   if (name.startsWith(KBuilderSeverityOption.PROPERTY_NAME)) {
    String key=name.substring(name.lastIndexOf('.') + 1);
    this.severityMap.put(key,KBuilderSeverityOption.get(key,value).getSeverity());
  }
 else   if (name.equals(LanguageLevelOption.PROPERTY_NAME)) {
    setLanguageLevel(LanguageLevelOption.valueOf(value));
  }
}
