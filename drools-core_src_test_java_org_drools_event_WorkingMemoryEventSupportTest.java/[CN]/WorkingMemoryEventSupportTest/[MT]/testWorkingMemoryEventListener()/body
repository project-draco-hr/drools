{
  final RuleBase rb=RuleBaseFactory.newRuleBase();
  final WorkingMemory wm=rb.newWorkingMemory();
  final List wmList=new ArrayList();
  final WorkingMemoryEventListener workingMemoryListener=new WorkingMemoryEventListener(){
    public void objectAsserted(    ObjectAssertedEvent event){
      wmList.add(event);
    }
    public void objectModified(    ObjectModifiedEvent event){
      wmList.add(event);
    }
    public void objectRetracted(    ObjectRetractedEvent event){
      wmList.add(event);
    }
  }
;
  wm.addEventListener(workingMemoryListener);
  final Cheese stilton=new Cheese("stilton",15);
  final Cheese cheddar=new Cheese("cheddar",17);
  final FactHandle stiltonHandle=wm.assertObject(stilton);
  final ObjectAssertedEvent oae=(ObjectAssertedEvent)wmList.get(0);
  assertSame(stiltonHandle,oae.getFactHandle());
  wm.modifyObject(stiltonHandle,stilton);
  final ObjectModifiedEvent ome=(ObjectModifiedEvent)wmList.get(1);
  assertSame(stiltonHandle,ome.getFactHandle());
  wm.retractObject(stiltonHandle);
  final ObjectRetractedEvent ore=(ObjectRetractedEvent)wmList.get(2);
  assertSame(stiltonHandle,ore.getFactHandle());
  wm.assertObject(cheddar);
}
