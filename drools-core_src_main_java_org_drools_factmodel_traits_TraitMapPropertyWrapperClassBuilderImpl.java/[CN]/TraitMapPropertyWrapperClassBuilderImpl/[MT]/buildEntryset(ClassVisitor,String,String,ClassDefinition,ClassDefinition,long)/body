{
  String internalWrapper=BuildUtils.getInternalType(wrapperName);
  MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"entrySet","()Ljava/util/Set;","()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Object;>;>;",null);
  mv.visitCode();
  mv.visitTypeInsn(NEW,"java/util/HashSet");
  mv.visitInsn(DUP);
  mv.visitMethodInsn(INVOKESPECIAL,"java/util/HashSet","<init>","()V");
  mv.visitVarInsn(ASTORE,1);
  for (  FieldDefinition field : core.getFieldsDefinitions()) {
    mv.visitVarInsn(ALOAD,1);
    mv.visitLdcInsn(field.getName());
    TraitFactory.invokeExtractor(mv,wrapperName,trait,core,field);
    if (BuildUtils.isPrimitive(field.getTypeName())) {
      TraitFactory.valueOf(mv,field.getTypeName());
    }
    mv.visitMethodInsn(INVOKESTATIC,"org/drools/factmodel/traits/TraitProxy","buildEntry","(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Map$Entry;");
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Set","add","(Ljava/lang/Object;)Z");
    mv.visitInsn(POP);
  }
  mv.visitVarInsn(ALOAD,1);
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,internalWrapper,"map","Ljava/util/Map;");
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","entrySet","()Ljava/util/Set;");
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Set","addAll","(Ljava/util/Collection;)Z");
  mv.visitInsn(POP);
  mv.visitVarInsn(ALOAD,1);
  mv.visitInsn(ARETURN);
  mv.visitMaxs(core.getFieldsDefinitions().size() > 0 ? 4 : 2,2);
  mv.visitEnd();
}
