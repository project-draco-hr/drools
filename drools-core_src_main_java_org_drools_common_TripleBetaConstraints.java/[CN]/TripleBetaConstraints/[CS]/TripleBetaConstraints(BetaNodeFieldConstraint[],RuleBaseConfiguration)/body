{
  this.conf=conf;
  if (!conf.isIndexLeftBetaMemory() && !conf.isIndexRightBetaMemory()) {
    this.indexed0=false;
    this.indexed1=false;
    this.indexed2=false;
  }
 else {
    int depth=conf.getCompositeKeyDepth();
    final boolean i0=isIndexable(constraints[0]);
    final boolean i1=isIndexable(constraints[1]);
    final boolean i2=depth >= 3 && isIndexable(constraints[2]);
    if (depth >= 1 && i0) {
      this.indexed0=true;
    }
    if (i1) {
      if (depth >= 1 && !this.indexed0) {
        this.indexed0=true;
        swap(constraints,1,0);
      }
 else       if (depth >= 2) {
        this.indexed1=true;
      }
    }
    if (i2) {
      if (depth >= 1 && !this.indexed0) {
        this.indexed0=true;
        swap(constraints,2,0);
      }
 else       if (depth >= 2 && this.indexed0 && !this.indexed1) {
        this.indexed1=true;
        swap(constraints,2,1);
      }
 else       if (depth >= 3) {
        this.indexed2=true;
      }
    }
  }
  this.constraint0=constraints[0];
  this.context0=this.constraint0.getContextEntry();
  this.constraint1=constraints[1];
  this.context1=this.constraint1.getContextEntry();
  this.constraint2=constraints[2];
  this.context2=this.constraint2.getContextEntry();
}
