{
  super(stream);
  this.stream=this;
  this.ruleBase=ruleBase;
  this.sinks=sinks;
  this.handles=new HashMap<Integer,InternalFactHandle>();
  this.rightTuples=new HashMap<RightTupleKey,RightTuple>();
  this.terminalTupleMap=new HashMap<Integer,LeftTuple>();
  this.entryPoints=new HashMap<String,EntryPoint>();
  this.propagationContexts=new HashMap<Long,PropagationContext>();
  if (resolverStrategyFactory == null) {
    this.resolverStrategyFactory=new ObjectMarshallingStrategyStore((ObjectMarshallingStrategy[])env.get(EnvironmentName.OBJECT_MARSHALLING_STRATEGIES));
  }
 else {
    this.resolverStrategyFactory=resolverStrategyFactory;
  }
  this.marshalProcessInstances=marshalProcessInstances;
  this.marshalWorkItems=marshalWorkItems;
  this.env=env;
}
