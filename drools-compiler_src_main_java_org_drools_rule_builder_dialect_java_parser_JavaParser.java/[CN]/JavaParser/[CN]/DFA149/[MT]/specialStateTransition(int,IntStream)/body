{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA149_17=input.LA(1);
  int index149_17=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_17);
if (s >= 0) return s;
break;
case 1:
int LA149_18=input.LA(1);
int index149_18=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_18);
if (s >= 0) return s;
break;
case 2:
int LA149_19=input.LA(1);
int index149_19=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_19);
if (s >= 0) return s;
break;
case 3:
int LA149_20=input.LA(1);
int index149_20=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_20);
if (s >= 0) return s;
break;
case 4:
int LA149_21=input.LA(1);
int index149_21=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_21);
if (s >= 0) return s;
break;
case 5:
int LA149_22=input.LA(1);
int index149_22=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_22);
if (s >= 0) return s;
break;
case 6:
int LA149_23=input.LA(1);
int index149_23=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_23);
if (s >= 0) return s;
break;
case 7:
int LA149_24=input.LA(1);
int index149_24=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_24);
if (s >= 0) return s;
break;
case 8:
int LA149_25=input.LA(1);
int index149_25=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_25);
if (s >= 0) return s;
break;
case 9:
int LA149_26=input.LA(1);
int index149_26=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_26);
if (s >= 0) return s;
break;
case 10:
int LA149_27=input.LA(1);
int index149_27=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_27);
if (s >= 0) return s;
break;
case 11:
int LA149_28=input.LA(1);
int index149_28=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_28);
if (s >= 0) return s;
break;
case 12:
int LA149_29=input.LA(1);
int index149_29=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_29);
if (s >= 0) return s;
break;
case 13:
int LA149_30=input.LA(1);
int index149_30=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_30);
if (s >= 0) return s;
break;
case 14:
int LA149_31=input.LA(1);
int index149_31=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_31);
if (s >= 0) return s;
break;
case 15:
int LA149_32=input.LA(1);
int index149_32=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_32);
if (s >= 0) return s;
break;
case 16:
int LA149_33=input.LA(1);
int index149_33=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_33);
if (s >= 0) return s;
break;
case 17:
int LA149_34=input.LA(1);
int index149_34=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_34);
if (s >= 0) return s;
break;
case 18:
int LA149_35=input.LA(1);
int index149_35=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_35);
if (s >= 0) return s;
break;
case 19:
int LA149_36=input.LA(1);
int index149_36=input.index();
input.rewind();
s=-1;
if ((synpred226_Java())) {
s=37;
}
 else if ((true)) {
s=4;
}
input.seek(index149_36);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),149,_s,input);
error(nvae);
throw nvae;
}
