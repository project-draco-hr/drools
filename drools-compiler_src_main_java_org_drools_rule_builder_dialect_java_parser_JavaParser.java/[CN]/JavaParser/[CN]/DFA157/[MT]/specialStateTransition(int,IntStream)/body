{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA157_34=input.LA(1);
  int index157_34=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_34);
if (s >= 0) return s;
break;
case 1:
int LA157_35=input.LA(1);
int index157_35=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_35);
if (s >= 0) return s;
break;
case 2:
int LA157_36=input.LA(1);
int index157_36=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_36);
if (s >= 0) return s;
break;
case 3:
int LA157_37=input.LA(1);
int index157_37=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_37);
if (s >= 0) return s;
break;
case 4:
int LA157_38=input.LA(1);
int index157_38=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_38);
if (s >= 0) return s;
break;
case 5:
int LA157_39=input.LA(1);
int index157_39=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_39);
if (s >= 0) return s;
break;
case 6:
int LA157_40=input.LA(1);
int index157_40=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_40);
if (s >= 0) return s;
break;
case 7:
int LA157_41=input.LA(1);
int index157_41=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_41);
if (s >= 0) return s;
break;
case 8:
int LA157_42=input.LA(1);
int index157_42=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_42);
if (s >= 0) return s;
break;
case 9:
int LA157_43=input.LA(1);
int index157_43=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_43);
if (s >= 0) return s;
break;
case 10:
int LA157_44=input.LA(1);
int index157_44=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_44);
if (s >= 0) return s;
break;
case 11:
int LA157_45=input.LA(1);
int index157_45=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_45);
if (s >= 0) return s;
break;
case 12:
int LA157_46=input.LA(1);
int index157_46=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_46);
if (s >= 0) return s;
break;
case 13:
int LA157_47=input.LA(1);
int index157_47=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_47);
if (s >= 0) return s;
break;
case 14:
int LA157_48=input.LA(1);
int index157_48=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_48);
if (s >= 0) return s;
break;
case 15:
int LA157_49=input.LA(1);
int index157_49=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_49);
if (s >= 0) return s;
break;
case 16:
int LA157_50=input.LA(1);
int index157_50=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_50);
if (s >= 0) return s;
break;
case 17:
int LA157_51=input.LA(1);
int index157_51=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_51);
if (s >= 0) return s;
break;
case 18:
int LA157_52=input.LA(1);
int index157_52=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_52);
if (s >= 0) return s;
break;
case 19:
int LA157_53=input.LA(1);
int index157_53=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_53);
if (s >= 0) return s;
break;
case 20:
int LA157_54=input.LA(1);
int index157_54=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_54);
if (s >= 0) return s;
break;
case 21:
int LA157_55=input.LA(1);
int index157_55=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_55);
if (s >= 0) return s;
break;
case 22:
int LA157_57=input.LA(1);
int index157_57=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_57);
if (s >= 0) return s;
break;
case 23:
int LA157_58=input.LA(1);
int index157_58=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_58);
if (s >= 0) return s;
break;
case 24:
int LA157_59=input.LA(1);
int index157_59=input.index();
input.rewind();
s=-1;
if ((synpred241_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index157_59);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),157,_s,input);
error(nvae);
throw nvae;
}
