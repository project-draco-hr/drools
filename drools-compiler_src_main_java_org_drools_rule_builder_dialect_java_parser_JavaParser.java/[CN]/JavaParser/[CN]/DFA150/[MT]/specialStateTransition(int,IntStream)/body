{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA150_19=input.LA(1);
  int index150_19=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_19);
if (s >= 0) return s;
break;
case 1:
int LA150_20=input.LA(1);
int index150_20=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_20);
if (s >= 0) return s;
break;
case 2:
int LA150_21=input.LA(1);
int index150_21=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_21);
if (s >= 0) return s;
break;
case 3:
int LA150_22=input.LA(1);
int index150_22=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_22);
if (s >= 0) return s;
break;
case 4:
int LA150_23=input.LA(1);
int index150_23=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_23);
if (s >= 0) return s;
break;
case 5:
int LA150_24=input.LA(1);
int index150_24=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_24);
if (s >= 0) return s;
break;
case 6:
int LA150_25=input.LA(1);
int index150_25=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_25);
if (s >= 0) return s;
break;
case 7:
int LA150_26=input.LA(1);
int index150_26=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_26);
if (s >= 0) return s;
break;
case 8:
int LA150_27=input.LA(1);
int index150_27=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_27);
if (s >= 0) return s;
break;
case 9:
int LA150_28=input.LA(1);
int index150_28=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_28);
if (s >= 0) return s;
break;
case 10:
int LA150_29=input.LA(1);
int index150_29=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_29);
if (s >= 0) return s;
break;
case 11:
int LA150_30=input.LA(1);
int index150_30=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_30);
if (s >= 0) return s;
break;
case 12:
int LA150_31=input.LA(1);
int index150_31=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_31);
if (s >= 0) return s;
break;
case 13:
int LA150_32=input.LA(1);
int index150_32=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_32);
if (s >= 0) return s;
break;
case 14:
int LA150_33=input.LA(1);
int index150_33=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_33);
if (s >= 0) return s;
break;
case 15:
int LA150_34=input.LA(1);
int index150_34=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_34);
if (s >= 0) return s;
break;
case 16:
int LA150_35=input.LA(1);
int index150_35=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_35);
if (s >= 0) return s;
break;
case 17:
int LA150_36=input.LA(1);
int index150_36=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_36);
if (s >= 0) return s;
break;
case 18:
int LA150_37=input.LA(1);
int index150_37=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_37);
if (s >= 0) return s;
break;
case 19:
int LA150_38=input.LA(1);
int index150_38=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_38);
if (s >= 0) return s;
break;
case 20:
int LA150_39=input.LA(1);
int index150_39=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_39);
if (s >= 0) return s;
break;
case 21:
int LA150_40=input.LA(1);
int index150_40=input.index();
input.rewind();
s=-1;
if ((synpred227_Java())) {
s=41;
}
 else if ((true)) {
s=4;
}
input.seek(index150_40);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),150,_s,input);
error(nvae);
throw nvae;
}
