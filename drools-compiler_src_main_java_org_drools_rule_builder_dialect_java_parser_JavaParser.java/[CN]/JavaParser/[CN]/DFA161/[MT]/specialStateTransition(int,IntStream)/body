{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA161_32=input.LA(1);
  int index161_32=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_32);
if (s >= 0) return s;
break;
case 1:
int LA161_33=input.LA(1);
int index161_33=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_33);
if (s >= 0) return s;
break;
case 2:
int LA161_34=input.LA(1);
int index161_34=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_34);
if (s >= 0) return s;
break;
case 3:
int LA161_35=input.LA(1);
int index161_35=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_35);
if (s >= 0) return s;
break;
case 4:
int LA161_36=input.LA(1);
int index161_36=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_36);
if (s >= 0) return s;
break;
case 5:
int LA161_37=input.LA(1);
int index161_37=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_37);
if (s >= 0) return s;
break;
case 6:
int LA161_38=input.LA(1);
int index161_38=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_38);
if (s >= 0) return s;
break;
case 7:
int LA161_39=input.LA(1);
int index161_39=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_39);
if (s >= 0) return s;
break;
case 8:
int LA161_40=input.LA(1);
int index161_40=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_40);
if (s >= 0) return s;
break;
case 9:
int LA161_41=input.LA(1);
int index161_41=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_41);
if (s >= 0) return s;
break;
case 10:
int LA161_42=input.LA(1);
int index161_42=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_42);
if (s >= 0) return s;
break;
case 11:
int LA161_43=input.LA(1);
int index161_43=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_43);
if (s >= 0) return s;
break;
case 12:
int LA161_44=input.LA(1);
int index161_44=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_44);
if (s >= 0) return s;
break;
case 13:
int LA161_45=input.LA(1);
int index161_45=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_45);
if (s >= 0) return s;
break;
case 14:
int LA161_46=input.LA(1);
int index161_46=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_46);
if (s >= 0) return s;
break;
case 15:
int LA161_47=input.LA(1);
int index161_47=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_47);
if (s >= 0) return s;
break;
case 16:
int LA161_48=input.LA(1);
int index161_48=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_48);
if (s >= 0) return s;
break;
case 17:
int LA161_49=input.LA(1);
int index161_49=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_49);
if (s >= 0) return s;
break;
case 18:
int LA161_50=input.LA(1);
int index161_50=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_50);
if (s >= 0) return s;
break;
case 19:
int LA161_51=input.LA(1);
int index161_51=input.index();
input.rewind();
s=-1;
if ((synpred250_Java())) {
s=52;
}
 else if ((true)) {
s=1;
}
input.seek(index161_51);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),161,_s,input);
error(nvae);
throw nvae;
}
