{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA159_20=input.LA(1);
  int index159_20=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_20);
if (s >= 0) return s;
break;
case 1:
int LA159_21=input.LA(1);
int index159_21=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_21);
if (s >= 0) return s;
break;
case 2:
int LA159_22=input.LA(1);
int index159_22=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_22);
if (s >= 0) return s;
break;
case 3:
int LA159_23=input.LA(1);
int index159_23=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_23);
if (s >= 0) return s;
break;
case 4:
int LA159_24=input.LA(1);
int index159_24=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_24);
if (s >= 0) return s;
break;
case 5:
int LA159_25=input.LA(1);
int index159_25=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_25);
if (s >= 0) return s;
break;
case 6:
int LA159_26=input.LA(1);
int index159_26=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_26);
if (s >= 0) return s;
break;
case 7:
int LA159_27=input.LA(1);
int index159_27=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_27);
if (s >= 0) return s;
break;
case 8:
int LA159_28=input.LA(1);
int index159_28=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_28);
if (s >= 0) return s;
break;
case 9:
int LA159_29=input.LA(1);
int index159_29=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_29);
if (s >= 0) return s;
break;
case 10:
int LA159_30=input.LA(1);
int index159_30=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_30);
if (s >= 0) return s;
break;
case 11:
int LA159_31=input.LA(1);
int index159_31=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_31);
if (s >= 0) return s;
break;
case 12:
int LA159_32=input.LA(1);
int index159_32=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_32);
if (s >= 0) return s;
break;
case 13:
int LA159_33=input.LA(1);
int index159_33=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_33);
if (s >= 0) return s;
break;
case 14:
int LA159_34=input.LA(1);
int index159_34=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_34);
if (s >= 0) return s;
break;
case 15:
int LA159_35=input.LA(1);
int index159_35=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_35);
if (s >= 0) return s;
break;
case 16:
int LA159_36=input.LA(1);
int index159_36=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_36);
if (s >= 0) return s;
break;
case 17:
int LA159_37=input.LA(1);
int index159_37=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_37);
if (s >= 0) return s;
break;
case 18:
int LA159_38=input.LA(1);
int index159_38=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_38);
if (s >= 0) return s;
break;
case 19:
int LA159_39=input.LA(1);
int index159_39=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_39);
if (s >= 0) return s;
break;
case 20:
int LA159_40=input.LA(1);
int index159_40=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_40);
if (s >= 0) return s;
break;
case 21:
int LA159_41=input.LA(1);
int index159_41=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_41);
if (s >= 0) return s;
break;
case 22:
int LA159_42=input.LA(1);
int index159_42=input.index();
input.rewind();
s=-1;
if ((synpred238_Java())) {
s=43;
}
 else if ((true)) {
s=4;
}
input.seek(index159_42);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),159,_s,input);
error(nvae);
throw nvae;
}
