{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA159_34=input.LA(1);
  int index159_34=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_34);
if (s >= 0) return s;
break;
case 1:
int LA159_35=input.LA(1);
int index159_35=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_35);
if (s >= 0) return s;
break;
case 2:
int LA159_36=input.LA(1);
int index159_36=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_36);
if (s >= 0) return s;
break;
case 3:
int LA159_37=input.LA(1);
int index159_37=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_37);
if (s >= 0) return s;
break;
case 4:
int LA159_38=input.LA(1);
int index159_38=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_38);
if (s >= 0) return s;
break;
case 5:
int LA159_39=input.LA(1);
int index159_39=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_39);
if (s >= 0) return s;
break;
case 6:
int LA159_40=input.LA(1);
int index159_40=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_40);
if (s >= 0) return s;
break;
case 7:
int LA159_41=input.LA(1);
int index159_41=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_41);
if (s >= 0) return s;
break;
case 8:
int LA159_42=input.LA(1);
int index159_42=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_42);
if (s >= 0) return s;
break;
case 9:
int LA159_43=input.LA(1);
int index159_43=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_43);
if (s >= 0) return s;
break;
case 10:
int LA159_44=input.LA(1);
int index159_44=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_44);
if (s >= 0) return s;
break;
case 11:
int LA159_45=input.LA(1);
int index159_45=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_45);
if (s >= 0) return s;
break;
case 12:
int LA159_46=input.LA(1);
int index159_46=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_46);
if (s >= 0) return s;
break;
case 13:
int LA159_47=input.LA(1);
int index159_47=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_47);
if (s >= 0) return s;
break;
case 14:
int LA159_48=input.LA(1);
int index159_48=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_48);
if (s >= 0) return s;
break;
case 15:
int LA159_49=input.LA(1);
int index159_49=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_49);
if (s >= 0) return s;
break;
case 16:
int LA159_50=input.LA(1);
int index159_50=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_50);
if (s >= 0) return s;
break;
case 17:
int LA159_51=input.LA(1);
int index159_51=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_51);
if (s >= 0) return s;
break;
case 18:
int LA159_52=input.LA(1);
int index159_52=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_52);
if (s >= 0) return s;
break;
case 19:
int LA159_53=input.LA(1);
int index159_53=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_53);
if (s >= 0) return s;
break;
case 20:
int LA159_54=input.LA(1);
int index159_54=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_54);
if (s >= 0) return s;
break;
case 21:
int LA159_55=input.LA(1);
int index159_55=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_55);
if (s >= 0) return s;
break;
case 22:
int LA159_56=input.LA(1);
int index159_56=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_56);
if (s >= 0) return s;
break;
case 23:
int LA159_58=input.LA(1);
int index159_58=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_58);
if (s >= 0) return s;
break;
case 24:
int LA159_59=input.LA(1);
int index159_59=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_59);
if (s >= 0) return s;
break;
case 25:
int LA159_60=input.LA(1);
int index159_60=input.index();
input.rewind();
s=-1;
if ((synpred249_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index159_60);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),159,_s,input);
error(nvae);
throw nvae;
}
