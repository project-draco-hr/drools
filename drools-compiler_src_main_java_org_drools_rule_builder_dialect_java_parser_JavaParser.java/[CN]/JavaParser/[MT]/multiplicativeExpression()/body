{
  int multiplicativeExpression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,114)) {
      return;
    }
{
      pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression3489);
      unaryExpression();
      _fsp--;
      if (failed)       return;
      loop143:       do {
        int alt143=2;
        int LA143_0=input.LA(1);
        if ((LA143_0 == 29 || (LA143_0 >= 106 && LA143_0 <= 107))) {
          alt143=1;
        }
switch (alt143) {
case 1:
{
            if (input.LA(1) == 29 || (input.LA(1) >= 106 && input.LA(1) <= 107)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_multiplicativeExpression3493);
              throw mse;
            }
            pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression3507);
            unaryExpression();
            _fsp--;
            if (failed)             return;
          }
        break;
default :
      break loop143;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,114,multiplicativeExpression_StartIndex);
}
}
return;
}
