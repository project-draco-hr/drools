{
  int unaryExpression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,116)) {
      return;
    }
    int alt146=5;
switch (input.LA(1)) {
case 105:
{
        alt146=1;
      }
    break;
case 106:
{
    alt146=2;
  }
break;
case 109:
{
alt146=3;
}
break;
case 110:
{
alt146=4;
}
break;
case Identifier:
case FloatingPointLiteral:
case CharacterLiteral:
case StringLiteral:
case HexLiteral:
case OctalLiteral:
case DecimalLiteral:
case 33:
case 40:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 64:
case 65:
case 68:
case 69:
case 70:
case 111:
case 112:
case 113:
case 114:
{
alt146=5;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("858:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' primary | '--' primary | unaryExpressionNotPlusMinus );",146,0,input);
throw nvae;
}
switch (alt146) {
case 1:
{
match(input,105,FOLLOW_105_in_unaryExpression3625);
if (failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpression3627);
unaryExpression();
_fsp--;
if (failed) return;
}
break;
case 2:
{
match(input,106,FOLLOW_106_in_unaryExpression3635);
if (failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpression3637);
unaryExpression();
_fsp--;
if (failed) return;
}
break;
case 3:
{
match(input,109,FOLLOW_109_in_unaryExpression3647);
if (failed) return;
pushFollow(FOLLOW_primary_in_unaryExpression3649);
primary();
_fsp--;
if (failed) return;
}
break;
case 4:
{
match(input,110,FOLLOW_110_in_unaryExpression3659);
if (failed) return;
pushFollow(FOLLOW_primary_in_unaryExpression3661);
primary();
_fsp--;
if (failed) return;
}
break;
case 5:
{
pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression3671);
unaryExpressionNotPlusMinus();
_fsp--;
if (failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,116,unaryExpression_StartIndex);
}
}
return;
}
