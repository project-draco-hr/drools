{
  int selector_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,137)) {
      return;
    }
    int alt189=5;
    int LA189_0=input.LA(1);
    if ((LA189_0 == 28)) {
switch (input.LA(2)) {
case Identifier:
{
          alt189=1;
        }
      break;
case 119:
{
      alt189=2;
    }
  break;
case 64:
{
  alt189=3;
}
break;
case 120:
{
alt189=4;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",189,1,input);
throw nvae;
}
}
 else if ((LA189_0 == 41)) {
alt189=5;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",189,0,input);
throw nvae;
}
switch (alt189) {
case 1:
{
match(input,28,FOLLOW_28_in_selector6215);
if (state.failed) return;
match(input,Identifier,FOLLOW_Identifier_in_selector6217);
if (state.failed) return;
int alt187=2;
alt187=dfa187.predict(input);
switch (alt187) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector6220);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
case 2:
{
match(input,28,FOLLOW_28_in_selector6232);
if (state.failed) return;
match(input,119,FOLLOW_119_in_selector6234);
if (state.failed) return;
}
break;
case 3:
{
match(input,28,FOLLOW_28_in_selector6244);
if (state.failed) return;
match(input,64,FOLLOW_64_in_selector6246);
if (state.failed) return;
pushFollow(FOLLOW_superSuffix_in_selector6248);
superSuffix();
state._fsp--;
if (state.failed) return;
}
break;
case 4:
{
match(input,28,FOLLOW_28_in_selector6258);
if (state.failed) return;
match(input,120,FOLLOW_120_in_selector6260);
if (state.failed) return;
int alt188=2;
int LA188_0=input.LA(1);
if ((LA188_0 == 33)) {
alt188=1;
}
switch (alt188) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector6263);
nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector6267);
innerCreator();
state._fsp--;
if (state.failed) return;
}
break;
case 5:
{
match(input,41,FOLLOW_41_in_selector6277);
if (state.failed) return;
pushFollow(FOLLOW_expression_in_selector6279);
expression();
state._fsp--;
if (state.failed) return;
match(input,42,FOLLOW_42_in_selector6281);
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,137,selector_StartIndex);
}
}
return;
}
