{
  int selector_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,130)) {
      return;
    }
    int alt177=5;
    int LA177_0=input.LA(1);
    if ((LA177_0 == 28)) {
switch (input.LA(2)) {
case Identifier:
{
          alt177=1;
        }
      break;
case 114:
{
      alt177=2;
    }
  break;
case 64:
{
  alt177=3;
}
break;
case 115:
{
alt177=4;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",177,1,input);
throw nvae;
}
}
 else if ((LA177_0 == 41)) {
alt177=5;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",177,0,input);
throw nvae;
}
switch (alt177) {
case 1:
{
match(input,28,FOLLOW_28_in_selector4356);
if (state.failed) return;
match(input,Identifier,FOLLOW_Identifier_in_selector4358);
if (state.failed) return;
int alt175=2;
alt175=dfa175.predict(input);
switch (alt175) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector4361);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
case 2:
{
match(input,28,FOLLOW_28_in_selector4370);
if (state.failed) return;
match(input,114,FOLLOW_114_in_selector4372);
if (state.failed) return;
}
break;
case 3:
{
match(input,28,FOLLOW_28_in_selector4379);
if (state.failed) return;
match(input,64,FOLLOW_64_in_selector4381);
if (state.failed) return;
pushFollow(FOLLOW_superSuffix_in_selector4383);
superSuffix();
state._fsp--;
if (state.failed) return;
}
break;
case 4:
{
match(input,28,FOLLOW_28_in_selector4390);
if (state.failed) return;
match(input,115,FOLLOW_115_in_selector4392);
if (state.failed) return;
int alt176=2;
int LA176_0=input.LA(1);
if ((LA176_0 == 33)) {
alt176=1;
}
switch (alt176) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector4395);
nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector4399);
innerCreator();
state._fsp--;
if (state.failed) return;
}
break;
case 5:
{
match(input,41,FOLLOW_41_in_selector4406);
if (state.failed) return;
pushFollow(FOLLOW_expression_in_selector4408);
expression();
state._fsp--;
if (state.failed) return;
match(input,42,FOLLOW_42_in_selector4410);
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,130,selector_StartIndex);
}
}
return;
}
