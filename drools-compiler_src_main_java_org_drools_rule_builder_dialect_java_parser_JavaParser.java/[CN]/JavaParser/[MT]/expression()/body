{
  expression_return retval=new expression_return();
  retval.start=input.LT(1);
  int expression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,100)) {
      return retval;
    }
{
      pushFollow(FOLLOW_conditionalExpression_in_expression3070);
      conditionalExpression();
      _fsp--;
      if (failed)       return retval;
      int alt130=2;
switch (input.LA(1)) {
case 44:
{
          int LA130_1=input.LA(2);
          if ((synpred187())) {
            alt130=1;
          }
        }
      break;
case 90:
{
      int LA130_2=input.LA(2);
      if ((synpred187())) {
        alt130=1;
      }
    }
  break;
case 91:
{
  int LA130_3=input.LA(2);
  if ((synpred187())) {
    alt130=1;
  }
}
break;
case 92:
{
int LA130_4=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 93:
{
int LA130_5=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 94:
{
int LA130_6=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 95:
{
int LA130_7=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 96:
{
int LA130_8=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 97:
{
int LA130_9=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 33:
{
int LA130_10=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
case 35:
{
int LA130_11=input.LA(2);
if ((synpred187())) {
alt130=1;
}
}
break;
}
switch (alt130) {
case 1:
{
pushFollow(FOLLOW_assignmentOperator_in_expression3073);
assignmentOperator();
_fsp--;
if (failed) return retval;
pushFollow(FOLLOW_expression_in_expression3075);
expression();
_fsp--;
if (failed) return retval;
}
break;
}
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,100,expression_StartIndex);
}
}
return retval;
}
