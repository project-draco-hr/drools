{
  int expression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,99)) {
      return;
    }
{
      pushFollow(FOLLOW_conditionalExpression_in_expression2835);
      conditionalExpression();
      _fsp--;
      if (failed)       return;
      int alt128=2;
switch (input.LA(1)) {
case 44:
{
          int LA128_1=input.LA(2);
          if ((synpred184())) {
            alt128=1;
          }
        }
      break;
case 89:
{
      int LA128_2=input.LA(2);
      if ((synpred184())) {
        alt128=1;
      }
    }
  break;
case 90:
{
  int LA128_3=input.LA(2);
  if ((synpred184())) {
    alt128=1;
  }
}
break;
case 91:
{
int LA128_4=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 92:
{
int LA128_5=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 93:
{
int LA128_6=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 94:
{
int LA128_7=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 95:
{
int LA128_8=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 96:
{
int LA128_9=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 33:
{
int LA128_10=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
case 35:
{
int LA128_11=input.LA(2);
if ((synpred184())) {
alt128=1;
}
}
break;
}
switch (alt128) {
case 1:
{
pushFollow(FOLLOW_assignmentOperator_in_expression2838);
assignmentOperator();
_fsp--;
if (failed) return;
pushFollow(FOLLOW_expression_in_expression2840);
expression();
_fsp--;
if (failed) return;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,99,expression_StartIndex);
}
}
return;
}
