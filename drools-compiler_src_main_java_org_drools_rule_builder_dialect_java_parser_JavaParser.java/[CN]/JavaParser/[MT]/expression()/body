{
  JavaParser.expression_return retval=new JavaParser.expression_return();
  retval.start=input.LT(1);
  int expression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,106)) {
      return retval;
    }
{
      pushFollow(FOLLOW_conditionalExpression_in_expression4561);
      conditionalExpression();
      state._fsp--;
      if (state.failed)       return retval;
      int alt140=2;
      alt140=dfa140.predict(input);
switch (alt140) {
case 1:
{
          pushFollow(FOLLOW_assignmentOperator_in_expression4564);
          assignmentOperator();
          state._fsp--;
          if (state.failed)           return retval;
          pushFollow(FOLLOW_expression_in_expression4566);
          expression();
          state._fsp--;
          if (state.failed)           return retval;
        }
      break;
  }
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
  memoize(input,106,expression_StartIndex);
}
}
return retval;
}
