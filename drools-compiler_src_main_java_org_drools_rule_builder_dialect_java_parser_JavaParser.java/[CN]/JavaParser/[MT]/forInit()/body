{
  int forInit_StartIndex=input.index();
  JavaParser.variableModifier_return variableModifier10=null;
  JavaParser.type_return type11=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,99)) {
      return;
    }
    int alt137=2;
    alt137=dfa137.predict(input);
switch (alt137) {
case 1:
{
        loop136:         do {
          int alt136=2;
          int LA136_0=input.LA(1);
          if ((LA136_0 == 49 || LA136_0 == 71)) {
            alt136=1;
          }
switch (alt136) {
case 1:
{
              pushFollow(FOLLOW_variableModifier_in_forInit4518);
              variableModifier10=variableModifier();
              state._fsp--;
              if (state.failed)               return;
              if (state.backtracking == 0) {
                ((VarDecl_scope)VarDecl_stack.peek()).descr.updateStart(((CommonToken)(variableModifier10 != null ? ((Token)variableModifier10.start) : null)).getStartIndex() - 1);
                ((VarDecl_scope)VarDecl_stack.peek()).descr.addModifier((variableModifier10 != null ? input.toString(variableModifier10.start,variableModifier10.stop) : null));
              }
            }
          break;
default :
        break loop136;
    }
  }
 while (true);
  pushFollow(FOLLOW_type_in_forInit4553);
  type11=type();
  state._fsp--;
  if (state.failed)   return;
  if (state.backtracking == 0) {
    ((VarDecl_scope)VarDecl_stack.peek()).descr.updateStart(((CommonToken)(type11 != null ? ((Token)type11.start) : null)).getStartIndex() - 1);
    ((VarDecl_scope)VarDecl_stack.peek()).descr.setType((type11 != null ? input.toString(type11.start,type11.stop) : null));
    ((VarDecl_scope)VarDecl_stack.peek()).descr.setEnd(((CommonToken)(type11 != null ? ((Token)type11.stop) : null)).getStopIndex());
  }
  pushFollow(FOLLOW_variableDeclarators_in_forInit4573);
  variableDeclarators();
  state._fsp--;
  if (state.failed)   return;
}
break;
case 2:
{
pushFollow(FOLLOW_expressionList_in_forInit4581);
expressionList();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,99,forInit_StartIndex);
}
}
return;
}
