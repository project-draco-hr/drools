{
  int forInit_StartIndex=input.index();
  this.localVariableLevel++;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,98)) {
      return;
    }
    int alt132=2;
    alt132=dfa132.predict(input);
switch (alt132) {
case 1:
{
        loop131:         do {
          int alt131=2;
          int LA131_0=input.LA(1);
          if ((LA131_0 == 49 || LA131_0 == 71)) {
            alt131=1;
          }
switch (alt131) {
case 1:
{
              pushFollow(FOLLOW_variableModifier_in_forInit4207);
              variableModifier();
              state._fsp--;
              if (state.failed)               return;
            }
          break;
default :
        break loop131;
    }
  }
 while (true);
  pushFollow(FOLLOW_type_in_forInit4210);
  type();
  state._fsp--;
  if (state.failed)   return;
  pushFollow(FOLLOW_variableDeclarators_in_forInit4212);
  variableDeclarators();
  state._fsp--;
  if (state.failed)   return;
}
break;
case 2:
{
pushFollow(FOLLOW_expressionList_in_forInit4220);
expressionList();
state._fsp--;
if (state.failed) return;
}
break;
}
if (state.backtracking == 0) {
this.localVariableLevel--;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,98,forInit_StartIndex);
}
}
return;
}
