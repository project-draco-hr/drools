{
  int forInit_StartIndex=input.index();
  this.localVariableLevel++;
  try {
    if (backtracking > 0 && alreadyParsedRule(input,92)) {
      return;
    }
    int alt125=2;
switch (input.LA(1)) {
case 49:
case 71:
{
        alt125=1;
      }
    break;
case Identifier:
{
switch (input.LA(2)) {
case 28:
{
        int LA125_23=input.LA(3);
        if ((synpred181())) {
          alt125=1;
        }
 else         if ((true)) {
          alt125=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return;
          }
          NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,23,input);
          throw nvae;
        }
      }
    break;
case 41:
{
    int LA125_24=input.LA(3);
    if ((synpred181())) {
      alt125=1;
    }
 else     if ((true)) {
      alt125=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,24,input);
      throw nvae;
    }
  }
break;
case EOF:
case 25:
case 29:
case 34:
case 35:
case 36:
case 44:
case 63:
case 65:
case 89:
case 90:
case 91:
case 92:
case 93:
case 94:
case 95:
case 96:
case 97:
case 98:
case 99:
case 100:
case 101:
case 102:
case 103:
case 104:
case 105:
case 106:
case 107:
case 108:
case 109:
{
alt125=2;
}
break;
case 33:
{
int LA125_29=input.LA(3);
if ((synpred181())) {
alt125=1;
}
 else if ((true)) {
alt125=2;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,29,input);
throw nvae;
}
}
break;
case Identifier:
{
alt125=1;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,3,input);
throw nvae;
}
}
break;
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
{
switch (input.LA(2)) {
case 41:
{
int LA125_52=input.LA(3);
if ((synpred181())) {
alt125=1;
}
 else if ((true)) {
alt125=2;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,52,input);
throw nvae;
}
}
break;
case Identifier:
{
alt125=1;
}
break;
case 28:
{
alt125=2;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,4,input);
throw nvae;
}
}
break;
case FloatingPointLiteral:
case CharacterLiteral:
case StringLiteral:
case HexLiteral:
case OctalLiteral:
case DecimalLiteral:
case 33:
case 40:
case 64:
case 65:
case 68:
case 69:
case 70:
case 104:
case 105:
case 108:
case 109:
case 110:
case 111:
case 112:
case 113:
{
alt125=2;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("718:1: forInit : ( ( variableModifier )* type variableDeclarators | expressionList );",125,0,input);
throw nvae;
}
switch (alt125) {
case 1:
{
loop124: do {
int alt124=2;
int LA124_0=input.LA(1);
if ((LA124_0 == 49 || LA124_0 == 71)) {
alt124=1;
}
switch (alt124) {
case 1:
{
pushFollow(FOLLOW_variableModifier_in_forInit2851);
variableModifier();
_fsp--;
if (failed) return;
}
break;
default :
break loop124;
}
}
 while (true);
pushFollow(FOLLOW_type_in_forInit2854);
type();
_fsp--;
if (failed) return;
pushFollow(FOLLOW_variableDeclarators_in_forInit2856);
variableDeclarators();
_fsp--;
if (failed) return;
}
break;
case 2:
{
pushFollow(FOLLOW_expressionList_in_forInit2861);
expressionList();
_fsp--;
if (failed) return;
}
break;
}
if (backtracking == 0) {
this.localVariableLevel--;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,92,forInit_StartIndex);
}
}
return;
}
