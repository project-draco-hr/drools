{
  int methodDeclaratorRest_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,31)) {
      return;
    }
{
      pushFollow(FOLLOW_formalParameters_in_methodDeclaratorRest1010);
      formalParameters();
      state._fsp--;
      if (state.failed)       return;
      loop43:       do {
        int alt43=2;
        int LA43_0=input.LA(1);
        if ((LA43_0 == 41)) {
          alt43=1;
        }
switch (alt43) {
case 1:
{
            match(input,41,FOLLOW_41_in_methodDeclaratorRest1013);
            if (state.failed)             return;
            match(input,42,FOLLOW_42_in_methodDeclaratorRest1015);
            if (state.failed)             return;
          }
        break;
default :
      break loop43;
  }
}
 while (true);
int alt44=2;
int LA44_0=input.LA(1);
if ((LA44_0 == 43)) {
  alt44=1;
}
switch (alt44) {
case 1:
{
    match(input,43,FOLLOW_43_in_methodDeclaratorRest1028);
    if (state.failed)     return;
    pushFollow(FOLLOW_qualifiedNameList_in_methodDeclaratorRest1030);
    qualifiedNameList();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
int alt45=2;
int LA45_0=input.LA(1);
if ((LA45_0 == 37)) {
alt45=1;
}
 else if ((LA45_0 == 25)) {
alt45=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",45,0,input);
throw nvae;
}
switch (alt45) {
case 1:
{
pushFollow(FOLLOW_methodBody_in_methodDeclaratorRest1046);
methodBody();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
match(input,25,FOLLOW_25_in_methodDeclaratorRest1060);
if (state.failed) return;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,31,methodDeclaratorRest_StartIndex);
}
}
return;
}
