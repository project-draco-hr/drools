{
  int modifier_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,46)) {
      return;
    }
    int alt64=12;
    alt64=dfa64.predict(input);
switch (alt64) {
case 1:
{
        pushFollow(FOLLOW_annotation_in_modifier1573);
        annotation();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,45,FOLLOW_45_in_modifier1583);
    if (state.failed)     return;
  }
break;
case 3:
{
match(input,46,FOLLOW_46_in_modifier1593);
if (state.failed) return;
}
break;
case 4:
{
match(input,47,FOLLOW_47_in_modifier1603);
if (state.failed) return;
}
break;
case 5:
{
match(input,27,FOLLOW_27_in_modifier1613);
if (state.failed) return;
}
break;
case 6:
{
match(input,48,FOLLOW_48_in_modifier1623);
if (state.failed) return;
}
break;
case 7:
{
match(input,49,FOLLOW_49_in_modifier1633);
if (state.failed) return;
}
break;
case 8:
{
match(input,50,FOLLOW_50_in_modifier1643);
if (state.failed) return;
}
break;
case 9:
{
match(input,51,FOLLOW_51_in_modifier1653);
if (state.failed) return;
}
break;
case 10:
{
match(input,52,FOLLOW_52_in_modifier1663);
if (state.failed) return;
}
break;
case 11:
{
match(input,53,FOLLOW_53_in_modifier1673);
if (state.failed) return;
}
break;
case 12:
{
match(input,54,FOLLOW_54_in_modifier1683);
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,46,modifier_StartIndex);
}
}
return;
}
