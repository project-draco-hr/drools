{
  int typeDeclaration_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,4)) {
      return;
    }
    int alt8=2;
    alt8=dfa8.predict(input);
switch (alt8) {
case 1:
{
        pushFollow(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration183);
        classOrInterfaceDeclaration();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,25,FOLLOW_25_in_typeDeclaration193);
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,4,typeDeclaration_StartIndex);
}
}
return;
}
