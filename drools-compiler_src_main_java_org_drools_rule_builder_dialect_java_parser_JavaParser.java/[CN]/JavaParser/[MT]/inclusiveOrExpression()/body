{
  int inclusiveOrExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,111)) {
      return;
    }
{
      pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4805);
      exclusiveOrExpression();
      state._fsp--;
      if (state.failed)       return;
      loop145:       do {
        int alt145=2;
        alt145=dfa145.predict(input);
switch (alt145) {
case 1:
{
            match(input,105,FOLLOW_105_in_inclusiveOrExpression4809);
            if (state.failed)             return;
            pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4811);
            exclusiveOrExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop145;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,111,inclusiveOrExpression_StartIndex);
}
}
return;
}
