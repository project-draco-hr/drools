{
  int enumDeclaration_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,11)) {
      return;
    }
{
      match(input,ENUM,FOLLOW_ENUM_in_enumDeclaration342);
      if (failed)       return;
      match(input,Identifier,FOLLOW_Identifier_in_enumDeclaration344);
      if (failed)       return;
      int alt18=2;
      int LA18_0=input.LA(1);
      if ((LA18_0 == 32)) {
        alt18=1;
      }
switch (alt18) {
case 1:
{
          match(input,32,FOLLOW_32_in_enumDeclaration347);
          if (failed)           return;
          pushFollow(FOLLOW_typeList_in_enumDeclaration349);
          typeList();
          _fsp--;
          if (failed)           return;
        }
      break;
  }
  pushFollow(FOLLOW_enumBody_in_enumDeclaration353);
  enumBody();
  _fsp--;
  if (failed)   return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
  memoize(input,11,enumDeclaration_StartIndex);
}
}
return;
}
