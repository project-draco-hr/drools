{
  int ifStatement_StartIndex=input.index();
  Token s=null;
  Token y=null;
  JavaParser.statement_return x=null;
  JavaParser.statement_return z=null;
  JavaIfBlockDescr id=null;
  JavaElseBlockDescr ed=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,85)) {
      return;
    }
{
      s=(Token)match(input,83,FOLLOW_83_in_ifStatement3231);
      if (state.failed)       return;
      pushFollow(FOLLOW_parExpression_in_ifStatement3233);
      parExpression();
      state._fsp--;
      if (state.failed)       return;
      if (state.backtracking == 0) {
        this.localVariableLevel++;
        id=new JavaIfBlockDescr();
        id.setStart(((CommonToken)s).getStartIndex());
        pushContainerBlockDescr(id,true);
      }
      pushFollow(FOLLOW_statement_in_ifStatement3251);
      x=statement();
      state._fsp--;
      if (state.failed)       return;
      if (state.backtracking == 0) {
        this.localVariableLevel--;
        id.setTextStart(((CommonToken)(x != null ? ((Token)x.start) : null)).getStartIndex());
        id.setEnd(((CommonToken)(x != null ? ((Token)x.stop) : null)).getStopIndex());
        popContainerBlockDescr();
      }
      loop113:       do {
        int alt113=2;
        alt113=dfa113.predict(input);
switch (alt113) {
case 1:
{
            y=(Token)match(input,84,FOLLOW_84_in_ifStatement3278);
            if (state.failed)             return;
            int alt112=2;
            alt112=dfa112.predict(input);
switch (alt112) {
case 1:
{
                match(input,83,FOLLOW_83_in_ifStatement3282);
                if (state.failed)                 return;
                pushFollow(FOLLOW_parExpression_in_ifStatement3284);
                parExpression();
                state._fsp--;
                if (state.failed)                 return;
              }
            break;
        }
        if (state.backtracking == 0) {
          this.localVariableLevel++;
          ed=new JavaElseBlockDescr();
          ed.setStart(((CommonToken)y).getStartIndex());
          pushContainerBlockDescr(ed,true);
        }
        pushFollow(FOLLOW_statement_in_ifStatement3315);
        z=statement();
        state._fsp--;
        if (state.failed)         return;
        if (state.backtracking == 0) {
          this.localVariableLevel--;
          ed.setTextStart(((CommonToken)(z != null ? ((Token)z.start) : null)).getStartIndex());
          ed.setEnd(((CommonToken)(z != null ? ((Token)z.stop) : null)).getStopIndex());
          popContainerBlockDescr();
        }
      }
    break;
default :
  break loop113;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,85,ifStatement_StartIndex);
}
}
return;
}
