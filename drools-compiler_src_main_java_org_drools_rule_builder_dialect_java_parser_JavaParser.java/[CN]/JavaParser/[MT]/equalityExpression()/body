{
  int equalityExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,109)) {
      return;
    }
{
      pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression3497);
      instanceOfExpression();
      state._fsp--;
      if (state.failed)       return;
      loop139:       do {
        int alt139=2;
        alt139=dfa139.predict(input);
switch (alt139) {
case 1:
{
            if ((input.LA(1) >= 104 && input.LA(1) <= 105)) {
              input.consume();
              state.errorRecovery=false;
              state.failed=false;
            }
 else {
              if (state.backtracking > 0) {
                state.failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              throw mse;
            }
            pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression3509);
            instanceOfExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop139;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,109,equalityExpression_StartIndex);
}
}
return;
}
