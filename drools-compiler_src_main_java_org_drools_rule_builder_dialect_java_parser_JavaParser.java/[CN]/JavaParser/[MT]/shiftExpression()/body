{
  int shiftExpression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,112)) {
      return;
    }
{
      pushFollow(FOLLOW_additiveExpression_in_shiftExpression3492);
      additiveExpression();
      _fsp--;
      if (failed)       return;
      loop142:       do {
        int alt142=2;
        int LA142_0=input.LA(1);
        if ((LA142_0 == 33)) {
          int LA142_1=input.LA(2);
          if ((LA142_1 == 33)) {
            int LA142_27=input.LA(3);
            if ((synpred212())) {
              alt142=1;
            }
          }
        }
 else         if ((LA142_0 == 35)) {
          int LA142_2=input.LA(2);
          if ((LA142_2 == 35)) {
            int LA142_48=input.LA(3);
            if ((synpred212())) {
              alt142=1;
            }
          }
        }
switch (alt142) {
case 1:
{
            pushFollow(FOLLOW_shiftOp_in_shiftExpression3496);
            shiftOp();
            _fsp--;
            if (failed)             return;
            pushFollow(FOLLOW_additiveExpression_in_shiftExpression3498);
            additiveExpression();
            _fsp--;
            if (failed)             return;
          }
        break;
default :
      break loop142;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,112,shiftExpression_StartIndex);
}
}
return;
}
