{
  int interfaceMethodDeclaratorRest_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,33)) {
      return;
    }
{
      pushFollow(FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest1149);
      formalParameters();
      state._fsp--;
      if (state.failed)       return;
      loop48:       do {
        int alt48=2;
        int LA48_0=input.LA(1);
        if ((LA48_0 == 41)) {
          alt48=1;
        }
switch (alt48) {
case 1:
{
            match(input,41,FOLLOW_41_in_interfaceMethodDeclaratorRest1152);
            if (state.failed)             return;
            match(input,42,FOLLOW_42_in_interfaceMethodDeclaratorRest1154);
            if (state.failed)             return;
          }
        break;
default :
      break loop48;
  }
}
 while (true);
int alt49=2;
int LA49_0=input.LA(1);
if ((LA49_0 == 43)) {
  alt49=1;
}
switch (alt49) {
case 1:
{
    match(input,43,FOLLOW_43_in_interfaceMethodDeclaratorRest1159);
    if (state.failed)     return;
    pushFollow(FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest1161);
    qualifiedNameList();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
match(input,25,FOLLOW_25_in_interfaceMethodDeclaratorRest1165);
if (state.failed) return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,33,interfaceMethodDeclaratorRest_StartIndex);
}
}
return;
}
