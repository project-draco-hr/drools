{
  int unaryExpressionNotPlusMinus_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,117)) {
      return;
    }
    int alt149=4;
switch (input.LA(1)) {
case 111:
{
        alt149=1;
      }
    break;
case 112:
{
    alt149=2;
  }
break;
case 65:
{
switch (input.LA(2)) {
case Identifier:
{
    int LA149_17=input.LA(3);
    if ((synpred226())) {
      alt149=3;
    }
 else     if ((true)) {
      alt149=4;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,17,input);
      throw nvae;
    }
  }
break;
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
{
int LA149_18=input.LA(3);
if ((synpred226())) {
  alt149=3;
}
 else if ((true)) {
  alt149=4;
}
 else {
  if (backtracking > 0) {
    failed=true;
    return;
  }
  NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,18,input);
  throw nvae;
}
}
break;
case 105:
{
int LA149_19=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,19,input);
throw nvae;
}
}
break;
case 106:
{
int LA149_20=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,20,input);
throw nvae;
}
}
break;
case 109:
{
int LA149_21=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,21,input);
throw nvae;
}
}
break;
case 110:
{
int LA149_22=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,22,input);
throw nvae;
}
}
break;
case 111:
{
int LA149_23=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,23,input);
throw nvae;
}
}
break;
case 112:
{
int LA149_24=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,24,input);
throw nvae;
}
}
break;
case 65:
{
int LA149_25=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,25,input);
throw nvae;
}
}
break;
case 33:
{
int LA149_26=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,26,input);
throw nvae;
}
}
break;
case 113:
{
int LA149_27=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,27,input);
throw nvae;
}
}
break;
case 64:
{
int LA149_28=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,28,input);
throw nvae;
}
}
break;
case HexLiteral:
case OctalLiteral:
case DecimalLiteral:
{
int LA149_29=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,29,input);
throw nvae;
}
}
break;
case FloatingPointLiteral:
{
int LA149_30=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,30,input);
throw nvae;
}
}
break;
case CharacterLiteral:
{
int LA149_31=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,31,input);
throw nvae;
}
}
break;
case StringLiteral:
{
int LA149_32=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,32,input);
throw nvae;
}
}
break;
case 69:
case 70:
{
int LA149_33=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,33,input);
throw nvae;
}
}
break;
case 68:
{
int LA149_34=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,34,input);
throw nvae;
}
}
break;
case 114:
{
int LA149_35=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,35,input);
throw nvae;
}
}
break;
case 40:
{
int LA149_36=input.LA(3);
if ((synpred226())) {
alt149=3;
}
 else if ((true)) {
alt149=4;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,36,input);
throw nvae;
}
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,3,input);
throw nvae;
}
}
break;
case Identifier:
case FloatingPointLiteral:
case CharacterLiteral:
case StringLiteral:
case HexLiteral:
case OctalLiteral:
case DecimalLiteral:
case 33:
case 40:
case 55:
case 56:
case 57:
case 58:
case 59:
case 60:
case 61:
case 62:
case 64:
case 68:
case 69:
case 70:
case 113:
case 114:
{
alt149=4;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("866:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );",149,0,input);
throw nvae;
}
switch (alt149) {
case 1:
{
match(input,111,FOLLOW_111_in_unaryExpressionNotPlusMinus3690);
if (failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus3692);
unaryExpression();
_fsp--;
if (failed) return;
}
break;
case 2:
{
match(input,112,FOLLOW_112_in_unaryExpressionNotPlusMinus3701);
if (failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus3703);
unaryExpression();
_fsp--;
if (failed) return;
}
break;
case 3:
{
pushFollow(FOLLOW_castExpression_in_unaryExpressionNotPlusMinus3713);
castExpression();
_fsp--;
if (failed) return;
}
break;
case 4:
{
pushFollow(FOLLOW_primary_in_unaryExpressionNotPlusMinus3723);
primary();
_fsp--;
if (failed) return;
loop147: do {
int alt147=2;
int LA147_0=input.LA(1);
if ((LA147_0 == 28 || LA147_0 == 41)) {
alt147=1;
}
switch (alt147) {
case 1:
{
pushFollow(FOLLOW_selector_in_unaryExpressionNotPlusMinus3725);
selector();
_fsp--;
if (failed) return;
}
break;
default :
break loop147;
}
}
 while (true);
int alt148=2;
int LA148_0=input.LA(1);
if (((LA148_0 >= 109 && LA148_0 <= 110))) {
alt148=1;
}
switch (alt148) {
case 1:
{
if ((input.LA(1) >= 109 && input.LA(1) <= 110)) {
input.consume();
errorRecovery=false;
failed=false;
}
 else {
if (backtracking > 0) {
failed=true;
return;
}
MismatchedSetException mse=new MismatchedSetException(null,input);
recoverFromMismatchedSet(input,mse,FOLLOW_set_in_unaryExpressionNotPlusMinus3728);
throw mse;
}
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,117,unaryExpressionNotPlusMinus_StartIndex);
}
}
return;
}
