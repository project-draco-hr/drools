{
  int relationalExpression_StartIndex=input.index();
  try {
    if (backtracking > 0 && alreadyParsedRule(input,110)) {
      return;
    }
{
      pushFollow(FOLLOW_shiftExpression_in_relationalExpression3437);
      shiftExpression();
      _fsp--;
      if (failed)       return;
      loop140:       do {
        int alt140=2;
        int LA140_0=input.LA(1);
        if ((LA140_0 == 33)) {
          int LA140_23=input.LA(2);
          if ((LA140_23 == Identifier || (LA140_23 >= FloatingPointLiteral && LA140_23 <= DecimalLiteral) || LA140_23 == 40 || LA140_23 == 44 || (LA140_23 >= 55 && LA140_23 <= 62) || (LA140_23 >= 64 && LA140_23 <= 65) || (LA140_23 >= 68 && LA140_23 <= 70) || (LA140_23 >= 105 && LA140_23 <= 106) || (LA140_23 >= 109 && LA140_23 <= 114))) {
            alt140=1;
          }
 else           if ((LA140_23 == 33)) {
            int LA140_28=input.LA(3);
            if ((synpred208())) {
              alt140=1;
            }
          }
        }
 else         if ((LA140_0 == 35)) {
          int LA140_24=input.LA(2);
          if ((LA140_24 == Identifier || (LA140_24 >= FloatingPointLiteral && LA140_24 <= DecimalLiteral) || LA140_24 == 33 || LA140_24 == 40 || LA140_24 == 44 || (LA140_24 >= 55 && LA140_24 <= 62) || (LA140_24 >= 64 && LA140_24 <= 65) || (LA140_24 >= 68 && LA140_24 <= 70) || (LA140_24 >= 105 && LA140_24 <= 106) || (LA140_24 >= 109 && LA140_24 <= 114))) {
            alt140=1;
          }
        }
switch (alt140) {
case 1:
{
            pushFollow(FOLLOW_relationalOp_in_relationalExpression3441);
            relationalOp();
            _fsp--;
            if (failed)             return;
            pushFollow(FOLLOW_shiftExpression_in_relationalExpression3443);
            shiftExpression();
            _fsp--;
            if (failed)             return;
          }
        break;
default :
      break loop140;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,110,relationalExpression_StartIndex);
}
}
return;
}
