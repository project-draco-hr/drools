{
  int relationalExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,111)) {
      return;
    }
{
      pushFollow(FOLLOW_shiftExpression_in_relationalExpression3551);
      shiftExpression();
      state._fsp--;
      if (state.failed)       return;
      loop141:       do {
        int alt141=2;
        alt141=dfa141.predict(input);
switch (alt141) {
case 1:
{
            pushFollow(FOLLOW_relationalOp_in_relationalExpression3555);
            relationalOp();
            state._fsp--;
            if (state.failed)             return;
            pushFollow(FOLLOW_shiftExpression_in_relationalExpression3557);
            shiftExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop141;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,111,relationalExpression_StartIndex);
}
}
return;
}
