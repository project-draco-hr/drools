{
  int classOrInterfaceDeclaration_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,5)) {
      return;
    }
{
      loop9:       do {
        int alt9=2;
        alt9=dfa9.predict(input);
switch (alt9) {
case 1:
{
            pushFollow(FOLLOW_modifier_in_classOrInterfaceDeclaration210);
            modifier();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop9;
  }
}
 while (true);
int alt10=2;
int LA10_0=input.LA(1);
if ((LA10_0 == ENUM || LA10_0 == 30)) {
  alt10=1;
}
 else if ((LA10_0 == 39 || LA10_0 == 71)) {
  alt10=2;
}
 else {
  if (state.backtracking > 0) {
    state.failed=true;
    return;
  }
  NoViableAltException nvae=new NoViableAltException("",10,0,input);
  throw nvae;
}
switch (alt10) {
case 1:
{
    pushFollow(FOLLOW_classDeclaration_in_classOrInterfaceDeclaration214);
    classDeclaration();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 2:
{
pushFollow(FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration218);
interfaceDeclaration();
state._fsp--;
if (state.failed) return;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,5,classOrInterfaceDeclaration_StartIndex);
}
}
return;
}
