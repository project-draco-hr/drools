{
  int castExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,124)) {
      return;
    }
    int alt161=2;
    alt161=dfa161.predict(input);
switch (alt161) {
case 1:
{
        match(input,65,FOLLOW_65_in_castExpression5296);
        if (state.failed)         return;
        pushFollow(FOLLOW_primitiveType_in_castExpression5298);
        primitiveType();
        state._fsp--;
        if (state.failed)         return;
        match(input,66,FOLLOW_66_in_castExpression5300);
        if (state.failed)         return;
        pushFollow(FOLLOW_unaryExpression_in_castExpression5302);
        unaryExpression();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,65,FOLLOW_65_in_castExpression5311);
    if (state.failed)     return;
    int alt160=2;
    alt160=dfa160.predict(input);
switch (alt160) {
case 1:
{
        pushFollow(FOLLOW_type_in_castExpression5314);
        type();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_expression_in_castExpression5318);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
match(input,66,FOLLOW_66_in_castExpression5321);
if (state.failed) return;
pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_castExpression5323);
unaryExpressionNotPlusMinus();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,124,castExpression_StartIndex);
}
}
return;
}
