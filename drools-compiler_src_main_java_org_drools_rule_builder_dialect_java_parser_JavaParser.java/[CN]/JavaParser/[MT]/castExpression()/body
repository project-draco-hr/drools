{
  int castExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,118)) {
      return;
    }
    int alt151=2;
    alt151=dfa151.predict(input);
switch (alt151) {
case 1:
{
        match(input,65,FOLLOW_65_in_castExpression3751);
        if (state.failed)         return;
        pushFollow(FOLLOW_primitiveType_in_castExpression3753);
        primitiveType();
        state._fsp--;
        if (state.failed)         return;
        match(input,66,FOLLOW_66_in_castExpression3755);
        if (state.failed)         return;
        pushFollow(FOLLOW_unaryExpression_in_castExpression3757);
        unaryExpression();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,65,FOLLOW_65_in_castExpression3766);
    if (state.failed)     return;
    int alt150=2;
    alt150=dfa150.predict(input);
switch (alt150) {
case 1:
{
        pushFollow(FOLLOW_type_in_castExpression3769);
        type();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_expression_in_castExpression3773);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
match(input,66,FOLLOW_66_in_castExpression3776);
if (state.failed) return;
pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_castExpression3778);
unaryExpressionNotPlusMinus();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,118,castExpression_StartIndex);
}
}
return;
}
