{
  int modifyStatement_StartIndex=input.index();
  Token s=null;
  Token c=null;
  expression_return e=null;
  parExpression_return parExpression3=null;
  JavaModifyBlockDescr d=null;
  try {
    if (backtracking > 0 && alreadyParsedRule(input,84)) {
      return;
    }
{
      s=(Token)input.LT(1);
      match(input,87,FOLLOW_87_in_modifyStatement2675);
      if (failed)       return;
      pushFollow(FOLLOW_parExpression_in_modifyStatement2677);
      parExpression3=parExpression();
      _fsp--;
      if (failed)       return;
      if (backtracking == 0) {
        d=new JavaModifyBlockDescr(input.toString(parExpression3.start,parExpression3.stop));
        d.setStart(((CommonToken)s).getStartIndex());
        this.modifyBlocks.add(d);
      }
      match(input,37,FOLLOW_37_in_modifyStatement2684);
      if (failed)       return;
      int alt115=2;
      int LA115_0=input.LA(1);
      if ((LA115_0 == Identifier || (LA115_0 >= FloatingPointLiteral && LA115_0 <= DecimalLiteral) || LA115_0 == 33 || LA115_0 == 40 || (LA115_0 >= 55 && LA115_0 <= 62) || (LA115_0 >= 64 && LA115_0 <= 65) || (LA115_0 >= 68 && LA115_0 <= 70) || (LA115_0 >= 105 && LA115_0 <= 106) || (LA115_0 >= 109 && LA115_0 <= 114))) {
        alt115=1;
      }
switch (alt115) {
case 1:
{
          pushFollow(FOLLOW_expression_in_modifyStatement2692);
          e=expression();
          _fsp--;
          if (failed)           return;
          if (backtracking == 0) {
            d.getExpressions().add(input.toString(e.start,e.stop));
          }
          loop114:           do {
            int alt114=2;
            int LA114_0=input.LA(1);
            if ((LA114_0 == 34)) {
              alt114=1;
            }
switch (alt114) {
case 1:
{
                match(input,34,FOLLOW_34_in_modifyStatement2705);
                if (failed)                 return;
                pushFollow(FOLLOW_expression_in_modifyStatement2709);
                e=expression();
                _fsp--;
                if (failed)                 return;
                if (backtracking == 0) {
                  d.getExpressions().add(input.toString(e.start,e.stop));
                }
              }
            break;
default :
          break loop114;
      }
    }
 while (true);
  }
break;
}
c=(Token)input.LT(1);
match(input,38,FOLLOW_38_in_modifyStatement2728);
if (failed) return;
if (backtracking == 0) {
d.setEnd(((CommonToken)c).getStopIndex());
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (backtracking > 0) {
memoize(input,84,modifyStatement_StartIndex);
}
}
return;
}
