{
  int shiftOp_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,114)) {
      return;
    }
{
      int alt143=3;
      int LA143_0=input.LA(1);
      if ((LA143_0 == 33)) {
        alt143=1;
      }
 else       if ((LA143_0 == 35)) {
        int LA143_2=input.LA(2);
        if ((LA143_2 == 35)) {
          int LA143_3=input.LA(3);
          if ((synpred215_Java())) {
            alt143=2;
          }
 else           if ((true)) {
            alt143=3;
          }
 else {
            if (state.backtracking > 0) {
              state.failed=true;
              return;
            }
            NoViableAltException nvae=new NoViableAltException("",143,3,input);
            throw nvae;
          }
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          NoViableAltException nvae=new NoViableAltException("",143,2,input);
          throw nvae;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",143,0,input);
        throw nvae;
      }
switch (alt143) {
case 1:
{
          match(input,33,FOLLOW_33_in_shiftOp3586);
          if (state.failed)           return;
          match(input,33,FOLLOW_33_in_shiftOp3588);
          if (state.failed)           return;
        }
      break;
case 2:
{
      match(input,35,FOLLOW_35_in_shiftOp3592);
      if (state.failed)       return;
      match(input,35,FOLLOW_35_in_shiftOp3594);
      if (state.failed)       return;
      match(input,35,FOLLOW_35_in_shiftOp3596);
      if (state.failed)       return;
    }
  break;
case 3:
{
  match(input,35,FOLLOW_35_in_shiftOp3600);
  if (state.failed)   return;
  match(input,35,FOLLOW_35_in_shiftOp3602);
  if (state.failed)   return;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,114,shiftOp_StartIndex);
}
}
return;
}
