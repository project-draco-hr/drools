{
  int epStatement_StartIndex=input.index();
  Token s=null;
  Token id=null;
  Token c=null;
  JavaInterfacePointsDescr d=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,85)) {
      return;
    }
{
      int alt116=2;
      int LA116_0=input.LA(1);
      if ((LA116_0 == 88)) {
        alt116=1;
      }
 else       if ((LA116_0 == 89)) {
        alt116=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",116,0,input);
        throw nvae;
      }
switch (alt116) {
case 1:
{
          s=(Token)match(input,88,FOLLOW_88_in_epStatement2778);
          if (state.failed)           return;
          match(input,41,FOLLOW_41_in_epStatement2780);
          if (state.failed)           return;
          id=(Token)match(input,StringLiteral,FOLLOW_StringLiteral_in_epStatement2784);
          if (state.failed)           return;
          c=(Token)match(input,42,FOLLOW_42_in_epStatement2788);
          if (state.failed)           return;
          if (state.backtracking == 0) {
            d=new JavaInterfacePointsDescr((id != null ? id.getText() : null));
            d.setType(JavaBlockDescr.BlockType.EXIT);
            d.setStart(((CommonToken)s).getStartIndex());
            d.setEnd(((CommonToken)c).getStopIndex());
            this.blocks.add(d);
          }
        }
      break;
case 2:
{
      s=(Token)match(input,89,FOLLOW_89_in_epStatement2814);
      if (state.failed)       return;
      match(input,41,FOLLOW_41_in_epStatement2816);
      if (state.failed)       return;
      id=(Token)match(input,StringLiteral,FOLLOW_StringLiteral_in_epStatement2820);
      if (state.failed)       return;
      c=(Token)match(input,42,FOLLOW_42_in_epStatement2824);
      if (state.failed)       return;
      if (state.backtracking == 0) {
        d=new JavaInterfacePointsDescr((id != null ? id.getText() : null));
        d.setType(JavaBlockDescr.BlockType.ENTRY);
        d.setStart(((CommonToken)s).getStartIndex());
        d.setEnd(((CommonToken)c).getStopIndex());
        this.blocks.add(d);
      }
    }
  break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,85,epStatement_StartIndex);
}
}
return;
}
