{
  String str="import org.drools.compiler.integrationtests.MultithreadTest.Bean\n" + "\n" + "rule \"R\"\n"+ "when\n"+ "    $a : Bean( seed != 1 )\n"+ "then\n"+ "end";
  final KieSession ksession=new KieHelper().addContent(str,ResourceType.DRL).build().newKieSession();
  Executor executor=Executors.newCachedThreadPool(new ThreadFactory(){
    public Thread newThread(    Runnable r){
      Thread t=new Thread(r);
      t.setDaemon(true);
      return t;
    }
  }
);
  Callable<Boolean>[] tasks=new Callable[threadCount];
  for (int i=0; i < threadCount; i++) {
    tasks[i]=getTask(objectCount,ksession);
  }
  CompletionService<Boolean> ecs=new ExecutorCompletionService<Boolean>(executor);
  for (  Callable<Boolean> task : tasks) {
    ecs.submit(task);
  }
  int successCounter=0;
  for (int i=0; i < threadCount; i++) {
    try {
      if (ecs.take().get()) {
        successCounter++;
      }
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  assertEquals(threadCount,successCounter);
  ksession.dispose();
}
