{
  super(id,context.getPartitionId(),context.getRuleBase().getConfiguration().isMultithreadEvaluation(),leftInput,rightInput,sourceBinder,behaviors);
  this.resultsBinder=resultsBinder;
  this.resultConstraints=resultConstraints;
  this.collect=collect;
  this.unwrapRightObject=unwrapRight;
  this.tupleMemoryEnabled=context.isTupleMemoryEnabled();
  List<Declaration> declrs=new ArrayList<Declaration>();
  int maxIndex=0;
  for (  BetaNodeFieldConstraint constraint : getConstraints()) {
    for (    Declaration declr : constraint.getRequiredDeclarations()) {
      if (declr.getPattern().getOffset() > maxIndex) {
        maxIndex=declr.getPattern().getOffset();
      }
      declrs.add(declr);
    }
  }
  requiredPatterns=new Pattern[maxIndex + 1];
  for (  Declaration declr : declrs) {
    requiredPatterns[declr.getPattern().getOffset()]=declr.getPattern();
  }
}
