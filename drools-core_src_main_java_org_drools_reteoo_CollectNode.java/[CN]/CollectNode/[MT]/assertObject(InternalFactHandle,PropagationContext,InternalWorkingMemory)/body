{
  final CollectMemory memory=(CollectMemory)workingMemory.getNodeMemory(this);
  final RightTuple rightTuple=new RightTuple(factHandle,this);
  if (!behavior.assertRightTuple(memory.betaMemory.getBehaviorContext(),rightTuple,workingMemory)) {
    rightTuple.unlinkFromRightParent();
    return;
  }
  memory.betaMemory.getRightTupleMemory().add(rightTuple);
  if (!this.tupleMemoryEnabled) {
    return;
  }
  this.constraints.updateFromFactHandle(memory.betaMemory.getContext(),workingMemory,factHandle);
  for (LeftTuple leftTuple=memory.betaMemory.getLeftTupleMemory().getFirst(rightTuple); leftTuple != null; leftTuple=(LeftTuple)leftTuple.getNext()) {
    if (this.constraints.isAllowedCachedRight(memory.betaMemory.getContext(),leftTuple)) {
      final CollectContext colctx=(CollectContext)memory.betaMemory.getCreatedHandles().get(leftTuple);
      addMatch(leftTuple,rightTuple,colctx);
      evaluateResultConstraints(ActivitySource.RIGHT,leftTuple,context,workingMemory,memory,colctx);
    }
  }
  this.constraints.resetFactHandle(memory.betaMemory.getContext());
}
