{
  final CollectMemory memory=(CollectMemory)workingMemory.getNodeMemory(this);
  final InternalFactHandle origin=(InternalFactHandle)context.getFactHandleOrigin();
  if (context.getType() == PropagationContext.EXPIRATION) {
    ((PropagationContextImpl)context).setFactHandle(null);
  }
  behavior.retractRightTuple(memory.betaMemory.getBehaviorContext(),rightTuple,workingMemory);
  memory.betaMemory.getRightTupleMemory().remove(rightTuple);
  for (LeftTuple leftTuple=rightTuple.getBetaChildren(); leftTuple != null; ) {
    LeftTuple tmp=leftTuple.getRightParentNext();
    this.modifyTuple(false,leftTuple.getParent(),rightTuple,context,workingMemory,memory);
    leftTuple=tmp;
  }
  if (context.getType() == PropagationContext.EXPIRATION) {
    ((PropagationContextImpl)context).setFactHandle(origin);
  }
}
