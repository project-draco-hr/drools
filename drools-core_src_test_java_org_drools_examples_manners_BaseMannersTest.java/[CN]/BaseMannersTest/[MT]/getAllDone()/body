{
  final Rule rule=new Rule("alldone");
  final Pattern contextPattern=new Pattern(0,this.contextType);
  contextPattern.addConstraint(getLiteralConstraint(contextPattern,"state",Context.PRINT_RESULTS,this.integerEqualEvaluator));
  rule.addPattern(contextPattern);
  final Declaration contextDeclaration=rule.getDeclaration("context");
  final Consequence consequence=new Consequence(){
    public void evaluate(    KnowledgeHelper drools,    WorkingMemory workingMemory) throws ConsequenceException {
      try {
        System.err.println("all done");
      }
 catch (      Exception e) {
        throw new ConsequenceException(e);
      }
    }
  }
;
  rule.setConsequence(consequence);
  return rule;
}
