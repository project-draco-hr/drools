{
  Class shadow=ShadowProxyFactory.getProxy(Context.class);
  this.contextType=new ClassObjectType(Context.class,shadow);
  shadow=ShadowProxyFactory.getProxy(Guest.class);
  this.guestType=new ClassObjectType(Guest.class,shadow);
  shadow=ShadowProxyFactory.getProxy(Seating.class);
  this.seatingType=new ClassObjectType(Seating.class,shadow);
  shadow=ShadowProxyFactory.getProxy(LastSeat.class);
  this.lastSeatType=new ClassObjectType(LastSeat.class,shadow);
  shadow=ShadowProxyFactory.getProxy(Count.class);
  this.countType=new ClassObjectType(Count.class,shadow);
  shadow=ShadowProxyFactory.getProxy(Path.class);
  this.pathType=new ClassObjectType(Path.class,shadow);
  shadow=ShadowProxyFactory.getProxy(Chosen.class);
  this.chosenType=new ClassObjectType(Chosen.class,shadow);
  this.integerEqualEvaluator=ValueType.PINTEGER_TYPE.getEvaluator(Operator.EQUAL);
  this.objectEqualEvaluator=ValueType.OBJECT_TYPE.getEvaluator(Operator.EQUAL);
  this.objectNotEqualEvaluator=ValueType.OBJECT_TYPE.getEvaluator(Operator.NOT_EQUAL);
  this.booleanEqualEvaluator=ValueType.PBOOLEAN_TYPE.getEvaluator(Operator.EQUAL);
  this.pkg=new Package("Miss Manners");
  this.pkg.addRule(getAssignFirstSeatRule());
  this.pkg.addRule(getFindSeating());
  this.pkg.addRule(getPathDone());
  this.pkg.addRule(getMakePath());
  this.pkg.addRule(getContinueProcessing());
  this.pkg.addRule(getAreWeDone());
  this.pkg.addRule(getAllDone());
}
