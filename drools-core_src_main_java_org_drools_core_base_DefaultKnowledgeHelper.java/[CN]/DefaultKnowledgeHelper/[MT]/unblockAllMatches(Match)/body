{
  AgendaItem targetMatch=(AgendaItem)act;
  boolean wasBlocked=(targetMatch.getBlockers() != null && !targetMatch.getBlockers().isEmpty());
  for (LinkedListEntry entry=(LinkedListEntry)targetMatch.getBlockers().getFirst(); entry != null; ) {
    LinkedListEntry tmp=(LinkedListEntry)entry.getNext();
    LogicalDependency dep=(LogicalDependency)entry.getObject();
    ((AgendaItem)dep.getJustifier()).removeBlocked(dep);
    entry=tmp;
  }
  if (wasBlocked) {
    RuleAgendaItem ruleAgendaItem=targetMatch.getRuleAgendaItem();
    if (ruleAgendaItem == null) {
      ((DefaultAgenda)workingMemory.getAgenda()).getStageActivationsGroup().addActivation(targetMatch);
    }
 else {
      int salienceInt=0;
      Salience salience=ruleAgendaItem.getRule().getSalience();
      RuleTerminalNodeLeftTuple rtnLeftTuple=(RuleTerminalNodeLeftTuple)targetMatch;
      if (!salience.isDynamic()) {
        salienceInt=ruleAgendaItem.getRule().getSalience().getValue();
      }
 else {
        salienceInt=salience.getValue(new DefaultKnowledgeHelper(rtnLeftTuple,getWorkingMemory()),null,getWorkingMemory());
      }
      ((RuleTerminalNodeLeftTuple)targetMatch).update(salienceInt,activation.getPropagationContext());
      targetMatch.getRuleAgendaItem().getRuleExecutor().addLeftTuple(targetMatch.getTuple());
    }
  }
}
