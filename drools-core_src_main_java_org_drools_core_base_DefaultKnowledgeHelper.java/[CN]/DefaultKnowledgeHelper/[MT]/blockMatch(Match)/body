{
  AgendaItem targetMatch=(AgendaItem)act;
  LogicalDependency dep=null;
  if (this.previousJustified != null) {
    for (dep=this.previousJustified.getFirst(); dep != null; dep=dep.getNext()) {
      if (targetMatch == dep.getJustified()) {
        this.previousJustified.remove(dep);
        break;
      }
    }
  }
  if (dep == null) {
    dep=new SimpleLogicalDependency(activation,targetMatch);
  }
  this.activation.addBlocked(dep);
  if (targetMatch.getBlockers().size() == 1 && targetMatch.isQueued()) {
    if (targetMatch.getRuleAgendaItem() == null) {
      targetMatch.remove();
    }
 else {
      targetMatch.getRuleAgendaItem().getRuleExecutor().removeLeftTuple(targetMatch.getTuple());
    }
    if (targetMatch.getActivationGroupNode() != null) {
      targetMatch.getActivationGroupNode().getActivationGroup().removeActivation(targetMatch);
    }
    if (targetMatch.getActivationNode() != null) {
      final InternalRuleFlowGroup ruleFlowGroup=(InternalRuleFlowGroup)targetMatch.getActivationNode().getParentContainer();
      ruleFlowGroup.removeActivation(targetMatch);
    }
  }
}
