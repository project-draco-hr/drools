{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(getSource(),getDSL());
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(builder.getPackage());
  final StatefulSession session=ruleBase.newStatefulSession();
  final WorkingMemoryFileLogger logger=new WorkingMemoryFileLogger(session);
  logger.setFileName("log/state");
  final Customer a=new Customer("A","Gold");
  final Customer b=new Customer("B","Platinum");
  final Customer c=new Customer("C","Silver");
  final Customer d=new Customer("D","Silver");
  final Ticket t1=new Ticket(a);
  final Ticket t2=new Ticket(b);
  final Ticket t3=new Ticket(c);
  final Ticket t4=new Ticket(d);
  final FactHandle fa=session.assertObject(a);
  final FactHandle fb=session.assertObject(b);
  final FactHandle fc=session.assertObject(c);
  final FactHandle fd=session.assertObject(d);
  final FactHandle ft1=session.assertObject(t1);
  final FactHandle ft2=session.assertObject(t2);
  final FactHandle ft3=session.assertObject(t3);
  final FactHandle ft4=session.assertObject(t4);
  session.fireAllRules();
  t3.setStatus("Done");
  session.modifyObject(ft3,t3);
  try {
    System.err.println("[[ Sleeping 5 seconds ]]");
    Thread.sleep(5000);
  }
 catch (  final InterruptedException e) {
    e.printStackTrace();
  }
  session.fireAllRules();
  session.dispose();
  logger.writeToDisk();
}
