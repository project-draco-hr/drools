{
  when(constraint.isAllowedCachedLeft(any(ContextEntry.class),any(InternalFactHandle.class))).thenReturn(true);
  when(constraint.isAllowedCachedRight(any(LeftTupleImpl.class),any(ContextEntry.class))).thenReturn(true);
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.insert("test0");
  this.node.assertObject(f0,this.context,this.workingMemory);
  assertEquals(0,this.memory.getLeftTupleMemory().size());
  assertEquals(1,this.memory.getRightTupleMemory().size());
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.insert("test1");
  this.node.assertObject(f1,this.context,this.workingMemory);
  assertEquals(2,this.memory.getRightTupleMemory().size());
  Tuple rightTuple=this.memory.getRightTupleMemory().getFirst(new LeftTupleImpl(f0,this.node,true));
  final InternalFactHandle rf0=rightTuple.getFactHandle();
  final InternalFactHandle rf1=((RightTuple)rightTuple.getNext()).getFactHandle();
  assertEquals(f0,rf0);
  assertEquals(f1,rf1);
}
