{
  when(constraint.isAllowedCachedLeft(any(ContextEntry.class),any(InternalFactHandle.class))).thenReturn(true);
  when(constraint.isAllowedCachedRight(any(LeftTupleImpl.class),any(ContextEntry.class))).thenReturn(true);
  final StatefulKnowledgeSessionImpl workingMemory=new StatefulKnowledgeSessionImpl(1L,(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase());
  final MockObjectSource objectSource=new MockObjectSource(1);
  final MockTupleSource tupleSource=new MockTupleSource(1);
  InternalKnowledgeBase kBase=(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase();
  BuildContext buildContext=new BuildContext(kBase,kBase.getReteooBuilder().getIdGenerator());
  final JoinNode joinNode=new JoinNode(2,tupleSource,objectSource,EmptyBetaConstraints.getInstance(),buildContext);
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(joinNode);
  assertNotNull(memory);
}
