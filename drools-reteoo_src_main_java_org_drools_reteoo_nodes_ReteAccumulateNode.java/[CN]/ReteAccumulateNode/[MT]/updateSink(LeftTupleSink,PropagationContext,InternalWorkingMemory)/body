{
  final AccumulateMemory memory=(AccumulateMemory)workingMemory.getNodeMemory(this);
  final Iterator tupleIter=memory.getBetaMemory().getLeftTupleMemory().iterator();
  for (LeftTuple leftTuple=(LeftTuple)tupleIter.next(); leftTuple != null; leftTuple=(LeftTuple)tupleIter.next()) {
    AccumulateContext accctx=(AccumulateContext)leftTuple.getObject();
    if (accctx.propagated) {
      LeftTuple[] matchings=splitList(leftTuple,accctx,true);
      sink.assertLeftTuple(sink.createLeftTuple(leftTuple,accctx.result,null,null,sink,true),context,workingMemory);
      restoreList(leftTuple,matchings);
    }
  }
}
