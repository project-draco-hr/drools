{
  HierarchyEncoder<String> encoder=new HierarchyEncoderImpl<String>();
  encoder.encode("A",Collections.EMPTY_LIST);
  encoder.encode("B",Arrays.asList("A"));
  encoder.encode("C",Arrays.asList("B"));
  encoder.encode("D",Arrays.asList("B"));
  encoder.encode("E",Arrays.asList("D"));
  encoder.encode("F",Arrays.asList("E"));
  encoder.encode("G",Arrays.asList("E"));
  encoder.encode("H",Arrays.asList("G"));
  encoder.encode("I",Arrays.asList("H"));
  encoder.encode("J",Arrays.asList("E"));
  encoder.encode("K",Arrays.asList("J"));
  encoder.encode("L",Arrays.asList("K"));
  encoder.encode("M",Arrays.asList("J"));
  encoder.encode("N",Arrays.asList("M"));
  encoder.encode("O",Arrays.asList("J"));
  encoder.encode("P",Arrays.asList("O"));
  encoder.encode("Q",Arrays.asList("J"));
  encoder.encode("R",Arrays.asList("Q"));
  encoder.encode("S",Arrays.asList("B"));
  encoder.encode("T",Arrays.asList("S"));
  encoder.encode("U",Arrays.asList("T"));
  encoder.encode("V",Arrays.asList("B"));
  encoder.encode("W",Arrays.asList("V"));
  encoder.encode("X",Arrays.asList("W"));
  System.out.println(encoder);
  encoder.encode("Y",Arrays.asList("F","W"));
  System.out.println(encoder);
  checkHier(encoder,(char)('A' + encoder.size() - 1));
}
