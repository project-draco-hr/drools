{
  String fieldName=fieldConstraintDescr.getFieldName();
  if (fieldName.indexOf('.') > -1) {
    String[] identifiers=fieldName.split("\\.");
    if (identifiers.length == 2 && pattern.getDeclaration() != null && identifiers[0].equals(pattern.getDeclaration().getIdentifier())) {
      fieldName=identifiers[1];
    }
 else {
      Dialect dialect=context.getDialect();
      context.setDialect(context.getDialect("mvel"));
      PredicateDescr predicateDescr=new PredicateDescr();
      DrlDumper dumper=new DrlDumper();
      dumper.visitFieldConstraintDescr(fieldConstraintDescr);
      predicateDescr.setContent(dumper.getTemplate());
      this.build(context,pattern,predicateDescr,container);
      context.setDialect(dialect);
      return;
    }
  }
  final FieldExtractor extractor=getFieldExtractor(context,fieldConstraintDescr,pattern.getObjectType(),fieldName,true);
  if (extractor == null) {
    return;
  }
  Restriction restriction=createRestriction(context,pattern,fieldConstraintDescr,fieldConstraintDescr.getRestriction(),extractor);
  if (restriction == null) {
    return;
  }
  Constraint constraint=null;
  if (restriction instanceof AbstractCompositeRestriction) {
    constraint=new MultiRestrictionFieldConstraint(extractor,restriction);
  }
 else   if (restriction instanceof LiteralRestriction) {
    constraint=new LiteralConstraint(extractor,(LiteralRestriction)restriction);
  }
 else   if (restriction instanceof VariableRestriction) {
    constraint=new VariableConstraint(extractor,(VariableRestriction)restriction);
  }
 else   if (restriction instanceof ReturnValueRestriction) {
    constraint=new ReturnValueConstraint(extractor,(ReturnValueRestriction)restriction);
  }
 else {
    throw new UnsupportedOperationException("Unknown restriction type: " + restriction.getClass());
  }
  if (container == null) {
    pattern.addConstraint(constraint);
  }
 else {
    container.addConstraint(constraint);
  }
}
