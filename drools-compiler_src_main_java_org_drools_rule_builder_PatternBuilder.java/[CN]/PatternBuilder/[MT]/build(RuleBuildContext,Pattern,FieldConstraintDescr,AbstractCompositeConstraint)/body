{
  String fieldName=fieldConstraintDescr.getFieldName();
  if (fieldName.indexOf('[') > -1) {
    rewriteToEval(context,pattern,fieldConstraintDescr,container);
    return;
  }
  if (fieldName.indexOf('.') > -1) {
    String[] identifiers=fieldName.split("\\.");
    if (identifiers.length == 2 && ((pattern.getDeclaration() != null && identifiers[0].equals(pattern.getDeclaration().getIdentifier())) || ("this".equals(identifiers[0])))) {
      fieldName=identifiers[1];
    }
 else {
      rewriteToEval(context,pattern,fieldConstraintDescr,container);
      return;
    }
  }
  final FieldExtractor extractor=getFieldExtractor(context,fieldConstraintDescr,pattern.getObjectType(),fieldName,false);
  if (extractor == null) {
    if (fieldConstraintDescr.getFieldName().startsWith("this.")) {
      rewriteToEval(context,pattern,fieldConstraintDescr,container);
      return;
    }
 else {
      context.getErrors().add(new DescrBuildError(context.getParentDescr(),fieldConstraintDescr,null,"Unable to create Field Extractor for '" + fieldName + "' of '"+ pattern.getObjectType().toString()+ "' in rule '"+ context.getRule().getName()+ "'"));
      return;
    }
  }
  Restriction restriction=createRestriction(context,pattern,fieldConstraintDescr,fieldConstraintDescr.getRestriction(),extractor);
  if (restriction == null) {
    return;
  }
  Constraint constraint=null;
  if (restriction instanceof AbstractCompositeRestriction) {
    constraint=new MultiRestrictionFieldConstraint(extractor,restriction);
  }
 else   if (restriction instanceof LiteralRestriction) {
    constraint=new LiteralConstraint(extractor,(LiteralRestriction)restriction);
  }
 else   if (restriction instanceof VariableRestriction) {
    constraint=new VariableConstraint(extractor,(VariableRestriction)restriction);
  }
 else   if (restriction instanceof ReturnValueRestriction) {
    constraint=new ReturnValueConstraint(extractor,(ReturnValueRestriction)restriction);
  }
 else {
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),fieldConstraintDescr,null,"This is a bug: Unkown restriction type '" + restriction.getClass() + "' for pattern '"+ pattern.getObjectType().toString()+ "' in rule '"+ context.getRule().getName()+ "'"));
  }
  if (container == null) {
    pattern.addConstraint(constraint);
  }
 else {
    if (constraint.getType().equals(Constraint.ConstraintType.UNKNOWN)) {
      this.setConstraintType(pattern,(MutableTypeConstraint)constraint);
    }
    container.addConstraint(constraint);
  }
}
