{
  if (descr.getType() == ExprConstraintDescr.Type.POSITIONAL && pattern.getObjectType() instanceof ClassObjectType) {
    Class<?> klazz=((ClassObjectType)pattern.getObjectType()).getClassType();
    TypeDeclaration tDecl=context.getPackageBuilder().getTypeDeclaration(klazz);
    if (tDecl == null) {
      context.addError(new DescrBuildError(context.getParentDescr(),descr,klazz,"Unable to find @positional definitions for :" + klazz + "\n"));
      return;
    }
    ClassDefinition clsDef=tDecl.getTypeClassDef();
    if (clsDef == null) {
      context.addError(new DescrBuildError(context.getParentDescr(),descr,null,"Unable to find @positional field " + descr.getPosition() + " for class "+ tDecl.getTypeName()+ "\n"));
      return;
    }
    FieldDefinition field=clsDef.getField(descr.getPosition());
    if (field == null) {
      context.addError(new DescrBuildError(context.getParentDescr(),descr,null,"Unable to find @positional field " + descr.getPosition() + " for class "+ tDecl.getTypeName()+ "\n"));
      return;
    }
    DRL5Lexer lex=new DRL5Lexer(new ANTLRStringStream(descr.getExpression()));
    boolean isSimpleIdentifier=false;
    try {
      lex.mID();
      isSimpleIdentifier=lex.getCharIndex() >= descr.getExpression().length();
    }
 catch (    RecognitionException e) {
    }
    if (isSimpleIdentifier) {
      BindingDescr binder=new BindingDescr();
      binder.setUnification(true);
      binder.setExpression(field.getName());
      binder.setVariable(descr.getExpression());
      buildRuleBindings(context,patternDescr,pattern,binder);
    }
 else {
      build(context,patternDescr,pattern,descr,field.getName() + " == " + descr.getExpression());
    }
  }
}
