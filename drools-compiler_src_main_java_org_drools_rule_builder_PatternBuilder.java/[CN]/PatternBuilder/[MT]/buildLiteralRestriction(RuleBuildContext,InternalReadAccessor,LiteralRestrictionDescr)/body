{
  FieldValue field=null;
  try {
    String value=literalRestrictionDescr.getText().trim();
    MVELDialect dialect=(MVELDialect)context.getDialect("mvel");
    ParserConfiguration pconf=new ParserConfiguration();
    pconf.setImports(dialect.getImports());
    pconf.setPackageImports((HashSet)dialect.getPackgeImports());
    ParserContext pctx=new ParserContext(pconf);
    field=FieldFactory.getFieldValue(MVEL.executeExpression(MVEL.compileExpression(value,pctx)),extractor.getValueType(),context.getPackageBuilder().getDateFormats());
  }
 catch (  final Exception e) {
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),literalRestrictionDescr,e,"Unable to create a Field value of type  '" + extractor.getValueType() + "' and value '"+ literalRestrictionDescr.getText()+ "'"));
  }
  if (field == null) {
    return null;
  }
  Target right=getRightTarget(extractor);
  Target left=Target.FACT;
  final Evaluator evaluator=getEvaluator(context,literalRestrictionDescr,extractor.getValueType(),literalRestrictionDescr.getEvaluator(),literalRestrictionDescr.isNegated(),literalRestrictionDescr.getParameterText(),left,right);
  if (evaluator == null) {
    return null;
  }
  return new LiteralRestriction(field,evaluator,extractor);
}
