{
  int dotPos=value1.indexOf('.');
  if (dotPos > 0) {
    String part0=value1.substring(0,dotPos).trim();
    if ("this".equals(part0.trim())) {
      value1=value1.substring(dotPos + 1);
    }
 else     if (pattern.getDeclaration() != null && part0.equals(pattern.getDeclaration().getIdentifier())) {
      value1=value1.substring(dotPos + 1);
      expr=expr.substring(dotPos + 1);
    }
  }
  ValueType vtype=extractor.getValueType();
  String operator=relDescr.getOperator().trim();
  LiteralRestrictionDescr restrictionDescr=buildLiteralRestrictionDescr(context,relDescr,value2,operator,isConstant);
  if (restrictionDescr != null) {
    FieldValue field=getFieldValue(context,vtype,restrictionDescr);
    if (field != null) {
      Constraint constraint=getConstraintBuilder(context).buildLiteralConstraint(context,pattern,vtype,field,expr,value1,operator,value2,extractor,restrictionDescr);
      if (constraint != null) {
        pattern.addConstraint(constraint);
        return true;
      }
    }
  }
  Declaration[] declarations=null;
  Declaration declr=null;
  if (value2.indexOf('(') < 0 && value2.indexOf('.') < 0 && value2.indexOf('[') < 0) {
    declr=context.getDeclarationResolver().getDeclaration(context.getRule(),value2);
    if (declr == null) {
      final Pattern thisPattern=(Pattern)context.getBuildStack().peek();
      declr=createDeclarationObject(context,value2,thisPattern);
    }
  }
  if (declr == null) {
    String[] parts=value2.split("\\.");
    if (parts.length == 2) {
      if ("this".equals(parts[0].trim())) {
        declr=createDeclarationObject(context,parts[1].trim(),(Pattern)context.getBuildStack().peek());
        value2=parts[1].trim();
      }
 else {
        declr=context.getDeclarationResolver().getDeclaration(context.getRule(),parts[0].trim());
        if (declr != null) {
          if (declr.isPatternDeclaration()) {
            declarations=new Declaration[]{declr};
            declr=createDeclarationObject(context,parts[1].trim(),declr.getPattern());
            value2=parts[1].trim();
          }
 else {
            return false;
          }
        }
      }
    }
  }
  if (declarations == null) {
    if (declr != null) {
      declarations=new Declaration[]{declr};
    }
 else {
      declarations=getDeclarationsForReturnValue(context,relDescr,operator,value2,extractor);
      if (declarations == null) {
        return false;
      }
    }
  }
  pattern.addConstraint(getConstraintBuilder(context).buildVariableConstraint(context,pattern,expr,declarations,value1,relDescr.getOperatorDescr(),value2,extractor,declr,relDescr));
  return true;
}
