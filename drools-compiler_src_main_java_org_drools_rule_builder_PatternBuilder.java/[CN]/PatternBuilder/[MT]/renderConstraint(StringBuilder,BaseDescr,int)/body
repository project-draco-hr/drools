{
  if (d instanceof RelationalExprDescr) {
    RelationalExprDescr red=(RelationalExprDescr)d;
    if (builtInOperators.contains(((RelationalExprDescr)d).getOperator())) {
      renderConstraint(sbuilder,((RelationalExprDescr)d).getLeft(),Integer.MAX_VALUE);
      sbuilder.append(" ");
      sbuilder.append(((RelationalExprDescr)d).getOperator());
      sbuilder.append(" ");
      renderConstraint(sbuilder,((RelationalExprDescr)d).getRight(),Integer.MAX_VALUE);
    }
 else {
      MVELDumper dumper=new MVELDumper(null);
      dumper.setFieldName(((AtomicExprDescr)((RelationalExprDescr)d).getLeft()).getExpression());
      String operator=red.getOperator();
      boolean negated=operator.startsWith("not ");
      if (negated) {
        operator=red.getOperator().substring(4);
      }
      String s=dumper.processRestriction(operator,negated,((AtomicExprDescr)((RelationalExprDescr)d).getRight()).getExpression());
      sbuilder.append(s);
    }
  }
 else   if (d instanceof AtomicExprDescr) {
    AtomicExprDescr atom=(AtomicExprDescr)d;
    String expr=atom.getExpression().trim();
    if (expr.matches("eval\\s*\\(.*\\)\\s*")) {
      expr=expr.substring(expr.indexOf('(') + 1,expr.lastIndexOf(')'));
    }
    sbuilder.append(expr);
  }
 else   if (d instanceof ConstraintConnectiveDescr) {
    ConstraintConnectiveDescr cc=(ConstraintConnectiveDescr)d;
    boolean afterFirst=false;
    boolean wrapParenthesis=parentPriority > cc.getConnective().getPrecedence();
    if (wrapParenthesis) {
      sbuilder.append("( ");
    }
    for (    BaseDescr c : cc.getDescrs()) {
      if (afterFirst) {
        sbuilder.append(" ");
        sbuilder.append(cc.getConnective().toString());
        sbuilder.append(" ");
      }
 else {
        afterFirst=true;
      }
      renderConstraint(sbuilder,c,cc.getConnective().getPrecedence());
    }
    if (wrapParenthesis) {
      sbuilder.append(" )");
    }
  }
}
