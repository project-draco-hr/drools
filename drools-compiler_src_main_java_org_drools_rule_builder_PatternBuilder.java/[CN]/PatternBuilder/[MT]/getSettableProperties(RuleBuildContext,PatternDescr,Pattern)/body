{
  ObjectType patternType=pattern.getObjectType();
  if (!(patternType instanceof ClassObjectType))   return null;
  Class<?> patternClass=((ClassObjectType)patternType).getClassType();
  TypeDeclaration typeDeclaration=context.getPackageBuilder().getTypeDeclaration(patternClass);
  if (!typeDeclaration.isPropertyReactive()) {
    context.addError(new DescrBuildError(context.getParentDescr(),patternDescr,null,"Wrong usage of @" + Pattern.ATTR_LISTENED_PROPS + " annotation on class "+ patternClass.getName()+ " that is not annotated as @PropertyReactive"));
  }
  typeDeclaration.setTypeClass(patternClass);
  return typeDeclaration.getSettableProperties();
}
