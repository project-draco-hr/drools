{
  final BindingDescr implicitBinding=new BindingDescr(identifier,expr);
  final Declaration declaration=new Declaration(identifier,null,pattern,true);
  InternalReadAccessor extractor=null;
  if (expr.indexOf('.') >= 0 || expr.indexOf('[') >= 0 || expr.indexOf('(') >= 0) {
    ObjectType objectType=pattern.getObjectType();
    Class<?> classType;
    if (objectType instanceof ClassObjectType) {
      ClassObjectType classObjectType=(ClassObjectType)objectType;
      classType=classObjectType.getClassType();
    }
 else     if (objectType instanceof FactTemplateObjectType) {
      FactTemplateObjectType factTemplateObjectType=(FactTemplateObjectType)objectType;
      String className=factTemplateObjectType.getFactTemplate().getName();
      try {
        classType=context.getDialect().getTypeResolver().resolveType(className);
      }
 catch (      ClassNotFoundException e) {
        throw new RuntimeException("Can't figure out: " + expr + ", class name: "+ className);
      }
    }
 else {
      throw new RuntimeException("Can't figure out: " + expr);
    }
    extractor=new MVELClassFieldReader(classType,expr,null);
  }
 else {
    extractor=getFieldReadAccessor(context,implicitBinding,pattern.getObjectType(),implicitBinding.getExpression(),declaration,false);
  }
  if (extractor == null) {
    return null;
  }
  declaration.setReadAccessor(extractor);
  return declaration;
}
