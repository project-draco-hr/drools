{
  String droolsSource="package org.drools.tms.test; \n" + "" + "import " + Abducible.class.getName() + "; \n"+ "global java.util.List list; \n"+ ""+ "declare Sunny id : int @key end \n"+ "declare WetGrass @Abducible id : int @key end \n"+ "declare Rain @Abducible id : int @key end \n"+ "declare Sprinkler @Abducible id : int @key end \n"+ "query wetGrass() \n"+ "   @Abductive( target=WetGrass.class ) \n"+ "   rain() or sprinkler() \n"+ "end \n"+ "query rain() \n"+ "   @Abductive( target=Rain.class ) \n"+ "   @Defeasible "+ "end \n"+ "query sprinkler() \n"+ "   @Abductive( target=Sprinkler.class ) \n"+ "   @Defeasible "+ "end \n"+ "rule SunIntegrityConstraint \n"+ "@Direct \n"+ "when \n"+ "   Sunny()"+ "then \n"+ "   insertLogical( new Rain(), 'neg' ); \n"+ "end \n"+ "rule Facts \n"+ "when \n"+ "then \n"+ " insert( new Sunny( 0 ) ); \n"+ "end \n"+ "rule Main_1\n"+ "when \n"+ "   wetGrass() \n"+ "   ( "+ "     Sprinkler() do[sprk] \n"+ "     or \n"+ "     Rain() do[rain] \n"+ "     or \n"+ "     Rain() from entry-point 'neg' do[norn] \n"+ "   ) \n"+ "then \n"+ "then[sprk] \n"+ "   list.add( 'sprinkler' ); \n"+ "   System.out.println( \"The grass is wet because the sprinkler is on \" ); \n"+ "then[rain] \n"+ "   list.add( 'rain' ); \n "+ "   System.out.println( \"The grass is wet because it's raining! \" ); \n"+ "then[norn] \n"+ "   list.add( 'not rain' ); \n"+ "   System.out.println( \"The grass can't be wet due to rain, it's sunny today!!! \" ); \n"+ "end \n"+ "";
  KieSession session=getSessionFromString(droolsSource);
  List list=new ArrayList();
  session.setGlobal("list",list);
  session.fireAllRules();
  assertEquals(2,list.size());
  assertTrue(list.contains("sprinkler"));
  assertTrue(list.contains("not rain"));
  assertEquals(3,session.getObjects().size());
}
