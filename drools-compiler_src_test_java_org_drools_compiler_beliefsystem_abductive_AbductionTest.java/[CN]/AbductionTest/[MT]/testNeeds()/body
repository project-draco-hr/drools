{
  String droolsSource="package org.drools.tms.test; \n" + "" + "import " + Thing.class.getPackage().getName() + ".*;"+ "import "+ Abducible.class.getName()+ "; \n"+ "global java.util.List list; \n"+ "declare Goal \n"+ "   entity : Thing \n"+ "   property : String \n"+ "   value : Object \n"+ "end \n"+ "query check( Thing $thing, String $prop, Object $val ) "+ "   Thing( this == $thing, fields[ $prop ] == $val ) "+ "   or"+ "   ( "+ "     need( $thing, $prop, $val ; ) "+ "     and"+ "     Thing( this == $thing, fields[ $prop ] == $val ) "+ "   ) "+ "end \n "+ "query need( Thing $thing, String $prop, Object $val ) "+ "   @Abductive( target=Goal.class ) \n"+ "   Thing( this == $thing, fields[ $prop ] != $val ) "+ "end \n "+ "rule HandleGoal "+ "when "+ "   $g : Goal( $m : entity, $prop : property, $val : value ) "+ "then "+ "   System.out.println( 'Satisfy ' + $g ); \n"+ "   modify ( $m ) { getFields().put( $prop, $val ); } \n"+ "end "+ "declare trait Monkey\n"+ "   position : Integer = 1 \n "+ "end \n"+ "rule Main\n"+ "when \n"+ "then \n"+ "   System.out.println( 'Don MONKEY ' ); "+ "   Entity e = new Entity(); \n"+ "   Monkey monkey = don( e, Monkey.class );"+ "end \n"+ "rule MoveAround "+ "when "+ "   $m : Monkey( $pos : position ) "+ "   ?check( $m, \"position\", 4 ; ) "+ "then "+ "   System.out.println( 'Monkey madness' + $m ); "+ "   list.add( $m.getPosition() ); "+ "end "+ "";
  KieSession session=getSessionFromString(droolsSource);
  List list=new ArrayList();
  session.setGlobal("list",list);
  session.fireAllRules();
  for (  Object o : session.getObjects()) {
    System.out.println(">>> " + o);
  }
  assertEquals(Arrays.asList(4),list);
}
