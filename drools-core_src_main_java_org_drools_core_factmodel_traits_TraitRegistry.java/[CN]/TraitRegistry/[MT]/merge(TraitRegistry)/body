{
  if (traits == null) {
    traits=new HashMap<String,ClassDefinition>();
  }
  if (other.traits != null) {
    this.traits.putAll(other.traits);
  }
  if (traitables == null) {
    traitables=new HashMap<String,ClassDefinition>();
  }
  if (other.traitables != null) {
    this.traitables.putAll(other.traitables);
  }
  if (masks == null) {
    masks=new HashMap<String,BitSet>();
  }
  if (other.masks != null) {
    this.masks.putAll(other.masks);
  }
  if (hierarchy == null || hierarchy.size() <= 1) {
    hierarchy=other.hierarchy;
  }
 else {
    if (other.traits != null) {
      for (      String traitName : other.getHierarchy().getSortedMembers()) {
        ClassDefinition trait=other.traits.get(traitName);
        List<String> parentTraits=new ArrayList<String>();
        for (        String candidateIntf : trait.getInterfaces()) {
          if (getHierarchy().getCode(candidateIntf) != null) {
            parentTraits.add(candidateIntf);
          }
        }
        getHierarchy().encode(trait.getName(),parentTraits);
      }
    }
  }
}
