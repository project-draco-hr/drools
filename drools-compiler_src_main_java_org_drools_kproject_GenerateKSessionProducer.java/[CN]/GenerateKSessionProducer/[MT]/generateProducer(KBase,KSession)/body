{
  String s="package " + kSession.getNamespace() + ";\n"+ "import javax.enterprise.inject.Produces;\n"+ "\n"+ "import org.drools.KnowledgeBase;\n"+ "import org.drools.KnowledgeBaseFactory;\n"+ "import org.drools.runtime.KnowledgeSessionConfiguration;\n"+ "import org.drools.runtime.StatefulKnowledgeSession;\n"+ "import org.drools.runtime.StatelessKnowledgeSession;\n"+ "import org.drools.runtime.conf.ClockTypeOption;\n"+ "import "+ kBase.getQName()+ ";\n"+ "public class "+ kSession.getName()+ "Producer {\n"+ "    \n"+ "    @Produces\n"+ "    @"+ kSession.getName()+ "\n";
  if (kSession.getType().equals("stateful")) {
    s=s + "    public StatefulKnowledgeSession newStatefulKnowledgeSession(@" + kBase.getName()+ " KnowledgeBase kbase) {\n"+ "        KnowledgeSessionConfiguration ksconf = KnowledgeBaseFactory.newKnowledgeSessionConfiguration();\n"+ "        ksconf.setOption( ClockTypeOption.get( \""+ kSession.getClockType().getClockType()+ "\" ) );\n"+ "        \n"+ "        return kbase.newStatefulKnowledgeSession( ksconf, null );\n"+ "    }\n";
  }
 else {
    s=s + "    public StatelessKnowledgeSession newStatelessKnowledgeSession(@" + kBase.getName()+ " KnowledgeBase kbase) {\n"+ "        KnowledgeSessionConfiguration ksconf = KnowledgeBaseFactory.newKnowledgeSessionConfiguration();\n"+ "        ksconf.setOption( ClockTypeOption.get( \""+ kSession.getClockType().getClockType()+ "\" ) );\n"+ "        \n"+ "        return kbase.newStatelessKnowledgeSession( ksconf );\n"+ "    }\n";
  }
  s=s + "\n" + "}\n"+ "";
  return s;
}
