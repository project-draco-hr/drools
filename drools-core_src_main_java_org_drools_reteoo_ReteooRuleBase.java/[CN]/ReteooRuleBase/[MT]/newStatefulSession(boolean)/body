{
  if (this.config.isSequential()) {
    throw new RuntimeException("Cannot have a stateful rule session, with sequential configuration set to true");
  }
  ReteooStatefulSession session=null;
synchronized (this.pkgs) {
    ExecutorService executor=this.config.getExecutorService();
    session=new ReteooStatefulSession(nextWorkingMemoryCounter(),this,executor);
    executor.setCommandExecutor(new CommandExecutor(session));
    if (keepReference) {
      super.addStatefulSession(session);
    }
    final InitialFactHandle handle=new InitialFactHandle(session.getFactHandleFactory().newFactHandle(new InitialFactHandleDummyObject()));
    session.queueWorkingMemoryAction(new WorkingMemoryReteAssertAction(handle,false,true,null,null));
  }
  FireAllRulesBeforeUnlockEventListener listener=new DefaultFireAllRulesBeforeUnlockEventListener();
  listener.setSession(session);
  addEventListener(listener);
  return session;
}
