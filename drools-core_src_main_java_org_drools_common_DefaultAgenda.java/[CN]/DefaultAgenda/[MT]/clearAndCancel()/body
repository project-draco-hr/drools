{
  for (final java.util.Iterator agendaGroupIterator=this.agendaGroups.values().iterator(); agendaGroupIterator.hasNext(); ) {
    final AgendaGroup group=(AgendaGroup)agendaGroupIterator.next();
    clearAndCancelAgendaGroup(group);
  }
  final EventSupport eventsupport=(EventSupport)this.workingMemory;
  if (!this.scheduledActivations.isEmpty()) {
    for (ScheduledAgendaItem item=(ScheduledAgendaItem)this.scheduledActivations.removeFirst(); item != null; item=(ScheduledAgendaItem)this.scheduledActivations.removeFirst()) {
      Scheduler.removeAgendaItem(item,this);
      eventsupport.getAgendaEventSupport().fireActivationCancelled(item,this.workingMemory,ActivationCancelledCause.CLEAR);
    }
  }
  for (  RuleFlowGroup group : this.ruleFlowGroups.values()) {
    clearAndCancelAndCancel(group);
  }
  for (  ActivationGroup group : this.activationGroups.values()) {
    clearAndCancelActivationGroup(group);
  }
}
