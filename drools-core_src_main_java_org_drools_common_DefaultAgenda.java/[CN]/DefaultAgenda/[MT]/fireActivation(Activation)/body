{
  increaseDormantActivations();
  final EventSupport eventsupport=(EventSupport)this.workingMemory;
  eventsupport.getAgendaEventSupport().fireBeforeActivationFired(activation,this.workingMemory);
  if (activation.getActivationGroupNode() != null) {
    final ActivationGroup activationGroup=activation.getActivationGroupNode().getActivationGroup();
    activationGroup.removeActivation(activation);
    clearActivationGroup(activationGroup);
  }
  activation.setActivated(false);
  try {
    this.knowledgeHelper.setActivation(activation);
    activation.getRule().getConsequence().evaluate(this.knowledgeHelper,this.workingMemory);
  }
 catch (  final Exception e) {
    e.printStackTrace();
    throw new ConsequenceException(e,activation.getRule());
  }
  if (activation.getRuleFlowGroupNode() != null) {
    final InternalRuleFlowGroup ruleFlowGroup=activation.getRuleFlowGroupNode().getRuleFlowGroup();
    ruleFlowGroup.removeActivation(activation,this.workingMemory);
  }
  eventsupport.getAgendaEventSupport().fireAfterActivationFired(activation);
}
