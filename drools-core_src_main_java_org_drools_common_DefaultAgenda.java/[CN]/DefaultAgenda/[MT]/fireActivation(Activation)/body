{
  this.workingMemory.startOperation();
  try {
    increaseDormantActivations();
    final EventSupport eventsupport=(EventSupport)this.workingMemory;
    eventsupport.getAgendaEventSupport().fireBeforeActivationFired(activation,this.workingMemory);
    if (activation.getActivationGroupNode() != null) {
      final ActivationGroup activationGroup=activation.getActivationGroupNode().getActivationGroup();
      activationGroup.removeActivation(activation);
      clearAndCancelActivationGroup(activationGroup);
    }
    activation.setActivated(false);
    InternalRuleFlowGroup ruleFlowGroup=null;
    if (activation.getActivationNode() != null) {
      ruleFlowGroup=(InternalRuleFlowGroup)activation.getActivationNode().getParentContainer();
      ruleFlowGroup.removeActivation(activation);
    }
    try {
      this.knowledgeHelper.setActivation(activation);
      activation.getRule().getConsequence().evaluate(this.knowledgeHelper,this.workingMemory);
      this.knowledgeHelper.cancelRemainingPreviousLogicalDependencies();
      this.knowledgeHelper.reset();
    }
 catch (    final Exception e) {
      if (this.legacyConsequenceExceptionHandler != null) {
        this.legacyConsequenceExceptionHandler.handleException(activation,this.workingMemory,e);
      }
 else       if (this.consequenceExceptionHandler != null) {
        this.consequenceExceptionHandler.handleException(activation,this.workingMemory.getKnowledgeRuntime(),e);
      }
 else {
        throw new RuntimeException(e);
      }
    }
 finally {
      if (activation.getFactHandle() != null) {
        InternalFactHandle factHandle=activation.getFactHandle();
        workingMemory.getEntryPointNode().modifyActivation(factHandle,activation.getPropagationContext(),workingMemory);
        activation.getPropagationContext().evaluateActionQueue(workingMemory);
      }
      for (LeftTuple tuple=(LeftTuple)activation.getTuple(); tuple != null; tuple=tuple.getParent()) {
        if (tuple.getLastHandle().isEvent()) {
          EventFactHandle handle=(EventFactHandle)tuple.getLastHandle();
          handle.decreaseActivationsCount();
          if (handle.isExpired()) {
            if (handle.getActivationsCount() <= 0) {
              handle.getEntryPoint().retract(handle);
            }
          }
        }
      }
    }
    if (ruleFlowGroup != null) {
      ruleFlowGroup.deactivateIfEmpty();
    }
    eventsupport.getAgendaEventSupport().fireAfterActivationFired(activation,this.workingMemory);
    unstageActivations();
  }
  finally {
    this.workingMemory.endOperation();
  }
}
