{
  boolean tryagain;
  int result=-1;
  try {
    do {
      this.workingMemory.prepareToFireActivation();
      tryagain=false;
      final InternalAgendaGroup group=(InternalAgendaGroup)getNextFocus();
      if (group != null) {
        final AgendaItem item=(AgendaItem)group.getNext();
        if (item != null) {
          InternalRuleFlowGroup ruleFlowGroup=null;
          if (item.getActivationNode() != null) {
            ruleFlowGroup=(InternalRuleFlowGroup)item.getActivationNode().getParentContainer();
            ruleFlowGroup.removeActivation(item);
          }
          if (filter == null || filter.accept(item)) {
            if (this.unlinkingEnabled && item.isRuleNetworkEvaluatorActivation()) {
              item.setActivated(false);
              int count=((RuleNetworkEvaluatorActivation)item).evaluateNetwork(this.workingMemory);
              if (count > 0) {
                addActivation(item,true);
              }
              result=0;
            }
 else {
              fireActivation(item);
              result=1;
            }
          }
 else {
            this.workingMemory.executeQueuedActions();
            final EventSupport eventsupport=(EventSupport)this.workingMemory;
            eventsupport.getAgendaEventSupport().fireActivationCancelled(item,this.workingMemory,MatchCancelledCause.FILTER);
            tryagain=true;
          }
          if (ruleFlowGroup != null) {
            ruleFlowGroup.deactivateIfEmpty();
            this.workingMemory.executeQueuedActions();
          }
        }
      }
    }
 while (tryagain);
  }
  finally {
    this.workingMemory.activationFired();
  }
  return result;
}
