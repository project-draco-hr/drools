{
  final KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("test_memoryLeak.drl",OutOfMemoryTest.class),ResourceType.DRL);
  assertFalse(kbuilder.getErrors().toString(),kbuilder.hasErrors());
  final KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  final StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  final int pcount=2;
  Person[] persons=new Person[pcount];
  FactHandle[] pHandles=new FactHandle[pcount];
  for (int i=0; i < persons.length; i++) {
    persons[i]=new Person("person-0-" + i);
    pHandles[i]=ksession.insert(persons[i]);
  }
  Cheese[] cheeses=new Cheese[pcount];
  FactHandle[] cHandles=new FactHandle[pcount];
  for (int i=0; i < cheeses.length; i++) {
    cheeses[i]=new Cheese("cheese-0-" + i);
    cHandles[i]=ksession.insert(cheeses[i]);
  }
  ksession.fireAllRules();
  for (int j=1; j <= 1; j++) {
    for (int i=0; i < pcount; i++) {
      cheeses[i].setType("cheese-" + j + "-"+ i);
      ksession.update(cHandles[i],cheeses[i]);
      persons[i].setName("person-" + j + "-"+ i);
      ksession.update(pHandles[i],persons[i]);
    }
    ksession.fireAllRules();
    System.out.println("DONE");
  }
  SessionInspector inspector=new SessionInspector(ksession);
  SessionReporter.addNamedTemplate("dump_tuples",getClass().getResourceAsStream("/org/drools/core/util/debug/dump_tuples.mvel"));
  String report=SessionReporter.generateReport("dump_tuples",inspector.getSessionInfo(),new HashMap<String,Object>());
  try {
    FileWriter out=new FileWriter("tupleDump.txt");
    out.write(report);
    out.close();
    System.out.println(report);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
