{
  ClassDefinition cd=new ClassDefinition("br.com.auster.TestClass2",null,new String[]{});
  cd.addField(new FieldDefinition("cutDate","java.util.Date",true));
  cd.addField(new FieldDefinition("dueDate","java.util.Date",true));
  cd.addField(new FieldDefinition("issueDate","java.util.Date",false));
  cd.addField(new FieldDefinition("cycleCode","java.lang.String",false));
  ClassBuilder cb=new ClassBuilder();
  Calendar cal=Calendar.getInstance();
  cal.set(Calendar.YEAR,2006);
  cal.set(Calendar.MONTH,Calendar.JUNE);
  cal.set(Calendar.DAY_OF_MONTH,01);
  Date cut=cal.getTime();
  cal.set(Calendar.MONTH,Calendar.JULY);
  cal.set(Calendar.DAY_OF_MONTH,13);
  Date d1=cal.getTime();
  cal.set(Calendar.DAY_OF_MONTH,15);
  Date d2=cal.getTime();
  try {
    Class klass=cb.buildAndLoadClass(cd);
    Object o1=klass.newInstance();
    cd.getField("cutDate").getFieldAccessor().setValue(o1,cut);
    cd.getField("dueDate").getFieldAccessor().setValue(o1,d1);
    Object o2=klass.newInstance();
    cd.getField("cutDate").getFieldAccessor().setValue(o2,cut);
    cd.getField("dueDate").getFieldAccessor().setValue(o2,d2);
    System.out.println(o1);
    System.out.println(o1.hashCode());
    System.out.println(o2);
    System.out.println(o2.hashCode());
    System.out.println(o1.equals(o2));
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
