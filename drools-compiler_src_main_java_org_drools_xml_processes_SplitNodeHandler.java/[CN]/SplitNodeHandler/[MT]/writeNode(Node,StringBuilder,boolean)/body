{
  Split splitNode=(Split)node;
  writeNode("split",splitNode,xmlDump,includeMeta);
  int type=splitNode.getType();
  if (type != 0) {
    xmlDump.append("type=\"" + type + "\" ");
  }
  if (splitNode.getConstraints().isEmpty()) {
    endNode(xmlDump);
  }
 else {
    xmlDump.append(">" + EOL);
    xmlDump.append("      <constraints>" + EOL);
    for (    Map.Entry<ConnectionRef,Constraint> entry : splitNode.getConstraints().entrySet()) {
      ConnectionRef connection=entry.getKey();
      Constraint constraint=entry.getValue();
      xmlDump.append("        <constraint " + "toNodeId=\"" + connection.getNodeId() + "\" ");
      String name=constraint.getName();
      if (name != null && !"".equals(name)) {
        xmlDump.append("name=\"" + XmlDumper.replaceIllegalChars(constraint.getName()) + "\" ");
      }
      int priority=constraint.getPriority();
      if (priority != 0) {
        xmlDump.append("priority=\"" + constraint.getPriority() + "\" ");
      }
      xmlDump.append("type=\"" + constraint.getType() + "\" ");
      String dialect=constraint.getDialect();
      if (dialect != null && !"".equals(dialect)) {
        xmlDump.append("dialect=\"" + dialect + "\" ");
      }
      String constraintString=constraint.getConstraint();
      if (constraintString != null) {
        xmlDump.append(">" + XmlDumper.replaceIllegalChars(constraintString) + "</constraint>"+ EOL);
      }
 else {
        xmlDump.append("/>" + EOL);
      }
    }
    xmlDump.append("      </constraints>" + EOL);
    endNode("split",xmlDump);
  }
}
