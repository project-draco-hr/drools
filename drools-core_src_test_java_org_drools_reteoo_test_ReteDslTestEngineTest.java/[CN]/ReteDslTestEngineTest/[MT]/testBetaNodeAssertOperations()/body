{
  String str="ObjectTypeNode\n";
  str+="    otn1, java.lang.Integer\n";
  str+="LeftInputAdapterNode\n";
  str+="    lian0, otn1\n";
  str+="ObjectTypeNode\n";
  str+="    otn2, java.lang.Integer\n";
  str+="Binding\n";
  str+="     p1, 0, java.lang.Integer, intValue\n";
  str+="JoinNode\n";
  str+="    join1, lian0, otn2\n";
  str+="    intValue, !=, p1\n";
  str+="Facts\n";
  str+="    0, 1, 2, 3\n";
  str+="assert\n";
  str+="    otn2 [h0, h2]\n";
  str+="    otn1 [h1, h3]\n";
  List<DslStep> steps=ReteDslTestEngine.buildDslCommands(new StringReader(str));
  ReteDslTestEngine tester=new ReteDslTestEngine();
  Map<String,Object> map=tester.run(steps);
  InternalWorkingMemory wm=(InternalWorkingMemory)map.get("WorkingMemory");
  List<InternalFactHandle> handles=(List<InternalFactHandle>)map.get("Handles");
  JoinNode join1=(JoinNode)map.get("join1");
  BetaMemory memory=(BetaMemory)wm.getNodeMemory(join1);
  assertEquals(2,memory.getRightTupleMemory().size());
  assertEquals(2,memory.getLeftTupleMemory().size());
}
