{
  Scenario sc=new Scenario();
  Expectation[] assertions=populateScenarioForFailure(sc);
  TypeResolver resolver=new ClassTypeResolver(new HashSet<String>(),Thread.currentThread().getContextClassLoader());
  resolver.addImport("org.drools.Cheese");
  resolver.addImport("org.drools.Person");
  WorkingMemory wm=getWorkingMemory("test_rules2.drl");
  ScenarioRunner run=new ScenarioRunner(sc,resolver,(InternalWorkingMemory)wm);
  assertSame(run.scenario,sc);
  assertFalse(sc.wasSuccessful());
  VerifyFact vf=(VerifyFact)assertions[1];
  assertFalse(((VerifyField)vf.fieldValues.get(0)).successResult);
  assertEquals("XXX",((VerifyField)vf.fieldValues.get(0)).expected);
  assertEquals("rule1",((VerifyField)vf.fieldValues.get(0)).actualResult);
  assertNotNull(((VerifyField)vf.fieldValues.get(0)).explanation);
  VerifyRuleFired vr=(VerifyRuleFired)assertions[4];
  assertFalse(vr.successResult);
  assertEquals(2,vr.expectedCount.intValue());
  assertEquals(0,vr.actualResult.intValue());
}
