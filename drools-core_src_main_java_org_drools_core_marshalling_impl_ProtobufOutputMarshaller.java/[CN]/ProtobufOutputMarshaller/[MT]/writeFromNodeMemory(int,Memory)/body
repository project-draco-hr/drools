{
  FromMemory fromMemory=(FromMemory)memory;
  if (fromMemory.getBetaMemory().getLeftTupleMemory().size() > 0) {
    ProtobufMessages.NodeMemory.FromNodeMemory.Builder _from=ProtobufMessages.NodeMemory.FromNodeMemory.newBuilder();
    final org.drools.core.util.Iterator<LeftTuple> tupleIter=fromMemory.getBetaMemory().getLeftTupleMemory().iterator();
    for (LeftTuple leftTuple=tupleIter.next(); leftTuple != null; leftTuple=tupleIter.next()) {
      Map<Object,RightTuple> matches=(Map<Object,RightTuple>)leftTuple.getContextObject();
      ProtobufMessages.NodeMemory.FromNodeMemory.FromContext.Builder _context=ProtobufMessages.NodeMemory.FromNodeMemory.FromContext.newBuilder().setTuple(PersisterHelper.createTuple(leftTuple));
      for (      RightTuple rightTuple : matches.values()) {
        FactHandle _handle=ProtobufMessages.FactHandle.newBuilder().setId(rightTuple.getFactHandle().getId()).setRecency(rightTuple.getFactHandle().getRecency()).build();
        _context.addHandle(_handle);
      }
      _from.addContext(_context.build());
    }
    return ProtobufMessages.NodeMemory.newBuilder().setNodeId(nodeId).setNodeType(ProtobufMessages.NodeMemory.NodeType.FROM).setFrom(_from.build()).build();
  }
  return null;
}
