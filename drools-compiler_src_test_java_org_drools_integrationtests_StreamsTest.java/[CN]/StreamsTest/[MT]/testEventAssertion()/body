{
  final Reader reader=new InputStreamReader(getClass().getResourceAsStream("test_EntryPoint.drl"));
  final RuleBase ruleBase=loadRuleBase(reader);
  final WorkingMemory wm=ruleBase.newTemporalSession(ClockType.PSEUDO_CLOCK);
  final List results=new ArrayList();
  wm.setGlobal("results",results);
  StockTick tick1=new StockTick(1,"DROO",50,System.currentTimeMillis());
  StockTick tick2=new StockTick(2,"ACME",10,System.currentTimeMillis());
  StockTick tick3=new StockTick(3,"ACME",10,System.currentTimeMillis());
  StockTick tick4=new StockTick(4,"DROO",50,System.currentTimeMillis());
  InternalFactHandle handle1=(InternalFactHandle)wm.insert(tick1);
  InternalFactHandle handle2=(InternalFactHandle)wm.insert(tick2);
  InternalFactHandle handle3=(InternalFactHandle)wm.insert(tick3);
  InternalFactHandle handle4=(InternalFactHandle)wm.insert(tick4);
  assertNotNull(handle1);
  assertNotNull(handle2);
  assertNotNull(handle3);
  assertNotNull(handle4);
  wm.fireAllRules();
  assertEquals(0,results.size());
  StockTick tick5=new StockTick(5,"DROO",50,System.currentTimeMillis());
  StockTick tick6=new StockTick(6,"ACME",10,System.currentTimeMillis());
  StockTick tick7=new StockTick(7,"ACME",15,System.currentTimeMillis());
  StockTick tick8=new StockTick(8,"DROO",50,System.currentTimeMillis());
  WorkingMemoryEntryPoint entry=wm.getWorkingMemoryEntryPoint("StockStream");
  InternalFactHandle handle5=(InternalFactHandle)entry.insert(tick5);
  InternalFactHandle handle6=(InternalFactHandle)entry.insert(tick6);
  InternalFactHandle handle7=(InternalFactHandle)entry.insert(tick7);
  InternalFactHandle handle8=(InternalFactHandle)entry.insert(tick8);
  assertNotNull(handle5);
  assertNotNull(handle6);
  assertNotNull(handle7);
  assertNotNull(handle8);
  wm.fireAllRules();
  assertEquals(1,results.size());
  assertSame(tick7,results.get(0));
}
