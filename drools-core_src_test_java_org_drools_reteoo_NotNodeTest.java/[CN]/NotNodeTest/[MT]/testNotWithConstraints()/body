{
  this.constraint.isAllowed=false;
  final Cheese cheddar=new Cheese("cheddar",10);
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.assertObject(cheddar);
  final ReteTuple tuple1=new ReteTuple(f0);
  this.node.assertTuple(tuple1,this.context,this.workingMemory);
  assertLength(1,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
  assertEquals(new ReteTuple(f0),((Object[])this.sink.getAsserted().get(0))[0]);
  final Cheese brie=new Cheese("brie",10);
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.assertObject(brie);
  this.node.assertObject(f1,this.context,this.workingMemory);
  assertLength(1,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
  final DefaultFactHandle f2=(DefaultFactHandle)this.workingMemory.assertObject(new Cheese("gouda",10));
  final ReteTuple tuple2=new ReteTuple(f2);
  this.node.assertTuple(tuple2,this.context,this.workingMemory);
  assertLength(2,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
}
