{
  if (currentField == null) {
    boolean isMethod=currentMethodInfo != null;
    if (isMethod) {
      final ExpressionMethod em=new ExpressionMethod(currentMethodInfo.getName(),currentMethodInfo.getReturnClassType(),currentMethodInfo.getGenericType(),currentMethodInfo.getParametricReturnType());
      final List<String> parameters=parseExpressionParameters(expressionPart);
      for (int index=0; index < currentMethodInfo.getParams().size(); index++) {
        final String paramDataType=currentMethodInfo.getParams().get(index);
        final String paramValue=getParameterValue(paramDataType,parameters,index);
        if (paramValue != null) {
          final ExpressionFormLine param=new ExpressionFormLine(index);
          param.appendPart(new ExpressionMethodParameter(paramValue,paramDataType,paramDataType));
          em.putParam(paramDataType,param);
        }
      }
      expression.appendPart(em);
    }
 else {
      expression.appendPart(new ExpressionText(expressionPart));
    }
  }
 else   if ("Collection".equals(currentField.getType())) {
    expression.appendPart(new ExpressionCollection(expressionPart,currentField.getClassName(),currentField.getType(),dmo.getProjectFieldParametersType().get(factType + "#" + expressionPart)));
  }
 else {
    expression.appendPart(new ExpressionField(expressionPart,currentField.getClassName(),currentField.getType()));
  }
}
