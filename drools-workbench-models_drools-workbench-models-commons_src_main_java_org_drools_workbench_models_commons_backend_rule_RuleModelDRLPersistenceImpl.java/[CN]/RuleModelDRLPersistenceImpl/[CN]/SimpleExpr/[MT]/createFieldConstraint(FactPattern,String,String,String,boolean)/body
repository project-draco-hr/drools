{
  String operatorParams=null;
  if (value != null && value.startsWith("[")) {
    int endSquare=value.indexOf(']');
    operatorParams=value.substring(1,endSquare).trim();
    value=value.substring(endSquare + 1).trim();
  }
  SingleFieldConstraint fieldConstraint=isExpression ? createExpressionBuilderConstraint(factPattern,fieldName,operator,value) : createSingleFieldConstraint(fieldName,operator,value);
  if (operatorParams != null) {
    int i=0;
    for (    String param : operatorParams.split(",")) {
      ((BaseSingleFieldConstraint)fieldConstraint).setParameter("" + i++,param.trim());
    }
    ((BaseSingleFieldConstraint)fieldConstraint).setParameter("org.drools.workbench.models.commons.backend.rule.visibleParameterSet","" + i);
    ((BaseSingleFieldConstraint)fieldConstraint).setParameter("org.drools.workbench.models.commons.backend.rule.operatorParameterGenerator","org.drools.workbench.models.commons.backend.rule.CEPOperatorParameterDRLBuilder");
  }
  if (fieldName.equals("this") && (operator == null || operator.equals("!= null"))) {
    fieldConstraint.setFieldType(DataType.TYPE_THIS);
  }
  fieldConstraint.setFactType(factPattern.getFactType());
  ModelField field=findField(dmo.getProjectModelFields().get(factPattern.getFactType()),fieldConstraint.getFieldName());
  if (field != null) {
    fieldConstraint.setFieldType(field.getType());
  }
  return fieldConstraint;
}
