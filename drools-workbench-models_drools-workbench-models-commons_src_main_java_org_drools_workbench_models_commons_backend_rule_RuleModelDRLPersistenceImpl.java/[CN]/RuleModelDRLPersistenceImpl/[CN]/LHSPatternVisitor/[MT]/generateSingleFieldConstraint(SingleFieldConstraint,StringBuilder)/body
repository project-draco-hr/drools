{
  if (constr.getConstraintValueType() == BaseSingleFieldConstraint.TYPE_PREDICATE) {
    buf.append("eval( ");
    buf.append(constr.getValue());
    buf.append(" )");
  }
 else {
    if (constr.isBound()) {
      bindingsFields.put(constr.getFieldBinding(),constr);
      buf.append(constr.getFieldBinding());
      buf.append(" : ");
    }
    if ((constr.getOperator() != null && (constr.getValue() != null || constr.getOperator().equals("== null") || constr.getOperator().equals("!= null"))) || constr.getFieldBinding() != null || constr.getConstraintValueType() == BaseSingleFieldConstraint.TYPE_EXPR_BUILDER_VALUE || constr instanceof SingleFieldConstraintEBLeftSide) {
      SingleFieldConstraint parent=(SingleFieldConstraint)constr.getParent();
      StringBuilder parentBuf=new StringBuilder();
      while (parent != null) {
        String fieldName=parent.getFieldName();
        parentBuf.insert(0,fieldName + ".");
        parent=(SingleFieldConstraint)parent.getParent();
      }
      buf.append(parentBuf);
      if (constr instanceof SingleFieldConstraintEBLeftSide) {
        buf.append(((SingleFieldConstraintEBLeftSide)constr).getExpressionLeftSide().getText());
      }
 else {
        String fieldName=constr.getFieldName();
        buf.append(fieldName);
      }
    }
    Map<String,String> parameters=null;
    if (constr instanceof HasParameterizedOperator) {
      HasParameterizedOperator hop=constr;
      parameters=hop.getParameters();
    }
    if (constr instanceof SingleFieldConstraintEBLeftSide) {
      SingleFieldConstraintEBLeftSide sfexp=(SingleFieldConstraintEBLeftSide)constr;
      addFieldRestriction(buf,sfexp.getConstraintValueType(),sfexp.getExpressionLeftSide().getGenericType(),sfexp.getOperator(),parameters,sfexp.getValue(),sfexp.getExpressionValue());
    }
 else {
      addFieldRestriction(buf,constr.getConstraintValueType(),constr.getFieldType(),constr.getOperator(),parameters,constr.getValue(),constr.getExpressionValue());
    }
    if (constr.getConnectives() != null) {
      for (int j=0; j < constr.getConnectives().length; j++) {
        final ConnectiveConstraint conn=constr.getConnectives()[j];
        parameters=null;
        if (conn instanceof HasParameterizedOperator) {
          HasParameterizedOperator hop=(HasParameterizedOperator)conn;
          parameters=hop.getParameters();
        }
        addFieldRestriction(buf,conn.getConstraintValueType(),conn.getFieldType(),conn.getOperator(),parameters,conn.getValue(),conn.getExpressionValue());
      }
    }
  }
}
