{
  generator.setInterfaces(ReturnValueStub.class,CompiledInvoker.class).addField(ACC_PRIVATE,"returnValue",ReturnValueExpression.class);
  generator.addMethod(ACC_PUBLIC,"createContext",generator.methodDescr(Object.class),new ClassGenerator.MethodBody(){
    public void body(    MethodVisitor mv){
      mv.visitInsn(ACONST_NULL);
      mv.visitInsn(ARETURN);
    }
  }
).addMethod(ACC_PUBLIC,"replaceDeclaration",generator.methodDescr(null,Declaration.class,Declaration.class)).addMethod(ACC_PUBLIC,"evaluate",generator.methodDescr(FieldValue.class,Object.class,Tuple.class,Declaration[].class,Declaration[].class,WorkingMemory.class,Object.class),new String[]{"java/lang/Exception"},new ClassGenerator.MethodBody(){
    public void body(    MethodVisitor mv){
      Label syncStart=new Label();
      Label syncEnd=new Label();
      Label l1=new Label();
      Label l2=new Label();
      mv.visitTryCatchBlock(syncStart,l1,l2,null);
      Label l3=new Label();
      mv.visitTryCatchBlock(l2,l3,l2,null);
      mv.visitVarInsn(ALOAD,0);
      mv.visitInsn(DUP);
      mv.visitVarInsn(ASTORE,7);
      mv.visitInsn(MONITORENTER);
      mv.visitLabel(syncStart);
      getFieldFromThis("returnValue",ReturnValueExpression.class);
      Label ifNotInitialized=new Label();
      mv.visitJumpInsn(IFNONNULL,ifNotInitialized);
      mv.visitVarInsn(ALOAD,0);
      mv.visitVarInsn(ALOAD,2);
      mv.visitVarInsn(ALOAD,3);
      mv.visitVarInsn(ALOAD,4);
      mv.visitVarInsn(ALOAD,5);
      invokeStatic(ReturnValueGenerator.class,"generate",null,ReturnValueStub.class,Tuple.class,Declaration[].class,Declaration[].class,WorkingMemory.class);
      mv.visitLabel(ifNotInitialized);
      mv.visitVarInsn(ALOAD,7);
      mv.visitInsn(MONITOREXIT);
      mv.visitLabel(l1);
      mv.visitJumpInsn(GOTO,syncEnd);
      mv.visitLabel(l2);
      mv.visitVarInsn(ASTORE,8);
      mv.visitVarInsn(ALOAD,7);
      mv.visitInsn(MONITOREXIT);
      mv.visitLabel(l3);
      mv.visitVarInsn(ALOAD,8);
      mv.visitInsn(ATHROW);
      mv.visitLabel(syncEnd);
      getFieldFromThis("returnValue",ReturnValueExpression.class);
      mv.visitVarInsn(ALOAD,1);
      mv.visitVarInsn(ALOAD,2);
      mv.visitVarInsn(ALOAD,3);
      mv.visitVarInsn(ALOAD,4);
      mv.visitVarInsn(ALOAD,5);
      mv.visitVarInsn(ALOAD,6);
      invokeInterface(ReturnValueExpression.class,"evaluate",FieldValue.class,Object.class,Tuple.class,Declaration[].class,Declaration[].class,WorkingMemory.class,Object.class);
      mv.visitInsn(ARETURN);
    }
  }
).addMethod(ACC_PUBLIC,"setReturnValue",generator.methodDescr(null,ReturnValueExpression.class),new ClassGenerator.MethodBody(){
    public void body(    MethodVisitor mv){
      putFieldInThisFromRegistry("returnValue",ReturnValueExpression.class,1);
      mv.visitInsn(RETURN);
    }
  }
);
}
