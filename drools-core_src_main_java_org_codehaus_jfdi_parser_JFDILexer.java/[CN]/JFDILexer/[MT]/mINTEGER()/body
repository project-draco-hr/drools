{
  try {
    ruleNestingLevel++;
    int _type=INTEGER;
    int _start=getCharIndex();
    int _line=getLine();
    int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      int alt5=3;
      int LA5_0=input.LA(1);
      if (((LA5_0 >= '1' && LA5_0 <= '9'))) {
        alt5=1;
      }
 else       if ((LA5_0 == '0')) {
        int LA5_2=input.LA(2);
        if ((LA5_2 == 'x')) {
          alt5=2;
        }
 else         if (((LA5_2 >= '0' && LA5_2 <= '7'))) {
          alt5=3;
        }
 else {
          NoViableAltException nvae=new NoViableAltException("272:3: ( ( '1' .. '9' ) ( '0' .. '9' )* | '0x' ( ('0'..'9'|'A'..'F'|'a'..'f'))+ | '0' ( '0' .. '7' )+ )",5,2,input);
          throw nvae;
        }
      }
 else {
        NoViableAltException nvae=new NoViableAltException("272:3: ( ( '1' .. '9' ) ( '0' .. '9' )* | '0x' ( ('0'..'9'|'A'..'F'|'a'..'f'))+ | '0' ( '0' .. '7' )+ )",5,0,input);
        throw nvae;
      }
switch (alt5) {
case 1:
{
{
            matchRange('1','9');
          }
          loop2:           do {
            int alt2=2;
            int LA2_0=input.LA(1);
            if (((LA2_0 >= '0' && LA2_0 <= '9'))) {
              alt2=1;
            }
switch (alt2) {
case 1:
{
                matchRange('0','9');
              }
            break;
default :
          break loop2;
      }
    }
 while (true);
  }
break;
case 2:
{
match("0x");
int cnt3=0;
loop3: do {
  int alt3=2;
  int LA3_0=input.LA(1);
  if (((LA3_0 >= '0' && LA3_0 <= '9') || (LA3_0 >= 'A' && LA3_0 <= 'F') || (LA3_0 >= 'a' && LA3_0 <= 'f'))) {
    alt3=1;
  }
switch (alt3) {
case 1:
{
      if ((input.LA(1) >= '0' && input.LA(1) <= '9') || (input.LA(1) >= 'A' && input.LA(1) <= 'F') || (input.LA(1) >= 'a' && input.LA(1) <= 'f')) {
        input.consume();
      }
 else {
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
    }
  break;
default :
if (cnt3 >= 1) break loop3;
EarlyExitException eee=new EarlyExitException(3,input);
throw eee;
}
cnt3++;
}
 while (true);
}
break;
case 3:
{
match('0');
int cnt4=0;
loop4: do {
int alt4=2;
int LA4_0=input.LA(1);
if (((LA4_0 >= '0' && LA4_0 <= '7'))) {
alt4=1;
}
switch (alt4) {
case 1:
{
matchRange('0','7');
}
break;
default :
if (cnt4 >= 1) break loop4;
EarlyExitException eee=new EarlyExitException(4,input);
throw eee;
}
cnt4++;
}
 while (true);
}
break;
}
}
if (token == null && ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
  finally {
ruleNestingLevel--;
}
}
