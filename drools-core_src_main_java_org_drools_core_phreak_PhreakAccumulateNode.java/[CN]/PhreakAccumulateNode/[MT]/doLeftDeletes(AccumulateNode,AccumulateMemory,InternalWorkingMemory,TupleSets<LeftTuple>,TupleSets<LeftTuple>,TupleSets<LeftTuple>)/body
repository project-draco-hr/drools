{
  BetaMemory bm=am.getBetaMemory();
  TupleMemory ltm=bm.getLeftTupleMemory();
  Accumulate accumulate=accNode.getAccumulate();
  for (LeftTuple leftTuple=srcLeftTuples.getDeleteFirst(); leftTuple != null; ) {
    LeftTuple next=leftTuple.getStagedNext();
    if (leftTuple.getMemory() != null) {
      ltm.remove(leftTuple);
      final AccumulateContext accctx=(AccumulateContext)leftTuple.getContextObject();
      leftTuple.setContextObject(null);
      removePreviousMatchesForLeftTuple(accumulate,leftTuple,wm,am,accctx,false);
      if (accctx.propagated) {
switch (accctx.resultLeftTuple.getStagedType()) {
case LeftTuple.INSERT:
          stagedLeftTuples.removeInsert(accctx.resultLeftTuple);
        break;
case LeftTuple.UPDATE:
      stagedLeftTuples.removeUpdate(accctx.resultLeftTuple);
    break;
}
trgLeftTuples.addDelete(accctx.resultLeftTuple);
}
}
leftTuple.clearStaged();
leftTuple=next;
}
}
