{
  TupleMemory rtm=am.getBetaMemory().getRightTupleMemory();
  Accumulate accumulate=accNode.getAccumulate();
  for (RightTuple rightTuple=srcRightTuples.getDeleteFirst(); rightTuple != null; ) {
    RightTuple next=rightTuple.getStagedNext();
    if (rightTuple.getMemory() != null) {
      rtm.remove(rightTuple);
      if (rightTuple.getFirstChild() != null) {
        LeftTuple match=rightTuple.getFirstChild();
        while (match != null) {
          LeftTuple nextLeft=match.getRightParentNext();
          LeftTuple leftTuple=match.getLeftParent();
          final AccumulateContext accctx=(AccumulateContext)leftTuple.getContextObject();
          removeMatch(accNode,accumulate,rightTuple,match,wm,am,accctx,true);
          if (leftTuple.getStagedType() == LeftTuple.NONE) {
            trgLeftTuples.addUpdate(leftTuple);
          }
          match=nextLeft;
        }
      }
    }
    rightTuple.clearStaged();
    rightTuple=next;
  }
}
