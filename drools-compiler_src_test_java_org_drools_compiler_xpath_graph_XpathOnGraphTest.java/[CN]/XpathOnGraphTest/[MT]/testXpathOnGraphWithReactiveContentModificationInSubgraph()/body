{
  String drl="import org.drools.compiler.xpath.graph.*;\n" + "import " + Library.class.getCanonicalName() + ";\n"+ "import "+ Book.class.getCanonicalName()+ ";\n"+ "import "+ Person.class.getCanonicalName()+ ";\n"+ "global java.util.List list\n"+ "\n"+ "rule R when\n"+ "  Vertex( it instanceof Library, $v : /outVs/outVs{ /it{ #Person, age > 25 } } )\n"+ "then\n"+ "  list.add( ((Person)$v.getIt()).getName() );\n"+ "end\n";
  KieSession ksession=new KieHelper().addContent(drl,ResourceType.DRL).build().newKieSession();
  ReteDumper.dumpRete(ksession);
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  Vertex<Library> library=getGraph();
  ksession.insert(library);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("Mario"));
  list.clear();
  Person raoul=(Person)library.getOutVs().get(0).getOutVs().get(0).getIt();
  assertEquals("Raoul",raoul.getName());
  raoul.setAge(raoul.getAge() + 1);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("Raoul"));
}
