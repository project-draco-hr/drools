{
  List<T> vals=new LinkedList<T>();
  int l=key.length();
  if (l == 0) {
    return new ArrayList(getSortedMembers());
  }
  int n=line.lastKey().length();
  if (l > n) {
    return vals;
  }
  BitSet start=new BitSet(n);
  BitSet end=new BitSet(n);
  start.or(key);
  start.set(l - 1);
  end.set(n);
  for (  HierNode<T> val : line.subMap(start,end).values()) {
    BitSet x=val.getBitMask();
    if (superset(x,key) >= 0) {
      vals.add(val.getValue());
    }
  }
  start.clear(l - 1);
  return vals;
}
