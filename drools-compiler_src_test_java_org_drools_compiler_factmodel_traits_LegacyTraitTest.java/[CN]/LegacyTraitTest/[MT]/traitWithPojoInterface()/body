{
  String source="package org.drools.compiler.test;" + "import org.drools.compiler.factmodel.traits.LegacyTraitTest.Procedure; " + "import org.drools.compiler.factmodel.traits.LegacyTraitTest; "+ "import org.drools.compiler.factmodel.traits.LegacyTraitTest.ExtendedProcedureImpl; "+ "import org.drools.compiler.factmodel.traits.LegacyTraitTest.ExtendedProcedure; "+ "declare trait ExtendedProcedure "+ "   @role( event )"+ "end "+ "declare trait Surgery extends ExtendedProcedure end "+ "declare ExtendedProcedureImpl "+ "    @Traitable "+ "end "+ "rule 'Don Procedure' "+ "when "+ "    $p : ExtendedProcedure() "+ "then "+ "    don( $p, Surgery.class ); "+ "end "+ "rule 'Test 1' "+ "dialect 'mvel' "+ "when "+ "    $s1 : ExtendedProcedure( $subject : subject ) "+ "    $s2 : ExtendedProcedure( subject == $subject ) "+ "then "+ "end "+ "rule 'Test 2' "+ "dialect 'mvel' "+ "when "+ "    $s1 : ExtendedProcedure( $subject : subject.name ) "+ "    $s2 : ExtendedProcedure( subject.name == $subject ) "+ "then "+ "end "+ "rule 'Test 3' "+ "dialect 'mvel' "+ "when "+ "    $s1 : ExtendedProcedure( ) "+ "then "+ "    update( $s1 ); "+ "end "+ "\n";
  StatefulKnowledgeSession ks=getSessionFromString(source);
  TraitFactory.setMode(mode,ks.getKieBase());
  ExtendedProcedureImpl procedure1=new ExtendedProcedureImpl();
  ExtendedProcedureImpl procedure2=new ExtendedProcedureImpl();
  PatientImpl patient1=new PatientImpl();
  patient1.setName("John");
  procedure1.setSubject(patient1);
  procedure1.setPers(new PatientImpl());
  PatientImpl patient2=new PatientImpl();
  patient2.setName("John");
  procedure2.setSubject(patient2);
  procedure2.setPers(new PatientImpl());
  ks.insert(procedure1);
  ks.insert(procedure2);
  ks.fireAllRules(500);
}
