{
  if (ordered) {
    return;
  }
  Map<String,List<RuleTerminalNode>> map=new HashMap<String,List<RuleTerminalNode>>();
  for (  BaseNode[] nodes : this.rules.values()) {
    for (    BaseNode node : nodes) {
      if (node.getType() == NodeTypeEnums.RuleTerminalNode) {
        RuleTerminalNode terminalNode=(RuleTerminalNode)node;
        String agendaGroup=terminalNode.getRule().getAgendaGroup();
        if ("".equals(agendaGroup)) {
          agendaGroup="MAIN";
        }
        List<RuleTerminalNode> rules=map.get(agendaGroup);
        if (rules == null) {
          rules=new ArrayList<RuleTerminalNode>();
          map.put(agendaGroup,rules);
        }
        rules.add(terminalNode);
      }
    }
  }
  for (  Map.Entry<String,List<RuleTerminalNode>> entry : map.entrySet()) {
    String agendaGroup=entry.getKey();
    List<RuleTerminalNode> rules=entry.getValue();
    Collections.sort(rules,RuleSequenceComparator.INSTANCE);
    int i=0;
    for (    RuleTerminalNode node : rules) {
      node.setSequence(i++);
    }
    ruleBase.getAgendaGroupRuleTotals().put(agendaGroup,i);
  }
  ordered=true;
}
