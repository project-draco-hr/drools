{
  boolean isAllowed=true;
  if (alphaConstraints != null) {
    for (int i=0, length=alphaConstraints.length; i < length; i++) {
      if (!alphaConstraints[i].isAllowed(rightTuple.getFactHandle(),wm,fm.alphaContexts[i])) {
        isAllowed=false;
        break;
      }
    }
  }
  if (isAllowed && betaConstraints.isAllowedCachedLeft(context,rightTuple.getFactHandle())) {
    if (rightTuple.firstChild == null) {
      LeftTuple childLeftTuple=sink.createLeftTuple(leftTuple,rightTuple,null,null,sink,useLeftMemory);
      childLeftTuple.setPropagationContext(propagationContext);
      trgLeftTuples.addInsert(childLeftTuple);
    }
 else {
      LeftTuple childLeftTuple=rightTuple.firstChild;
      childLeftTuple.setPropagationContext(propagationContext);
      updateChildLeftTuple(childLeftTuple,stagedLeftTuples,trgLeftTuples);
    }
  }
 else {
    deleteChildLeftTuple(propagationContext,trgLeftTuples,stagedLeftTuples,rightTuple.firstChild);
  }
}
