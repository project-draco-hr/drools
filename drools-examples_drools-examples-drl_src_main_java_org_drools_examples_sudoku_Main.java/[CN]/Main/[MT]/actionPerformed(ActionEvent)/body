{
  if (ev.getSource().equals(solveButton)) {
    long startTime=System.currentTimeMillis();
    if (droolsSudokuGridModel.solve()) {
      solveButton.setText("Solved (" + (System.currentTimeMillis() - startTime) + " ms)");
      solveButton.setEnabled(false);
    }
 else {
      solveButton.setText("Unsolved (" + (System.currentTimeMillis() - startTime) + " ms)");
      solveButton.setEnabled(false);
    }
  }
 else   if (ev.getSource().equals(openMenuItem)) {
    if (fileChooser == null) {
      fileChooser=new JFileChooser();
    }
    try {
      if (fileChooser.showOpenDialog(mainFrame) == JFileChooser.APPROVE_OPTION) {
        System.out.println(fileChooser.getSelectedFile().getCanonicalPath());
      }
    }
 catch (    IOException ex) {
      ex.printStackTrace();
    }
  }
 else   if (ev.getSource().equals(exitMenuItem)) {
    System.exit(0);
  }
 else   if (ev.getSource() instanceof JMenuItem) {
    JMenuItem menuItem=(JMenuItem)ev.getSource();
    droolsSudokuGridModel=new DroolsSudokuGridModel(SudokuGridSamples.getInstance().getSample(menuItem.getText()));
    sudokuGridView.setModel(droolsSudokuGridModel);
    solveButton.setText("Solve");
    solveButton.setEnabled(true);
  }
 else {
  }
}
