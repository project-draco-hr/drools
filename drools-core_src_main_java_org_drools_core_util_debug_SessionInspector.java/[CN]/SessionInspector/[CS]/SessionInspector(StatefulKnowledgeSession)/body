{
  this.session=session;
  this.visitors=new HashMap<Class<? extends NetworkNode>,NetworkNodeVisitor>();
  this.visitors.put(RuleTerminalNode.class,RuleTerminalNodeVisitor.INSTANCE);
  this.visitors.put(QueryTerminalNode.class,QueryTerminalNodeVisitor.INSTANCE);
  this.visitors.put(Rete.class,DefaultNetworkNodeVisitor.INSTANCE);
  this.visitors.put(EntryPointNode.class,DefaultNetworkNodeVisitor.INSTANCE);
  this.visitors.put(ObjectTypeNode.class,ObjectTypeNodeVisitor.INSTANCE);
  this.visitors.put(AlphaNode.class,AlphaNodeVisitor.INSTANCE);
  this.visitors.put(RightInputAdapterNode.class,RightInputAdapterNodeVisitor.INSTANCE);
  this.visitors.put(PropagationQueuingNode.class,PropagationQueueingNodeVisitor.INSTANCE);
  this.visitors.put(JoinNode.class,BetaNodeVisitor.INSTANCE);
  this.visitors.put(NotNode.class,BetaNodeVisitor.INSTANCE);
  this.visitors.put(ExistsNode.class,BetaNodeVisitor.INSTANCE);
  this.visitors.put(AccumulateNode.class,AccumulateNodeVisitor.INSTANCE);
  this.visitors.put(CollectNode.class,CollectNodeVisitor.INSTANCE);
  this.visitors.put(EvalConditionNode.class,EvalConditionNodeVisitor.INSTANCE);
  this.visitors.put(FromNode.class,FromNodeVisitor.INSTANCE);
  this.visitors.put(LeftInputAdapterNode.class,LeftInputAdapterNodeVisitor.INSTANCE);
}
