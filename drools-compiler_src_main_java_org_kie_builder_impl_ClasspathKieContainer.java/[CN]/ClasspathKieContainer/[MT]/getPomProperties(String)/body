{
  String rootPath=urlPathToAdd;
  if (rootPath.lastIndexOf(':') > 0) {
    rootPath=urlPathToAdd.substring(rootPath.lastIndexOf(':') + 1);
  }
  if (urlPathToAdd.endsWith(".jar")) {
    File actualZipFile=new File(rootPath);
    if (!actualZipFile.exists()) {
      log.error("Unable to load pom.properties from" + urlPathToAdd + " as jarPath cannot be found\n"+ rootPath);
    }
    ZipFile zipFile=null;
    try {
      zipFile=new ZipFile(actualZipFile);
      String file=KieBuilderImpl.findPomProperties(zipFile);
      if (file == null) {
        throw new IOException();
      }
      ZipEntry zipEntry=zipFile.getEntry(file);
      return StringUtils.readFileAsString(new InputStreamReader(zipFile.getInputStream(zipEntry)));
    }
 catch (    Exception e) {
      log.error("Unable to load pom.properties from" + urlPathToAdd + "\n"+ e.getMessage());
    }
 finally {
      try {
        zipFile.close();
      }
 catch (      IOException e) {
        log.error("Error when closing InputStream to " + urlPathToAdd + "\n"+ e.getMessage());
      }
    }
  }
 else {
    FileReader reader=null;
    try {
      File file=KieBuilderImpl.findPomProperties(new File(rootPath));
      if (file == null) {
        throw new IOException();
      }
      reader=new FileReader(file);
      return StringUtils.toString(reader);
    }
 catch (    Exception e) {
      log.error("Unable to load pom.properties from" + urlPathToAdd + "\n"+ e.getMessage());
    }
 finally {
      if (reader != null) {
        try {
          reader.close();
        }
 catch (        IOException e) {
          log.error("Error when closing InputStream to " + urlPathToAdd + "\n"+ e.getMessage());
        }
      }
    }
  }
  log.error("Unable to load pom.properties from" + urlPathToAdd);
  return null;
}
