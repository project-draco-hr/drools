{
  String header="package org.drools.test;\n";
  header+="import java.util.List;\n";
  header+="import org.drools.Person\n";
  header+="import org.drools.Cheese\n";
  header+="global java.util.List list;\n";
  String rule1="rule \"not rule test\"\n";
  rule1+="salience 10\n";
  rule1+="when\n";
  rule1+="    Person()\n";
  rule1+="    not Cheese( price >= 5 )\n";
  rule1+="then\n";
  rule1+="    list.add( new Integer( 5 ) );\n";
  rule1+="end\n";
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new StringReader(header + rule1));
  final Package pkg=builder.getPackage();
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  StatefulSession session=ruleBase.newStatefulSession();
  List list=new ArrayList();
  session.setGlobal("list",list);
  session=getSerialisedStatefulSession(session);
  Person bobba=new Person("bobba fet",50);
  session.insert(bobba);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(1,list.size());
  session=getSerialisedStatefulSession(session);
  Person darth=new Person("darth vadar",200);
  session.insert(darth);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(2,list.size());
  session=getSerialisedStatefulSession(session);
  Cheese stilton=new Cheese("stilton",5);
  session.insert(stilton);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(2,list.size());
  session=getSerialisedStatefulSession(session);
  session.retract(session.getFactHandle(stilton));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(4,list.size());
  session=getSerialisedStatefulSession(session);
  session.insert(stilton);
  session=getSerialisedStatefulSession(session);
  Cheese brie=new Cheese("brie",18);
  session.insert(brie);
  session.fireAllRules();
  assertEquals(4,list.size());
  session.retract(session.getFactHandle(stilton));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(4,list.size());
  session.retract(session.getFactHandle(bobba));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(4,list.size());
  session.retract(session.getFactHandle(brie));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(5,list.size());
}
