{
  RuleBase ruleBase=wm.getRuleBase();
  PlaceholderResolverStrategyFactory factory=new PlaceholderResolverStrategyFactory();
  factory.addPlaceholderResolverStrategy(new SerializablePlaceholderResolverStrategy());
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  OutputPersister op=new OutputPersister((InternalRuleBase)ruleBase,(InternalWorkingMemory)wm,new ObjectOutputStream(baos),factory);
  op.write();
  byte[] b1=baos.toByteArray();
  ByteArrayInputStream bais=new ByteArrayInputStream(b1);
  InputPersister ip=new InputPersister((InternalRuleBase)ruleBase,new ObjectInputStream(bais),factory);
  WorkingMemory wm2=ip.read();
  wm2.setGlobalResolver(wm.getGlobalResolver());
  baos=new ByteArrayOutputStream();
  op=new OutputPersister((InternalRuleBase)ruleBase,(InternalWorkingMemory)wm2,new ObjectOutputStream(baos),factory);
  op.write();
  byte[] b2=baos.toByteArray();
  assertTrue(areByteArraysEqual(b1,b2));
  bais=new ByteArrayInputStream(b2);
  ip=new InputPersister((InternalRuleBase)ruleBase,new ObjectInputStream(bais),factory);
  wm2=ip.read();
  wm2.setGlobalResolver(wm.getGlobalResolver());
  return wm2;
}
