{
  RuleDescr rule=parse("(defrule xxx ?b <- (person (name \"yyy\"&?bf|~\"zzz\"|~=(+ 2 3)&:(< 1 2)) ) ?c <- (hobby (type ?bf2&~iii) (rating fivestar) ) => )").defrule();
  assertEquals("xxx",rule.getName());
  AndDescr lhs=rule.getLhs();
  List lhsList=lhs.getDescrs();
  assertEquals(2,lhsList.size());
  PatternDescr personPattern=(PatternDescr)lhsList.get(0);
  assertEquals("$b",personPattern.getIdentifier());
  assertEquals("person",personPattern.getObjectType());
  List colList=personPattern.getDescrs();
  assertEquals(3,colList.size());
  BindingDescr fbd=(BindingDescr)colList.get(0);
  assertEquals("$bf",fbd.getVariable());
  assertEquals("name",fbd.getExpression());
  FieldConstraintDescr fieldConstraintDescr=(FieldConstraintDescr)colList.get(1);
  assertEquals("name",fieldConstraintDescr.getFieldName());
  RestrictionConnectiveDescr root=(RestrictionConnectiveDescr)fieldConstraintDescr.getRestriction();
  assertEquals(1,root.getRestrictions().size());
  RestrictionConnectiveDescr or=(RestrictionConnectiveDescr)root.getRestrictions().get(0);
  assertEquals(RestrictionConnectiveDescr.OR,or.getConnective());
  List restrictionList=or.getRestrictions();
  assertEquals(3,restrictionList.size());
  LiteralRestrictionDescr litDescr=(LiteralRestrictionDescr)restrictionList.get(0);
  assertEquals("==",litDescr.getEvaluator());
  assertEquals("yyy",litDescr.getText());
  litDescr=(LiteralRestrictionDescr)restrictionList.get(1);
  assertEquals("!=",litDescr.getEvaluator());
  assertEquals("zzz",litDescr.getText());
  ReturnValueRestrictionDescr retDescr=(ReturnValueRestrictionDescr)restrictionList.get(2);
  assertEquals("!=",retDescr.getEvaluator());
  LispForm lispForm=(LispForm)retDescr.getContent();
  assertEquals("(+ 2 3)",lispForm.toString());
  PredicateDescr predicateDescr=(PredicateDescr)colList.get(2);
  lispForm=(LispForm)predicateDescr.getContent();
  assertEquals("(< 1 2)",lispForm.toString());
  PatternDescr hobbyPattern=(PatternDescr)lhsList.get(1);
  assertEquals("$c",hobbyPattern.getIdentifier());
  assertEquals("hobby",hobbyPattern.getObjectType());
  colList=hobbyPattern.getDescrs();
  assertEquals(3,colList.size());
  fbd=(BindingDescr)colList.get(0);
  assertEquals("$bf2",fbd.getVariable());
  assertEquals("type",fbd.getExpression());
  fieldConstraintDescr=(FieldConstraintDescr)colList.get(1);
  restrictionList=fieldConstraintDescr.getRestrictions();
  assertEquals("type",fieldConstraintDescr.getFieldName());
  assertEquals(RestrictionConnectiveDescr.AND,fieldConstraintDescr.getRestriction().getConnective());
  litDescr=(LiteralRestrictionDescr)restrictionList.get(0);
  assertEquals("!=",litDescr.getEvaluator());
  assertEquals("iii",litDescr.getText());
  fieldConstraintDescr=(FieldConstraintDescr)colList.get(2);
  restrictionList=fieldConstraintDescr.getRestrictions();
  assertEquals("rating",fieldConstraintDescr.getFieldName());
  litDescr=(LiteralRestrictionDescr)restrictionList.get(0);
  assertEquals("==",litDescr.getEvaluator());
  assertEquals("fivestar",litDescr.getText());
}
