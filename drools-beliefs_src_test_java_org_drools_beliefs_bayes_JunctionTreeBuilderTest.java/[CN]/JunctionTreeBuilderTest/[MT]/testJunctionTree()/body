{
  Graph<BayesVariable> graph=new BayesNetwork();
  GraphNode x0=addNode(graph);
  GraphNode x1=addNode(graph);
  GraphNode x2=addNode(graph);
  GraphNode x3=addNode(graph);
  GraphNode x4=addNode(graph);
  GraphNode x5=addNode(graph);
  GraphNode x6=addNode(graph);
  OpenBitSet OpenBitSet1=bitSet("00001110");
  OpenBitSet OpenBitSet2=bitSet("00011100");
  OpenBitSet OpenBitSet3=bitSet("00110000");
  OpenBitSet OpenBitSet4=bitSet("01110000");
  List<OpenBitSet> cliques=new ArrayList<OpenBitSet>();
  cliques.add(OpenBitSet1);
  cliques.add(OpenBitSet2);
  cliques.add(OpenBitSet3);
  cliques.add(OpenBitSet4);
  List<SeparatorSet> separatorSets=new ArrayList<SeparatorSet>();
  for (int i=0; i < cliques.size(); i++) {
    OpenBitSet ci=cliques.get(i);
    for (int j=i + 1; j < cliques.size(); j++) {
      OpenBitSet cj=cliques.get(j);
      if (ci.intersects(cj)) {
        SeparatorSet separatorSet=new SeparatorSet(ci,0,cj,0,graph);
      }
    }
  }
  Collections.sort(separatorSets);
}
