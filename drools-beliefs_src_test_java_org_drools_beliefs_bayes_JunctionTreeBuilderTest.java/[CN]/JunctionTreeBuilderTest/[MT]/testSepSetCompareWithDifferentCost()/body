{
  Graph<BayesVariable> graph=new BayesNetwork();
  GraphNode x0=addNode(graph);
  GraphNode x1=addNode(graph);
  GraphNode x2=addNode(graph);
  GraphNode x3=addNode(graph);
  GraphNode x4=addNode(graph);
  GraphNode x5=addNode(graph);
  GraphNode x6=addNode(graph);
  x1.setContent(new BayesVariable<String>("x1",x0.getId(),new String[]{"a"},new double[][]{{0.1}}));
  x2.setContent(new BayesVariable<String>("x2",x0.getId(),new String[]{"a","b"},new double[][]{{0.1,0.1}}));
  x3.setContent(new BayesVariable<String>("x3",x0.getId(),new String[]{"a","b"},new double[][]{{0.1,0.1}}));
  OpenBitSet OpenBitSet1_1=bitSet("00001110");
  OpenBitSet OpenBitSet1_2=bitSet("01101100");
  SeparatorSet s1=new SeparatorSet(OpenBitSet1_1,0,OpenBitSet1_2,0,graph);
  OpenBitSet OpenBitSet2_1=bitSet("00001110");
  OpenBitSet OpenBitSet2_2=bitSet("00100110");
  SeparatorSet s2=new SeparatorSet(OpenBitSet2_1,0,OpenBitSet2_2,0,graph);
  List<SeparatorSet> list=new ArrayList<SeparatorSet>();
  list.add(s1);
  list.add(s2);
  Collections.sort(list);
  assertEquals(s1,list.get(0));
  x1.setContent(new BayesVariable<String>("x3",x0.getId(),new String[]{"a","b"},new double[][]{{0.1,0.1}}));
  x2.setContent(new BayesVariable<String>("x2",x0.getId(),new String[]{"a","b"},new double[][]{{0.1,0.1}}));
  x3.setContent(new BayesVariable<String>("x1",x0.getId(),new String[]{"a"},new double[][]{{0.1}}));
  s1=new SeparatorSet(OpenBitSet1_1,0,OpenBitSet1_2,0,graph);
  s2=new SeparatorSet(OpenBitSet2_1,0,OpenBitSet2_2,0,graph);
  list=new ArrayList<SeparatorSet>();
  list.add(s1);
  list.add(s2);
  Collections.sort(list);
  assertEquals(s2,list.get(0));
}
