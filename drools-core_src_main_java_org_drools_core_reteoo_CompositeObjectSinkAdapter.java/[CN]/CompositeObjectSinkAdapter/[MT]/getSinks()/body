{
  if (this.sinks != null) {
    return sinks;
  }
  ObjectSink[] sinks=new ObjectSink[size()];
  int at=0;
  if (this.hashedFieldIndexes != null) {
    for (FieldIndex fieldIndex=this.hashedFieldIndexes.getFirst(); fieldIndex != null; fieldIndex=fieldIndex.getNext()) {
      if (!fieldIndex.isHashed()) {
        continue;
      }
      final int index=fieldIndex.getIndex();
      final Iterator it=this.hashedSinkMap.newIterator();
      for (ObjectEntry entry=(ObjectEntry)it.next(); entry != null; entry=(ObjectEntry)it.next()) {
        HashKey hashKey=(HashKey)entry.getKey();
        if (hashKey.getIndex() == index) {
          sinks[at++]=(ObjectSink)entry.getValue();
        }
      }
    }
  }
  if (this.hashableSinks != null) {
    for (ObjectSinkNode sink=this.hashableSinks.getFirst(); sink != null; sink=sink.getNextObjectSinkNode()) {
      sinks[at++]=sink;
    }
  }
  if (this.otherSinks != null) {
    for (ObjectSinkNode sink=this.otherSinks.getFirst(); sink != null; sink=sink.getNextObjectSinkNode()) {
      sinks[at++]=sink;
    }
  }
  this.sinks=sinks;
  return sinks;
}
