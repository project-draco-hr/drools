{
  final Object object=factHandle.getObject();
  if (this.hashedFieldIndexes != null) {
    for (FieldIndex fieldIndex=this.hashedFieldIndexes.getFirst(); fieldIndex != null; fieldIndex=fieldIndex.getNext()) {
      if (!fieldIndex.isHashed()) {
        continue;
      }
      final int index=fieldIndex.getIndex();
      final HashKey hashKey=new HashKey(index,object,fieldIndex.getFieldExtractor());
      final AlphaNode sink=(AlphaNode)this.hashedSinkMap.get(hashKey);
      if (sink != null) {
        sink.getObjectSinkPropagator().byPassModifyToBetaNode(factHandle,modifyPreviousTuples,context,workingMemory);
      }
    }
  }
  if (this.hashableSinks != null) {
    for (ObjectSinkNode sink=this.hashableSinks.getFirst(); sink != null; sink=sink.getNextObjectSinkNode()) {
      ((AlphaNode)sink).getObjectSinkPropagator().byPassModifyToBetaNode(factHandle,modifyPreviousTuples,context,workingMemory);
    }
  }
  if (this.otherSinks != null) {
    for (ObjectSinkNode sink=this.otherSinks.getFirst(); sink != null; sink=sink.getNextObjectSinkNode()) {
      sink.byPassModifyToBetaNode(factHandle,modifyPreviousTuples,context,workingMemory);
    }
  }
}
