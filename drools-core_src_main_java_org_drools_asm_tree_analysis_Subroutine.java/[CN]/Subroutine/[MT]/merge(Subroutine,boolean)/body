{
  if (checkOverlap && subroutine.start != start) {
    throw new AnalyzerException("Overlapping sub routines");
  }
  boolean changes=false;
  for (int i=0; i < access.length; ++i) {
    if (subroutine.access[i] && !access[i]) {
      access[i]=true;
      changes=true;
    }
  }
  for (int i=0; i < subroutine.callers.size(); ++i) {
    Object caller=subroutine.callers.get(i);
    if (!callers.contains(caller)) {
      callers.add(caller);
      changes=true;
    }
  }
  return changes;
}
