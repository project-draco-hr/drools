{
  final String packageName="test_same_condition_pk";
  final String rule1="package " + packageName + ";"+ "import java.util.Map; \n"+ "rule \"parentRule\" \n"+ "when \n"+ " Map(this['name'] == 'Michael') \n"+ "then \n"+ "System.out.println('Parent rule!'); \n"+ "end";
  final String rule1modified="package " + packageName + ";"+ "import java.util.Map; \n"+ "rule \"parentRule\" \n"+ "when \n"+ " Map(this['name'] == 'Jerry') \n"+ "then \n"+ "System.out.println('Parent rule modified!'); \n"+ "end";
  final String rule2="package " + packageName + ";"+ "import java.util.Map; \n"+ "rule \"childRule\" \n"+ "     extends \"parentRule\"\n"+ "when \n"+ " Map(this['test'] == '1') \n"+ "then \n"+ "System.out.println('Child rule!'); \n"+ "end";
  final StatefulKnowledgeSession session=buildSessionInSteps(rule1,rule2);
  session.fireAllRules();
  final KnowledgeBuilder kbuilder2=createKnowledgeBuilder(session.getKieBase(),rule1modified);
  session.getKieBase().addKnowledgePackages(kbuilder2.getKnowledgePackages());
  final Map<String,Object> fact2=new HashMap<String,Object>();
  fact2.put("name","Michael");
  fact2.put("test",1);
  session.insert(fact2);
  assertTrue(session.fireAllRules() == 0);
}
