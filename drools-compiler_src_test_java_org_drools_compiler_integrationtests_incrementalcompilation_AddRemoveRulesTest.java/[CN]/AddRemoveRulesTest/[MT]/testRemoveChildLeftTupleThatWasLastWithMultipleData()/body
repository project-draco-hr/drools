{
  String[] rules=getRules3Pattern();
  AddRemoveTestBuilder builder=new AddRemoveTestBuilder();
  builder.addOperation(TestOperationType.CREATE_SESSION,new String[]{rules[0],rules[1]}).addOperation(TestOperationType.INSERT_FACTS,new Object[]{3,4,5}).addOperation(TestOperationType.FIRE_RULES).addOperation(TestOperationType.CHECK_RESULTS,new String[]{RULE1_NAME,RULE2_NAME}).addOperation(TestOperationType.REMOVE_RULES,new String[]{RULE2_NAME}).addOperation(TestOperationType.FIRE_RULES);
  final Map<String,Object> additionalGlobals=new HashMap<String,Object>();
  StatefulKnowledgeSession ksession=runAddRemoveTest(builder.build(),additionalGlobals);
  Map<String,Rule> rulesMap=rulestoMap(ksession.getKieBase());
  InternalFactHandle fh1=(InternalFactHandle)ksession.getFactHandle(3);
  InternalFactHandle fh2=(InternalFactHandle)ksession.getFactHandle(4);
  InternalFactHandle fh3=(InternalFactHandle)ksession.getFactHandle(5);
  LeftTuple lt1=fh1.getFirstLeftTuple();
  LeftTuple lt1_1=lt1.getFirstChild();
  LeftTuple lt1_2=lt1_1.getHandleNext();
  LeftTuple lt1_3=lt1_2.getHandleNext();
  assertNotNull(lt1_1);
  assertNotNull(lt1_2);
  assertNotNull(lt1_3);
  assertSame(lt1_3,lt1.getLastChild());
  assertSame(lt1_2,lt1_3.getHandlePrevious());
  assertSame(lt1_1,lt1_2.getHandlePrevious());
  assertEquals(1,lt1_1.getTupleSink().getAssociatedRuleSize());
  assertTrue(lt1_1.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(lt1_1.getPeer());
  assertEquals(1,lt1_2.getTupleSink().getAssociatedRuleSize());
  assertTrue(lt1_2.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(lt1_2.getPeer());
  assertEquals(1,lt1_3.getTupleSink().getAssociatedRuleSize());
  assertTrue(lt1_3.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(lt1_3.getPeer());
  RightTuple rt1=fh3.getFirstRightTuple();
  LeftTuple rt1_1=rt1.getLastChild();
  assertSame(lt1_1,rt1_1);
  LeftTuple rt1_2=rt1_1.getRightParentPrevious();
  LeftTuple rt1_3=rt1_2.getRightParentPrevious();
  assertNotNull(rt1_1);
  assertNotNull(rt1_2);
  assertNotNull(rt1_3);
  assertSame(rt1_2,rt1_3.getRightParentNext());
  assertSame(rt1_1,rt1_2.getRightParentNext());
  assertEquals(1,rt1_1.getTupleSink().getAssociatedRuleSize());
  assertTrue(rt1_1.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(rt1_1.getPeer());
  assertEquals(1,rt1_2.getTupleSink().getAssociatedRuleSize());
  assertTrue(rt1_2.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(rt1_2.getPeer());
  assertEquals(1,rt1_3.getTupleSink().getAssociatedRuleSize());
  assertTrue(rt1_3.getTupleSink().isAssociatedWith(rulesMap.get(RULE1_NAME)));
  assertNull(rt1_3.getPeer());
}
