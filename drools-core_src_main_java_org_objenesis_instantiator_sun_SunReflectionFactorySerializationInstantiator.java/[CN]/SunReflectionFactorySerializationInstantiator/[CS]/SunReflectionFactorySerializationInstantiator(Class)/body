{
  Class nonSerializableAncestor=SerializationInstantiatorHelper.getNonSerializableSuperClass(type);
  ReflectionFactory reflectionFactory=ReflectionFactory.getReflectionFactory();
  Constructor nonSerializableAncestorConstructor;
  try {
    nonSerializableAncestorConstructor=nonSerializableAncestor.getConstructor((Class[])null);
  }
 catch (  NoSuchMethodException e) {
    throw new ObjenesisException(new NotSerializableException(type + " has no suitable superclass constructor"));
  }
  mungedConstructor=reflectionFactory.newConstructorForSerialization(type,nonSerializableAncestorConstructor);
  mungedConstructor.setAccessible(true);
}
