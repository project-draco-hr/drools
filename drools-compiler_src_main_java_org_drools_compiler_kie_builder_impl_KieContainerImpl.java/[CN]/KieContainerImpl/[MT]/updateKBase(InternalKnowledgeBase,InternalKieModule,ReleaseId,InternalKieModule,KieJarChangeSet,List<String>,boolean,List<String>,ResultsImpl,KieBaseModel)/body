{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder(kBase,newKM.getBuilderConfiguration(kieBaseModel));
  KnowledgeBuilderImpl pkgbuilder=(KnowledgeBuilderImpl)kbuilder;
  CompositeKnowledgeBuilder ckbuilder=kbuilder.batch();
  boolean shouldRebuild=applyResourceChanges(currentKM,newKM,cs,modifiedClasses,kBase,kieBaseModel,pkgbuilder,ckbuilder,modifyingUsedClass);
  for (  ResourceChangeSet rcs : cs.getChanges().values()) {
    if (rcs.getChangeType() == ChangeType.REMOVED) {
      String resourceName=rcs.getResourceName();
      if (!resourceName.endsWith(".properties") && isFileInKBase(newKM,kieBaseModel,resourceName)) {
        pkgbuilder.removeObjectsGeneratedFromResource(currentKM.getResource(resourceName));
      }
    }
  }
  if (shouldRebuild) {
    for (    String dslFile : unchangedResources) {
      if (isFileInKBase(newKM,kieBaseModel,dslFile)) {
        newKM.addResourceToCompiler(ckbuilder,kieBaseModel,dslFile);
      }
    }
    rebuildAll(newReleaseId,results,newKM,modifyingUsedClass,kieBaseModel,pkgbuilder,ckbuilder);
  }
  kBase.setResolvedReleaseId(newReleaseId);
  for (  InternalWorkingMemory wm : kBase.getWorkingMemories()) {
    wm.notifyWaitOnRest();
  }
}
