{
  final PackageBuilder builder=new PackageBuilder();
  final PackageDescr packageDescr=new PackageDescr("p1");
  final RuleDescr ruleDescr=new RuleDescr("rule-1");
  packageDescr.addRule(ruleDescr);
  final AndDescr lhs=new AndDescr();
  ruleDescr.setLhs(lhs);
  final ColumnDescr column1=new ColumnDescr(Cheese.class.getName(),"stilton");
  lhs.addDescr(column1);
  final FieldBindingDescr fieldBindingDescr=new FieldBindingDescr("type","$type");
  final LiteralDescr listeralDescr=new LiteralDescr("type","==","stilton");
  column1.addDescr(fieldBindingDescr);
  column1.addDescr(listeralDescr);
  final ColumnDescr column2=new ColumnDescr(Cheese.class.getName(),"stilton");
  lhs.addDescr(column2);
  column2.addDescr(fieldBindingDescr);
  ruleDescr.setConsequence("modify(stilton);");
  builder.addPackage(packageDescr);
  And and=builder.getPackage().getRule("rule-1").getLhs();
  Column c1=(Column)and.getChildren().get(0);
  assertEquals(Declaration.class,c1.getConstraints().get(0).getClass());
  assertEquals(LiteralConstraint.class,c1.getConstraints().get(1).getClass());
  Column c2=(Column)and.getChildren().get(1);
  assertEquals(BoundVariableConstraint.class,c1.getConstraints().get(0).getClass());
  assertLength(0,builder.getErrors());
}
