{
  final PackageBuilder builder=new PackageBuilder();
  final PackageDescr packageDescr=new PackageDescr("p1");
  final RuleDescr ruleDescr=new RuleDescr("rule-1");
  packageDescr.addRule(ruleDescr);
  final AndDescr lhs=new AndDescr();
  ruleDescr.setLhs(lhs);
  final ColumnDescr column=new ColumnDescr(Cheese.class.getName(),"stilton");
  lhs.addDescr(column);
  FieldBindingDescr fieldBindingDescr=new FieldBindingDescr("price","x");
  column.addDescr(fieldBindingDescr);
  fieldBindingDescr=new FieldBindingDescr("price","y");
  column.addDescr(fieldBindingDescr);
  packageDescr.addGlobal(new GlobalDescr("map","java.util.Map"));
  final EvalDescr evalDescr=new EvalDescr("( ( Integer )map.get( new Integer(x) ) ).intValue() == y");
  lhs.addDescr(evalDescr);
  ruleDescr.setConsequence("modify(stilton);");
  builder.addPackage(packageDescr);
  assertLength(0,builder.getErrors());
  final Package pkg=builder.getPackage();
  final Rule rule=pkg.getRule("rule-1");
  final EvalCondition eval=(EvalCondition)rule.getLhs().getChildren().get(1);
  final CompiledInvoker invoker=(CompiledInvoker)eval.getEvalExpression();
  final List list=invoker.getMethodBytecode();
}
