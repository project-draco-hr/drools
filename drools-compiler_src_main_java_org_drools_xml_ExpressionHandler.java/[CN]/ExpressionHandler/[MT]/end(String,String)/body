{
  final Configuration config=this.xmlPackageReader.endConfiguration();
  final BaseDescr baseDescr=(BaseDescr)this.xmlPackageReader.getCurrent();
  final String expression=config.getText();
  if (expression == null || expression.trim().equals("")) {
    throw new SAXParseException("<" + localName + "> must have some content",this.xmlPackageReader.getLocator());
  }
  final LinkedList parents=this.xmlPackageReader.getParents();
  final ListIterator ite=parents.listIterator(parents.size());
  ite.previous();
  final Object parent=ite.previous();
  final FromDescr fromSource=(FromDescr)parent;
  final CharStream charStream=new ANTLRStringStream(expression.trim());
  final DRLLexer lexer=new DRLLexer(charStream);
  final TokenStream tokenStream=new CommonTokenStream(lexer);
  final DRLParser parser=new DRLParser(tokenStream);
  try {
    final DeclarativeInvokerDescr declarativeInvoker=parser.from_source(fromSource);
    fromSource.setDataSource(declarativeInvoker);
  }
 catch (  final RecognitionException e) {
    throw new SAXParseException("<" + localName + "> must have a valid expression content ",this.xmlPackageReader.getLocator());
  }
  return null;
}
