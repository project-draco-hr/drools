{
  String rule="package org.drools.compiler.integrationtests\n" + "import " + Person.class.getCanonicalName() + "\n"+ "import "+ Cheese.class.getCanonicalName()+ "\n"+ "rule r1\n"+ "when\n"+ "   Person()\n"+ "   Cheese( type == 'brie', price == 1.5 )\n"+ "then\n"+ "end\n"+ "rule r2\n"+ "when\n"+ "   Person()\n"+ "   Cheese( type == 'brie', price == 2.5 )\n"+ "then\n"+ "end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(rule);
  InternalWorkingMemory wm=((InternalWorkingMemory)kbase.newStatefulKnowledgeSession());
  ObjectTypeNode otn=getObjectTypeNode(kbase,"Cheese");
  assertNotNull(otn);
  AlphaNode alphaNode1=(AlphaNode)otn.getObjectSinkPropagator().getSinks()[0];
  assertEquals(AllSetBitMask.get(),alphaNode1.getDeclaredMask());
  assertEquals(AllSetBitMask.get(),alphaNode1.getInferredMask());
  AlphaNode alphaNode1_1=(AlphaNode)alphaNode1.getObjectSinkPropagator().getSinks()[0];
  assertEquals(AllSetBitMask.get(),alphaNode1_1.getDeclaredMask());
  assertEquals(AllSetBitMask.get(),alphaNode1_1.getInferredMask());
  BetaNode betaNode1=(BetaNode)alphaNode1_1.getObjectSinkPropagator().getSinks()[0];
  assertEquals(AllSetBitMask.get(),betaNode1.getRightDeclaredMask());
  assertEquals(AllSetBitMask.get(),betaNode1.getRightInferredMask());
  AlphaNode alphaNode1_2=(AlphaNode)alphaNode1.getObjectSinkPropagator().getSinks()[1];
  assertEquals(AllSetBitMask.get(),alphaNode1_2.getDeclaredMask());
  assertEquals(AllSetBitMask.get(),alphaNode1_2.getInferredMask());
  BetaNode betaNode2=(BetaNode)alphaNode1_2.getObjectSinkPropagator().getSinks()[0];
  assertEquals(AllSetBitMask.get(),betaNode2.getRightDeclaredMask());
  assertEquals(AllSetBitMask.get(),betaNode2.getRightInferredMask());
}
