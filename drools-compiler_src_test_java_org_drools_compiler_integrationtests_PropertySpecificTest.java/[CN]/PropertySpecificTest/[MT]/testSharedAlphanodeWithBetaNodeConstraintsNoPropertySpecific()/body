{
  String rule="package org.drools.compiler.integrationtests\n" + "import " + Person.class.getCanonicalName() + "\n"+ "import "+ Cheese.class.getCanonicalName()+ "\n"+ "rule r1\n"+ "when\n"+ "   Person()\n"+ "   Cheese( type == 'brie', price == 1.5 )\n"+ "then\n"+ "end\n"+ "rule r2\n"+ "when\n"+ "   Person()\n"+ "   Cheese( type == 'brie', price == 2.5 )\n"+ "then\n"+ "end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(rule);
  ReteooWorkingMemoryInterface wm=((StatefulKnowledgeSessionImpl)kbase.newStatefulKnowledgeSession()).session;
  ObjectTypeNode otn=getObjectTypeNode(kbase,"Cheese");
  assertNotNull(otn);
  AlphaNode alphaNode1=(AlphaNode)otn.getSinkPropagator().getSinks()[0];
  assertEquals(-1L,alphaNode1.getDeclaredMask());
  assertEquals(-1L,alphaNode1.getInferredMask());
  AlphaNode alphaNode1_1=(AlphaNode)alphaNode1.getSinkPropagator().getSinks()[0];
  assertEquals(-1L,alphaNode1_1.getDeclaredMask());
  assertEquals(-1L,alphaNode1_1.getInferredMask());
  BetaNode betaNode1=(BetaNode)alphaNode1_1.getSinkPropagator().getSinks()[0];
  assertEquals(-1L,betaNode1.getRightDeclaredMask());
  assertEquals(-1L,betaNode1.getRightInferredMask());
  AlphaNode alphaNode1_2=(AlphaNode)alphaNode1.getSinkPropagator().getSinks()[1];
  assertEquals(-1L,alphaNode1_2.getDeclaredMask());
  assertEquals(-1L,alphaNode1_2.getInferredMask());
  BetaNode betaNode2=(BetaNode)alphaNode1_2.getSinkPropagator().getSinks()[0];
  assertEquals(-1L,betaNode2.getRightDeclaredMask());
  assertEquals(-1L,betaNode2.getRightInferredMask());
}
