{
  this.id1=id1;
  this.clique1=clique1;
  this.clique2=clique2;
  this.id2=id2;
  intersection=(OpenBitSet)clique1.clone();
  intersection.and(clique2);
  mass=(int)intersection.cardinality();
  cost=1;
  if (mass > 0) {
    for (int i=intersection.nextSetBit(0); i >= 0; i=intersection.nextSetBit(i + 1)) {
      GraphNode<BayesVariable> v=graph.getNode(i);
      cost*=Math.abs(v.getContent().getOutcomes().length);
    }
  }
}
