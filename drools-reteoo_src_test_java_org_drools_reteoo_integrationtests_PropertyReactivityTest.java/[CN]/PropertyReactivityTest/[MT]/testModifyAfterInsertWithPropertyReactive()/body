{
  String rule1="\n" + "package com.sample;\n" + "import " + MyClass.class.getCanonicalName() + ";\n"+ "global java.util.List list;\n"+ "rule r0\n"+ "then insert( new MyClass() );\n"+ "end\n"+ "rule r1 salience 1\n"+ "when "+ "  MyClass(value == null)\n"+ "then "+ "  list.add( 1 );\n"+ "end\n"+ "\n"+ "rule r2 salience 2\n"+ "when "+ "  m : MyClass(value == null)\n"+ "then "+ "  modify(m) { setData(\"test\") }\n"+ "  list.add( 2 );\n"+ "end\n"+ "\n"+ "rule r3 salience 3\n"+ "when "+ "  MyClass(value == null)\n"+ "then "+ "  list.add( 3 );\n"+ "end";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(rule1.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  assertEquals(4,ksession.fireAllRules());
  assertEquals(3,list.size());
  assertTrue(list.contains(1));
  assertTrue(list.contains(2));
  assertTrue(list.contains(3));
}
