{
  TripleStore store=new TripleStore(10 * 100 * 1000,0.6f);
  Individual ind=new Individual();
  Triple t1=new TripleImpl(ind,"hasName","mark");
  assertFalse(store.put(t1));
  Triple t2=new TripleImpl(ind,"hasAge","35");
  assertFalse(store.put(t2));
  Triple t3=new TripleImpl(ind,"hasCity","london");
  assertFalse(store.put(t3));
  Individual ind2=new Individual();
  Triple t4=new TripleImpl(ind2,"hasCity","bologna");
  assertFalse(store.put(t4));
  Triple t5=new TripleImpl(ind2,"hasCar","lancia");
  assertFalse(store.put(t5));
  Triple t6=new TripleImpl(ind2,"hasWeapon","lancia");
  assertFalse(store.put(t6));
  Triple tKey;
  Triple t;
  Collection<Triple> coll;
  tKey=new TripleImpl(ind,"hasName",V);
  t=store.get(tKey);
  assertEquals("mark",t.getValue());
  tKey=new TripleImpl(ind2,"hasCity",V);
  t=store.get(tKey);
  assertEquals("bologna",t.getValue());
  tKey=new TripleImpl(ind,"hasCar",V);
  t=store.get(tKey);
  assertNull(t);
  tKey=new TripleImpl(ind2,"hasCar",V);
  t=store.get(tKey);
  assertEquals("lancia",t.getValue());
  tKey=new TripleImpl(V,"hasCity",V);
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(t3,t4)));
  assertEquals(2,coll.size());
  tKey=new TripleImpl(ind,V,V);
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(t1,t2,t3)));
  assertEquals(3,coll.size());
  tKey=new TripleImpl(ind2,V,"lancia");
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(t5,t6)));
  assertEquals(2,coll.size());
  tKey=new TripleImpl(V,V,"lancia");
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(t5,t6)));
  assertEquals(2,coll.size());
  tKey=new TripleImpl(V,V,V);
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(t1,t2,t3,t4,t5,t6)));
  assertEquals(6,coll.size());
}
