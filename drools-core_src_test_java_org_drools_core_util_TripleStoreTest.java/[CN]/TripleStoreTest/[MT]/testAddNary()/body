{
  TripleStore store=new TripleStore(200,0.6f);
  Individual ind=new Individual();
  Triple t1=new TripleImpl(ind,"hasName","marc");
  assertFalse(store.put(t1));
  Triple t2=new TripleImpl(ind,"hasName","mark");
  assertTrue(store.put(t2));
  Triple t3=new TripleImpl(ind,"hasName","daniel");
  store.add(t3);
  Triple t4=new TripleImpl(ind,"hasCar","mini");
  store.add(t4);
  Triple t5=new TripleImpl(ind,"hasName","oscar");
  store.add(t5);
  Triple t6=new TripleImpl(ind,"hasCar","ferrari");
  store.add(t6);
  Triple tKey;
  Triple t;
  Collection<Triple> coll;
  tKey=new TripleImpl(ind,"hasName",V);
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(new TripleImpl(ind,"hasName","oscar"),new TripleImpl(ind,"hasName","mark"),new TripleImpl(ind,"hasName","daniel"))));
  assertFalse(store.contains(new TripleImpl(ind,"hasName","marc")));
  assertTrue(store.contains(new TripleImpl(ind,"hasName","mark")));
  assertTrue(store.contains(new TripleImpl(ind,"hasName","daniel")));
  assertTrue(store.contains(new TripleImpl(ind,"hasCar","mini")));
  assertTrue(store.contains(new TripleImpl(ind,"hasName","oscar")));
  assertTrue(store.contains(new TripleImpl(ind,"hasCar","ferrari")));
  assertTrue(store.contains(new TripleImpl(ind,"hasName","oscar")));
  tKey=new TripleImpl(ind,"hasCar",V);
  coll=store.getAll(tKey);
  assertTrue(coll.containsAll(Arrays.asList(new TripleImpl(ind,"hasCar","mini"),new TripleImpl(ind,"hasCar","ferrari"))));
  store.remove(new TripleImpl(ind,"hasCar","mini"));
  tKey=new TripleImpl(ind,"hasCar",V);
  coll=store.getAll(tKey);
  assertEquals(1,coll.size());
  store.remove(new TripleImpl(ind,"hasCar","ferrari"));
  tKey=new TripleImpl(ind,"hasCar",V);
  coll=store.getAll(tKey);
  assertEquals(0,coll.size());
}
