{
  String str="";
  str+="package org.domain.test \n";
  str+="import " + Match.class.getName() + "\n";
  str+="global java.util.List list \n";
  str+="dialect 'mvel' \n";
  str+="rule rule1 @department(sales) \n";
  str+="when \n";
  str+="     $s : String( this == 'go1' ) \n";
  str+="then \n";
  str+="    list.add( kcontext.rule.name + ':' + $s ); \n";
  str+="end \n";
  str+="rule rule2 @department(sales) \n";
  str+="when \n";
  str+="     $s : String( this == 'go1' ) \n";
  str+="then \n";
  str+="    list.add( kcontext.rule.name + ':' + $s ); \n";
  str+="end \n";
  str+="rule rule3 @department(sales) \n";
  str+="when \n";
  str+="     $s : String( this == 'go1' ) \n";
  str+="then \n";
  str+="    list.add( kcontext.rule.name + ':' + $s ); \n";
  str+="end \n";
  str+="rule blockerAllSalesRules @activationListener('direct') \n";
  str+="when \n";
  str+="     $s : String( this == 'go2' ) \n";
  str+="     $i : Activation( department == 'sales' ) \n";
  str+="then \n";
  str+="    list.add( $i.rule.name + ':' + $s  ); \n";
  str+="    kcontext.blockActivation( $i ); \n";
  str+="end \n";
  KnowledgeBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(DeclarativeAgendaOption.ENABLED);
  KnowledgeBase kbase=loadKnowledgeBaseFromString(kconf,str);
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.insert("go1");
  FactHandle go2=ksession.insert("go2");
  ksession.fireAllRules();
  assertEquals(3,list.size());
  assertTrue(list.contains("rule1:go2"));
  assertTrue(list.contains("rule2:go2"));
  assertTrue(list.contains("rule3:go2"));
  list.clear();
  ksession.retract(go2);
  ksession.fireAllRules();
  assertEquals(3,list.size());
  assertTrue(list.contains("rule1:go1"));
  assertTrue(list.contains("rule2:go1"));
  assertTrue(list.contains("rule3:go1"));
  ksession.dispose();
}
