{
  checkAlive();
  if (this.firing.compareAndSet(false,true)) {
    initInitialFact();
    try {
      startOperation();
      kBase.readLock();
      if (liaPropagations != null && isSequential()) {
        for (Iterator it=liaPropagations.iterator(); it.hasNext(); ) {
          ((LIANodePropagation)it.next()).doPropagation(this);
        }
      }
      executeQueuedActions();
      int fireCount=0;
      fireCount=this.agenda.fireAllRules(agendaFilter,fireLimit);
      return fireCount;
    }
  finally {
      kBase.readUnlock();
      endOperation();
      this.firing.set(false);
    }
  }
  return 0;
}
