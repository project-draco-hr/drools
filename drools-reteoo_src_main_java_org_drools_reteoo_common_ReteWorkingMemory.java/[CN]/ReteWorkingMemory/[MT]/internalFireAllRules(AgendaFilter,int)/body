{
  int fireCount=0;
  try {
    kBase.readLock();
    if (liaPropagations != null && isSequential()) {
      for (      LIANodePropagation liaPropagation : liaPropagations) {
        (liaPropagation).doPropagation(this);
      }
    }
    executeQueuedActionsForRete();
    fireCount=this.agenda.fireAllRules(agendaFilter,fireLimit);
  }
  finally {
    kBase.readUnlock();
    if (kBase.flushModifications()) {
      fireCount+=internalFireAllRules(agendaFilter,fireLimit);
    }
  }
  return fireCount;
}
