{
  String drl1="package org.drools.compiler\n" + "rule R1 when\n" + "   $m : Message()\n"+ "then\n"+ "end\n";
  String drl2_1="package org.drools.compiler\n" + "rule R2_1 when\n" + "   $m : Message( message == \"Hi Universe\" )\n"+ "then\n"+ "end\n";
  String drl2_2="package org.drools.compiler\n" + "rule R2_2 when\n" + "   $m : Message( mesage == \"Hello World\" )\n"+ "then\n"+ "end\n";
  KieServices ks=KieServices.Factory.get();
  KieFileSystem kfs=ks.newKieFileSystem().write("src/main/resources/r1.drl",drl1).write("src/main/resources/r2.drl",drl2_1);
  KieBuilder kieBuilder=ks.newKieBuilder(kfs).buildAll();
  KieContainer kieContainer=ks.newKieContainer(ks.getRepository().getDefaultReleaseId());
  KieSession ksession=kieContainer.newKieSession();
  ksession.insert(new Message("Hello World"));
  assertEquals(1,ksession.fireAllRules());
  kfs.write("src/main/resources/r2.drl",drl2_2);
  IncrementalResults results=((InternalKieBuilder)kieBuilder).createFileSet("src/main/resources/r2.drl").build();
  assertEquals(1,results.getAddedMessages().size());
  assertEquals(0,results.getRemovedMessages().size());
  kieContainer.updateToVersion(ks.getRepository().getDefaultReleaseId());
  ksession=kieContainer.newKieSession();
  ksession.insert(new Message("Hello World"));
  assertEquals(1,ksession.fireAllRules());
}
