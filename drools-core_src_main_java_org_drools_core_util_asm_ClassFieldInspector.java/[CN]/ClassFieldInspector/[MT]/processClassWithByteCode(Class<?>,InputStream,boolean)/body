{
  final ClassReader reader=new ClassReader(stream);
  final ClassFieldVisitor visitor=new ClassFieldVisitor(clazz,includeFinalMethods,this);
  reader.accept(visitor,0);
  if (clazz.getSuperclass() != null) {
    final String name=getResourcePath(clazz.getSuperclass());
    final InputStream parentStream=clazz.getResourceAsStream(name);
    if (parentStream != null) {
      try {
        processClassWithByteCode(clazz.getSuperclass(),parentStream,includeFinalMethods);
      }
  finally {
        parentStream.close();
      }
    }
 else {
      processClassWithoutByteCode(clazz.getSuperclass(),includeFinalMethods);
    }
  }
  if (clazz.isInterface()) {
    final Class<?>[] interfaces=clazz.getInterfaces();
    for (int i=0; i < interfaces.length; i++) {
      final String name=getResourcePath(interfaces[i]);
      final InputStream parentStream=clazz.getResourceAsStream(name);
      if (parentStream != null) {
        try {
          processClassWithByteCode(interfaces[i],parentStream,includeFinalMethods);
        }
  finally {
          parentStream.close();
        }
      }
 else {
        processClassWithoutByteCode(interfaces[i],includeFinalMethods);
      }
    }
  }
}
