{
  Field f=getAllFields(classUnderInspection).get(fieldName);
  if (method.getName().startsWith("set") && method.getParameterTypes().length == 1) {
    this.setterMethods.put(fieldName,method);
    if (!fieldTypes.containsKey(fieldName)) {
      this.fieldTypes.put(fieldName,method.getParameterTypes()[0]);
    }
    if (!fieldTypesField.containsKey(fieldName)) {
      this.fieldTypesField.put(fieldName,f);
    }
  }
 else   if (!void.class.isAssignableFrom(method.getReturnType())) {
    Method existingMethod=getterMethods.get(fieldName);
    if (existingMethod != null && !isOverride(existingMethod,method)) {
      addResult(fieldName,new GetterOverloadWarning(classUnderInspection,this.getterMethods.get(fieldName).getName(),this.fieldTypes.get(fieldName),method.getName(),method.getReturnType()));
    }
    this.getterMethods.put(fieldName,method);
    this.fieldTypes.put(fieldName,method.getReturnType());
    this.fieldTypesField.put(fieldName,f);
  }
}
