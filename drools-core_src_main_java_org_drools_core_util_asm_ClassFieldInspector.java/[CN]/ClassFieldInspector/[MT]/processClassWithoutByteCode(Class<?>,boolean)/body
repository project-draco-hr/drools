{
  final List<Method> methods=Arrays.asList(clazz.getMethods());
  Collections.sort(methods,new Comparator<Method>(){
    public int compare(    Method m1,    Method m2){
      return m1.getName().compareTo(m2.getName());
    }
  }
);
  for (int i=0; i < methods.size(); i++) {
    final int mask=includeFinalMethods ? Modifier.PUBLIC : Modifier.PUBLIC | Modifier.FINAL;
    Method method=methods.get(i);
    if (((method.getModifiers() & mask) == Opcodes.ACC_PUBLIC) && (method.getParameterTypes().length == 0) && (!method.getName().equals("<init>"))&& (!method.getName().equals("<clinit>"))&& (method.getReturnType() != void.class)) {
      final int fieldIndex=this.fieldNames.size();
      addToMapping(method,fieldIndex);
    }
 else     if (((method.getModifiers() & mask) == Opcodes.ACC_PUBLIC) && (method.getParameterTypes().length == 1) && (method.getName().startsWith("set"))) {
      final int fieldIndex=this.fieldNames.size();
      addToMapping(method,fieldIndex);
    }
  }
}
