{
  final Date triggerTime=new Date(1000);
  context.checking(new Expectations(){
{
      exactly(2).of(mockTrigger_1).hasNextFireTime();
      will(returnValue(triggerTime));
      oneOf(mockTrigger_1).nextFireTime();
      will(returnValue(triggerTime));
      allowing(mockTrigger_1).hasNextFireTime();
      will(returnValue(null));
    }
  }
);
  Job job=new Job(){
    public void execute(    JobContext ctx){
      assertThat(scheduler.getCurrentTime(),is(1000L));
    }
  }
;
  scheduler.scheduleJob(job,this.mockContext_1,mockTrigger_1);
  scheduler.advanceTime(5000,TimeUnit.MILLISECONDS);
  assertThat(scheduler.getCurrentTime(),is(5000L));
}
