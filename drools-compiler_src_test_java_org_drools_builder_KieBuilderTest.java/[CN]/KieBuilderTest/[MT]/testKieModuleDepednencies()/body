{
  KieServices ks=KieServices.Factory.get();
  String namespace1="org.kie.test1";
  GAV gav1=KieFactory.Factory.get().newGav(namespace1,"memory","1.0-SNAPSHOT");
  KieModuleModel kProj1=createKieProject(namespace1);
  KieFileSystem kfs1=KieFactory.Factory.get().newKieFileSystem();
  generateAll(kfs1,namespace1,gav1,kProj1);
  KieBuilder kb1=createKieBuilder(kfs1);
  kb1.build();
  if (kb1.hasResults(Level.ERROR)) {
    fail("Unable to build KieJar\n" + kb1.getResults().toString());
  }
  KieRepository kr=ks.getKieRepository();
  KieModule kModule1=kr.getKieModule(gav1);
  assertNotNull(kModule1);
  String namespace2="org.kie.test2";
  GAV gav2=KieFactory.Factory.get().newGav(namespace2,"memory","1.0-SNAPSHOT");
  KieModuleModel kProj2=createKieProject(namespace2);
  KieBaseModelImpl kieBase2=(KieBaseModelImpl)kProj2.getKieBaseModels().get(namespace2);
  kieBase2.addInclude(namespace1);
  KieFileSystem kfs2=KieFactory.Factory.get().newKieFileSystem();
  generateAll(kfs2,namespace2,gav2,kProj2);
  KieBuilder kb2=createKieBuilder(kfs2);
  kb2.setDependencies(kModule1);
  kb2.build();
  if (kb2.hasResults(Level.ERROR)) {
    fail("Unable to build KieJar\n" + kb2.getResults().toString());
  }
  KieModule kModule2=kr.getKieModule(gav2);
  assertNotNull(kModule2);
  KieContainer kContainer=ks.getKieContainer(gav2);
  KieBase kBase=kContainer.getKieBase(namespace2);
  KieSession kSession=kBase.newKieSession();
  List list=new ArrayList();
  kSession.setGlobal("list",list);
  kSession.fireAllRules();
  assertEquals(2,list.size());
  if ("org.kie.test1.Message".equals(list.get(0).getClass().getName())) {
    assertEquals("org.kie.test2.Message",list.get(1).getClass().getName());
  }
 else {
    assertEquals("org.kie.test2.Message",list.get(0).getClass().getName());
    assertEquals("org.kie.test1.Message",list.get(1).getClass().getName());
  }
}
