{
  Appendable builder=new StringBuilderAppendable();
  String name=functionDescr.getName().trim();
  if (name.charAt(0) == '"') {
    name=name.substring(1);
  }
  if (name.charAt(name.length() - 1) == '"') {
    name=name.substring(0,name.length() - 1);
  }
  builder.append("function " + name + "(");
  for (int i=0, length=functionDescr.getParameterNames().size(); i < length; i++) {
    builder.append(functionDescr.getParameterNames().get(i));
    if (i < length - 1) {
      builder.append(", ");
    }
  }
  builder.append(") {\n");
  List list=(List)functionDescr.getContent();
  for (Iterator it=list.iterator(); it.hasNext(); ) {
    FunctionHandlers.dump((LispForm)it.next(),builder);
  }
  builder.append("}");
  functionDescr.setContent(builder.toString());
  functionDescr.setDialect("mvel");
  PackageDescr pkgDescr=createPackageDescr("MAIN");
  pkgDescr.addFunction(functionDescr);
  PackageBuilderConfiguration conf=new PackageBuilderConfiguration();
  conf.getDialectConfiguration("mvel");
  MVELDialectConfiguration mvelConf=(MVELDialectConfiguration)conf.getDialectConfiguration("mvel");
  mvelConf.setLangLevel(5);
  PackageBuilder pkgBuilder=new PackageBuilder(conf);
  pkgBuilder.addPackage(pkgDescr);
  if (pkgBuilder.getErrors().isEmpty()) {
    this.ruleBase.addPackage(pkgBuilder.getPackage());
  }
}
