{
  ReteooToJungVisitor visitor=new ReteooToJungVisitor();
  visitor.visit(ruleBase);
  this.graph=visitor.getGraph();
  final PluggableRenderer pr=new PluggableRenderer();
  pr.setVertexPaintFunction(new VertexPaintFunction(){
    public Paint getFillPaint(    Vertex v){
      return ((HtmlContent)v).getFillPaint();
    }
    public Paint getDrawPaint(    Vertex v){
      return ((HtmlContent)v).getDrawPaint();
    }
  }
);
  pr.setEdgePaintFunction(new PickableEdgePaintFunction(pr,Color.black,Color.cyan));
  pr.setGraphLabelRenderer(new DefaultGraphLabelRenderer(Color.cyan,Color.cyan));
  pr.setVertexShapeFunction(new EllipseVertexShapeFunction(new ConstantVertexSizeFunction(14),new ConstantVertexAspectRatioFunction(1.0f)));
  Layout layout=new DAGLayout(this.graph);
  this.vv=new VisualizationViewer(layout,pr,new Dimension(600,600));
  this.vv.setPickSupport(new ShapePickSupport());
  pr.setEdgeShapeFunction(new EdgeShape.QuadCurve());
  this.vv.setBackground(Color.white);
  this.vv.setToolTipFunction(new DefaultToolTipFunction());
  Container content=getContentPane();
  final GraphZoomScrollPane panel=new GraphZoomScrollPane(this.vv);
  content.add(panel);
  final PluggableGraphMouse graphMouse=new PluggableGraphMouse();
  graphMouse.add(new PickingGraphMousePlugin());
  graphMouse.add(new ViewScalingGraphMousePlugin());
  graphMouse.add(new CrossoverScalingGraphMousePlugin());
  this.vv.setGraphMouse(graphMouse);
  final ScalingControl scaler=new CrossoverScalingControl();
  JButton plus=new JButton("+");
  plus.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      scaler.scale(ReteooJungViewer.this.vv,1.1f,ReteooJungViewer.this.vv.getCenter());
    }
  }
);
  JButton minus=new JButton("-");
  minus.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      scaler.scale(ReteooJungViewer.this.vv,0.9f,ReteooJungViewer.this.vv.getCenter());
    }
  }
);
  JPanel scaleGrid=new JPanel(new GridLayout(1,0));
  scaleGrid.setBorder(BorderFactory.createTitledBorder("Zoom"));
  JPanel controls=new JPanel();
  scaleGrid.add(plus);
  scaleGrid.add(minus);
  controls.add(scaleGrid);
  content.add(controls,BorderLayout.SOUTH);
  final JEditorPane editorPane=new JEditorPane();
  editorPane.setEditable(false);
  editorPane.setContentType("text/html");
  this.vv.addGraphMouseListener(new GraphMouseListener(){
    public void graphClicked(    Vertex vertex,    MouseEvent e){
      System.out.println(vertex);
      editorPane.setText(((HtmlContent)vertex).getHtml());
    }
    public void graphPressed(    Vertex vertex,    MouseEvent e){
    }
    public void graphReleased(    Vertex vertex,    MouseEvent e){
    }
  }
);
  JScrollPane editorScrollPane=new JScrollPane(editorPane);
  editorScrollPane.setPreferredSize(new Dimension(250,145));
  editorScrollPane.setMinimumSize(new Dimension(10,10));
  content.add(editorScrollPane,BorderLayout.EAST);
  pack();
  setVisible(true);
}
