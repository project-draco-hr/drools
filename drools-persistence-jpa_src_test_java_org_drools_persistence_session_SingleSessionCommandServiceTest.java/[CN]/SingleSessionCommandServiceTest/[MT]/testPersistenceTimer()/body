{
  Environment env=KnowledgeBaseFactory.newEnvironment();
  env.set(EnvironmentName.ENTITY_MANAGER_FACTORY,emf);
  env.set(EnvironmentName.TRANSACTION_MANAGER,TransactionManagerServices.getTransactionManager());
  Properties properties=new Properties();
  properties.setProperty("drools.commandService","org.drools.persistence.session.SingleSessionCommandService");
  properties.setProperty("drools.processInstanceManagerFactory","org.drools.persistence.processinstance.JPAProcessInstanceManagerFactory");
  properties.setProperty("drools.workItemManagerFactory","org.drools.persistence.processinstance.JPAWorkItemManagerFactory");
  properties.setProperty("drools.processSignalManagerFactory","org.drools.persistence.processinstance.JPASignalManagerFactory");
  properties.setProperty("drools.timerService","org.drools.persistence.session.JpaJDKTimerService");
  SessionConfiguration config=new SessionConfiguration(properties);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  Collection<KnowledgePackage> kpkgs=getProcessTimer();
  kbase.addKnowledgePackages(kpkgs);
  SingleSessionCommandService service=new SingleSessionCommandService(kbase,config,env);
  int sessionId=service.getSessionId();
  StartProcessCommand startProcessCommand=new StartProcessCommand();
  startProcessCommand.setProcessId("org.drools.test.TestProcess");
  ProcessInstance processInstance=service.execute(startProcessCommand);
  System.out.println("Started process instance " + processInstance.getId());
  service.dispose();
  service=new SingleSessionCommandService(sessionId,kbase,config,env);
  GetProcessInstanceCommand getProcessInstanceCommand=new GetProcessInstanceCommand();
  getProcessInstanceCommand.setProcessInstanceId(processInstance.getId());
  processInstance=service.execute(getProcessInstanceCommand);
  assertNotNull(processInstance);
  service.dispose();
  service=new SingleSessionCommandService(sessionId,kbase,config,env);
  Thread.sleep(3000);
  getProcessInstanceCommand=new GetProcessInstanceCommand();
  getProcessInstanceCommand.setProcessInstanceId(processInstance.getId());
  processInstance=service.execute(getProcessInstanceCommand);
  assertNull(processInstance);
}
