{
  int numberOfOutcomes=trgVars[currentVar].getOutcomes().length;
  boolean isSepVar=false;
  int nextParentKeyPos=targetVarPos;
  if (this.srcVarPos.length > 0 && targetVarPos < this.srcVarPos.length && this.srcVarPos[targetVarPos] == currentVar) {
    nextParentKeyPos++;
    isSepVar=true;
  }
  for (int j=0; j < numberOfOutcomes; j++) {
    path[currentVar]=j;
    if (currentVar < trgVars.length - 1) {
      recurse(currentVar + 1,nextParentKeyPos);
    }
 else {
      trgPotentials[trgPotentialIndex++]*=srcPotentials[srcPotentialIndex];
    }
    if (isSepVar) {
      srcPotentialIndex+=srcVarPosMultipliers[targetVarPos];
    }
  }
  if (isSepVar) {
    srcPotentialIndex-=(srcVarPosMultipliers[targetVarPos] * numberOfOutcomes);
  }
}
