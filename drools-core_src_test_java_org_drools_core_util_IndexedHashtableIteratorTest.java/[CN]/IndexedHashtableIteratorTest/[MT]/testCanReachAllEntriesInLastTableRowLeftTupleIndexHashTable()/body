{
  int numEntries=3;
  TupleList[] table=new TupleList[3];
  TupleList rtList=new TupleList();
  table[0]=rtList;
  for (int i=0; i < numEntries; i++) {
    LeftTupleImpl leftTuple=new LeftTupleImpl();
    leftTuple.setMemory(rtList);
    rtList.add(leftTuple);
  }
  rtList=new TupleList();
  table[2]=rtList;
  for (int i=0; i < numEntries; i++) {
    LeftTupleImpl leftTuple=new LeftTupleImpl();
    leftTuple.setMemory(rtList);
    rtList.add(leftTuple);
  }
  rtList=new TupleList();
  table[2].setNext(rtList);
  for (int i=0; i < numEntries; i++) {
    LeftTupleImpl leftTuple=new LeftTupleImpl();
    leftTuple.setMemory(rtList);
    rtList.add(leftTuple);
  }
  LeftTupleIndexHashTable.FullFastIterator iter=new LeftTupleIndexHashTable.FullFastIterator(table);
  List<LeftTupleImpl> list=new ArrayList<LeftTupleImpl>();
  for (LeftTupleImpl leftTuple=(LeftTupleImpl)iter.next(null); leftTuple != null; leftTuple=(LeftTupleImpl)iter.next(leftTuple)) {
    assertFalse(contains(list,leftTuple));
    list.add(leftTuple);
  }
  assertEquals(numEntries * 3,list.size());
  LeftTupleIndexHashTable lthTable=new LeftTupleIndexHashTable();
  lthTable.init(table,3,numEntries * 3);
  LeftTupleIndexHashTable.FieldIndexHashTableFullIterator iter2=new LeftTupleIndexHashTable.FieldIndexHashTableFullIterator(lthTable);
  list=new ArrayList<LeftTupleImpl>();
  for (LeftTupleImpl leftTuple=(LeftTupleImpl)iter2.next(); leftTuple != null; leftTuple=(LeftTupleImpl)iter2.next()) {
    assertFalse(contains(list,leftTuple));
    list.add(leftTuple);
  }
  assertEquals(numEntries * 3,list.size());
}
