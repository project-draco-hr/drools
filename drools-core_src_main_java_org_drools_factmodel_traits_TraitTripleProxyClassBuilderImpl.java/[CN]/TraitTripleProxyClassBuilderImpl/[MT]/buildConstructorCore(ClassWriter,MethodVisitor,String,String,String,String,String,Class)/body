{
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(TraitFactory.proxyBaseClass),"<init>","()V");
  if (mixinClass != null) {
    try {
      Class actualArg=getPossibleConstructor(mixinClass,trait.getDefinedClass());
      mv.visitVarInsn(ALOAD,0);
      mv.visitTypeInsn(NEW,Type.getInternalName(mixinClass));
      mv.visitInsn(DUP);
      mv.visitVarInsn(ALOAD,0);
      mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(mixinClass),"<init>","(" + Type.getDescriptor(actualArg) + ")V");
      mv.visitFieldInsn(PUTFIELD,internalProxy,mixin,Type.getDescriptor(mixinClass));
    }
 catch (    NoSuchMethodException nsme) {
      mv.visitVarInsn(ALOAD,0);
      mv.visitTypeInsn(NEW,Type.getInternalName(mixinClass));
      mv.visitInsn(DUP);
      mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(mixinClass),"<init>","()V");
      mv.visitFieldInsn(PUTFIELD,internalProxy,mixin,Type.getDescriptor(mixinClass));
    }
  }
  mv.visitVarInsn(ALOAD,0);
  mv.visitVarInsn(ALOAD,1);
  mv.visitFieldInsn(PUTFIELD,internalProxy,"object",descrCore);
  mv.visitVarInsn(ALOAD,0);
  mv.visitVarInsn(ALOAD,2);
  mv.visitFieldInsn(PUTFIELD,internalProxy,"store",Type.getDescriptor(TripleStore.class));
  mv.visitVarInsn(ALOAD,0);
  mv.visitTypeInsn(NEW,internalWrapper);
  mv.visitInsn(DUP);
  mv.visitVarInsn(ALOAD,1);
  mv.visitVarInsn(ALOAD,2);
  mv.visitMethodInsn(INVOKESPECIAL,internalWrapper,"<init>","(" + descrCore + Type.getDescriptor(TripleStore.class)+ ")V");
  mv.visitFieldInsn(PUTFIELD,internalProxy,"fields",Type.getDescriptor(Map.class));
  mv.visitVarInsn(ALOAD,1);
  mv.visitTypeInsn(NEW,Type.getInternalName(TripleBasedBean.class));
  mv.visitInsn(DUP);
  mv.visitVarInsn(ALOAD,1);
  mv.visitVarInsn(ALOAD,2);
  mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(TripleBasedBean.class),"<init>","(" + Type.getDescriptor(Object.class) + Type.getDescriptor(TripleStore.class)+ ")V");
  mv.visitMethodInsn(INVOKEVIRTUAL,internalCore,"setDynamicProperties","(" + Type.getDescriptor(Map.class) + ")V");
  mv.visitVarInsn(ALOAD,1);
  mv.visitTypeInsn(NEW,Type.getInternalName(TripleBasedTypes.class));
  mv.visitInsn(DUP);
  mv.visitVarInsn(ALOAD,1);
  mv.visitVarInsn(ALOAD,2);
  mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(TripleBasedTypes.class),"<init>","(" + Type.getDescriptor(Object.class) + Type.getDescriptor(TripleStore.class)+ ")V");
  mv.visitMethodInsn(INVOKEVIRTUAL,internalCore,"setTraitMap","(" + Type.getDescriptor(Map.class) + ")V");
  return 0;
}
