{
  try {
    int alt41=17;
    alt41=this.dfa41.predict(this.input);
switch (alt41) {
case 1:
{
        pushFollow(FOLLOW_compoundStatement_in_statement1216);
        compoundStatement();
        this._fsp--;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_declaration_in_statement1232);
    declaration();
    this._fsp--;
    match(this.input,SEMI,FOLLOW_SEMI_in_statement1234);
  }
break;
case 3:
{
pushFollow(FOLLOW_expression_in_statement1246);
expression();
this._fsp--;
match(this.input,SEMI,FOLLOW_SEMI_in_statement1248);
}
break;
case 4:
{
pushFollow(FOLLOW_modifiers_in_statement1256);
modifiers();
this._fsp--;
pushFollow(FOLLOW_classDefinition_in_statement1258);
classDefinition();
this._fsp--;
}
break;
case 5:
{
match(this.input,IDENT,FOLLOW_IDENT_in_statement1266);
match(this.input,COLON,FOLLOW_COLON_in_statement1268);
pushFollow(FOLLOW_statement_in_statement1271);
statement();
this._fsp--;
}
break;
case 6:
{
match(this.input,96,FOLLOW_96_in_statement1279);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1281);
pushFollow(FOLLOW_expression_in_statement1283);
expression();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1285);
pushFollow(FOLLOW_statement_in_statement1287);
statement();
this._fsp--;
int alt36=2;
final int LA36_0=this.input.LA(1);
if ((LA36_0 == 97)) {
alt36=1;
}
switch (alt36) {
case 1:
{
match(this.input,97,FOLLOW_97_in_statement1308);
pushFollow(FOLLOW_statement_in_statement1310);
statement();
this._fsp--;
}
break;
}
}
break;
case 7:
{
match(this.input,98,FOLLOW_98_in_statement1323);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1328);
pushFollow(FOLLOW_forInit_in_statement1334);
forInit();
this._fsp--;
match(this.input,SEMI,FOLLOW_SEMI_in_statement1336);
pushFollow(FOLLOW_forCond_in_statement1345);
forCond();
this._fsp--;
match(this.input,SEMI,FOLLOW_SEMI_in_statement1347);
pushFollow(FOLLOW_forIter_in_statement1356);
forIter();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1370);
pushFollow(FOLLOW_statement_in_statement1375);
statement();
this._fsp--;
}
break;
case 8:
{
match(this.input,99,FOLLOW_99_in_statement1404);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1406);
pushFollow(FOLLOW_expression_in_statement1408);
expression();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1410);
pushFollow(FOLLOW_statement_in_statement1412);
statement();
this._fsp--;
}
break;
case 9:
{
match(this.input,100,FOLLOW_100_in_statement1420);
pushFollow(FOLLOW_statement_in_statement1422);
statement();
this._fsp--;
match(this.input,99,FOLLOW_99_in_statement1424);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1426);
pushFollow(FOLLOW_expression_in_statement1428);
expression();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1430);
match(this.input,SEMI,FOLLOW_SEMI_in_statement1432);
}
break;
case 10:
{
match(this.input,101,FOLLOW_101_in_statement1440);
int alt37=2;
final int LA37_0=this.input.LA(1);
if ((LA37_0 == IDENT)) {
alt37=1;
}
switch (alt37) {
case 1:
{
match(this.input,IDENT,FOLLOW_IDENT_in_statement1443);
}
break;
}
match(this.input,SEMI,FOLLOW_SEMI_in_statement1447);
}
break;
case 11:
{
match(this.input,102,FOLLOW_102_in_statement1455);
int alt38=2;
final int LA38_0=this.input.LA(1);
if ((LA38_0 == IDENT)) {
alt38=1;
}
switch (alt38) {
case 1:
{
match(this.input,IDENT,FOLLOW_IDENT_in_statement1458);
}
break;
}
match(this.input,SEMI,FOLLOW_SEMI_in_statement1462);
}
break;
case 12:
{
match(this.input,103,FOLLOW_103_in_statement1470);
int alt39=2;
final int LA39_0=this.input.LA(1);
if ((LA39_0 == IDENT || LA39_0 == LPAREN || (LA39_0 >= PLUS && LA39_0 <= MINUS) || (LA39_0 >= INC && LA39_0 <= NUM_FLOAT) || (LA39_0 >= 68 && LA39_0 <= 76) || (LA39_0 >= 93 && LA39_0 <= 94) || (LA39_0 >= 112 && LA39_0 <= 115))) {
alt39=1;
}
switch (alt39) {
case 1:
{
pushFollow(FOLLOW_expression_in_statement1473);
expression();
this._fsp--;
}
break;
}
match(this.input,SEMI,FOLLOW_SEMI_in_statement1477);
}
break;
case 13:
{
match(this.input,104,FOLLOW_104_in_statement1485);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1487);
pushFollow(FOLLOW_expression_in_statement1489);
expression();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1491);
match(this.input,LCURLY,FOLLOW_LCURLY_in_statement1493);
loop40: do {
int alt40=2;
final int LA40_0=this.input.LA(1);
if (((LA40_0 >= 106 && LA40_0 <= 107))) {
alt40=1;
}
switch (alt40) {
case 1:
{
pushFollow(FOLLOW_casesGroup_in_statement1500);
casesGroup();
this._fsp--;
}
break;
default :
break loop40;
}
}
 while (true);
match(this.input,RCURLY,FOLLOW_RCURLY_in_statement1507);
}
break;
case 14:
{
pushFollow(FOLLOW_tryBlock_in_statement1515);
tryBlock();
this._fsp--;
}
break;
case 15:
{
match(this.input,105,FOLLOW_105_in_statement1523);
pushFollow(FOLLOW_expression_in_statement1525);
expression();
this._fsp--;
match(this.input,SEMI,FOLLOW_SEMI_in_statement1527);
}
break;
case 16:
{
match(this.input,86,FOLLOW_86_in_statement1535);
match(this.input,LPAREN,FOLLOW_LPAREN_in_statement1537);
pushFollow(FOLLOW_expression_in_statement1539);
expression();
this._fsp--;
match(this.input,RPAREN,FOLLOW_RPAREN_in_statement1541);
pushFollow(FOLLOW_compoundStatement_in_statement1543);
compoundStatement();
this._fsp--;
}
break;
case 17:
{
match(this.input,SEMI,FOLLOW_SEMI_in_statement1556);
}
break;
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
