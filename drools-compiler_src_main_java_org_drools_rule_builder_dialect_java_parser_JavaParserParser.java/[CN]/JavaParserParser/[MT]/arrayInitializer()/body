{
  try {
{
      match(input,LCURLY,FOLLOW_LCURLY_in_arrayInitializer947);
      int alt28=2;
      int LA28_0=input.LA(1);
      if ((LA28_0 == IDENT || LA28_0 == LCURLY || LA28_0 == LPAREN || (LA28_0 >= PLUS && LA28_0 <= MINUS) || (LA28_0 >= INC && LA28_0 <= NUM_FLOAT) || (LA28_0 >= 68 && LA28_0 <= 76) || (LA28_0 >= 93 && LA28_0 <= 94) || (LA28_0 >= 112 && LA28_0 <= 115))) {
        alt28=1;
      }
switch (alt28) {
case 1:
{
          pushFollow(FOLLOW_initializer_in_arrayInitializer955);
          initializer();
          _fsp--;
          loop26:           do {
            int alt26=2;
            int LA26_0=input.LA(1);
            if ((LA26_0 == COMMA)) {
              int LA26_1=input.LA(2);
              if ((LA26_1 == IDENT || LA26_1 == LCURLY || LA26_1 == LPAREN || (LA26_1 >= PLUS && LA26_1 <= MINUS) || (LA26_1 >= INC && LA26_1 <= NUM_FLOAT) || (LA26_1 >= 68 && LA26_1 <= 76) || (LA26_1 >= 93 && LA26_1 <= 94) || (LA26_1 >= 112 && LA26_1 <= 115))) {
                alt26=1;
              }
            }
switch (alt26) {
case 1:
{
                match(input,COMMA,FOLLOW_COMMA_in_arrayInitializer992);
                pushFollow(FOLLOW_initializer_in_arrayInitializer994);
                initializer();
                _fsp--;
              }
            break;
default :
          break loop26;
      }
    }
 while (true);
    int alt27=2;
    int LA27_0=input.LA(1);
    if ((LA27_0 == COMMA)) {
      alt27=1;
    }
switch (alt27) {
case 1:
{
        match(input,COMMA,FOLLOW_COMMA_in_arrayInitializer1008);
      }
    break;
}
}
break;
}
match(input,RCURLY,FOLLOW_RCURLY_in_arrayInitializer1020);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
