{
  boolean tryagain;
  int localFireCount=0;
  try {
    do {
      while (!eager.isEmpty()) {
        RuleAgendaItem item=eager.removeFirst();
        item.getRuleExecutor().evaluateNetwork(this.workingMemory);
      }
      this.workingMemory.prepareToFireActivation();
      tryagain=false;
      final InternalAgendaGroup group=(InternalAgendaGroup)getNextFocus();
      if (group != null) {
        if (this.unlinkingEnabled) {
          RuleAgendaItem item;
          if (((InternalRuleBase)workingMemory.getRuleBase()).getConfiguration().isSequential()) {
            item=(RuleAgendaItem)group.remove();
            item.setBlocked(true);
          }
 else {
            item=(RuleAgendaItem)group.peek();
          }
          localFireCount=item.getRuleExecutor().evaluateNetworkAndFire(this.workingMemory,filter,fireCount,fireLimit);
          if (localFireCount == 0) {
            tryagain=true;
            this.workingMemory.executeQueuedActions();
          }
        }
 else {
          final AgendaItem item=(AgendaItem)group.remove();
          if (item != null) {
            if (filter == null || filter.accept(item)) {
              fireActivation(item);
              localFireCount++;
            }
 else {
              this.workingMemory.executeQueuedActions();
              final EventSupport eventsupport=(EventSupport)this.workingMemory;
              eventsupport.getAgendaEventSupport().fireActivationCancelled(item,this.workingMemory,MatchCancelledCause.FILTER);
              tryagain=true;
            }
          }
        }
        if ((AgendaItem)group.peek() == null || !((AgendaItem)group.peek()).getTerminalNode().isFireDirect()) {
          unstageActivations();
        }
      }
    }
 while (tryagain);
  }
  finally {
    this.workingMemory.activationFired();
  }
  return localFireCount;
}
