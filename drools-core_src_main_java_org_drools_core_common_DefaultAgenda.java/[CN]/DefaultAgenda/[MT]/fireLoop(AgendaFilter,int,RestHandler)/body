{
  int fireCount=0;
  try {
    PropagationEntry head=workingMemory.takeAllPropagations();
    int returnedFireCount=0;
    boolean limitReached=fireLimit == 0;
    while (isFiring()) {
      log.debug("Fire Loop");
      if (head != null) {
        this.workingMemory.flushPropagations(head);
        head=null;
      }
      if (!isFiring()) {
        break;
      }
      evaluateEagerList();
      InternalAgendaGroup group=getNextFocus();
      if (group != null && !limitReached) {
        returnedFireCount=fireNextItem(agendaFilter,fireCount,fireLimit,group);
        fireCount+=returnedFireCount;
        limitReached=(fireLimit > 0 && fireCount >= fireLimit);
        head=workingMemory.takeAllPropagations();
      }
 else {
        returnedFireCount=0;
        group=null;
      }
      if (returnedFireCount == 0 && head == null && (group == null || !group.isAutoDeactivate()) && !flushExpirations()) {
        head=restHandler.handleRest(workingMemory,this);
      }
    }
    if (this.focusStack.size() == 1 && getMainAgendaGroup().isEmpty()) {
      getMainAgendaGroup().setActive(false);
    }
  }
  finally {
    immediateHalt();
  }
  return fireCount;
}
