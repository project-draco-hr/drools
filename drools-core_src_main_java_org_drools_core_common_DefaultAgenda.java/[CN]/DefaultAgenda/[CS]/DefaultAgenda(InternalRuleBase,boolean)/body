{
  this.agendaGroups=new HashMap<String,InternalAgendaGroup>();
  this.activationGroups=new HashMap<String,ActivationGroup>();
  this.ruleFlowGroups=new HashMap<String,RuleFlowGroup>();
  this.focusStack=new LinkedList<AgendaGroup>();
  this.scheduledActivations=new org.drools.core.util.LinkedList<ScheduledAgendaItem>();
  this.agendaGroupFactory=rb.getConfiguration().getAgendaGroupFactory();
  if (initMain) {
    this.main=agendaGroupFactory.createAgendaGroup(AgendaGroup.MAIN,rb);
    this.agendaGroups.put(AgendaGroup.MAIN,this.main);
    this.focusStack.add(this.main);
  }
  Object object=ClassUtils.instantiateObject(rb.getConfiguration().getConsequenceExceptionHandler(),rb.getConfiguration().getClassLoader());
  if (object instanceof ConsequenceExceptionHandler) {
    this.legacyConsequenceExceptionHandler=(ConsequenceExceptionHandler)object;
  }
 else {
    this.consequenceExceptionHandler=(org.kie.runtime.rule.ConsequenceExceptionHandler)object;
  }
  this.declarativeAgenda=rb.getConfiguration().isDeclarativeAgenda();
  this.unlinkingEnabled=rb.getConfiguration().isUnlinkingEnabled();
}
