{
  String drl1="package org.drools.compiler.integrationtests\n" + "import " + Message.class.getCanonicalName() + "\n"+ "rule R11 when\n"+ "   $m : Message( message == \"Hello World\" )\n"+ "then\n"+ "end\n"+ "rule R12 when\n"+ "   $m : Message( message == \"Hi Universe\" )\n"+ "then\n"+ "end\n";
  String drl2="package org.drools.compiler.integrationtests\n" + "import " + Message.class.getCanonicalName() + "\n"+ "rule R21 when\n"+ "   $m : Message( message == \"Hello World\" )\n"+ "then\n"+ "end\n"+ "rule R22 when\n"+ "   $m : Message( message == \"Aloha Earth\" )\n"+ "then\n"+ "end\n";
  KieServices ks=KieServices.Factory.get();
  ReleaseId releaseId=ks.newReleaseId("org.kie","hello-world","1.0-SNAPSHOT");
  KieFileSystem kfs=ks.newKieFileSystem().generateAndWritePomXML(releaseId).write("src/main/resources/KBase1/org/pkg1/r1.drl",drl1).write("src/main/resources/KBase1/org/pkg2/r2.drl",drl2).writeKModuleXML(createKieProjectWithPackagesAnd2KieBases(ks).toXML());
  ks.newKieBuilder(kfs).buildAll();
  InternalKieModule kieModule=(InternalKieModule)ks.getRepository().getKieModule(releaseId);
  byte[] jar=kieModule.getBytes();
  MemoryFileSystem mfs=MemoryFileSystem.readFromJar(jar);
  File file=mfs.getFile(KieBuilderImpl.getCompilationCachePath(releaseId,"KBase1"));
  assertNotNull(file);
  file=mfs.getFile(KieBuilderImpl.getCompilationCachePath(releaseId,"KBase2"));
  assertNotNull(file);
  Resource jarRes=ks.getResources().newByteArrayResource(jar);
  KieModule km=ks.getRepository().addKieModule(jarRes);
  KieSession ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession1");
  ksession.insert(new Message("Hello World"));
  assertEquals(1,ksession.fireAllRules());
  ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession1");
  ksession.insert(new Message("Hi Universe"));
  assertEquals(1,ksession.fireAllRules());
  ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession1");
  ksession.insert(new Message("Aloha Earth"));
  assertEquals(0,ksession.fireAllRules());
  ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession2");
  ksession.insert(new Message("Hello World"));
  assertEquals(1,ksession.fireAllRules());
  ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession2");
  ksession.insert(new Message("Hi Universe"));
  assertEquals(0,ksession.fireAllRules());
  ksession=ks.newKieContainer(km.getReleaseId()).newKieSession("KSession2");
  ksession.insert(new Message("Aloha Earth"));
  assertEquals(1,ksession.fireAllRules());
}
