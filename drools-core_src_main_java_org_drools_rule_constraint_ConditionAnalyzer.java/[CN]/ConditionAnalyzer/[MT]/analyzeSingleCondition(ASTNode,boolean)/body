{
  SingleCondition condition=new SingleCondition(isNegated);
  if (node instanceof BinaryOperation) {
    BinaryOperation binaryOperation=(BinaryOperation)node;
    condition.left=analyzeNode(binaryOperation.getLeft());
    condition.operation=BooleanOperator.fromMvelOpCode(binaryOperation.getOperation());
    condition.right=analyzeNode(binaryOperation.getRight());
  }
 else   if (node instanceof RegExMatch) {
    condition.left=analyzeNode(node);
    condition.operation=BooleanOperator.MATCHES;
    Pattern pattern=((RegExMatch)node).getPattern();
    condition.right=new FixedExpression(String.class,pattern.pattern());
  }
 else   if (node instanceof Contains) {
    condition.left=analyzeNode(((Contains)node).getFirstStatement());
    condition.operation=BooleanOperator.CONTAINS;
    condition.right=analyzeNode(((Contains)node).getSecondStatement());
  }
 else   if (node instanceof Soundslike) {
    condition.left=analyzeNode((ASTNode)getFieldValue(Soundslike.class,"stmt",(Soundslike)node));
    condition.operation=BooleanOperator.SOUNDSLIKE;
    condition.right=analyzeNode((ASTNode)getFieldValue(Soundslike.class,"soundslike",(Soundslike)node));
  }
 else {
    condition.left=analyzeNode(node);
  }
  return condition;
}
