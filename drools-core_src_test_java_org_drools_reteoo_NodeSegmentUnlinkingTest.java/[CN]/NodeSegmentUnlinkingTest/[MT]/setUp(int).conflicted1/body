{
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(LRUnlinkingOption.ENABLED);
  ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase((RuleBaseConfiguration)kconf);
  buildContext=new BuildContext(ruleBase,ruleBase.getReteooBuilder().getIdGenerator());
  context=new PropagationContextImpl(0,PropagationContext.INSERTION,null,null,null);
  MockTupleSource mockTupleSource=new MockTupleSource(9);
  rule1=new Rule("rule1");
  rule2=new Rule("rule2");
  rule3=new Rule("rule3");
  ObjectTypeNode otn=new ObjectTypeNode(2,null,new ClassObjectType(String.class),buildContext);
  liaNode=new LeftInputAdapterNode(3,otn,buildContext);
  n1=createBetaNode(10,type[0],liaNode);
  n2=createBetaNode(11,type[1],n1);
  n3=createBetaNode(12,type[2],n1);
  n4=createBetaNode(13,type[3],n3);
  n5=createBetaNode(14,type[4],n4);
  n6=createBetaNode(15,type[5],n5);
  n7=createBetaNode(16,type[6],n6);
  n8=createBetaNode(17,type[7],n6);
  n1.getAssociations().put(rule1,null);
  n1.getAssociations().put(rule2,null);
  n1.getAssociations().put(rule3,null);
  n2.getAssociations().put(rule1,null);
  n2.getAssociations().put(rule2,null);
  n2.getAssociations().put(rule3,null);
  n3.getAssociations().put(rule2,null);
  n3.getAssociations().put(rule3,null);
  n4.getAssociations().put(rule2,null);
  n4.getAssociations().put(rule3,null);
  n5.getAssociations().put(rule2,null);
  n5.getAssociations().put(rule3,null);
  n6.getAssociations().put(rule2,null);
  n6.getAssociations().put(rule3,null);
  n7.getAssociations().put(rule3,null);
  n8.getAssociations().put(rule3,null);
}
