{
  LinkedList<Memory> smNodeMemories1=sm1.getNodeMemories();
  LinkedList<Memory> smNodeMemories2=sm2.getNodeMemories();
  Memory mem=smNodeMemories1.getFirst();
  int nodePosMask=1;
  for (int i=0, length=smNodeMemories1.size(); i < length; i++) {
    Memory next=mem.getNext();
    if (i > pos) {
      smNodeMemories1.remove(mem);
      smNodeMemories2.add(mem);
      mem.setSegmentMemory(sm2);
      BetaMemory bm=null;
      if (mem instanceof AccumulateNode.AccumulateMemory) {
        bm=((AccumulateNode.AccumulateMemory)mem).getBetaMemory();
      }
 else       if (mem instanceof BetaMemory) {
        bm=(BetaMemory)mem;
      }
      if (bm != null) {
        bm.setNodePosMaskBit(nodePosMask);
      }
      nodePosMask=nodePosMask << 1;
    }
    mem=next;
  }
}
