{
  SegmentMemory[] smems=pmem.getSegmentMemories();
  if (smems[0] == null) {
    return false;
  }
  LeftTupleSink sink;
  Memory mem;
  long bit=1;
  if (sm.getRootNode() instanceof LeftInputAdapterNode) {
    sink=((LeftInputAdapterNode)sm.getRootNode()).getSinkPropagator().getFirstLeftTupleSink();
    mem=sm.getNodeMemories().get(1);
    bit=2;
  }
 else {
    sink=(LeftTupleSink)sm.getRootNode();
    mem=sm.getNodeMemories().get(0);
  }
  TupleSets<LeftTuple> leftTupleSets=new TupleSetsImpl<LeftTuple>();
  if (leftTuple != null) {
    leftTupleSets.addInsert(leftTuple);
  }
  new RuleNetworkEvaluator().outerEval((LeftInputAdapterNode)smems[0].getRootNode(),pmem,sink,bit,mem,smems,sm.getPos(),leftTupleSets,wm,new LinkedList<StackEntry>(),true,pmem.getOrCreateRuleAgendaItem(wm).getRuleExecutor());
  return true;
}
