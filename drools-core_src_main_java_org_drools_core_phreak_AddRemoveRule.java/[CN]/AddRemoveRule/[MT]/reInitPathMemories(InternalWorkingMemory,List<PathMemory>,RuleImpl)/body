{
  List<SegmentMemory[]> previousSmems=new ArrayList<SegmentMemory[]>();
  for (  PathMemory pmem : pathMems) {
    previousSmems.add(pmem.getSegmentMemories());
    LeftTupleSource lts;
    LeftTupleSource startRianLts=null;
    if (NodeTypeEnums.isTerminalNode(pmem.getNetworkNode())) {
      lts=((TerminalNode)pmem.getNetworkNode()).getLeftTupleSource();
    }
 else {
      RightInputAdapterNode rian=(RightInputAdapterNode)pmem.getNetworkNode();
      startRianLts=rian.getStartTupleSource();
      lts=rian.getLeftTupleSource();
    }
    AbstractTerminalNode.initPathMemory(pmem,lts,startRianLts,wm,removingRule);
  }
  return previousSmems;
}
