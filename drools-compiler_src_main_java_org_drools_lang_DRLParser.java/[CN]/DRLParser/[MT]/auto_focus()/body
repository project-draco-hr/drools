{
  DRLParser.auto_focus_return retval=new DRLParser.auto_focus_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOL106=null;
  DRLParser.auto_focus_key_return auto_focus_key105=null;
  Object BOOL106_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_auto_focus_key_in_auto_focus1865);
      auto_focus_key105=auto_focus_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(auto_focus_key105.getTree(),root_0);
      if (state.backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      int alt42=2;
      int LA42_0=input.LA(1);
      if ((LA42_0 == BOOL)) {
        alt42=1;
      }
switch (alt42) {
case 1:
{
          BOOL106=(Token)match(input,BOOL,FOLLOW_BOOL_in_auto_focus1870);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            BOOL106_tree=(Object)adaptor.create(BOOL106);
            adaptor.addChild(root_0,BOOL106_tree);
          }
        }
      break;
  }
  if (state.backtracking == 0) {
    emit(BOOL106,DroolsEditorType.BOOLEAN_CONST);
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
