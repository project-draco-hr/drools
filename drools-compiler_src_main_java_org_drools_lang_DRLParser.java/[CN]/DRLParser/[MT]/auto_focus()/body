{
  auto_focus_return retval=new auto_focus_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOL105=null;
  auto_focus_key_return auto_focus_key104=null;
  Object BOOL105_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_auto_focus_key_in_auto_focus1866);
      auto_focus_key104=auto_focus_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(auto_focus_key104.getTree(),root_0);
      if (backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      int alt39=2;
      int LA39_0=input.LA(1);
      if ((LA39_0 == BOOL)) {
        alt39=1;
      }
switch (alt39) {
case 1:
{
          BOOL105=(Token)input.LT(1);
          match(input,BOOL,FOLLOW_BOOL_in_auto_focus1871);
          if (failed)           return retval;
          if (backtracking == 0) {
            BOOL105_tree=(Object)adaptor.create(BOOL105);
            adaptor.addChild(root_0,BOOL105_tree);
          }
        }
      break;
  }
  if (backtracking == 0) {
    emit(BOOL105,DroolsEditorType.BOOLEAN_CONST);
  }
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
