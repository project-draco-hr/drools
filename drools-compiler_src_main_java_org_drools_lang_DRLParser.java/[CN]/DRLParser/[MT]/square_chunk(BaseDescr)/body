{
  String text=null;
  Token loc=null;
  String chunk=null;
  StringBuffer buf=null;
  Integer channel=null;
  try {
{
      if (this.backtracking == 0) {
        channel=((SwitchingCommonTokenStream)this.input).getTokenTypeChannel(WS);
        ((SwitchingCommonTokenStream)this.input).setTokenTypeChannel(WS,Token.DEFAULT_CHANNEL);
        buf=new StringBuffer();
      }
      loc=(Token)this.input.LT(1);
      match(this.input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_square_chunk3138);
      if (this.failed) {
        return text;
      }
      if (this.backtracking == 0) {
        buf.append(loc.getText());
      }
      loop42:       do {
        int alt42=3;
        final int LA42_0=this.input.LA(1);
        if (((LA42_0 >= PACKAGE && LA42_0 <= RIGHT_CURLY) || (LA42_0 >= AND && LA42_0 <= 78))) {
          alt42=1;
        }
 else         if ((LA42_0 == LEFT_SQUARE)) {
          alt42=2;
        }
switch (alt42) {
case 1:
{
            if ((this.input.LA(1) >= PACKAGE && this.input.LA(1) <= RIGHT_CURLY) || (this.input.LA(1) >= AND && this.input.LA(1) <= 78)) {
              this.input.consume();
              this.errorRecovery=false;
              this.failed=false;
            }
 else {
              if (this.backtracking > 0) {
                this.failed=true;
                return text;
              }
              final MismatchedSetException mse=new MismatchedSetException(null,this.input);
              recoverFromMismatchedSet(this.input,mse,FOLLOW_set_in_square_chunk3154);
              throw mse;
            }
            if (this.backtracking == 0) {
              buf.append(this.input.LT(-1).getText());
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_square_chunk_in_square_chunk3178);
        chunk=square_chunk(null);
        this._fsp--;
        if (this.failed) {
          return text;
        }
        if (this.backtracking == 0) {
          buf.append(chunk);
        }
      }
    break;
default :
  break loop42;
}
}
 while (true);
if (this.backtracking == 0) {
if (channel != null) {
((SwitchingCommonTokenStream)this.input).setTokenTypeChannel(WS,channel.intValue());
}
 else {
((SwitchingCommonTokenStream)this.input).setTokenTypeChannel(WS,Token.HIDDEN_CHANNEL);
}
}
loc=(Token)this.input.LT(1);
match(this.input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_square_chunk3215);
if (this.failed) {
return text;
}
if (this.backtracking == 0) {
buf.append(loc.getText());
text=buf.toString();
if (descr != null) {
descr.setEndCharacter(((CommonToken)loc).getStopIndex());
}
}
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return text;
}
