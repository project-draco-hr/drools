{
  rule_attribute_return retval=new rule_attribute_return();
  retval.start=input.LT(1);
  Object root_0=null;
  salience_return salience82=null;
  no_loop_return no_loop83=null;
  agenda_group_return agenda_group84=null;
  duration_return duration85=null;
  activation_group_return activation_group86=null;
  auto_focus_return auto_focus87=null;
  date_effective_return date_effective88=null;
  date_expires_return date_expires89=null;
  enabled_return enabled90=null;
  ruleflow_group_return ruleflow_group91=null;
  lock_on_active_return lock_on_active92=null;
  dialect_return dialect93=null;
  pushParaphrases(DroolsParaphareseTypes.RULE_ATTRIBUTE);
  try {
    int alt35=12;
    int LA35_0=input.LA(1);
    if ((LA35_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.ENABLED))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DURATION))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
      int LA35_1=input.LA(2);
      if ((LA35_1 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
        int LA35_2=input.LA(3);
        if ((LA35_2 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
          int LA35_7=input.LA(4);
          if ((LA35_7 == MISC) && ((validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE)))) {
            alt35=11;
          }
 else           if ((LA35_7 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
            int LA35_10=input.LA(5);
            if (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
              alt35=3;
            }
 else             if (((validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
              alt35=5;
            }
 else             if (((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE)))) {
              alt35=7;
            }
 else             if (((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)))) {
              alt35=8;
            }
 else             if (((validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
              alt35=10;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,10,input);
              throw nvae;
            }
          }
 else           if (((validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP)))) {
            alt35=2;
          }
 else           if (((validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS)))) {
            alt35=6;
          }
 else {
            if (backtracking > 0) {
              failed=true;
              return retval;
            }
            NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,7,input);
            throw nvae;
          }
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,2,input);
          throw nvae;
        }
      }
 else       if ((LA35_1 == STRING) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
        alt35=12;
      }
 else       if ((LA35_1 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
        int LA35_4=input.LA(3);
        if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
          alt35=1;
        }
 else         if (((validateIdentifierKey(DroolsSoftKeywords.DURATION)))) {
          alt35=4;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,4,input);
          throw nvae;
        }
      }
 else       if ((LA35_1 == BOOL) && ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
        alt35=9;
      }
 else       if ((LA35_1 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
        alt35=1;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("473:1: rule_attribute : ( salience | no_loop | agenda_group | duration | activation_group | auto_focus | date_effective | date_expires | enabled | ruleflow_group | lock_on_active | dialect );",35,0,input);
      throw nvae;
    }
switch (alt35) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_salience_in_rule_attribute1512);
        salience82=salience();
        _fsp--;
        if (failed)         return retval;
        if (backtracking == 0)         adaptor.addChild(root_0,salience82.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    pushFollow(FOLLOW_no_loop_in_rule_attribute1518);
    no_loop83=no_loop();
    _fsp--;
    if (failed)     return retval;
    if (backtracking == 0)     adaptor.addChild(root_0,no_loop83.getTree());
  }
break;
case 3:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_agenda_group_in_rule_attribute1525);
agenda_group84=agenda_group();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,agenda_group84.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_duration_in_rule_attribute1532);
duration85=duration();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,duration85.getTree());
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_activation_group_in_rule_attribute1539);
activation_group86=activation_group();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,activation_group86.getTree());
}
break;
case 6:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_auto_focus_in_rule_attribute1545);
auto_focus87=auto_focus();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,auto_focus87.getTree());
}
break;
case 7:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_date_effective_in_rule_attribute1551);
date_effective88=date_effective();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,date_effective88.getTree());
}
break;
case 8:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_date_expires_in_rule_attribute1557);
date_expires89=date_expires();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,date_expires89.getTree());
}
break;
case 9:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_enabled_in_rule_attribute1563);
enabled90=enabled();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,enabled90.getTree());
}
break;
case 10:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_ruleflow_group_in_rule_attribute1569);
ruleflow_group91=ruleflow_group();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,ruleflow_group91.getTree());
}
break;
case 11:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_lock_on_active_in_rule_attribute1575);
lock_on_active92=lock_on_active();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,lock_on_active92.getTree());
}
break;
case 12:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_dialect_in_rule_attribute1580);
dialect93=dialect();
_fsp--;
if (failed) return retval;
if (backtracking == 0) adaptor.addChild(root_0,dialect93.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
if (backtracking == 0) {
paraphrases.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
