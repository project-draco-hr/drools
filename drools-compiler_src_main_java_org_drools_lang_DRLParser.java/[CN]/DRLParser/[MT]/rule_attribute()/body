{
  AttributeDescr d=null;
  AttributeDescr a=null;
  d=null;
  try {
    int alt18=9;
switch (input.LA(1)) {
case SALIENCE:
      alt18=1;
    break;
case NO_LOOP:
  alt18=2;
break;
case AGENDA_GROUP:
alt18=3;
break;
case DURATION:
alt18=4;
break;
case ACTIVATION_GROUP:
alt18=5;
break;
case AUTO_FOCUS:
alt18=6;
break;
case DATE_EFFECTIVE:
alt18=7;
break;
case DATE_EXPIRES:
alt18=8;
break;
case ENABLED:
alt18=9;
break;
default :
if (backtracking > 0) {
failed=true;
return d;
}
NoViableAltException nvae=new NoViableAltException("458:1: rule_attribute returns [AttributeDescr d] : ( ( salience )=>a= salience | ( no_loop )=>a= no_loop | ( agenda_group )=>a= agenda_group | ( duration )=>a= duration | ( activation_group )=>a= activation_group | ( auto_focus )=>a= auto_focus | ( date_effective )=>a= date_effective | ( date_expires )=>a= date_expires | a= enabled );",18,0,input);
throw nvae;
}
switch (alt18) {
case 1:
{
pushFollow(FOLLOW_salience_in_rule_attribute947);
a=salience();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 2:
{
pushFollow(FOLLOW_no_loop_in_rule_attribute957);
a=no_loop();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 3:
{
pushFollow(FOLLOW_agenda_group_in_rule_attribute968);
a=agenda_group();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 4:
{
pushFollow(FOLLOW_duration_in_rule_attribute981);
a=duration();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 5:
{
pushFollow(FOLLOW_activation_group_in_rule_attribute995);
a=activation_group();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 6:
{
pushFollow(FOLLOW_auto_focus_in_rule_attribute1006);
a=auto_focus();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 7:
{
pushFollow(FOLLOW_date_effective_in_rule_attribute1023);
a=date_effective();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 8:
{
pushFollow(FOLLOW_date_expires_in_rule_attribute1033);
a=date_expires();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
case 9:
{
pushFollow(FOLLOW_enabled_in_rule_attribute1049);
a=enabled();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=a;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
