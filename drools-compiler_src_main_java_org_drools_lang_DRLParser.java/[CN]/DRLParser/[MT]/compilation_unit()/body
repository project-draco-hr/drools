{
  this.location=new Location(Location.LOCATION_UNKNOWN);
  try {
{
      pushFollow(FOLLOW_prolog_in_compilation_unit57);
      prolog();
      _fsp--;
      if (failed)       return;
      int cnt2=0;
      loop2:       do {
        int alt2=2;
        int LA2_0=input.LA(1);
        if (((LA2_0 >= IMPORT && LA2_0 <= FUNCTION) || LA2_0 == GLOBAL || LA2_0 == QUERY || (LA2_0 >= TEMPLATE && LA2_0 <= RULE) || LA2_0 == DATE_EFFECTIVE || (LA2_0 >= DATE_EXPIRES && LA2_0 <= ENABLED) || LA2_0 == SALIENCE || (LA2_0 >= NO_LOOP && LA2_0 <= LOCK_ON_ACTIVE))) {
          alt2=1;
        }
switch (alt2) {
case 1:
{
            pushFollow(FOLLOW_statement_in_compilation_unit62);
            statement();
            _fsp--;
            if (failed)             return;
          }
        break;
default :
      if (cnt2 >= 1)       break loop2;
    if (backtracking > 0) {
      failed=true;
      return;
    }
  EarlyExitException eee=new EarlyExitException(2,input);
throw eee;
}
cnt2++;
}
 while (true);
match(input,EOF,FOLLOW_EOF_in_compilation_unit67);
if (failed) return;
}
}
 catch (RecognitionException e) {
reportError(e);
}
 finally {
}
return;
}
