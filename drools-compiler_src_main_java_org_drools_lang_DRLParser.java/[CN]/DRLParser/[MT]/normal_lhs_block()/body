{
  DRLParser.normal_lhs_block_return retval=new DRLParser.normal_lhs_block_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.lhs_return lhs120=null;
  RewriteRuleSubtreeStream stream_lhs=new RewriteRuleSubtreeStream(adaptor,"rule lhs");
  try {
{
      loop44:       do {
        int alt44=2;
        int LA44_0=input.LA(1);
        if ((LA44_0 == ID)) {
          int LA44_1=input.LA(2);
          if ((!((((validateIdentifierKey(DroolsSoftKeywords.END))))))) {
            alt44=1;
          }
        }
 else         if ((LA44_0 == LEFT_PAREN)) {
          alt44=1;
        }
switch (alt44) {
case 1:
{
            pushFollow(FOLLOW_lhs_in_normal_lhs_block2029);
            lhs120=lhs();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             stream_lhs.add(lhs120.getTree());
          }
        break;
default :
      break loop44;
  }
}
 while (true);
if (state.backtracking == 0) {
  retval.tree=root_0;
  RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
  root_0=(Object)adaptor.nil();
{
{
      Object root_1=(Object)adaptor.nil();
      root_1=(Object)adaptor.becomeRoot((Object)adaptor.create(VT_AND_IMPLICIT,"VT_AND_IMPLICIT"),root_1);
      while (stream_lhs.hasNext()) {
        adaptor.addChild(root_1,stream_lhs.nextTree());
      }
      stream_lhs.reset();
      adaptor.addChild(root_0,root_1);
    }
  }
  retval.tree=root_0;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
