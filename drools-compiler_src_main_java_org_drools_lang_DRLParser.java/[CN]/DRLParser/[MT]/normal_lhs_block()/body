{
  normal_lhs_block_return retval=new normal_lhs_block_return();
  retval.start=input.LT(1);
  Object root_0=null;
  lhs_return lhs117=null;
  RewriteRuleSubtreeStream stream_lhs=new RewriteRuleSubtreeStream(adaptor,"rule lhs");
  try {
{
      loop40:       do {
        int alt40=2;
        int LA40_0=input.LA(1);
        if ((LA40_0 == ID || LA40_0 == LEFT_PAREN)) {
          alt40=1;
        }
switch (alt40) {
case 1:
{
            pushFollow(FOLLOW_lhs_in_normal_lhs_block1979);
            lhs117=lhs();
            _fsp--;
            if (failed)             return retval;
            if (backtracking == 0)             stream_lhs.add(lhs117.getTree());
          }
        break;
default :
      break loop40;
  }
}
 while (true);
if (backtracking == 0) {
  retval.tree=root_0;
  RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
  root_0=(Object)adaptor.nil();
{
{
      Object root_1=(Object)adaptor.nil();
      root_1=(Object)adaptor.becomeRoot(adaptor.create(VT_AND_IMPLICIT,"VT_AND_IMPLICIT"),root_1);
      while (stream_lhs.hasNext()) {
        adaptor.addChild(root_1,stream_lhs.next());
      }
      stream_lhs.reset();
      adaptor.addChild(root_0,root_1);
    }
  }
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
