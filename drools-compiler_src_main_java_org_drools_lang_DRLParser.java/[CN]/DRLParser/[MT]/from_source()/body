{
  DeclarativeInvokerDescr ds=null;
  Token var=null;
  Token field=null;
  Token method=null;
  Token functionName=null;
  String arg=null;
  String args=null;
  ds=null;
  try {
    int alt24=3;
    int LA24_0=input.LA(1);
    if ((LA24_0 == ID)) {
      int LA24_1=input.LA(2);
      if ((LA24_1 == 31)) {
        int LA24_2=input.LA(3);
        if ((LA24_2 == ID)) {
          int LA24_4=input.LA(4);
          if ((LA24_4 == LEFT_PAREN)) {
            int LA24_5=input.LA(5);
            if ((LA24_5 == LEFT_PAREN)) {
              int LA24_7=input.LA(6);
              if ((LA24_7 == RIGHT_PAREN)) {
                alt24=2;
              }
 else               if ((LA24_7 == ID || LA24_7 == LEFT_PAREN || (LA24_7 >= 71 && LA24_7 <= 73))) {
                alt24=1;
              }
 else {
                NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,7,input);
                throw nvae;
              }
            }
 else             if ((LA24_5 == ID || (LA24_5 >= 71 && LA24_5 <= 73))) {
              alt24=1;
            }
 else {
              NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,5,input);
              throw nvae;
            }
          }
 else           if ((LA24_4 == ID || LA24_4 == RHS || (LA24_4 >= RIGHT_PAREN && LA24_4 <= LEFT_SQUARE) || LA24_4 == 27 || LA24_4 == 36 || (LA24_4 >= 54 && LA24_4 <= 55) || (LA24_4 >= 69 && LA24_4 <= 73))) {
            alt24=1;
          }
 else {
            NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,4,input);
            throw nvae;
          }
        }
 else {
          NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,2,input);
          throw nvae;
        }
      }
 else       if ((LA24_1 == LEFT_PAREN)) {
        alt24=3;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,1,input);
        throw nvae;
      }
    }
 else {
      NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID (arg= square_chunk )? ) | (var= ID '.' method= ID '(' args= paren_chunk ')' ) | (functionName= ID '(' args= paren_chunk ')' ) );",24,0,input);
      throw nvae;
    }
switch (alt24) {
case 1:
{
{
          var=(Token)input.LT(1);
          match(input,ID,FOLLOW_ID_in_from_source1331);
          match(input,31,FOLLOW_31_in_from_source1333);
          field=(Token)input.LT(1);
          match(input,ID,FOLLOW_ID_in_from_source1337);
          int alt23=2;
          int LA23_0=input.LA(1);
          if ((LA23_0 == LEFT_SQUARE)) {
            alt23=1;
          }
switch (alt23) {
case 1:
{
              pushFollow(FOLLOW_square_chunk_in_from_source1343);
              arg=square_chunk();
              _fsp--;
            }
          break;
      }
      FieldAccessDescr fa;
      if (arg == null) {
        fa=new FieldAccessDescr(var.getText(),field.getText());
      }
 else {
        fa=new FieldAccessDescr(var.getText(),field.getText(),arg);
      }
      fa.setLocation(offset(var.getLine()),var.getCharPositionInLine());
      ds=fa;
    }
  }
break;
case 2:
{
{
  var=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_from_source1372);
  match(input,31,FOLLOW_31_in_from_source1374);
  method=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_from_source1378);
  match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_from_source1380);
  pushFollow(FOLLOW_paren_chunk_in_from_source1384);
  args=paren_chunk();
  _fsp--;
  match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_from_source1386);
  MethodAccessDescr ma=new MethodAccessDescr(var.getText(),method.getText());
  ma.setLocation(offset(var.getLine()),var.getCharPositionInLine());
  ma.setArguments(args);
  ds=ma;
}
}
break;
case 3:
{
{
functionName=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1408);
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_from_source1410);
pushFollow(FOLLOW_paren_chunk_in_from_source1414);
args=paren_chunk();
_fsp--;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_from_source1416);
FunctionCallDescr fc=new FunctionCallDescr(functionName.getText());
fc.setLocation(offset(functionName.getLine()),functionName.getCharPositionInLine());
fc.setArguments(args);
ds=fc;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return ds;
}
