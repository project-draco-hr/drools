{
  DeclarativeInvokerDescr ds=null;
  Token functionName=null;
  Token var=null;
  String args=null;
  ds=null;
  AccessorDescr ad=null;
  try {
    int alt24=2;
    int LA24_0=input.LA(1);
    if ((LA24_0 == ID)) {
      if ((synpred33())) {
        alt24=1;
      }
 else       if ((true)) {
        alt24=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return ds;
        }
        NoViableAltException nvae=new NoViableAltException("710:1: from_source returns [DeclarativeInvokerDescr ds] : ( ( ( ( ID LEFT_PAREN )=> ID paren_chunk ) )=> ( ( ID LEFT_PAREN )=>functionName= ID args= paren_chunk ) | (var= ID ( ( expression_chain[ad] )=> expression_chain[ad] )? ) );",24,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return ds;
      }
      NoViableAltException nvae=new NoViableAltException("710:1: from_source returns [DeclarativeInvokerDescr ds] : ( ( ( ( ID LEFT_PAREN )=> ID paren_chunk ) )=> ( ( ID LEFT_PAREN )=>functionName= ID args= paren_chunk ) | (var= ID ( ( expression_chain[ad] )=> expression_chain[ad] )? ) );",24,0,input);
      throw nvae;
    }
switch (alt24) {
case 1:
{
{
          functionName=(Token)input.LT(1);
          match(input,ID,FOLLOW_ID_in_from_source1343);
          if (failed)           return ds;
          pushFollow(FOLLOW_paren_chunk_in_from_source1347);
          args=paren_chunk();
          _fsp--;
          if (failed)           return ds;
          if (backtracking == 0) {
            FunctionCallDescr fc=new FunctionCallDescr(functionName.getText());
            fc.setLocation(offset(functionName.getLine()),functionName.getCharPositionInLine());
            fc.setArguments(args);
            ds=fc;
          }
        }
      }
    break;
case 2:
{
{
      var=(Token)input.LT(1);
      match(input,ID,FOLLOW_ID_in_from_source1380);
      if (failed)       return ds;
      if (backtracking == 0) {
        ad=new AccessorDescr(var.getText());
        ad.setLocation(offset(var.getLine()),var.getCharPositionInLine());
        ds=ad;
      }
      int alt23=2;
      int LA23_0=input.LA(1);
      if ((LA23_0 == 30)) {
        alt23=1;
      }
switch (alt23) {
case 1:
{
          pushFollow(FOLLOW_expression_chain_in_from_source1397);
          expression_chain(ad);
          _fsp--;
          if (failed)           return ds;
        }
      break;
  }
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return ds;
}
