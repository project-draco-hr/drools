{
  DeclarativeInvokerDescr ds=null;
  Token functionName=null;
  Token var=null;
  String args=null;
  ds=null;
  AccessorDescr ad=null;
  try {
{
      int alt23=2;
      int LA23_0=input.LA(1);
      if ((LA23_0 == ID)) {
        if ((synpred35())) {
          alt23=1;
        }
 else         if ((true)) {
          alt23=2;
        }
 else {
          if (backtracking > 0) {
            failed=true;
            return ds;
          }
          NoViableAltException nvae=new NoViableAltException("745:3: ( ( ( ID paren_chunk ) )=> (functionName= ID args= paren_chunk ) | (var= ID ) )",23,1,input);
          throw nvae;
        }
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return ds;
        }
        NoViableAltException nvae=new NoViableAltException("745:3: ( ( ( ID paren_chunk ) )=> (functionName= ID args= paren_chunk ) | (var= ID ) )",23,0,input);
        throw nvae;
      }
switch (alt23) {
case 1:
{
{
            functionName=(Token)input.LT(1);
            match(input,ID,FOLLOW_ID_in_from_source1530);
            if (failed)             return ds;
            pushFollow(FOLLOW_paren_chunk_in_from_source1534);
            args=paren_chunk();
            _fsp--;
            if (failed)             return ds;
            if (backtracking == 0) {
              ad=new AccessorDescr();
              ad.setLocation(offset(functionName.getLine()),functionName.getCharPositionInLine());
              ds=ad;
              FunctionCallDescr fc=new FunctionCallDescr(functionName.getText());
              fc.setLocation(offset(functionName.getLine()),functionName.getCharPositionInLine());
              fc.setArguments(args);
              ad.addInvoker(fc);
            }
          }
        }
      break;
case 2:
{
{
        var=(Token)input.LT(1);
        match(input,ID,FOLLOW_ID_in_from_source1567);
        if (failed)         return ds;
        if (backtracking == 0) {
          ad=new AccessorDescr(var.getText());
          ad.setLocation(offset(var.getLine()),var.getCharPositionInLine());
          ds=ad;
        }
      }
    }
  break;
}
int alt24=2;
int LA24_0=input.LA(1);
if ((LA24_0 == 33)) {
alt24=1;
}
switch (alt24) {
case 1:
{
  pushFollow(FOLLOW_expression_chain_in_from_source1590);
  expression_chain(ad);
  _fsp--;
  if (failed)   return ds;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return ds;
}
