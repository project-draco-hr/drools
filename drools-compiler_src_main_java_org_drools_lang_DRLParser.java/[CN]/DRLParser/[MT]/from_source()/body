{
  DeclarativeInvokerDescr ds=null;
  Token var=null;
  Token field=null;
  Token method=null;
  Token functionName=null;
  ArgumentValueDescr arg=null;
  ArrayList args=null;
  ds=null;
  try {
    int alt24=3;
    int LA24_0=input.LA(1);
    if ((LA24_0 == ID)) {
      int LA24_1=input.LA(2);
      if ((LA24_1 == LEFT_PAREN)) {
        alt24=3;
      }
 else       if ((LA24_1 == 29)) {
        int LA24_3=input.LA(3);
        if ((LA24_3 == ID)) {
          int LA24_4=input.LA(4);
          if ((LA24_4 == LEFT_PAREN)) {
switch (input.LA(5)) {
case CURLY_CHUNK:
case INT:
case BOOL:
case STRING:
case FLOAT:
case RIGHT_PAREN:
case 47:
case 54:
              alt24=2;
            break;
case ID:
          int LA24_8=input.LA(6);
        if ((LA24_8 == LEFT_PAREN || LA24_8 == 29 || LA24_8 == 38 || LA24_8 == 47)) {
          alt24=1;
        }
 else         if ((LA24_8 == RIGHT_PAREN || LA24_8 == 32)) {
          alt24=2;
        }
 else {
          NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,8,input);
          throw nvae;
        }
      break;
case LEFT_PAREN:
case 73:
case 74:
case 75:
    alt24=1;
  break;
default :
NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,5,input);
throw nvae;
}
}
 else if ((LA24_4 == ID || LA24_4 == RHS || LA24_4 == RIGHT_PAREN || LA24_4 == 25 || LA24_4 == 34 || LA24_4 == 47 || (LA24_4 >= 57 && LA24_4 <= 58) || (LA24_4 >= 71 && LA24_4 <= 75))) {
alt24=1;
}
 else {
NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,4,input);
throw nvae;
}
}
 else {
NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,3,input);
throw nvae;
}
}
 else {
NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,1,input);
throw nvae;
}
}
 else {
NoViableAltException nvae=new NoViableAltException("707:1: from_source returns [DeclarativeInvokerDescr ds] : ( (var= ID '.' field= ID ( '[' arg= argument_value ']' )? ) | (var= ID '.' method= ID '(' args= argument_list ')' ) | (functionName= ID '(' args= argument_list ')' ) );",24,0,input);
throw nvae;
}
switch (alt24) {
case 1:
{
{
var=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1331);
match(input,29,FOLLOW_29_in_from_source1333);
field=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1337);
int alt23=2;
int LA23_0=input.LA(1);
if ((LA23_0 == 47)) {
alt23=1;
}
switch (alt23) {
case 1:
{
match(input,47,FOLLOW_47_in_from_source1341);
pushFollow(FOLLOW_argument_value_in_from_source1345);
arg=argument_value();
_fsp--;
match(input,48,FOLLOW_48_in_from_source1347);
}
break;
}
FieldAccessDescr fa;
if (arg == null) {
fa=new FieldAccessDescr(var.getText(),field.getText());
}
 else {
fa=new FieldAccessDescr(var.getText(),field.getText(),arg);
}
fa.setLocation(offset(var.getLine()),var.getCharPositionInLine());
ds=fa;
}
}
break;
case 2:
{
{
var=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1376);
match(input,29,FOLLOW_29_in_from_source1378);
method=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1382);
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_from_source1384);
pushFollow(FOLLOW_argument_list_in_from_source1388);
args=argument_list();
_fsp--;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_from_source1390);
MethodAccessDescr ma=new MethodAccessDescr(var.getText(),method.getText());
ma.setLocation(offset(var.getLine()),var.getCharPositionInLine());
ma.setArguments(args);
ds=ma;
}
}
break;
case 3:
{
{
functionName=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_from_source1412);
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_from_source1414);
pushFollow(FOLLOW_argument_list_in_from_source1418);
args=argument_list();
_fsp--;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_from_source1420);
FunctionCallDescr fc=new FunctionCallDescr(functionName.getText());
fc.setLocation(offset(functionName.getLine()),functionName.getCharPositionInLine());
fc.setArguments(args);
ds=fc;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return ds;
}
