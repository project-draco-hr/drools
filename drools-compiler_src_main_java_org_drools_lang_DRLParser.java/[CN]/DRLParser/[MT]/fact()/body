{
  BaseDescr d=null;
  Token loc=null;
  Token endLoc=null;
  String id=null;
  d=null;
  try {
{
      pushFollow(FOLLOW_dotted_name_in_fact2177);
      id=dotted_name(null);
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        d=new ColumnDescr(id);
      }
      loc=(Token)input.LT(1);
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_fact2191);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        d.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      int alt29=2;
      int LA29_0=input.LA(1);
      if (((LA29_0 >= PACKAGE && LA29_0 <= ATTRIBUTES) || LA29_0 == ENABLED || LA29_0 == SALIENCE || (LA29_0 >= DURATION && LA29_0 <= LEFT_PAREN) || (LA29_0 >= CONTAINS && LA29_0 <= EXCLUDES) || LA29_0 == NULL || (LA29_0 >= AND && LA29_0 <= THEN))) {
        alt29=1;
      }
switch (alt29) {
case 1:
{
          pushFollow(FOLLOW_constraints_in_fact2201);
          constraints((ColumnDescr)d);
          _fsp--;
          if (failed)           return d;
        }
      break;
  }
  endLoc=(Token)input.LT(1);
  match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_fact2214);
  if (failed)   return d;
  if (backtracking == 0) {
    if (endLoc.getType() == RIGHT_PAREN) {
      d.setEndLocation(offset(endLoc.getLine()),endLoc.getCharPositionInLine());
      d.setEndCharacter(((CommonToken)endLoc).getStopIndex());
    }
  }
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
