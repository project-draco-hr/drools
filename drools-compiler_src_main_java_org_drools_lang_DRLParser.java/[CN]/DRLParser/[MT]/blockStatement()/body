{
  DRLParser.blockStatement_return retval=new DRLParser.blockStatement_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.localVariableDeclaration_return localVariableDeclaration363=null;
  DRLParser.rhs_statement_return rhs_statement364=null;
  try {
    int alt124=2;
    alt124=dfa124.predict(input);
switch (alt124) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_localVariableDeclaration_in_blockStatement6128);
        localVariableDeclaration363=localVariableDeclaration();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,localVariableDeclaration363.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    pushFollow(FOLLOW_rhs_statement_in_blockStatement6138);
    rhs_statement364=rhs_statement();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,rhs_statement364.getTree());
  }
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
