{
  DRLParser.variableDeclaratorRest_return retval=new DRLParser.variableDeclaratorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE376=null;
  Token RIGHT_SQUARE377=null;
  Token EQUALS_ASSIGN378=null;
  Token EQUALS_ASSIGN380=null;
  DRLParser.variableInitializer_return variableInitializer379=null;
  DRLParser.variableInitializer_return variableInitializer381=null;
  Object LEFT_SQUARE376_tree=null;
  Object RIGHT_SQUARE377_tree=null;
  Object EQUALS_ASSIGN378_tree=null;
  Object EQUALS_ASSIGN380_tree=null;
  try {
    int alt130=3;
switch (input.LA(1)) {
case LEFT_SQUARE:
{
        alt130=1;
      }
    break;
case EQUALS_ASSIGN:
{
    alt130=2;
  }
break;
case EOF:
case SEMICOLON:
case COMMA:
{
alt130=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",130,0,input);
throw nvae;
}
switch (alt130) {
case 1:
{
root_0=(Object)adaptor.nil();
int cnt128=0;
loop128: do {
int alt128=2;
int LA128_0=input.LA(1);
if ((LA128_0 == LEFT_SQUARE)) {
alt128=1;
}
switch (alt128) {
case 1:
{
LEFT_SQUARE376=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_variableDeclaratorRest6246);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE376_tree=(Object)adaptor.create(LEFT_SQUARE376);
adaptor.addChild(root_0,LEFT_SQUARE376_tree);
}
RIGHT_SQUARE377=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_variableDeclaratorRest6248);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE377_tree=(Object)adaptor.create(RIGHT_SQUARE377);
adaptor.addChild(root_0,RIGHT_SQUARE377_tree);
}
}
break;
default :
if (cnt128 >= 1) break loop128;
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
EarlyExitException eee=new EarlyExitException(128,input);
throw eee;
}
cnt128++;
}
 while (true);
int alt129=2;
int LA129_0=input.LA(1);
if ((LA129_0 == EQUALS_ASSIGN)) {
alt129=1;
}
switch (alt129) {
case 1:
{
EQUALS_ASSIGN378=(Token)match(input,EQUALS_ASSIGN,FOLLOW_EQUALS_ASSIGN_in_variableDeclaratorRest6253);
if (state.failed) return retval;
if (state.backtracking == 0) {
EQUALS_ASSIGN378_tree=(Object)adaptor.create(EQUALS_ASSIGN378);
adaptor.addChild(root_0,EQUALS_ASSIGN378_tree);
}
pushFollow(FOLLOW_variableInitializer_in_variableDeclaratorRest6255);
variableInitializer379=variableInitializer();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableInitializer379.getTree());
}
break;
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
EQUALS_ASSIGN380=(Token)match(input,EQUALS_ASSIGN,FOLLOW_EQUALS_ASSIGN_in_variableDeclaratorRest6262);
if (state.failed) return retval;
if (state.backtracking == 0) {
EQUALS_ASSIGN380_tree=(Object)adaptor.create(EQUALS_ASSIGN380);
adaptor.addChild(root_0,EQUALS_ASSIGN380_tree);
}
pushFollow(FOLLOW_variableInitializer_in_variableDeclaratorRest6264);
variableInitializer381=variableInitializer();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableInitializer381.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
