{
  DRLParser.variableDeclaratorRest_return retval=new DRLParser.variableDeclaratorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE361=null;
  Token RIGHT_SQUARE362=null;
  Token EQUALS_ASSIGN363=null;
  Token EQUALS_ASSIGN365=null;
  DRLParser.variableInitializer_return variableInitializer364=null;
  DRLParser.variableInitializer_return variableInitializer366=null;
  Object LEFT_SQUARE361_tree=null;
  Object RIGHT_SQUARE362_tree=null;
  Object EQUALS_ASSIGN363_tree=null;
  Object EQUALS_ASSIGN365_tree=null;
  try {
    int alt128=3;
switch (input.LA(1)) {
case LEFT_SQUARE:
{
        alt128=1;
      }
    break;
case EQUALS_ASSIGN:
{
    alt128=2;
  }
break;
case EOF:
case SEMICOLON:
case COMMA:
{
alt128=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",128,0,input);
throw nvae;
}
switch (alt128) {
case 1:
{
root_0=(Object)adaptor.nil();
int cnt126=0;
loop126: do {
int alt126=2;
int LA126_0=input.LA(1);
if ((LA126_0 == LEFT_SQUARE)) {
alt126=1;
}
switch (alt126) {
case 1:
{
LEFT_SQUARE361=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_variableDeclaratorRest6140);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE361_tree=(Object)adaptor.create(LEFT_SQUARE361);
adaptor.addChild(root_0,LEFT_SQUARE361_tree);
}
RIGHT_SQUARE362=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_variableDeclaratorRest6142);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE362_tree=(Object)adaptor.create(RIGHT_SQUARE362);
adaptor.addChild(root_0,RIGHT_SQUARE362_tree);
}
}
break;
default :
if (cnt126 >= 1) break loop126;
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
EarlyExitException eee=new EarlyExitException(126,input);
throw eee;
}
cnt126++;
}
 while (true);
int alt127=2;
int LA127_0=input.LA(1);
if ((LA127_0 == EQUALS_ASSIGN)) {
alt127=1;
}
switch (alt127) {
case 1:
{
EQUALS_ASSIGN363=(Token)match(input,EQUALS_ASSIGN,FOLLOW_EQUALS_ASSIGN_in_variableDeclaratorRest6147);
if (state.failed) return retval;
if (state.backtracking == 0) {
EQUALS_ASSIGN363_tree=(Object)adaptor.create(EQUALS_ASSIGN363);
adaptor.addChild(root_0,EQUALS_ASSIGN363_tree);
}
pushFollow(FOLLOW_variableInitializer_in_variableDeclaratorRest6149);
variableInitializer364=variableInitializer();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableInitializer364.getTree());
}
break;
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
EQUALS_ASSIGN365=(Token)match(input,EQUALS_ASSIGN,FOLLOW_EQUALS_ASSIGN_in_variableDeclaratorRest6156);
if (state.failed) return retval;
if (state.backtracking == 0) {
EQUALS_ASSIGN365_tree=(Object)adaptor.create(EQUALS_ASSIGN365);
adaptor.addChild(root_0,EQUALS_ASSIGN365_tree);
}
pushFollow(FOLLOW_variableInitializer_in_variableDeclaratorRest6158);
variableInitializer366=variableInitializer();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableInitializer366.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
