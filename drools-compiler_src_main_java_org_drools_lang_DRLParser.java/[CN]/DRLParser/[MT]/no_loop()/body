{
  no_loop_return retval=new no_loop_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOL104=null;
  no_loop_key_return no_loop_key103=null;
  Object BOOL104_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_no_loop_key_in_no_loop1870);
      no_loop_key103=no_loop_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(no_loop_key103.getTree(),root_0);
      if (backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      int alt39=2;
      int LA39_0=input.LA(1);
      if ((LA39_0 == BOOL)) {
        alt39=1;
      }
switch (alt39) {
case 1:
{
          BOOL104=(Token)input.LT(1);
          match(input,BOOL,FOLLOW_BOOL_in_no_loop1875);
          if (failed)           return retval;
          if (backtracking == 0) {
            BOOL104_tree=(Object)adaptor.create(BOOL104);
            adaptor.addChild(root_0,BOOL104_tree);
          }
        }
      break;
  }
  if (backtracking == 0) {
    emit(BOOL104,DroolsEditorType.BOOLEAN_CONST);
  }
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
