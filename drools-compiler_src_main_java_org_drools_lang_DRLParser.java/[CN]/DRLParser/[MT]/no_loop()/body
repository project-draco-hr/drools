{
  DRLParser.no_loop_return retval=new DRLParser.no_loop_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOL91=null;
  DRLParser.no_loop_key_return no_loop_key90=null;
  Object BOOL91_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_no_loop_key_in_no_loop1708);
      no_loop_key90=no_loop_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(no_loop_key90.getTree(),root_0);
      if (state.backtracking == 0) {
        helper.emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      int alt31=2;
      int LA31_0=input.LA(1);
      if ((LA31_0 == BOOL)) {
        alt31=1;
      }
switch (alt31) {
case 1:
{
          BOOL91=(Token)match(input,BOOL,FOLLOW_BOOL_in_no_loop1713);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            BOOL91_tree=(Object)adaptor.create(BOOL91);
            adaptor.addChild(root_0,BOOL91_tree);
          }
        }
      break;
  }
  if (state.backtracking == 0) {
    helper.emit(BOOL91,DroolsEditorType.BOOLEAN_CONST);
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
