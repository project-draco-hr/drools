{
  DRLParser.variableDeclarators_return retval=new DRLParser.variableDeclarators_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA374=null;
  DRLParser.variableDeclarator_return variableDeclarator373=null;
  DRLParser.variableDeclarator_return variableDeclarator375=null;
  Object COMMA374_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators6208);
      variableDeclarator373=variableDeclarator();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,variableDeclarator373.getTree());
      loop127:       do {
        int alt127=2;
        int LA127_0=input.LA(1);
        if ((LA127_0 == COMMA)) {
          alt127=1;
        }
switch (alt127) {
case 1:
{
            COMMA374=(Token)match(input,COMMA,FOLLOW_COMMA_in_variableDeclarators6211);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              COMMA374_tree=(Object)adaptor.create(COMMA374);
              adaptor.addChild(root_0,COMMA374_tree);
            }
            pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators6213);
            variableDeclarator375=variableDeclarator();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,variableDeclarator375.getTree());
          }
        break;
default :
      break loop127;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
