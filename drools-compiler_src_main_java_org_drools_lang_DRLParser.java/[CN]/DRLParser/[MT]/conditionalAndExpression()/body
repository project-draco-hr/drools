{
  DRLParser.conditionalAndExpression_return retval=new DRLParser.conditionalAndExpression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token DOUBLE_AMPER371=null;
  DRLParser.inclusiveOrExpression_return inclusiveOrExpression370=null;
  DRLParser.inclusiveOrExpression_return inclusiveOrExpression372=null;
  Object DOUBLE_AMPER371_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression6262);
      inclusiveOrExpression370=inclusiveOrExpression();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,inclusiveOrExpression370.getTree());
      loop126:       do {
        int alt126=2;
        int LA126_0=input.LA(1);
        if ((LA126_0 == DOUBLE_AMPER)) {
          alt126=1;
        }
switch (alt126) {
case 1:
{
            DOUBLE_AMPER371=(Token)match(input,DOUBLE_AMPER,FOLLOW_DOUBLE_AMPER_in_conditionalAndExpression6266);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              DOUBLE_AMPER371_tree=(Object)adaptor.create(DOUBLE_AMPER371);
              adaptor.addChild(root_0,DOUBLE_AMPER371_tree);
            }
            pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression6268);
            inclusiveOrExpression372=inclusiveOrExpression();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,inclusiveOrExpression372.getTree());
          }
        break;
default :
      break loop126;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
