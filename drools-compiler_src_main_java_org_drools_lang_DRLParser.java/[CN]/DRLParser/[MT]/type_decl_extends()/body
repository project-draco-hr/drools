{
  DRLParser.type_decl_extends_return retval=new DRLParser.type_decl_extends_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.extends_key_return extends_key44=null;
  DRLParser.typeName_return typeName45=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_extends_key_in_type_decl_extends1361);
      extends_key44=extends_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(extends_key44.getTree(),root_0);
      pushFollow(FOLLOW_typeName_in_type_decl_extends1364);
      typeName45=typeName();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,typeName45.getTree());
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
