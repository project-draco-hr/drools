{
  RestrictionDescr rd=null;
  String op=null;
  RestrictionConnectiveDescr group=null;
  try {
{
      int alt51=2;
      int LA51_0=input.LA(1);
      if ((LA51_0 == IN)) {
        alt51=1;
      }
 else       if ((LA51_0 == NOT)) {
        alt51=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("1212:3: ( IN | NOT IN )",51,0,input);
        throw nvae;
      }
switch (alt51) {
case 1:
{
          match(input,IN,FOLLOW_IN_in_compound_operator3196);
          if (failed)           return;
          if (backtracking == 0) {
            op="==";
            group=new RestrictionConnectiveDescr(RestrictionConnectiveDescr.OR);
            base.addRestriction(group);
            location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_ARGUMENT);
            location.setProperty(Location.LOCATION_PROPERTY_OPERATOR,"in");
          }
        }
      break;
case 2:
{
      match(input,NOT,FOLLOW_NOT_in_compound_operator3208);
      if (failed)       return;
      match(input,IN,FOLLOW_IN_in_compound_operator3210);
      if (failed)       return;
      if (backtracking == 0) {
        op="!=";
        group=new RestrictionConnectiveDescr(RestrictionConnectiveDescr.AND);
        base.addRestriction(group);
        location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_ARGUMENT);
        location.setProperty(Location.LOCATION_PROPERTY_OPERATOR,"in");
      }
    }
  break;
}
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_compound_operator3225);
if (failed) return;
pushFollow(FOLLOW_expression_value_in_compound_operator3229);
rd=expression_value(op);
_fsp--;
if (failed) return;
if (backtracking == 0) {
if (rd != null) {
  group.addRestriction(rd);
}
}
loop52: do {
int alt52=2;
int LA52_0=input.LA(1);
if ((LA52_0 == COMMA)) {
  alt52=1;
}
switch (alt52) {
case 1:
{
    match(input,COMMA,FOLLOW_COMMA_in_compound_operator3241);
    if (failed)     return;
    pushFollow(FOLLOW_expression_value_in_compound_operator3245);
    rd=expression_value(op);
    _fsp--;
    if (failed)     return;
    if (backtracking == 0) {
      if (rd != null) {
        group.addRestriction(rd);
      }
    }
  }
break;
default :
break loop52;
}
}
 while (true);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_compound_operator3261);
if (failed) return;
if (backtracking == 0) {
location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_END);
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
