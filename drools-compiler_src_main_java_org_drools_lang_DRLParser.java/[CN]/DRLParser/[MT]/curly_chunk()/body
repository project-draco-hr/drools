{
  curly_chunk_return retval=new curly_chunk_return();
  retval.start=input.LT(1);
  try {
{
      match(input,LEFT_CURLY,FOLLOW_LEFT_CURLY_in_curly_chunk4322);
      if (failed)       return retval;
      loop72:       do {
        int alt72=3;
        int LA72_0=input.LA(1);
        if (((LA72_0 >= PACKAGE && LA72_0 <= NULL) || (LA72_0 >= LEFT_SQUARE && LA72_0 <= 81))) {
          alt72=1;
        }
 else         if ((LA72_0 == LEFT_CURLY)) {
          alt72=2;
        }
switch (alt72) {
case 1:
{
            if ((input.LA(1) >= PACKAGE && input.LA(1) <= NULL) || (input.LA(1) >= LEFT_SQUARE && input.LA(1) <= 81)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_curly_chunk4326);
              throw mse;
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_curly_chunk_in_curly_chunk4335);
        curly_chunk();
        _fsp--;
        if (failed)         return retval;
      }
    break;
default :
  break loop72;
}
}
 while (true);
match(input,RIGHT_CURLY,FOLLOW_RIGHT_CURLY_in_curly_chunk4340);
if (failed) return retval;
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
