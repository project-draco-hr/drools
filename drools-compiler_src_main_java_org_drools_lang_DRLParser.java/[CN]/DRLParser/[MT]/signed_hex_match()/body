{
  DRLParser.signed_hex_match_return retval=new DRLParser.signed_hex_match_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token PLUS259=null;
  Token MINUS260=null;
  Token HEX261=null;
  Object PLUS259_tree=null;
  Object MINUS260_tree=null;
  Object HEX261_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt82=3;
      int LA82_0=input.LA(1);
      if ((LA82_0 == PLUS)) {
        alt82=1;
      }
 else       if ((LA82_0 == MINUS)) {
        alt82=2;
      }
switch (alt82) {
case 1:
{
          PLUS259=(Token)match(input,PLUS,FOLLOW_PLUS_in_signed_hex_match4456);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            PLUS259_tree=(Object)adaptor.create(PLUS259);
            adaptor.addChild(root_0,PLUS259_tree);
          }
          if (state.backtracking == 0) {
            helper.emit(PLUS259,DroolsEditorType.NUMERIC_CONST);
          }
        }
      break;
case 2:
{
      MINUS260=(Token)match(input,MINUS,FOLLOW_MINUS_in_signed_hex_match4462);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        MINUS260_tree=(Object)adaptor.create(MINUS260);
        adaptor.addChild(root_0,MINUS260_tree);
      }
      if (state.backtracking == 0) {
        helper.emit(MINUS260,DroolsEditorType.NUMERIC_CONST);
      }
    }
  break;
}
HEX261=(Token)match(input,HEX,FOLLOW_HEX_in_signed_hex_match4484);
if (state.failed) return retval;
if (state.backtracking == 0) {
HEX261_tree=(Object)adaptor.create(HEX261);
adaptor.addChild(root_0,HEX261_tree);
}
if (state.backtracking == 0) {
helper.emit(HEX261,DroolsEditorType.NUMERIC_CONST);
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
