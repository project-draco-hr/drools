{
  DRLParser.switchBlockStatementGroups_return retval=new DRLParser.switchBlockStatementGroups_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.switchBlockStatementGroup_return switchBlockStatementGroup467=null;
  try {
{
      root_0=(Object)adaptor.nil();
      loop147:       do {
        int alt147=2;
        int LA147_0=input.LA(1);
        if ((LA147_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.DEFAULT))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.CASE)))))) {
          alt147=1;
        }
switch (alt147) {
case 1:
{
            pushFollow(FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups6777);
            switchBlockStatementGroup467=switchBlockStatementGroup();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,switchBlockStatementGroup467.getTree());
          }
        break;
default :
      break loop147;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
