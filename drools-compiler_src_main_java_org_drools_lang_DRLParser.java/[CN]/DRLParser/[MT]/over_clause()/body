{
  over_clause_return retval=new over_clause_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token OVER169=null;
  Token COMMA171=null;
  over_elements_return over_elements170=null;
  over_elements_return over_elements172=null;
  Object OVER169_tree=null;
  Object COMMA171_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      OVER169=(Token)input.LT(1);
      match(input,OVER,FOLLOW_OVER_in_over_clause2501);
      if (failed)       return retval;
      if (backtracking == 0) {
        OVER169_tree=(Object)adaptor.create(OVER169);
        root_0=(Object)adaptor.becomeRoot(OVER169_tree,root_0);
      }
      pushFollow(FOLLOW_over_elements_in_over_clause2504);
      over_elements170=over_elements();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,over_elements170.getTree());
      loop59:       do {
        int alt59=2;
        int LA59_0=input.LA(1);
        if ((LA59_0 == COMMA)) {
          int LA59_2=input.LA(2);
          if ((LA59_2 == ID)) {
            int LA59_3=input.LA(3);
            if ((LA59_3 == COLON)) {
              alt59=1;
            }
          }
        }
switch (alt59) {
case 1:
{
            COMMA171=(Token)input.LT(1);
            match(input,COMMA,FOLLOW_COMMA_in_over_clause2507);
            if (failed)             return retval;
            pushFollow(FOLLOW_over_elements_in_over_clause2510);
            over_elements172=over_elements();
            _fsp--;
            if (failed)             return retval;
            if (backtracking == 0)             adaptor.addChild(root_0,over_elements172.getTree());
          }
        break;
default :
      break loop59;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
