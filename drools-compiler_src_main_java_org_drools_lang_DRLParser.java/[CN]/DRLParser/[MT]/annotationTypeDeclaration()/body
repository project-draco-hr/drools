{
  DRLParser.annotationTypeDeclaration_return retval=new DRLParser.annotationTypeDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token AT860=null;
  Token ID862=null;
  DRLParser.interface_key_return interface_key861=null;
  DRLParser.annotationTypeBody_return annotationTypeBody863=null;
  Object AT860_tree=null;
  Object ID862_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      AT860=(Token)match(input,AT,FOLLOW_AT_in_annotationTypeDeclaration10070);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        AT860_tree=(Object)adaptor.create(AT860);
        adaptor.addChild(root_0,AT860_tree);
      }
      pushFollow(FOLLOW_interface_key_in_annotationTypeDeclaration10072);
      interface_key861=interface_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,interface_key861.getTree());
      ID862=(Token)match(input,ID,FOLLOW_ID_in_annotationTypeDeclaration10074);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID862_tree=(Object)adaptor.create(ID862);
        adaptor.addChild(root_0,ID862_tree);
      }
      pushFollow(FOLLOW_annotationTypeBody_in_annotationTypeDeclaration10076);
      annotationTypeBody863=annotationTypeBody();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,annotationTypeBody863.getTree());
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
