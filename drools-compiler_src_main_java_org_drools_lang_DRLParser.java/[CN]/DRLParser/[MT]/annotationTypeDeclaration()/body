{
  DRLParser.annotationTypeDeclaration_return retval=new DRLParser.annotationTypeDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token AT875=null;
  Token ID877=null;
  DRLParser.interface_key_return interface_key876=null;
  DRLParser.annotationTypeBody_return annotationTypeBody878=null;
  Object AT875_tree=null;
  Object ID877_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      AT875=(Token)match(input,AT,FOLLOW_AT_in_annotationTypeDeclaration10173);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        AT875_tree=(Object)adaptor.create(AT875);
        adaptor.addChild(root_0,AT875_tree);
      }
      pushFollow(FOLLOW_interface_key_in_annotationTypeDeclaration10175);
      interface_key876=interface_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,interface_key876.getTree());
      ID877=(Token)match(input,ID,FOLLOW_ID_in_annotationTypeDeclaration10177);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID877_tree=(Object)adaptor.create(ID877);
        adaptor.addChild(root_0,ID877_tree);
      }
      pushFollow(FOLLOW_annotationTypeBody_in_annotationTypeDeclaration10179);
      annotationTypeBody878=annotationTypeBody();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,annotationTypeBody878.getTree());
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
