{
  DRLParser.unary_constr_return retval=new DRLParser.unary_constr_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_PAREN225=null;
  Token RIGHT_PAREN227=null;
  DRLParser.eval_key_return eval_key222=null;
  DRLParser.paren_chunk_return paren_chunk223=null;
  DRLParser.field_constraint_return field_constraint224=null;
  DRLParser.or_constr_return or_constr226=null;
  Object LEFT_PAREN225_tree=null;
  Object RIGHT_PAREN227_tree=null;
  boolean isFailed=true;
  try {
    int alt83=3;
    alt83=dfa83.predict(input);
switch (alt83) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_eval_key_in_unary_constr3843);
        eval_key222=eval_key();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         root_0=(Object)adaptor.becomeRoot(eval_key222.getTree(),root_0);
        pushFollow(FOLLOW_paren_chunk_in_unary_constr3846);
        paren_chunk223=paren_chunk();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,paren_chunk223.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    pushFollow(FOLLOW_field_constraint_in_unary_constr3851);
    field_constraint224=field_constraint();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,field_constraint224.getTree());
  }
break;
case 3:
{
root_0=(Object)adaptor.nil();
LEFT_PAREN225=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_unary_constr3857);
if (state.failed) return retval;
if (state.backtracking == 0) {
  emit(LEFT_PAREN225,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_or_constr_in_unary_constr3867);
or_constr226=or_constr();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,or_constr226.getTree());
RIGHT_PAREN227=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_unary_constr3872);
if (state.failed) return retval;
if (state.backtracking == 0) {
  RIGHT_PAREN227_tree=(Object)adaptor.create(RIGHT_PAREN227);
  adaptor.addChild(root_0,RIGHT_PAREN227_tree);
}
if (state.backtracking == 0) {
  emit(RIGHT_PAREN227,DroolsEditorType.SYMBOL);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
if (state.backtracking == 0) {
isFailed=false;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (isEditorInterfaceEnabled && isFailed && input.LA(2) == EOF && input.LA(1) == ID) {
emit(input.LT(1),DroolsEditorType.IDENTIFIER);
input.consume();
if (input.get(input.index() - 1).getType() == WS) emit(Location.LOCATION_LHS_INSIDE_CONDITION_OPERATOR);
}
}
return retval;
}
