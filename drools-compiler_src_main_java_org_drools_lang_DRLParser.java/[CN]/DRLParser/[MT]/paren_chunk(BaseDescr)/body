{
  String text=null;
  Token loc=null;
  Token end=null;
  String chunk=null;
  StringBuffer buf=null;
  Integer channel=null;
  try {
{
      if (backtracking == 0) {
        channel=((SwitchingCommonTokenStream)input).getTokenTypeChannel(WS);
        ((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,Token.DEFAULT_CHANNEL);
        buf=new StringBuffer();
      }
      loc=(Token)input.LT(1);
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_paren_chunk4348);
      if (failed)       return text;
      if (backtracking == 0) {
        buf.append(loc.getText());
      }
      loop73:       do {
        int alt73=3;
        int LA73_0=input.LA(1);
        if (((LA73_0 >= ATTRIBUTES && LA73_0 <= GLOBAL) || LA73_0 == COMMA || (LA73_0 >= QUERY && LA73_0 <= 79))) {
          alt73=1;
        }
 else         if ((LA73_0 == LEFT_PAREN)) {
          alt73=2;
        }
switch (alt73) {
case 1:
{
            if ((input.LA(1) >= ATTRIBUTES && input.LA(1) <= GLOBAL) || input.LA(1) == COMMA || (input.LA(1) >= QUERY && input.LA(1) <= 79)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return text;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_paren_chunk4364);
              throw mse;
            }
            if (backtracking == 0) {
              buf.append(input.LT(-1).getText());
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_paren_chunk_in_paren_chunk4388);
        chunk=paren_chunk(null);
        _fsp--;
        if (failed)         return text;
        if (backtracking == 0) {
          buf.append(chunk);
        }
      }
    break;
default :
  break loop73;
}
}
 while (true);
if (backtracking == 0) {
if (channel != null) {
((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,channel.intValue());
}
 else {
((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,Token.HIDDEN_CHANNEL);
}
}
end=(Token)input.LT(1);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_paren_chunk4425);
if (failed) return text;
if (backtracking == 0) {
buf.append(end.getText());
text=buf.toString();
if (descr != null) {
descr.setEndCharacter(((CommonToken)end).getStopIndex());
}
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return text;
}
