{
  DRLParser.formalParameterDeclsRest_return retval=new DRLParser.formalParameterDeclsRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA765=null;
  Token DOT767=null;
  Token DOT768=null;
  Token DOT769=null;
  DRLParser.variableDeclaratorId_return variableDeclaratorId764=null;
  DRLParser.formalParameterDecls_return formalParameterDecls766=null;
  DRLParser.variableDeclaratorId_return variableDeclaratorId770=null;
  Object COMMA765_tree=null;
  Object DOT767_tree=null;
  Object DOT768_tree=null;
  Object DOT769_tree=null;
  try {
    int alt227=2;
    int LA227_0=input.LA(1);
    if ((LA227_0 == ID)) {
      alt227=1;
    }
 else     if ((LA227_0 == DOT)) {
      alt227=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",227,0,input);
      throw nvae;
    }
switch (alt227) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest9366);
        variableDeclaratorId764=variableDeclaratorId();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,variableDeclaratorId764.getTree());
        int alt226=2;
        int LA226_0=input.LA(1);
        if ((LA226_0 == COMMA)) {
          alt226=1;
        }
switch (alt226) {
case 1:
{
            COMMA765=(Token)match(input,COMMA,FOLLOW_COMMA_in_formalParameterDeclsRest9369);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              COMMA765_tree=(Object)adaptor.create(COMMA765);
              adaptor.addChild(root_0,COMMA765_tree);
            }
            pushFollow(FOLLOW_formalParameterDecls_in_formalParameterDeclsRest9371);
            formalParameterDecls766=formalParameterDecls();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,formalParameterDecls766.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT767=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9380);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT767_tree=(Object)adaptor.create(DOT767);
  adaptor.addChild(root_0,DOT767_tree);
}
DOT768=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9382);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT768_tree=(Object)adaptor.create(DOT768);
  adaptor.addChild(root_0,DOT768_tree);
}
DOT769=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9384);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT769_tree=(Object)adaptor.create(DOT769);
  adaptor.addChild(root_0,DOT769_tree);
}
pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest9386);
variableDeclaratorId770=variableDeclaratorId();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableDeclaratorId770.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
