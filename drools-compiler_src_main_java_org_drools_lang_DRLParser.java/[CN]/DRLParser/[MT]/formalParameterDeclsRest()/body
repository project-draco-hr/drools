{
  DRLParser.formalParameterDeclsRest_return retval=new DRLParser.formalParameterDeclsRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA750=null;
  Token DOT752=null;
  Token DOT753=null;
  Token DOT754=null;
  DRLParser.variableDeclaratorId_return variableDeclaratorId749=null;
  DRLParser.formalParameterDecls_return formalParameterDecls751=null;
  DRLParser.variableDeclaratorId_return variableDeclaratorId755=null;
  Object COMMA750_tree=null;
  Object DOT752_tree=null;
  Object DOT753_tree=null;
  Object DOT754_tree=null;
  try {
    int alt225=2;
    int LA225_0=input.LA(1);
    if ((LA225_0 == ID)) {
      alt225=1;
    }
 else     if ((LA225_0 == DOT)) {
      alt225=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",225,0,input);
      throw nvae;
    }
switch (alt225) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest9263);
        variableDeclaratorId749=variableDeclaratorId();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,variableDeclaratorId749.getTree());
        int alt224=2;
        int LA224_0=input.LA(1);
        if ((LA224_0 == COMMA)) {
          alt224=1;
        }
switch (alt224) {
case 1:
{
            COMMA750=(Token)match(input,COMMA,FOLLOW_COMMA_in_formalParameterDeclsRest9266);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              COMMA750_tree=(Object)adaptor.create(COMMA750);
              adaptor.addChild(root_0,COMMA750_tree);
            }
            pushFollow(FOLLOW_formalParameterDecls_in_formalParameterDeclsRest9268);
            formalParameterDecls751=formalParameterDecls();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,formalParameterDecls751.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT752=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9277);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT752_tree=(Object)adaptor.create(DOT752);
  adaptor.addChild(root_0,DOT752_tree);
}
DOT753=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9279);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT753_tree=(Object)adaptor.create(DOT753);
  adaptor.addChild(root_0,DOT753_tree);
}
DOT754=(Token)match(input,DOT,FOLLOW_DOT_in_formalParameterDeclsRest9281);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT754_tree=(Object)adaptor.create(DOT754);
  adaptor.addChild(root_0,DOT754_tree);
}
pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest9283);
variableDeclaratorId755=variableDeclaratorId();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableDeclaratorId755.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
