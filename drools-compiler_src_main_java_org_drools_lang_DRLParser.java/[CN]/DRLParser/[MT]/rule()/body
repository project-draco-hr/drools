{
  rule_return retval=new rule_return();
  retval.start=input.LT(1);
  Object root_0=null;
  rule_key_return rule_key70=null;
  rule_id_return rule_id71=null;
  rule_attributes_return rule_attributes72=null;
  when_part_return when_part73=null;
  rhs_chunk_return rhs_chunk74=null;
  RewriteRuleSubtreeStream stream_rule_key=new RewriteRuleSubtreeStream(adaptor,"rule rule_key");
  RewriteRuleSubtreeStream stream_rule_id=new RewriteRuleSubtreeStream(adaptor,"rule rule_id");
  RewriteRuleSubtreeStream stream_when_part=new RewriteRuleSubtreeStream(adaptor,"rule when_part");
  RewriteRuleSubtreeStream stream_rule_attributes=new RewriteRuleSubtreeStream(adaptor,"rule rule_attributes");
  RewriteRuleSubtreeStream stream_rhs_chunk=new RewriteRuleSubtreeStream(adaptor,"rule rhs_chunk");
  pushParaphrases(DroolsParaphareseTypes.RULE);
  try {
{
      pushFollow(FOLLOW_rule_key_in_rule1355);
      rule_key70=rule_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_rule_key.add(rule_key70.getTree());
      pushFollow(FOLLOW_rule_id_in_rule1357);
      rule_id71=rule_id();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_rule_id.add(rule_id71.getTree());
      int alt28=2;
      alt28=dfa28.predict(input);
switch (alt28) {
case 1:
{
          pushFollow(FOLLOW_rule_attributes_in_rule1359);
          rule_attributes72=rule_attributes();
          _fsp--;
          if (failed)           return retval;
          if (backtracking == 0)           stream_rule_attributes.add(rule_attributes72.getTree());
        }
      break;
  }
  int alt29=2;
  int LA29_0=input.LA(1);
  if ((LA29_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
    alt29=1;
  }
switch (alt29) {
case 1:
{
      pushFollow(FOLLOW_when_part_in_rule1362);
      when_part73=when_part();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_when_part.add(when_part73.getTree());
    }
  break;
}
pushFollow(FOLLOW_rhs_chunk_in_rule1365);
rhs_chunk74=rhs_chunk();
_fsp--;
if (failed) return retval;
if (backtracking == 0) stream_rhs_chunk.add(rhs_chunk74.getTree());
if (backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
root_0=(Object)adaptor.nil();
{
{
    Object root_1=(Object)adaptor.nil();
    root_1=(Object)adaptor.becomeRoot(stream_rule_key.nextNode(),root_1);
    adaptor.addChild(root_1,stream_rule_id.next());
    if (stream_rule_attributes.hasNext()) {
      adaptor.addChild(root_1,stream_rule_attributes.next());
    }
    stream_rule_attributes.reset();
    if (stream_when_part.hasNext()) {
      adaptor.addChild(root_1,stream_when_part.next());
    }
    stream_when_part.reset();
    adaptor.addChild(root_1,stream_rhs_chunk.next());
    adaptor.addChild(root_0,root_1);
  }
}
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
if (backtracking == 0) {
paraphrases.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
