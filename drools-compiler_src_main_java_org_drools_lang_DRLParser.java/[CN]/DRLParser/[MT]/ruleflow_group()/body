{
  ruleflow_group_return retval=new ruleflow_group_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING109=null;
  ruleflow_group_key_return ruleflow_group_key108=null;
  Object STRING109_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_ruleflow_group_key_in_ruleflow_group1907);
      ruleflow_group_key108=ruleflow_group_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(ruleflow_group_key108.getTree(),root_0);
      if (backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      STRING109=(Token)input.LT(1);
      match(input,STRING,FOLLOW_STRING_in_ruleflow_group1912);
      if (failed)       return retval;
      if (backtracking == 0) {
        STRING109_tree=(Object)adaptor.create(STRING109);
        adaptor.addChild(root_0,STRING109_tree);
      }
      if (backtracking == 0) {
        emit(STRING109,DroolsEditorType.STRING_CONST);
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
