{
  String text=null;
  Token loc=null;
  String chunk=null;
  StringBuffer buf=null;
  Integer channel=null;
  try {
{
      if (backtracking == 0) {
        channel=((SwitchingCommonTokenStream)input).getTokenTypeChannel(WS);
        ((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,Token.DEFAULT_CHANNEL);
        buf=new StringBuffer();
      }
      loc=(Token)input.LT(1);
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_square_chunk2605);
      if (failed)       return text;
      if (backtracking == 0) {
        buf.append(loc.getText());
      }
      loop41:       do {
        int alt41=3;
        int LA41_0=input.LA(1);
        if (((LA41_0 >= ID && LA41_0 <= RIGHT_PAREN) || (LA41_0 >= EOL && LA41_0 <= 73))) {
          alt41=1;
        }
 else         if ((LA41_0 == LEFT_SQUARE)) {
          alt41=2;
        }
switch (alt41) {
case 1:
{
            if ((input.LA(1) >= ID && input.LA(1) <= RIGHT_PAREN) || (input.LA(1) >= EOL && input.LA(1) <= 73)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return text;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_square_chunk2621);
              throw mse;
            }
            if (backtracking == 0) {
              buf.append(input.LT(-1).getText());
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_square_chunk_in_square_chunk2645);
        chunk=square_chunk();
        _fsp--;
        if (failed)         return text;
        if (backtracking == 0) {
          buf.append(chunk);
        }
      }
    break;
default :
  break loop41;
}
}
 while (true);
if (backtracking == 0) {
if (channel != null) {
((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,channel.intValue());
}
 else {
((SwitchingCommonTokenStream)input).setTokenTypeChannel(WS,Token.HIDDEN_CHANNEL);
}
}
loc=(Token)input.LT(1);
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_square_chunk2681);
if (failed) return text;
if (backtracking == 0) {
buf.append(loc.getText());
text=buf.toString();
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return text;
}
