{
  String n=null;
  AttributeDescr a=null;
  String packageName="";
  try {
{
      int alt3=2;
      int LA3_0=input.LA(1);
      if ((LA3_0 == PACKAGE)) {
        alt3=1;
      }
switch (alt3) {
case 1:
{
          pushFollow(FOLLOW_package_statement_in_prolog90);
          n=package_statement();
          _fsp--;
          if (failed)           return;
          if (backtracking == 0) {
            packageName=n;
          }
        }
      break;
  }
  if (backtracking == 0) {
    this.packageDescr=factory.createPackage(packageName);
  }
  int alt4=2;
  int LA4_0=input.LA(1);
  if ((LA4_0 == ATTRIBUTES)) {
    alt4=1;
  }
switch (alt4) {
case 1:
{
      match(input,ATTRIBUTES,FOLLOW_ATTRIBUTES_in_prolog105);
      if (failed)       return;
      match(input,66,FOLLOW_66_in_prolog107);
      if (failed)       return;
    }
  break;
}
loop6: do {
int alt6=2;
int LA6_0=input.LA(1);
if ((LA6_0 == DATE_EFFECTIVE || (LA6_0 >= DATE_EXPIRES && LA6_0 <= ENABLED) || LA6_0 == SALIENCE || (LA6_0 >= NO_LOOP && LA6_0 <= LOCK_ON_ACTIVE) || LA6_0 == 67)) {
  alt6=1;
}
switch (alt6) {
case 1:
{
    int alt5=2;
    int LA5_0=input.LA(1);
    if ((LA5_0 == 67)) {
      alt5=1;
    }
switch (alt5) {
case 1:
{
        match(input,67,FOLLOW_67_in_prolog116);
        if (failed)         return;
      }
    break;
}
pushFollow(FOLLOW_rule_attribute_in_prolog121);
a=rule_attribute();
_fsp--;
if (failed) return;
if (backtracking == 0) {
  this.packageDescr.addAttribute(a);
}
}
break;
default :
break loop6;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
