{
  DRLParser.lhs_unary_return retval=new DRLParser.lhs_unary_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_PAREN137=null;
  Token RIGHT_PAREN139=null;
  Token SEMICOLON141=null;
  DRLParser.lhs_exist_return lhs_exist132=null;
  DRLParser.lhs_not_binding_return lhs_not_binding133=null;
  DRLParser.lhs_not_return lhs_not134=null;
  DRLParser.lhs_eval_return lhs_eval135=null;
  DRLParser.lhs_forall_return lhs_forall136=null;
  DRLParser.lhs_or_return lhs_or138=null;
  DRLParser.pattern_source_return pattern_source140=null;
  Object LEFT_PAREN137_tree=null;
  Object RIGHT_PAREN139_tree=null;
  Object SEMICOLON141_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt54=7;
      int LA54_0=input.LA(1);
      if ((LA54_0 == ID)) {
        int LA54_1=input.LA(2);
        if ((((validateIdentifierKey(DroolsSoftKeywords.EXISTS))))) {
          alt54=1;
        }
 else         if ((((validateNotWithBinding()) && ((validateIdentifierKey(DroolsSoftKeywords.NOT)))))) {
          alt54=2;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.NOT))))) {
          alt54=3;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.EVAL))))) {
          alt54=4;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.FORALL))))) {
          alt54=5;
        }
 else         if ((true)) {
          alt54=7;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",54,1,input);
          throw nvae;
        }
      }
 else       if ((LA54_0 == LEFT_PAREN)) {
        alt54=6;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",54,0,input);
        throw nvae;
      }
switch (alt54) {
case 1:
{
          pushFollow(FOLLOW_lhs_exist_in_lhs_unary2323);
          lhs_exist132=lhs_exist();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,lhs_exist132.getTree());
        }
      break;
case 2:
{
      if (!((validateNotWithBinding()))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        throw new FailedPredicateException(input,"lhs_unary","validateNotWithBinding()");
      }
      pushFollow(FOLLOW_lhs_not_binding_in_lhs_unary2331);
      lhs_not_binding133=lhs_not_binding();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,lhs_not_binding133.getTree());
    }
  break;
case 3:
{
  pushFollow(FOLLOW_lhs_not_in_lhs_unary2337);
  lhs_not134=lhs_not();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,lhs_not134.getTree());
}
break;
case 4:
{
pushFollow(FOLLOW_lhs_eval_in_lhs_unary2343);
lhs_eval135=lhs_eval();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_eval135.getTree());
}
break;
case 5:
{
pushFollow(FOLLOW_lhs_forall_in_lhs_unary2349);
lhs_forall136=lhs_forall();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_forall136.getTree());
}
break;
case 6:
{
LEFT_PAREN137=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_unary2355);
if (state.failed) return retval;
if (state.backtracking == 0) {
emit(LEFT_PAREN137,DroolsEditorType.SYMBOL);
emit(Location.LOCATION_LHS_BEGIN_OF_CONDITION);
}
pushFollow(FOLLOW_lhs_or_in_lhs_unary2366);
lhs_or138=lhs_or();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_or138.getTree());
RIGHT_PAREN139=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_unary2372);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_PAREN139_tree=(Object)adaptor.create(RIGHT_PAREN139);
adaptor.addChild(root_0,RIGHT_PAREN139_tree);
}
if (state.backtracking == 0) {
emit(RIGHT_PAREN139,DroolsEditorType.SYMBOL);
}
}
break;
case 7:
{
pushFollow(FOLLOW_pattern_source_in_lhs_unary2380);
pattern_source140=pattern_source();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,pattern_source140.getTree());
}
break;
}
int alt55=2;
int LA55_0=input.LA(1);
if ((LA55_0 == SEMICOLON)) {
int LA55_1=input.LA(2);
if ((synpred5_DRL())) {
alt55=1;
}
}
switch (alt55) {
case 1:
{
SEMICOLON141=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_lhs_unary2394);
if (state.failed) return retval;
if (state.backtracking == 0) {
emit(SEMICOLON141,DroolsEditorType.SYMBOL);
}
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
