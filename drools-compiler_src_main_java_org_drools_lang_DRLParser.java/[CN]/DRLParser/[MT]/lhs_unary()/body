{
  BaseDescr d=null;
  BaseDescr u=null;
  BaseDescr ps=null;
  d=null;
  try {
{
      int alt39=6;
      int LA39_0=input.LA(1);
      if ((LA39_0 == EXISTS) && (synpred1())) {
        alt39=1;
      }
 else       if ((LA39_0 == NOT) && (synpred2())) {
        alt39=2;
      }
 else       if ((LA39_0 == EVAL) && (synpred3())) {
        alt39=3;
      }
 else       if ((LA39_0 == FORALL) && (synpred4())) {
        alt39=4;
      }
 else       if ((LA39_0 == LEFT_PAREN) && (synpred5())) {
        alt39=5;
      }
 else       if ((LA39_0 == ID)) {
        alt39=6;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return d;
        }
        NoViableAltException nvae=new NoViableAltException("827:4: ( ( EXISTS )=>u= lhs_exist | ( NOT )=>u= lhs_not | ( EVAL )=>u= lhs_eval | ( FORALL )=>u= lhs_forall | ( LEFT_PAREN )=> LEFT_PAREN u= lhs_or RIGHT_PAREN | ps= pattern_source )",39,0,input);
        throw nvae;
      }
switch (alt39) {
case 1:
{
          pushFollow(FOLLOW_lhs_exist_in_lhs_unary2224);
          u=lhs_exist();
          _fsp--;
          if (failed)           return d;
          if (backtracking == 0) {
            d=u;
          }
        }
      break;
case 2:
{
      pushFollow(FOLLOW_lhs_not_in_lhs_unary2242);
      u=lhs_not();
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        d=u;
      }
    }
  break;
case 3:
{
  pushFollow(FOLLOW_lhs_eval_in_lhs_unary2261);
  u=lhs_eval();
  _fsp--;
  if (failed)   return d;
  if (backtracking == 0) {
    d=u;
  }
}
break;
case 4:
{
pushFollow(FOLLOW_lhs_forall_in_lhs_unary2280);
u=lhs_forall();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 5:
{
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_unary2297);
if (failed) return d;
pushFollow(FOLLOW_lhs_or_in_lhs_unary2301);
u=lhs_or();
_fsp--;
if (failed) return d;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_unary2303);
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 6:
{
pushFollow(FOLLOW_pattern_source_in_lhs_unary2314);
ps=pattern_source();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=(BaseDescr)ps;
}
}
break;
}
pushFollow(FOLLOW_opt_semicolon_in_lhs_unary2326);
opt_semicolon();
_fsp--;
if (failed) return d;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
