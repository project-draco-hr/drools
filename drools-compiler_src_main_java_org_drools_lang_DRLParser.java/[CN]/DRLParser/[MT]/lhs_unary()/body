{
  BaseDescr d=null;
  BaseDescr u=null;
  AccumulateDescr ac=null;
  CollectDescr cs=null;
  FromDescr fm=null;
  d=null;
  try {
{
      int alt41=6;
switch (input.LA(1)) {
case EXISTS:
{
          alt41=1;
        }
      break;
case NOT:
{
      alt41=2;
    }
  break;
case EVAL:
{
  alt41=3;
}
break;
case ID:
{
alt41=4;
}
break;
case FORALL:
{
alt41=5;
}
break;
case LEFT_PAREN:
{
alt41=6;
}
break;
default :
if (backtracking > 0) {
failed=true;
return d;
}
NoViableAltException nvae=new NoViableAltException("764:4: (u= lhs_exist | u= lhs_not | u= lhs_eval | u= lhs_pattern ( FROM ( options {k=1; } : (ac= accumulate_statement ) | (cs= collect_statement ) | (fm= from_statement ) ) )? | u= lhs_forall | LEFT_PAREN u= lhs_or RIGHT_PAREN )",41,0,input);
throw nvae;
}
switch (alt41) {
case 1:
{
pushFollow(FOLLOW_lhs_exist_in_lhs_unary1956);
u=lhs_exist();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 2:
{
pushFollow(FOLLOW_lhs_not_in_lhs_unary1966);
u=lhs_not();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 3:
{
pushFollow(FOLLOW_lhs_eval_in_lhs_unary1976);
u=lhs_eval();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 4:
{
pushFollow(FOLLOW_lhs_pattern_in_lhs_unary1986);
u=lhs_pattern();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
int alt40=2;
int LA40_0=input.LA(1);
if ((LA40_0 == FROM)) {
alt40=1;
}
switch (alt40) {
case 1:
{
match(input,FROM,FOLLOW_FROM_in_lhs_unary2004);
if (failed) return d;
if (backtracking == 0) {
location.setType(Location.LOCATION_LHS_FROM);
location.setProperty(Location.LOCATION_FROM_CONTENT,"");
}
int alt39=3;
switch (input.LA(1)) {
case ACCUMULATE:
{
alt39=1;
}
break;
case COLLECT:
{
alt39=2;
}
break;
case ATTRIBUTES:
case PACKAGE:
case IMPORT:
case FUNCTION:
case ID:
case GLOBAL:
case QUERY:
case END:
case TEMPLATE:
case RULE:
case WHEN:
case ENABLED:
case SALIENCE:
case DURATION:
case FROM:
case INIT:
case ACTION:
case RESULT:
case CONTAINS:
case EXCLUDES:
case MATCHES:
case MEMBEROF:
case IN:
case NULL:
case THEN:
{
alt39=3;
}
break;
default :
if (backtracking > 0) {
failed=true;
return d;
}
NoViableAltException nvae=new NoViableAltException("773:13: ( options {k=1; } : (ac= accumulate_statement ) | (cs= collect_statement ) | (fm= from_statement ) )",39,0,input);
throw nvae;
}
switch (alt39) {
case 1:
{
{
pushFollow(FOLLOW_accumulate_statement_in_lhs_unary2064);
ac=accumulate_statement();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
ac.setResultPattern((PatternDescr)u);
d=ac;
}
}
}
break;
case 2:
{
{
pushFollow(FOLLOW_collect_statement_in_lhs_unary2087);
cs=collect_statement();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
cs.setResultPattern((PatternDescr)u);
d=cs;
}
}
}
break;
case 3:
{
{
pushFollow(FOLLOW_from_statement_in_lhs_unary2111);
fm=from_statement();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
fm.setPattern((PatternDescr)u);
d=fm;
}
}
}
break;
}
}
break;
}
}
break;
case 5:
{
pushFollow(FOLLOW_lhs_forall_in_lhs_unary2150);
u=lhs_forall();
_fsp--;
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
case 6:
{
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_unary2159);
if (failed) return d;
pushFollow(FOLLOW_lhs_or_in_lhs_unary2163);
u=lhs_or();
_fsp--;
if (failed) return d;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_unary2165);
if (failed) return d;
if (backtracking == 0) {
d=u;
}
}
break;
}
pushFollow(FOLLOW_opt_semicolon_in_lhs_unary2176);
opt_semicolon();
_fsp--;
if (failed) return d;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
