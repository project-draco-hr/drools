{
  DRLParser.lhs_unary_return retval=new DRLParser.lhs_unary_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_PAREN139=null;
  Token RIGHT_PAREN141=null;
  Token SEMICOLON143=null;
  DRLParser.lhs_exist_return lhs_exist134=null;
  DRLParser.lhs_not_binding_return lhs_not_binding135=null;
  DRLParser.lhs_not_return lhs_not136=null;
  DRLParser.lhs_eval_return lhs_eval137=null;
  DRLParser.lhs_forall_return lhs_forall138=null;
  DRLParser.lhs_or_return lhs_or140=null;
  DRLParser.pattern_source_return pattern_source142=null;
  Object LEFT_PAREN139_tree=null;
  Object RIGHT_PAREN141_tree=null;
  Object SEMICOLON143_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt53=7;
      int LA53_0=input.LA(1);
      if ((LA53_0 == ID)) {
        int LA53_1=input.LA(2);
        if ((((validateIdentifierKey(DroolsSoftKeywords.EXISTS))))) {
          alt53=1;
        }
 else         if ((((validateNotWithBinding()) && ((validateIdentifierKey(DroolsSoftKeywords.NOT)))))) {
          alt53=2;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.NOT))))) {
          alt53=3;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.EVAL))))) {
          alt53=4;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.FORALL))))) {
          alt53=5;
        }
 else         if ((true)) {
          alt53=7;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",53,1,input);
          throw nvae;
        }
      }
 else       if ((LA53_0 == LEFT_PAREN)) {
        alt53=6;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",53,0,input);
        throw nvae;
      }
switch (alt53) {
case 1:
{
          pushFollow(FOLLOW_lhs_exist_in_lhs_unary2312);
          lhs_exist134=lhs_exist();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,lhs_exist134.getTree());
        }
      break;
case 2:
{
      if (!((validateNotWithBinding()))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        throw new FailedPredicateException(input,"lhs_unary","validateNotWithBinding()");
      }
      pushFollow(FOLLOW_lhs_not_binding_in_lhs_unary2320);
      lhs_not_binding135=lhs_not_binding();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,lhs_not_binding135.getTree());
    }
  break;
case 3:
{
  pushFollow(FOLLOW_lhs_not_in_lhs_unary2326);
  lhs_not136=lhs_not();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,lhs_not136.getTree());
}
break;
case 4:
{
pushFollow(FOLLOW_lhs_eval_in_lhs_unary2332);
lhs_eval137=lhs_eval();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_eval137.getTree());
}
break;
case 5:
{
pushFollow(FOLLOW_lhs_forall_in_lhs_unary2338);
lhs_forall138=lhs_forall();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_forall138.getTree());
}
break;
case 6:
{
LEFT_PAREN139=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_unary2344);
if (state.failed) return retval;
if (state.backtracking == 0) {
emit(LEFT_PAREN139,DroolsEditorType.SYMBOL);
emit(Location.LOCATION_LHS_BEGIN_OF_CONDITION);
}
pushFollow(FOLLOW_lhs_or_in_lhs_unary2355);
lhs_or140=lhs_or();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,lhs_or140.getTree());
RIGHT_PAREN141=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_unary2361);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_PAREN141_tree=(Object)adaptor.create(RIGHT_PAREN141);
adaptor.addChild(root_0,RIGHT_PAREN141_tree);
}
if (state.backtracking == 0) {
emit(RIGHT_PAREN141,DroolsEditorType.SYMBOL);
}
}
break;
case 7:
{
pushFollow(FOLLOW_pattern_source_in_lhs_unary2369);
pattern_source142=pattern_source();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,pattern_source142.getTree());
}
break;
}
int alt54=2;
int LA54_0=input.LA(1);
if ((LA54_0 == SEMICOLON)) {
int LA54_1=input.LA(2);
if ((synpred5_DRL())) {
alt54=1;
}
}
switch (alt54) {
case 1:
{
SEMICOLON143=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_lhs_unary2383);
if (state.failed) return retval;
if (state.backtracking == 0) {
emit(SEMICOLON143,DroolsEditorType.SYMBOL);
}
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
