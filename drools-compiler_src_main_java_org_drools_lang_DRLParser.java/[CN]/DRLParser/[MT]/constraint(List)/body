{
  Token fb=null;
  Token f=null;
  Token con=null;
  RestrictionDescr rd=null;
  BaseDescr d=null;
  FieldConstraintDescr fc=null;
  try {
{
      int alt32=2;
      int LA32_0=input.LA(1);
      if ((LA32_0 == ID)) {
        int LA32_1=input.LA(2);
        if ((LA32_1 == 39)) {
          alt32=1;
        }
      }
switch (alt32) {
case 1:
{
          fb=(Token)input.LT(1);
          match(input,ID,FOLLOW_ID_in_constraint1964);
          if (failed)           return;
          match(input,39,FOLLOW_39_in_constraint1966);
          if (failed)           return;
        }
      break;
  }
  f=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_constraint1976);
  if (failed)   return;
  if (backtracking == 0) {
    if (fb != null) {
      d=new FieldBindingDescr(f.getText(),fb.getText());
      d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
      constraints.add(d);
    }
    fc=new FieldConstraintDescr(f.getText());
    fc.setLocation(offset(f.getLine()),f.getCharPositionInLine());
  }
  int alt34=2;
  int LA34_0=input.LA(1);
  if (((LA34_0 >= 57 && LA34_0 <= 65))) {
    alt34=1;
  }
switch (alt34) {
case 1:
{
      pushFollow(FOLLOW_constraint_expression_in_constraint1992);
      rd=constraint_expression();
      _fsp--;
      if (failed)       return;
      if (backtracking == 0) {
        fc.addRestriction(rd);
        constraints.add(fc);
      }
      loop33:       do {
        int alt33=2;
        int LA33_0=input.LA(1);
        if (((LA33_0 >= 55 && LA33_0 <= 56))) {
          alt33=1;
        }
switch (alt33) {
case 1:
{
            con=(Token)input.LT(1);
            if ((input.LA(1) >= 55 && input.LA(1) <= 56)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_constraint2011);
              throw mse;
            }
            if (backtracking == 0) {
              if (con.getText().equals("&")) {
                fc.addRestriction(new RestrictionConnectiveDescr(RestrictionConnectiveDescr.AND));
              }
 else {
                fc.addRestriction(new RestrictionConnectiveDescr(RestrictionConnectiveDescr.OR));
              }
            }
            pushFollow(FOLLOW_constraint_expression_in_constraint2028);
            rd=constraint_expression();
            _fsp--;
            if (failed)             return;
            if (backtracking == 0) {
              fc.addRestriction(rd);
            }
          }
        break;
default :
      break loop33;
  }
}
 while (true);
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
