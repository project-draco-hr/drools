{
  Token fb=null;
  Token f=null;
  Token con=null;
  RestrictionDescr rd=null;
  BaseDescr d=null;
  FieldConstraintDescr fc=null;
  try {
{
      int alt41=2;
      int LA41_0=input.LA(1);
      if ((LA41_0 == ID)) {
        int LA41_1=input.LA(2);
        if ((LA41_1 == 38)) {
          alt41=1;
        }
      }
switch (alt41) {
case 1:
{
          fb=(Token)input.LT(1);
          match(input,ID,FOLLOW_ID_in_constraint2374);
          match(input,38,FOLLOW_38_in_constraint2376);
        }
      break;
  }
  f=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_constraint2386);
  if (fb != null) {
    d=new FieldBindingDescr(f.getText(),fb.getText());
    d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
    constraints.add(d);
  }
  fc=new FieldConstraintDescr(f.getText());
  fc.setLocation(offset(f.getLine()),f.getCharPositionInLine());
  int alt43=2;
  int LA43_0=input.LA(1);
  if (((LA43_0 >= 61 && LA43_0 <= 69))) {
    alt43=1;
  }
switch (alt43) {
case 1:
{
      pushFollow(FOLLOW_constraint_expression_in_constraint2402);
      rd=constraint_expression();
      _fsp--;
      fc.addRestriction(rd);
      constraints.add(fc);
      loop42:       do {
        int alt42=2;
        int LA42_0=input.LA(1);
        if (((LA42_0 >= 59 && LA42_0 <= 60))) {
          alt42=1;
        }
switch (alt42) {
case 1:
{
            con=(Token)input.LT(1);
            if ((input.LA(1) >= 59 && input.LA(1) <= 60)) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_constraint2421);
              throw mse;
            }
            if (con.getText().equals("&")) {
              fc.addRestriction(new RestrictionConnectiveDescr(RestrictionConnectiveDescr.AND));
            }
 else {
              fc.addRestriction(new RestrictionConnectiveDescr(RestrictionConnectiveDescr.OR));
            }
            pushFollow(FOLLOW_constraint_expression_in_constraint2438);
            rd=constraint_expression();
            _fsp--;
            fc.addRestriction(rd);
          }
        break;
default :
      break loop42;
  }
}
 while (true);
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
