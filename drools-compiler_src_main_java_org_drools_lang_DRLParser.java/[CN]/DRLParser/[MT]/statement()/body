{
  FactTemplateDescr t=null;
  RuleDescr r=null;
  QueryDescr q=null;
  try {
{
      int alt4=7;
switch (this.input.LA(1)) {
case IMPORT:
        if ((synpred4())) {
          alt4=1;
        }
 else         if ((synpred5())) {
          alt4=2;
        }
 else {
          if (this.backtracking > 0) {
            this.failed=true;
            return;
          }
          final NoViableAltException nvae=new NoViableAltException("189:2: ( ( function_import_statement )=> function_import_statement | ( import_statement )=> import_statement | ( global )=> global | ( function )=> function | ( template )=>t= template | ( rule )=>r= rule | q= query )",4,1,this.input);
          throw nvae;
        }
      break;
case GLOBAL:
    alt4=3;
  break;
case FUNCTION:
alt4=4;
break;
case TEMPLATE:
alt4=5;
break;
case RULE:
alt4=6;
break;
case QUERY:
alt4=7;
break;
default :
if (this.backtracking > 0) {
this.failed=true;
return;
}
final NoViableAltException nvae=new NoViableAltException("189:2: ( ( function_import_statement )=> function_import_statement | ( import_statement )=> import_statement | ( global )=> global | ( function )=> function | ( template )=>t= template | ( rule )=>r= rule | q= query )",4,0,this.input);
throw nvae;
}
switch (alt4) {
case 1:
{
pushFollow(FOLLOW_function_import_statement_in_statement114);
function_import_statement();
this._fsp--;
if (this.failed) {
return;
}
}
break;
case 2:
{
pushFollow(FOLLOW_import_statement_in_statement120);
import_statement();
this._fsp--;
if (this.failed) {
return;
}
}
break;
case 3:
{
pushFollow(FOLLOW_global_in_statement126);
global();
this._fsp--;
if (this.failed) {
return;
}
}
break;
case 4:
{
pushFollow(FOLLOW_function_in_statement132);
function();
this._fsp--;
if (this.failed) {
return;
}
}
break;
case 5:
{
pushFollow(FOLLOW_template_in_statement146);
t=template();
this._fsp--;
if (this.failed) {
return;
}
if (this.backtracking == 0) {
this.packageDescr.addFactTemplate(t);
}
}
break;
case 6:
{
pushFollow(FOLLOW_rule_in_statement155);
r=rule();
this._fsp--;
if (this.failed) {
return;
}
if (this.backtracking == 0) {
if (r != null) {
this.packageDescr.addRule(r);
}
}
}
break;
case 7:
{
pushFollow(FOLLOW_query_in_statement167);
q=query();
this._fsp--;
if (this.failed) {
return;
}
if (this.backtracking == 0) {
if (q != null) {
this.packageDescr.addRule(q);
}
}
}
break;
}
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
