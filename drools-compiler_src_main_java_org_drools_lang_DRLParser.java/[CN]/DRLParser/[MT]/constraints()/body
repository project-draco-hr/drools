{
  constraints_return retval=new constraints_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA210=null;
  constraint_return constraint209=null;
  constraint_return constraint211=null;
  Object COMMA210_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_constraint_in_constraints3700);
      constraint209=constraint();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,constraint209.getTree());
      loop75:       do {
        int alt75=2;
        int LA75_0=input.LA(1);
        if ((LA75_0 == COMMA)) {
          alt75=1;
        }
switch (alt75) {
case 1:
{
            COMMA210=(Token)input.LT(1);
            match(input,COMMA,FOLLOW_COMMA_in_constraints3704);
            if (failed)             return retval;
            if (backtracking == 0) {
              emit(COMMA210,DroolsEditorType.SYMBOL);
              emit(Location.LOCATION_LHS_INSIDE_CONDITION_START);
            }
            pushFollow(FOLLOW_constraint_in_constraints3711);
            constraint211=constraint();
            _fsp--;
            if (failed)             return retval;
            if (backtracking == 0)             adaptor.addChild(root_0,constraint211.getTree());
          }
        break;
default :
      break loop75;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
