{
  DRLParser.constraints_return retval=new DRLParser.constraints_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA218=null;
  DRLParser.constraint_return constraint217=null;
  DRLParser.constraint_return constraint219=null;
  Object COMMA218_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_constraint_in_constraints3813);
      constraint217=constraint();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,constraint217.getTree());
      loop82:       do {
        int alt82=2;
        int LA82_0=input.LA(1);
        if ((LA82_0 == COMMA)) {
          alt82=1;
        }
switch (alt82) {
case 1:
{
            COMMA218=(Token)match(input,COMMA,FOLLOW_COMMA_in_constraints3817);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              emit(COMMA218,DroolsEditorType.SYMBOL);
              emit(Location.LOCATION_LHS_INSIDE_CONDITION_START);
            }
            pushFollow(FOLLOW_constraint_in_constraints3824);
            constraint219=constraint();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,constraint219.getTree());
          }
        break;
default :
      break loop82;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
