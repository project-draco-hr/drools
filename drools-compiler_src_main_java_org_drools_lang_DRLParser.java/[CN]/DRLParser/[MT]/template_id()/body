{
  template_id_return retval=new template_id_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token id=null;
  Object id_tree=null;
  RewriteRuleTokenStream stream_STRING=new RewriteRuleTokenStream(adaptor,"token STRING");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  try {
    int alt26=2;
    int LA26_0=input.LA(1);
    if ((LA26_0 == ID)) {
      alt26=1;
    }
 else     if ((LA26_0 == STRING)) {
      alt26=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("600:1: template_id : (id= ID -> VT_TEMPLATE_ID[$id] | id= STRING -> VT_TEMPLATE_ID[$id] );",26,0,input);
      throw nvae;
    }
switch (alt26) {
case 1:
{
        id=(Token)input.LT(1);
        match(input,ID,FOLLOW_ID_in_template_id1374);
        if (failed)         return retval;
        if (backtracking == 0)         stream_ID.add(id);
        if (backtracking == 0) {
          emit(id,DroolsEditorType.IDENTIFIER);
          setParaphrasesValue(DroolsParaphraseTypes.TEMPLATE,id.getText());
        }
        if (backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
          root_0=(Object)adaptor.nil();
{
            adaptor.addChild(root_0,adaptor.create(VT_TEMPLATE_ID,id));
          }
        }
      }
    break;
case 2:
{
    id=(Token)input.LT(1);
    match(input,STRING,FOLLOW_STRING_in_template_id1390);
    if (failed)     return retval;
    if (backtracking == 0)     stream_STRING.add(id);
    if (backtracking == 0) {
      emit(id,DroolsEditorType.IDENTIFIER);
      setParaphrasesValue(DroolsParaphraseTypes.TEMPLATE,id.getText());
    }
    if (backtracking == 0) {
      retval.tree=root_0;
      RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
      root_0=(Object)adaptor.nil();
{
        adaptor.addChild(root_0,adaptor.create(VT_TEMPLATE_ID,id));
      }
    }
  }
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
