{
  ForallDescr d=null;
  Token loc=null;
  Token end=null;
  BaseDescr base=null;
  BaseDescr column=null;
  d=this.factory.createForall();
  try {
{
      loc=(Token)this.input.LT(1);
      match(this.input,FORALL,FOLLOW_FORALL_in_lhs_forall3946);
      if (this.failed) {
        return d;
      }
      match(this.input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_forall3948);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_lhs_column_in_lhs_forall3952);
      base=lhs_column();
      this._fsp--;
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        if (loc != null) {
          d.setStartCharacter(((CommonToken)loc).getStartIndex());
        }
        d.addDescr(base);
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      }
      int cnt51=0;
      loop51:       do {
        int alt51=2;
        final int LA51_0=this.input.LA(1);
        if ((LA51_0 == ID || LA51_0 == 66)) {
          alt51=1;
        }
switch (alt51) {
case 1:
{
            int alt50=2;
            final int LA50_0=this.input.LA(1);
            if ((LA50_0 == 66)) {
              alt50=1;
            }
switch (alt50) {
case 1:
{
                match(this.input,66,FOLLOW_66_in_lhs_forall3966);
                if (this.failed) {
                  return d;
                }
              }
            break;
        }
        pushFollow(FOLLOW_lhs_column_in_lhs_forall3972);
        column=lhs_column();
        this._fsp--;
        if (this.failed) {
          return d;
        }
        if (this.backtracking == 0) {
          d.addDescr(column);
        }
      }
    break;
default :
  if (cnt51 >= 1) {
    break loop51;
  }
if (this.backtracking > 0) {
  this.failed=true;
  return d;
}
final EarlyExitException eee=new EarlyExitException(51,this.input);
throw eee;
}
cnt51++;
}
 while (true);
end=(Token)this.input.LT(1);
match(this.input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_forall3987);
if (this.failed) {
return d;
}
if (this.backtracking == 0) {
if (end != null) {
d.setEndCharacter(((CommonToken)end).getStopIndex());
}
}
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return d;
}
