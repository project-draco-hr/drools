{
  ForallDescr d=null;
  Token FORALL42=null;
  Token RIGHT_PAREN43=null;
  BaseDescr base=null;
  BaseDescr pattern=null;
  d=factory.createForall();
  try {
{
      FORALL42=(Token)input.LT(1);
      match(input,FORALL,FOLLOW_FORALL_in_lhs_forall2930);
      if (failed)       return d;
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_forall2932);
      if (failed)       return d;
      pushFollow(FOLLOW_lhs_pattern_in_lhs_forall2936);
      base=lhs_pattern();
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        d.setStartCharacter(((CommonToken)FORALL42).getStartIndex());
        d.addDescr(base);
        d.setLocation(offset(FORALL42.getLine()),FORALL42.getCharPositionInLine());
      }
      loop46:       do {
        int alt46=2;
        int LA46_0=input.LA(1);
        if ((LA46_0 == ID)) {
          alt46=1;
        }
switch (alt46) {
case 1:
{
            pushFollow(FOLLOW_lhs_pattern_in_lhs_forall2951);
            pattern=lhs_pattern();
            _fsp--;
            if (failed)             return d;
            if (backtracking == 0) {
              d.addDescr(pattern);
            }
          }
        break;
default :
      break loop46;
  }
}
 while (true);
RIGHT_PAREN43=(Token)input.LT(1);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_forall2967);
if (failed) return d;
if (backtracking == 0) {
  d.setEndCharacter(((CommonToken)RIGHT_PAREN43).getStopIndex());
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
