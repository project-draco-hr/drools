{
  lhs_not_binding_return retval=new lhs_not_binding_return();
  retval.start=input.LT(1);
  Object root_0=null;
  not_key_return not_key147=null;
  fact_binding_return fact_binding148=null;
  RewriteRuleSubtreeStream stream_fact_binding=new RewriteRuleSubtreeStream(adaptor,"rule fact_binding");
  RewriteRuleSubtreeStream stream_not_key=new RewriteRuleSubtreeStream(adaptor,"rule not_key");
  try {
{
      pushFollow(FOLLOW_not_key_in_lhs_not_binding2522);
      not_key147=not_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_not_key.add(not_key147.getTree());
      pushFollow(FOLLOW_fact_binding_in_lhs_not_binding2524);
      fact_binding148=fact_binding();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_fact_binding.add(fact_binding148.getTree());
      if (backtracking == 0) {
        retval.tree=root_0;
        RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
        root_0=(Object)adaptor.nil();
{
{
            Object root_1=(Object)adaptor.nil();
            root_1=(Object)adaptor.becomeRoot(stream_not_key.nextNode(),root_1);
{
              Object root_2=(Object)adaptor.nil();
              root_2=(Object)adaptor.becomeRoot(adaptor.create(VT_PATTERN,"VT_PATTERN"),root_2);
              adaptor.addChild(root_2,stream_fact_binding.next());
              adaptor.addChild(root_1,root_2);
            }
            adaptor.addChild(root_0,root_1);
          }
        }
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
