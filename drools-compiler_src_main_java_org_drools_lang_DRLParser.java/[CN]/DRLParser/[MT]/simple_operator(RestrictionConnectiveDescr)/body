{
  Token t=null;
  Token n=null;
  RestrictionDescr rd=null;
  String op=null;
  try {
{
      int alt43=11;
switch (input.LA(1)) {
case 74:
{
          alt43=1;
        }
      break;
case 75:
{
      alt43=2;
    }
  break;
case 76:
{
  alt43=3;
}
break;
case 77:
{
alt43=4;
}
break;
case 78:
{
alt43=5;
}
break;
case 79:
{
alt43=6;
}
break;
case CONTAINS:
{
alt43=7;
}
break;
case MATCHES:
{
alt43=8;
}
break;
case EXCLUDES:
{
alt43=9;
}
break;
case MEMBEROF:
{
alt43=10;
}
break;
case NOT:
{
alt43=11;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("1072:3: (t= '==' | t= '>' | t= '>=' | t= '<' | t= '<=' | t= '!=' | t= CONTAINS | t= MATCHES | t= EXCLUDES | t= MEMBEROF | n= NOT t= MEMBEROF )",43,0,input);
throw nvae;
}
switch (alt43) {
case 1:
{
t=(Token)input.LT(1);
match(input,74,FOLLOW_74_in_simple_operator2818);
if (failed) return;
}
break;
case 2:
{
t=(Token)input.LT(1);
match(input,75,FOLLOW_75_in_simple_operator2826);
if (failed) return;
}
break;
case 3:
{
t=(Token)input.LT(1);
match(input,76,FOLLOW_76_in_simple_operator2834);
if (failed) return;
}
break;
case 4:
{
t=(Token)input.LT(1);
match(input,77,FOLLOW_77_in_simple_operator2842);
if (failed) return;
}
break;
case 5:
{
t=(Token)input.LT(1);
match(input,78,FOLLOW_78_in_simple_operator2850);
if (failed) return;
}
break;
case 6:
{
t=(Token)input.LT(1);
match(input,79,FOLLOW_79_in_simple_operator2858);
if (failed) return;
}
break;
case 7:
{
t=(Token)input.LT(1);
match(input,CONTAINS,FOLLOW_CONTAINS_in_simple_operator2866);
if (failed) return;
}
break;
case 8:
{
t=(Token)input.LT(1);
match(input,MATCHES,FOLLOW_MATCHES_in_simple_operator2874);
if (failed) return;
}
break;
case 9:
{
t=(Token)input.LT(1);
match(input,EXCLUDES,FOLLOW_EXCLUDES_in_simple_operator2882);
if (failed) return;
}
break;
case 10:
{
t=(Token)input.LT(1);
match(input,MEMBEROF,FOLLOW_MEMBEROF_in_simple_operator2890);
if (failed) return;
}
break;
case 11:
{
n=(Token)input.LT(1);
match(input,NOT,FOLLOW_NOT_in_simple_operator2898);
if (failed) return;
t=(Token)input.LT(1);
match(input,MEMBEROF,FOLLOW_MEMBEROF_in_simple_operator2902);
if (failed) return;
}
break;
}
if (backtracking == 0) {
if (n != null) {
op="not " + t.getText();
}
 else {
op=t.getText();
}
}
pushFollow(FOLLOW_expression_value_in_simple_operator2916);
rd=expression_value(op);
_fsp--;
if (failed) return;
if (backtracking == 0) {
if (rd != null) {
base.addRestriction(rd);
}
 else if (rd == null && op != null) {
base.addRestriction(new LiteralRestrictionDescr(op,null));
}
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
