{
  Token t=null;
  Token n=null;
  RestrictionDescr rd=null;
  String op=null;
  try {
{
      int alt46=11;
switch (input.LA(1)) {
case 74:
{
          alt46=1;
        }
      break;
case 75:
{
      alt46=2;
    }
  break;
case 76:
{
  alt46=3;
}
break;
case 77:
{
alt46=4;
}
break;
case 78:
{
alt46=5;
}
break;
case 79:
{
alt46=6;
}
break;
case CONTAINS:
{
alt46=7;
}
break;
case MATCHES:
{
alt46=8;
}
break;
case EXCLUDES:
{
alt46=9;
}
break;
case MEMBEROF:
{
alt46=10;
}
break;
case NOT:
{
alt46=11;
}
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("1150:3: (t= '==' | t= '>' | t= '>=' | t= '<' | t= '<=' | t= '!=' | t= CONTAINS | t= MATCHES | t= EXCLUDES | t= MEMBEROF | n= NOT t= MEMBEROF )",46,0,input);
throw nvae;
}
switch (alt46) {
case 1:
{
t=(Token)input.LT(1);
match(input,74,FOLLOW_74_in_simple_operator2924);
if (failed) return;
}
break;
case 2:
{
t=(Token)input.LT(1);
match(input,75,FOLLOW_75_in_simple_operator2932);
if (failed) return;
}
break;
case 3:
{
t=(Token)input.LT(1);
match(input,76,FOLLOW_76_in_simple_operator2940);
if (failed) return;
}
break;
case 4:
{
t=(Token)input.LT(1);
match(input,77,FOLLOW_77_in_simple_operator2948);
if (failed) return;
}
break;
case 5:
{
t=(Token)input.LT(1);
match(input,78,FOLLOW_78_in_simple_operator2956);
if (failed) return;
}
break;
case 6:
{
t=(Token)input.LT(1);
match(input,79,FOLLOW_79_in_simple_operator2964);
if (failed) return;
}
break;
case 7:
{
t=(Token)input.LT(1);
match(input,CONTAINS,FOLLOW_CONTAINS_in_simple_operator2972);
if (failed) return;
}
break;
case 8:
{
t=(Token)input.LT(1);
match(input,MATCHES,FOLLOW_MATCHES_in_simple_operator2980);
if (failed) return;
}
break;
case 9:
{
t=(Token)input.LT(1);
match(input,EXCLUDES,FOLLOW_EXCLUDES_in_simple_operator2988);
if (failed) return;
}
break;
case 10:
{
t=(Token)input.LT(1);
match(input,MEMBEROF,FOLLOW_MEMBEROF_in_simple_operator2996);
if (failed) return;
}
break;
case 11:
{
n=(Token)input.LT(1);
match(input,NOT,FOLLOW_NOT_in_simple_operator3004);
if (failed) return;
t=(Token)input.LT(1);
match(input,MEMBEROF,FOLLOW_MEMBEROF_in_simple_operator3008);
if (failed) return;
}
break;
}
if (backtracking == 0) {
location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_ARGUMENT);
location.setProperty(Location.LOCATION_PROPERTY_OPERATOR,t.getText());
if (n != null) {
op="not " + t.getText();
}
 else {
op=t.getText();
}
}
pushFollow(FOLLOW_expression_value_in_simple_operator3022);
rd=expression_value(op);
_fsp--;
if (failed) return;
if (backtracking == 0) {
if (rd != null) {
location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_END);
base.addRestriction(rd);
}
 else if (rd == null && op != null) {
base.addRestriction(new LiteralRestrictionDescr(op,null));
}
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
