{
  NotDescr d=null;
  Token loc=null;
  Token end=null;
  BaseDescr pattern=null;
  d=null;
  try {
{
      loc=(Token)input.LT(1);
      match(input,NOT,FOLLOW_NOT_in_lhs_not3920);
      if (failed)       return d;
      if (backtracking == 0) {
        d=new NotDescr();
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        d.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      int alt53=2;
      int LA53_0=input.LA(1);
      if ((LA53_0 == LEFT_PAREN)) {
        alt53=1;
      }
 else       if ((LA53_0 == ID)) {
        alt53=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return d;
        }
        NoViableAltException nvae=new NoViableAltException("1312:3: ( ( '(' pattern= lhs_or end= ')' ) | pattern= lhs_pattern )",53,0,input);
        throw nvae;
      }
switch (alt53) {
case 1:
{
{
            match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_lhs_not3933);
            if (failed)             return d;
            pushFollow(FOLLOW_lhs_or_in_lhs_not3937);
            pattern=lhs_or();
            _fsp--;
            if (failed)             return d;
            if (backtracking == 0) {
              if (pattern != null)               d.addDescr(pattern);
            }
            end=(Token)input.LT(1);
            match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_lhs_not3970);
            if (failed)             return d;
            if (backtracking == 0) {
              if (end != null)               d.setEndCharacter(((CommonToken)end).getStopIndex());
            }
          }
        }
      break;
case 2:
{
      pushFollow(FOLLOW_lhs_pattern_in_lhs_not4007);
      pattern=lhs_pattern();
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        if (pattern != null) {
          d.addDescr(pattern);
          d.setEndCharacter(pattern.getEndCharacter());
        }
      }
    }
  break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
