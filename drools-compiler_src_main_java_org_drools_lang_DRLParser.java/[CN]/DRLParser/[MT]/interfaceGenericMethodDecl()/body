{
  DRLParser.interfaceGenericMethodDecl_return retval=new DRLParser.interfaceGenericMethodDecl_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID805=null;
  DRLParser.typeParameters_return typeParameters802=null;
  DRLParser.type_return type803=null;
  DRLParser.void_key_return void_key804=null;
  DRLParser.interfaceMethodDeclaratorRest_return interfaceMethodDeclaratorRest806=null;
  Object ID805_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_typeParameters_in_interfaceGenericMethodDecl9585);
      typeParameters802=typeParameters();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,typeParameters802.getTree());
      int alt239=2;
      int LA239_0=input.LA(1);
      if ((LA239_0 == ID)) {
        int LA239_1=input.LA(2);
        if ((!((((helper.validateIdentifierKey(DroolsSoftKeywords.VOID))))))) {
          alt239=1;
        }
 else         if ((((helper.validateIdentifierKey(DroolsSoftKeywords.VOID))))) {
          alt239=2;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",239,1,input);
          throw nvae;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",239,0,input);
        throw nvae;
      }
switch (alt239) {
case 1:
{
          pushFollow(FOLLOW_type_in_interfaceGenericMethodDecl9588);
          type803=type();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,type803.getTree());
        }
      break;
case 2:
{
      pushFollow(FOLLOW_void_key_in_interfaceGenericMethodDecl9592);
      void_key804=void_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,void_key804.getTree());
    }
  break;
}
ID805=(Token)match(input,ID,FOLLOW_ID_in_interfaceGenericMethodDecl9595);
if (state.failed) return retval;
if (state.backtracking == 0) {
ID805_tree=(Object)adaptor.create(ID805);
adaptor.addChild(root_0,ID805_tree);
}
pushFollow(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl9605);
interfaceMethodDeclaratorRest806=interfaceMethodDeclaratorRest();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,interfaceMethodDeclaratorRest806.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
