{
  DRLParser.fieldDeclaration_return retval=new DRLParser.fieldDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token SEMICOLON757=null;
  DRLParser.type_return type755=null;
  DRLParser.variableDeclarators_return variableDeclarators756=null;
  Object SEMICOLON757_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_type_in_fieldDeclaration9315);
      type755=type();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,type755.getTree());
      pushFollow(FOLLOW_variableDeclarators_in_fieldDeclaration9317);
      variableDeclarators756=variableDeclarators();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,variableDeclarators756.getTree());
      SEMICOLON757=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_fieldDeclaration9319);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        SEMICOLON757_tree=(Object)adaptor.create(SEMICOLON757);
        adaptor.addChild(root_0,SEMICOLON757_tree);
      }
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
