{
  DRLParser.variableDeclaratorId_return retval=new DRLParser.variableDeclaratorId_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID370=null;
  Token LEFT_SQUARE371=null;
  Token RIGHT_SQUARE372=null;
  Object ID370_tree=null;
  Object LEFT_SQUARE371_tree=null;
  Object RIGHT_SQUARE372_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      ID370=(Token)match(input,ID,FOLLOW_ID_in_variableDeclaratorId6190);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID370_tree=(Object)adaptor.create(ID370);
        adaptor.addChild(root_0,ID370_tree);
      }
      loop126:       do {
        int alt126=2;
        int LA126_0=input.LA(1);
        if ((LA126_0 == LEFT_SQUARE)) {
          alt126=1;
        }
switch (alt126) {
case 1:
{
            LEFT_SQUARE371=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_variableDeclaratorId6193);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              LEFT_SQUARE371_tree=(Object)adaptor.create(LEFT_SQUARE371);
              adaptor.addChild(root_0,LEFT_SQUARE371_tree);
            }
            RIGHT_SQUARE372=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_variableDeclaratorId6195);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              RIGHT_SQUARE372_tree=(Object)adaptor.create(RIGHT_SQUARE372);
              adaptor.addChild(root_0,RIGHT_SQUARE372_tree);
            }
          }
        break;
default :
      break loop126;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
