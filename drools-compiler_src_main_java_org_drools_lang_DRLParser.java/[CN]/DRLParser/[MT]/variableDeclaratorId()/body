{
  DRLParser.variableDeclaratorId_return retval=new DRLParser.variableDeclaratorId_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID355=null;
  Token LEFT_SQUARE356=null;
  Token RIGHT_SQUARE357=null;
  Object ID355_tree=null;
  Object LEFT_SQUARE356_tree=null;
  Object RIGHT_SQUARE357_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      ID355=(Token)match(input,ID,FOLLOW_ID_in_variableDeclaratorId6084);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID355_tree=(Object)adaptor.create(ID355);
        adaptor.addChild(root_0,ID355_tree);
      }
      loop124:       do {
        int alt124=2;
        int LA124_0=input.LA(1);
        if ((LA124_0 == LEFT_SQUARE)) {
          alt124=1;
        }
switch (alt124) {
case 1:
{
            LEFT_SQUARE356=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_variableDeclaratorId6087);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              LEFT_SQUARE356_tree=(Object)adaptor.create(LEFT_SQUARE356);
              adaptor.addChild(root_0,LEFT_SQUARE356_tree);
            }
            RIGHT_SQUARE357=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_variableDeclaratorId6089);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              RIGHT_SQUARE357_tree=(Object)adaptor.create(RIGHT_SQUARE357);
              adaptor.addChild(root_0,RIGHT_SQUARE357_tree);
            }
          }
        break;
default :
      break loop124;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
