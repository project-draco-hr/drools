{
  DRLParser.selector_return retval=new DRLParser.selector_return();
  retval.start=input.LT(1);
  int selector_StartIndex=input.index();
  Object root_0=null;
  Token DOT520=null;
  Token ID521=null;
  Token DOT523=null;
  Token DOT526=null;
  Token LEFT_SQUARE530=null;
  Token RIGHT_SQUARE532=null;
  DRLParser.arguments_return arguments522=null;
  DRLParser.super_key_return super_key524=null;
  DRLParser.superSuffix_return superSuffix525=null;
  DRLParser.new_key_return new_key527=null;
  DRLParser.nonWildcardTypeArguments_return nonWildcardTypeArguments528=null;
  DRLParser.innerCreator_return innerCreator529=null;
  DRLParser.expression_return expression531=null;
  Object DOT520_tree=null;
  Object ID521_tree=null;
  Object DOT523_tree=null;
  Object DOT526_tree=null;
  Object LEFT_SQUARE530_tree=null;
  Object RIGHT_SQUARE532_tree=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,152)) {
      return retval;
    }
    int alt168=4;
    int LA168_0=input.LA(1);
    if ((LA168_0 == DOT)) {
      int LA168_1=input.LA(2);
      if ((synpred46_DRL())) {
        alt168=1;
      }
 else       if ((synpred47_DRL())) {
        alt168=2;
      }
 else       if ((synpred48_DRL())) {
        alt168=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",168,1,input);
        throw nvae;
      }
    }
 else     if ((LA168_0 == LEFT_SQUARE)) {
      alt168=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",168,0,input);
      throw nvae;
    }
switch (alt168) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT520=(Token)match(input,DOT,FOLLOW_DOT_in_selector7570);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT520_tree=(Object)adaptor.create(DOT520);
          adaptor.addChild(root_0,DOT520_tree);
        }
        ID521=(Token)match(input,ID,FOLLOW_ID_in_selector7572);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          ID521_tree=(Object)adaptor.create(ID521);
          adaptor.addChild(root_0,ID521_tree);
        }
        int alt166=2;
        alt166=dfa166.predict(input);
switch (alt166) {
case 1:
{
            pushFollow(FOLLOW_arguments_in_selector7581);
            arguments522=arguments();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,arguments522.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT523=(Token)match(input,DOT,FOLLOW_DOT_in_selector7592);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT523_tree=(Object)adaptor.create(DOT523);
  adaptor.addChild(root_0,DOT523_tree);
}
pushFollow(FOLLOW_super_key_in_selector7594);
super_key524=super_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,super_key524.getTree());
pushFollow(FOLLOW_superSuffix_in_selector7596);
superSuffix525=superSuffix();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,superSuffix525.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT526=(Token)match(input,DOT,FOLLOW_DOT_in_selector7603);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT526_tree=(Object)adaptor.create(DOT526);
adaptor.addChild(root_0,DOT526_tree);
}
pushFollow(FOLLOW_new_key_in_selector7605);
new_key527=new_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,new_key527.getTree());
int alt167=2;
int LA167_0=input.LA(1);
if ((LA167_0 == LESS)) {
alt167=1;
}
switch (alt167) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector7608);
nonWildcardTypeArguments528=nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,nonWildcardTypeArguments528.getTree());
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector7612);
innerCreator529=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator529.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE530=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector7619);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE530_tree=(Object)adaptor.create(LEFT_SQUARE530);
adaptor.addChild(root_0,LEFT_SQUARE530_tree);
}
pushFollow(FOLLOW_expression_in_selector7621);
expression531=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression531.getTree());
RIGHT_SQUARE532=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector7623);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE532_tree=(Object)adaptor.create(RIGHT_SQUARE532);
adaptor.addChild(root_0,RIGHT_SQUARE532_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,152,selector_StartIndex);
}
}
return retval;
}
