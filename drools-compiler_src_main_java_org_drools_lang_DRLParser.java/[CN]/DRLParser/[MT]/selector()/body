{
  DRLParser.selector_return retval=new DRLParser.selector_return();
  retval.start=input.LT(1);
  int selector_StartIndex=input.index();
  Object root_0=null;
  Token DOT634=null;
  Token ID635=null;
  Token DOT637=null;
  Token DOT640=null;
  Token LEFT_SQUARE644=null;
  Token RIGHT_SQUARE646=null;
  DRLParser.arguments_return arguments636=null;
  DRLParser.super_key_return super_key638=null;
  DRLParser.superSuffix_return superSuffix639=null;
  DRLParser.new_key_return new_key641=null;
  DRLParser.nonWildcardTypeArguments_return nonWildcardTypeArguments642=null;
  DRLParser.innerCreator_return innerCreator643=null;
  DRLParser.expression_return expression645=null;
  Object DOT634_tree=null;
  Object ID635_tree=null;
  Object DOT637_tree=null;
  Object DOT640_tree=null;
  Object LEFT_SQUARE644_tree=null;
  Object RIGHT_SQUARE646_tree=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,170)) {
      return retval;
    }
    int alt198=4;
    int LA198_0=input.LA(1);
    if ((LA198_0 == DOT)) {
      int LA198_1=input.LA(2);
      if ((synpred68_DRL())) {
        alt198=1;
      }
 else       if ((synpred69_DRL())) {
        alt198=2;
      }
 else       if ((synpred70_DRL())) {
        alt198=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",198,1,input);
        throw nvae;
      }
    }
 else     if ((LA198_0 == LEFT_SQUARE)) {
      alt198=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",198,0,input);
      throw nvae;
    }
switch (alt198) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT634=(Token)match(input,DOT,FOLLOW_DOT_in_selector8292);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT634_tree=(Object)adaptor.create(DOT634);
          adaptor.addChild(root_0,DOT634_tree);
        }
        ID635=(Token)match(input,ID,FOLLOW_ID_in_selector8294);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          ID635_tree=(Object)adaptor.create(ID635);
          adaptor.addChild(root_0,ID635_tree);
        }
        int alt196=2;
        alt196=dfa196.predict(input);
switch (alt196) {
case 1:
{
            pushFollow(FOLLOW_arguments_in_selector8303);
            arguments636=arguments();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,arguments636.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT637=(Token)match(input,DOT,FOLLOW_DOT_in_selector8314);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT637_tree=(Object)adaptor.create(DOT637);
  adaptor.addChild(root_0,DOT637_tree);
}
pushFollow(FOLLOW_super_key_in_selector8316);
super_key638=super_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,super_key638.getTree());
pushFollow(FOLLOW_superSuffix_in_selector8318);
superSuffix639=superSuffix();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,superSuffix639.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT640=(Token)match(input,DOT,FOLLOW_DOT_in_selector8325);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT640_tree=(Object)adaptor.create(DOT640);
adaptor.addChild(root_0,DOT640_tree);
}
pushFollow(FOLLOW_new_key_in_selector8327);
new_key641=new_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,new_key641.getTree());
int alt197=2;
int LA197_0=input.LA(1);
if ((LA197_0 == LESS)) {
alt197=1;
}
switch (alt197) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector8330);
nonWildcardTypeArguments642=nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,nonWildcardTypeArguments642.getTree());
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector8334);
innerCreator643=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator643.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE644=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector8341);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE644_tree=(Object)adaptor.create(LEFT_SQUARE644);
adaptor.addChild(root_0,LEFT_SQUARE644_tree);
}
pushFollow(FOLLOW_expression_in_selector8343);
expression645=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression645.getTree());
RIGHT_SQUARE646=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector8345);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE646_tree=(Object)adaptor.create(RIGHT_SQUARE646);
adaptor.addChild(root_0,RIGHT_SQUARE646_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,170,selector_StartIndex);
}
}
return retval;
}
