{
  DRLParser.selector_return retval=new DRLParser.selector_return();
  retval.start=input.LT(1);
  int selector_StartIndex=input.index();
  Object root_0=null;
  Token DOT525=null;
  Token ID526=null;
  Token DOT528=null;
  Token DOT531=null;
  Token LEFT_SQUARE535=null;
  Token RIGHT_SQUARE537=null;
  DRLParser.arguments_return arguments527=null;
  DRLParser.super_key_return super_key529=null;
  DRLParser.superSuffix_return superSuffix530=null;
  DRLParser.new_key_return new_key532=null;
  DRLParser.nonWildcardTypeArguments_return nonWildcardTypeArguments533=null;
  DRLParser.innerCreator_return innerCreator534=null;
  DRLParser.expression_return expression536=null;
  Object DOT525_tree=null;
  Object ID526_tree=null;
  Object DOT528_tree=null;
  Object DOT531_tree=null;
  Object LEFT_SQUARE535_tree=null;
  Object RIGHT_SQUARE537_tree=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,154)) {
      return retval;
    }
    int alt170=4;
    int LA170_0=input.LA(1);
    if ((LA170_0 == DOT)) {
      int LA170_1=input.LA(2);
      if ((synpred46_DRL())) {
        alt170=1;
      }
 else       if ((synpred47_DRL())) {
        alt170=2;
      }
 else       if ((synpred48_DRL())) {
        alt170=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",170,1,input);
        throw nvae;
      }
    }
 else     if ((LA170_0 == LEFT_SQUARE)) {
      alt170=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",170,0,input);
      throw nvae;
    }
switch (alt170) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT525=(Token)match(input,DOT,FOLLOW_DOT_in_selector7631);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT525_tree=(Object)adaptor.create(DOT525);
          adaptor.addChild(root_0,DOT525_tree);
        }
        ID526=(Token)match(input,ID,FOLLOW_ID_in_selector7633);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          ID526_tree=(Object)adaptor.create(ID526);
          adaptor.addChild(root_0,ID526_tree);
        }
        int alt168=2;
        alt168=dfa168.predict(input);
switch (alt168) {
case 1:
{
            pushFollow(FOLLOW_arguments_in_selector7642);
            arguments527=arguments();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,arguments527.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT528=(Token)match(input,DOT,FOLLOW_DOT_in_selector7653);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT528_tree=(Object)adaptor.create(DOT528);
  adaptor.addChild(root_0,DOT528_tree);
}
pushFollow(FOLLOW_super_key_in_selector7655);
super_key529=super_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,super_key529.getTree());
pushFollow(FOLLOW_superSuffix_in_selector7657);
superSuffix530=superSuffix();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,superSuffix530.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT531=(Token)match(input,DOT,FOLLOW_DOT_in_selector7664);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT531_tree=(Object)adaptor.create(DOT531);
adaptor.addChild(root_0,DOT531_tree);
}
pushFollow(FOLLOW_new_key_in_selector7666);
new_key532=new_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,new_key532.getTree());
int alt169=2;
int LA169_0=input.LA(1);
if ((LA169_0 == LESS)) {
alt169=1;
}
switch (alt169) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector7669);
nonWildcardTypeArguments533=nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,nonWildcardTypeArguments533.getTree());
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector7673);
innerCreator534=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator534.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE535=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector7680);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE535_tree=(Object)adaptor.create(LEFT_SQUARE535);
adaptor.addChild(root_0,LEFT_SQUARE535_tree);
}
pushFollow(FOLLOW_expression_in_selector7682);
expression536=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression536.getTree());
RIGHT_SQUARE537=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector7684);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE537_tree=(Object)adaptor.create(RIGHT_SQUARE537);
adaptor.addChild(root_0,RIGHT_SQUARE537_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,154,selector_StartIndex);
}
}
return retval;
}
