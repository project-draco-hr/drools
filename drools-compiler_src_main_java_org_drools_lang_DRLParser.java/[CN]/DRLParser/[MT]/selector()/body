{
  DRLParser.selector_return retval=new DRLParser.selector_return();
  retval.start=input.LT(1);
  int selector_StartIndex=input.index();
  Object root_0=null;
  Token DOT490=null;
  Token ID491=null;
  Token DOT493=null;
  Token DOT496=null;
  Token LEFT_SQUARE500=null;
  Token RIGHT_SQUARE502=null;
  DRLParser.arguments_return arguments492=null;
  DRLParser.super_key_return super_key494=null;
  DRLParser.superSuffix_return superSuffix495=null;
  DRLParser.new_key_return new_key497=null;
  DRLParser.nonWildcardTypeArguments_return nonWildcardTypeArguments498=null;
  DRLParser.innerCreator_return innerCreator499=null;
  DRLParser.expression_return expression501=null;
  Object DOT490_tree=null;
  Object ID491_tree=null;
  Object DOT493_tree=null;
  Object DOT496_tree=null;
  Object LEFT_SQUARE500_tree=null;
  Object RIGHT_SQUARE502_tree=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,143)) {
      return retval;
    }
    int alt161=4;
    int LA161_0=input.LA(1);
    if ((LA161_0 == DOT)) {
      int LA161_1=input.LA(2);
      if ((synpred43_DRL())) {
        alt161=1;
      }
 else       if ((synpred44_DRL())) {
        alt161=2;
      }
 else       if ((synpred45_DRL())) {
        alt161=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",161,1,input);
        throw nvae;
      }
    }
 else     if ((LA161_0 == LEFT_SQUARE)) {
      alt161=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",161,0,input);
      throw nvae;
    }
switch (alt161) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT490=(Token)match(input,DOT,FOLLOW_DOT_in_selector7029);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT490_tree=(Object)adaptor.create(DOT490);
          adaptor.addChild(root_0,DOT490_tree);
        }
        ID491=(Token)match(input,ID,FOLLOW_ID_in_selector7031);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          ID491_tree=(Object)adaptor.create(ID491);
          adaptor.addChild(root_0,ID491_tree);
        }
        int alt159=2;
        alt159=dfa159.predict(input);
switch (alt159) {
case 1:
{
            pushFollow(FOLLOW_arguments_in_selector7040);
            arguments492=arguments();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,arguments492.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT493=(Token)match(input,DOT,FOLLOW_DOT_in_selector7051);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT493_tree=(Object)adaptor.create(DOT493);
  adaptor.addChild(root_0,DOT493_tree);
}
pushFollow(FOLLOW_super_key_in_selector7053);
super_key494=super_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,super_key494.getTree());
pushFollow(FOLLOW_superSuffix_in_selector7055);
superSuffix495=superSuffix();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,superSuffix495.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT496=(Token)match(input,DOT,FOLLOW_DOT_in_selector7062);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT496_tree=(Object)adaptor.create(DOT496);
adaptor.addChild(root_0,DOT496_tree);
}
pushFollow(FOLLOW_new_key_in_selector7064);
new_key497=new_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,new_key497.getTree());
int alt160=2;
int LA160_0=input.LA(1);
if ((LA160_0 == LESS)) {
alt160=1;
}
switch (alt160) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector7067);
nonWildcardTypeArguments498=nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,nonWildcardTypeArguments498.getTree());
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector7071);
innerCreator499=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator499.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE500=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector7078);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE500_tree=(Object)adaptor.create(LEFT_SQUARE500);
adaptor.addChild(root_0,LEFT_SQUARE500_tree);
}
pushFollow(FOLLOW_expression_in_selector7080);
expression501=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression501.getTree());
RIGHT_SQUARE502=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector7082);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE502_tree=(Object)adaptor.create(RIGHT_SQUARE502);
adaptor.addChild(root_0,RIGHT_SQUARE502_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,143,selector_StartIndex);
}
}
return retval;
}
