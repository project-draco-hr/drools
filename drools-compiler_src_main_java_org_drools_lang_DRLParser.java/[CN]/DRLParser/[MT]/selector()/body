{
  DRLParser.selector_return retval=new DRLParser.selector_return();
  retval.start=input.LT(1);
  int selector_StartIndex=input.index();
  Object root_0=null;
  Token DOT649=null;
  Token ID650=null;
  Token DOT652=null;
  Token DOT655=null;
  Token LEFT_SQUARE659=null;
  Token RIGHT_SQUARE661=null;
  DRLParser.arguments_return arguments651=null;
  DRLParser.super_key_return super_key653=null;
  DRLParser.superSuffix_return superSuffix654=null;
  DRLParser.new_key_return new_key656=null;
  DRLParser.nonWildcardTypeArguments_return nonWildcardTypeArguments657=null;
  DRLParser.innerCreator_return innerCreator658=null;
  DRLParser.expression_return expression660=null;
  Object DOT649_tree=null;
  Object ID650_tree=null;
  Object DOT652_tree=null;
  Object DOT655_tree=null;
  Object LEFT_SQUARE659_tree=null;
  Object RIGHT_SQUARE661_tree=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,173)) {
      return retval;
    }
    int alt200=4;
    int LA200_0=input.LA(1);
    if ((LA200_0 == DOT)) {
      int LA200_1=input.LA(2);
      if ((synpred68_DRL())) {
        alt200=1;
      }
 else       if ((synpred69_DRL())) {
        alt200=2;
      }
 else       if ((synpred70_DRL())) {
        alt200=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",200,1,input);
        throw nvae;
      }
    }
 else     if ((LA200_0 == LEFT_SQUARE)) {
      alt200=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",200,0,input);
      throw nvae;
    }
switch (alt200) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT649=(Token)match(input,DOT,FOLLOW_DOT_in_selector8395);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT649_tree=(Object)adaptor.create(DOT649);
          adaptor.addChild(root_0,DOT649_tree);
        }
        ID650=(Token)match(input,ID,FOLLOW_ID_in_selector8397);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          ID650_tree=(Object)adaptor.create(ID650);
          adaptor.addChild(root_0,ID650_tree);
        }
        int alt198=2;
        alt198=dfa198.predict(input);
switch (alt198) {
case 1:
{
            pushFollow(FOLLOW_arguments_in_selector8406);
            arguments651=arguments();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,arguments651.getTree());
          }
        break;
    }
  }
break;
case 2:
{
root_0=(Object)adaptor.nil();
DOT652=(Token)match(input,DOT,FOLLOW_DOT_in_selector8417);
if (state.failed) return retval;
if (state.backtracking == 0) {
  DOT652_tree=(Object)adaptor.create(DOT652);
  adaptor.addChild(root_0,DOT652_tree);
}
pushFollow(FOLLOW_super_key_in_selector8419);
super_key653=super_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,super_key653.getTree());
pushFollow(FOLLOW_superSuffix_in_selector8421);
superSuffix654=superSuffix();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,superSuffix654.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT655=(Token)match(input,DOT,FOLLOW_DOT_in_selector8428);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT655_tree=(Object)adaptor.create(DOT655);
adaptor.addChild(root_0,DOT655_tree);
}
pushFollow(FOLLOW_new_key_in_selector8430);
new_key656=new_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,new_key656.getTree());
int alt199=2;
int LA199_0=input.LA(1);
if ((LA199_0 == LESS)) {
alt199=1;
}
switch (alt199) {
case 1:
{
pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector8433);
nonWildcardTypeArguments657=nonWildcardTypeArguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,nonWildcardTypeArguments657.getTree());
}
break;
}
pushFollow(FOLLOW_innerCreator_in_selector8437);
innerCreator658=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator658.getTree());
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE659=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector8444);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE659_tree=(Object)adaptor.create(LEFT_SQUARE659);
adaptor.addChild(root_0,LEFT_SQUARE659_tree);
}
pushFollow(FOLLOW_expression_in_selector8446);
expression660=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression660.getTree());
RIGHT_SQUARE661=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector8448);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE661_tree=(Object)adaptor.create(RIGHT_SQUARE661);
adaptor.addChild(root_0,RIGHT_SQUARE661_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,173,selector_StartIndex);
}
}
return retval;
}
