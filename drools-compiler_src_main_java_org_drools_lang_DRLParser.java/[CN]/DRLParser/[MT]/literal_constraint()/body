{
  literal_constraint_return retval=new literal_constraint_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING275=null;
  Token INT276=null;
  Token FLOAT277=null;
  Token BOOL278=null;
  Token NULL279=null;
  Object STRING275_tree=null;
  Object INT276_tree=null;
  Object FLOAT277_tree=null;
  Object BOOL278_tree=null;
  Object NULL279_tree=null;
  try {
    int alt91=5;
switch (input.LA(1)) {
case STRING:
{
        alt91=1;
      }
    break;
case INT:
{
    alt91=2;
  }
break;
case FLOAT:
{
alt91=3;
}
break;
case BOOL:
{
alt91=4;
}
break;
case NULL:
{
alt91=5;
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("1294:1: literal_constraint : ( STRING | INT | FLOAT | BOOL | NULL );",91,0,input);
throw nvae;
}
switch (alt91) {
case 1:
{
root_0=(Object)adaptor.nil();
STRING275=(Token)input.LT(1);
match(input,STRING,FOLLOW_STRING_in_literal_constraint4431);
if (failed) return retval;
if (backtracking == 0) {
STRING275_tree=(Object)adaptor.create(STRING275);
adaptor.addChild(root_0,STRING275_tree);
}
if (backtracking == 0) {
emit(STRING275,DroolsEditorType.STRING_CONST);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
INT276=(Token)input.LT(1);
match(input,INT,FOLLOW_INT_in_literal_constraint4438);
if (failed) return retval;
if (backtracking == 0) {
INT276_tree=(Object)adaptor.create(INT276);
adaptor.addChild(root_0,INT276_tree);
}
if (backtracking == 0) {
emit(INT276,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
FLOAT277=(Token)input.LT(1);
match(input,FLOAT,FOLLOW_FLOAT_in_literal_constraint4445);
if (failed) return retval;
if (backtracking == 0) {
FLOAT277_tree=(Object)adaptor.create(FLOAT277);
adaptor.addChild(root_0,FLOAT277_tree);
}
if (backtracking == 0) {
emit(FLOAT277,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
BOOL278=(Token)input.LT(1);
match(input,BOOL,FOLLOW_BOOL_in_literal_constraint4452);
if (failed) return retval;
if (backtracking == 0) {
BOOL278_tree=(Object)adaptor.create(BOOL278);
adaptor.addChild(root_0,BOOL278_tree);
}
if (backtracking == 0) {
emit(BOOL278,DroolsEditorType.BOOLEAN_CONST);
}
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
NULL279=(Token)input.LT(1);
match(input,NULL,FOLLOW_NULL_in_literal_constraint4459);
if (failed) return retval;
if (backtracking == 0) {
NULL279_tree=(Object)adaptor.create(NULL279);
adaptor.addChild(root_0,NULL279_tree);
}
if (backtracking == 0) {
emit(NULL279,DroolsEditorType.NULL_CONST);
}
}
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
