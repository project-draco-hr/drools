{
  DRLParser.literal_constraint_return retval=new DRLParser.literal_constraint_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING269=null;
  Token INT270=null;
  Token FLOAT271=null;
  Token BOOL272=null;
  Token NULL273=null;
  Object STRING269_tree=null;
  Object INT270_tree=null;
  Object FLOAT271_tree=null;
  Object BOOL272_tree=null;
  Object NULL273_tree=null;
  try {
    int alt94=5;
switch (input.LA(1)) {
case STRING:
{
        alt94=1;
      }
    break;
case INT:
{
    alt94=2;
  }
break;
case FLOAT:
{
alt94=3;
}
break;
case BOOL:
{
alt94=4;
}
break;
case NULL:
{
alt94=5;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",94,0,input);
throw nvae;
}
switch (alt94) {
case 1:
{
root_0=(Object)adaptor.nil();
STRING269=(Token)match(input,STRING,FOLLOW_STRING_in_literal_constraint4423);
if (state.failed) return retval;
if (state.backtracking == 0) {
STRING269_tree=(Object)adaptor.create(STRING269);
adaptor.addChild(root_0,STRING269_tree);
}
if (state.backtracking == 0) {
emit(STRING269,DroolsEditorType.STRING_CONST);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
INT270=(Token)match(input,INT,FOLLOW_INT_in_literal_constraint4430);
if (state.failed) return retval;
if (state.backtracking == 0) {
INT270_tree=(Object)adaptor.create(INT270);
adaptor.addChild(root_0,INT270_tree);
}
if (state.backtracking == 0) {
emit(INT270,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
FLOAT271=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_literal_constraint4437);
if (state.failed) return retval;
if (state.backtracking == 0) {
FLOAT271_tree=(Object)adaptor.create(FLOAT271);
adaptor.addChild(root_0,FLOAT271_tree);
}
if (state.backtracking == 0) {
emit(FLOAT271,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
BOOL272=(Token)match(input,BOOL,FOLLOW_BOOL_in_literal_constraint4444);
if (state.failed) return retval;
if (state.backtracking == 0) {
BOOL272_tree=(Object)adaptor.create(BOOL272);
adaptor.addChild(root_0,BOOL272_tree);
}
if (state.backtracking == 0) {
emit(BOOL272,DroolsEditorType.BOOLEAN_CONST);
}
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
NULL273=(Token)match(input,NULL,FOLLOW_NULL_in_literal_constraint4451);
if (state.failed) return retval;
if (state.backtracking == 0) {
NULL273_tree=(Object)adaptor.create(NULL273);
adaptor.addChild(root_0,NULL273_tree);
}
if (state.backtracking == 0) {
emit(NULL273,DroolsEditorType.NULL_CONST);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
