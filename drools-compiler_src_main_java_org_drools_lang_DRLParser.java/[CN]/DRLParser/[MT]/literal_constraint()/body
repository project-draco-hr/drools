{
  DRLParser.literal_constraint_return retval=new DRLParser.literal_constraint_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING272=null;
  Token INT273=null;
  Token FLOAT274=null;
  Token BOOL275=null;
  Token NULL276=null;
  Object STRING272_tree=null;
  Object INT273_tree=null;
  Object FLOAT274_tree=null;
  Object BOOL275_tree=null;
  Object NULL276_tree=null;
  try {
    int alt97=5;
switch (input.LA(1)) {
case STRING:
{
        alt97=1;
      }
    break;
case INT:
{
    alt97=2;
  }
break;
case FLOAT:
{
alt97=3;
}
break;
case BOOL:
{
alt97=4;
}
break;
case NULL:
{
alt97=5;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",97,0,input);
throw nvae;
}
switch (alt97) {
case 1:
{
root_0=(Object)adaptor.nil();
STRING272=(Token)match(input,STRING,FOLLOW_STRING_in_literal_constraint4509);
if (state.failed) return retval;
if (state.backtracking == 0) {
STRING272_tree=(Object)adaptor.create(STRING272);
adaptor.addChild(root_0,STRING272_tree);
}
if (state.backtracking == 0) {
emit(STRING272,DroolsEditorType.STRING_CONST);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
INT273=(Token)match(input,INT,FOLLOW_INT_in_literal_constraint4516);
if (state.failed) return retval;
if (state.backtracking == 0) {
INT273_tree=(Object)adaptor.create(INT273);
adaptor.addChild(root_0,INT273_tree);
}
if (state.backtracking == 0) {
emit(INT273,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
FLOAT274=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_literal_constraint4523);
if (state.failed) return retval;
if (state.backtracking == 0) {
FLOAT274_tree=(Object)adaptor.create(FLOAT274);
adaptor.addChild(root_0,FLOAT274_tree);
}
if (state.backtracking == 0) {
emit(FLOAT274,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
BOOL275=(Token)match(input,BOOL,FOLLOW_BOOL_in_literal_constraint4530);
if (state.failed) return retval;
if (state.backtracking == 0) {
BOOL275_tree=(Object)adaptor.create(BOOL275);
adaptor.addChild(root_0,BOOL275_tree);
}
if (state.backtracking == 0) {
emit(BOOL275,DroolsEditorType.BOOLEAN_CONST);
}
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
NULL276=(Token)match(input,NULL,FOLLOW_NULL_in_literal_constraint4537);
if (state.failed) return retval;
if (state.backtracking == 0) {
NULL276_tree=(Object)adaptor.create(NULL276);
adaptor.addChild(root_0,NULL276_tree);
}
if (state.backtracking == 0) {
emit(NULL276,DroolsEditorType.NULL_CONST);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
