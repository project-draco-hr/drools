{
  DRLParser.literal_constraint_return retval=new DRLParser.literal_constraint_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING268=null;
  Token INT269=null;
  Token FLOAT270=null;
  Token BOOL271=null;
  Token NULL272=null;
  Object STRING268_tree=null;
  Object INT269_tree=null;
  Object FLOAT270_tree=null;
  Object BOOL271_tree=null;
  Object NULL272_tree=null;
  try {
    int alt93=5;
switch (input.LA(1)) {
case STRING:
{
        alt93=1;
      }
    break;
case INT:
{
    alt93=2;
  }
break;
case FLOAT:
{
alt93=3;
}
break;
case BOOL:
{
alt93=4;
}
break;
case NULL:
{
alt93=5;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",93,0,input);
throw nvae;
}
switch (alt93) {
case 1:
{
root_0=(Object)adaptor.nil();
STRING268=(Token)match(input,STRING,FOLLOW_STRING_in_literal_constraint4400);
if (state.failed) return retval;
if (state.backtracking == 0) {
STRING268_tree=(Object)adaptor.create(STRING268);
adaptor.addChild(root_0,STRING268_tree);
}
if (state.backtracking == 0) {
emit(STRING268,DroolsEditorType.STRING_CONST);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
INT269=(Token)match(input,INT,FOLLOW_INT_in_literal_constraint4407);
if (state.failed) return retval;
if (state.backtracking == 0) {
INT269_tree=(Object)adaptor.create(INT269);
adaptor.addChild(root_0,INT269_tree);
}
if (state.backtracking == 0) {
emit(INT269,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
FLOAT270=(Token)match(input,FLOAT,FOLLOW_FLOAT_in_literal_constraint4414);
if (state.failed) return retval;
if (state.backtracking == 0) {
FLOAT270_tree=(Object)adaptor.create(FLOAT270);
adaptor.addChild(root_0,FLOAT270_tree);
}
if (state.backtracking == 0) {
emit(FLOAT270,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
BOOL271=(Token)match(input,BOOL,FOLLOW_BOOL_in_literal_constraint4421);
if (state.failed) return retval;
if (state.backtracking == 0) {
BOOL271_tree=(Object)adaptor.create(BOOL271);
adaptor.addChild(root_0,BOOL271_tree);
}
if (state.backtracking == 0) {
emit(BOOL271,DroolsEditorType.BOOLEAN_CONST);
}
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
NULL272=(Token)match(input,NULL,FOLLOW_NULL_in_literal_constraint4428);
if (state.failed) return retval;
if (state.backtracking == 0) {
NULL272_tree=(Object)adaptor.create(NULL272);
adaptor.addChild(root_0,NULL272_tree);
}
if (state.backtracking == 0) {
emit(NULL272,DroolsEditorType.NULL_CONST);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
