{
  literal_constraint_return retval=new literal_constraint_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING277=null;
  Token INT278=null;
  Token FLOAT279=null;
  Token BOOL280=null;
  Token NULL281=null;
  Object STRING277_tree=null;
  Object INT278_tree=null;
  Object FLOAT279_tree=null;
  Object BOOL280_tree=null;
  Object NULL281_tree=null;
  try {
    int alt92=5;
switch (input.LA(1)) {
case STRING:
{
        alt92=1;
      }
    break;
case INT:
{
    alt92=2;
  }
break;
case FLOAT:
{
alt92=3;
}
break;
case BOOL:
{
alt92=4;
}
break;
case NULL:
{
alt92=5;
}
break;
default :
if (backtracking > 0) {
failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("1295:1: literal_constraint : ( STRING | INT | FLOAT | BOOL | NULL );",92,0,input);
throw nvae;
}
switch (alt92) {
case 1:
{
root_0=(Object)adaptor.nil();
STRING277=(Token)input.LT(1);
match(input,STRING,FOLLOW_STRING_in_literal_constraint4449);
if (failed) return retval;
if (backtracking == 0) {
STRING277_tree=(Object)adaptor.create(STRING277);
adaptor.addChild(root_0,STRING277_tree);
}
if (backtracking == 0) {
emit(STRING277,DroolsEditorType.STRING_CONST);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
INT278=(Token)input.LT(1);
match(input,INT,FOLLOW_INT_in_literal_constraint4456);
if (failed) return retval;
if (backtracking == 0) {
INT278_tree=(Object)adaptor.create(INT278);
adaptor.addChild(root_0,INT278_tree);
}
if (backtracking == 0) {
emit(INT278,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
FLOAT279=(Token)input.LT(1);
match(input,FLOAT,FOLLOW_FLOAT_in_literal_constraint4463);
if (failed) return retval;
if (backtracking == 0) {
FLOAT279_tree=(Object)adaptor.create(FLOAT279);
adaptor.addChild(root_0,FLOAT279_tree);
}
if (backtracking == 0) {
emit(FLOAT279,DroolsEditorType.NUMERIC_CONST);
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
BOOL280=(Token)input.LT(1);
match(input,BOOL,FOLLOW_BOOL_in_literal_constraint4470);
if (failed) return retval;
if (backtracking == 0) {
BOOL280_tree=(Object)adaptor.create(BOOL280);
adaptor.addChild(root_0,BOOL280_tree);
}
if (backtracking == 0) {
emit(BOOL280,DroolsEditorType.BOOLEAN_CONST);
}
}
break;
case 5:
{
root_0=(Object)adaptor.nil();
NULL281=(Token)input.LT(1);
match(input,NULL,FOLLOW_NULL_in_literal_constraint4477);
if (failed) return retval;
if (backtracking == 0) {
NULL281_tree=(Object)adaptor.create(NULL281);
adaptor.addChild(root_0,NULL281_tree);
}
if (backtracking == 0) {
emit(NULL281,DroolsEditorType.NULL_CONST);
}
}
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
