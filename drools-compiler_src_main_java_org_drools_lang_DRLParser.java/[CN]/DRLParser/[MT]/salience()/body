{
  salience_return retval=new salience_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token INT101=null;
  salience_key_return salience_key100=null;
  paren_chunk_return paren_chunk102=null;
  Object INT101_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_salience_key_in_salience1638);
      salience_key100=salience_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(salience_key100.getTree(),root_0);
      int alt36=2;
      int LA36_0=input.LA(1);
      if ((LA36_0 == INT)) {
        alt36=1;
      }
 else       if ((LA36_0 == LEFT_PAREN)) {
        alt36=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("469:3: ( INT | paren_chunk )",36,0,input);
        throw nvae;
      }
switch (alt36) {
case 1:
{
          INT101=(Token)input.LT(1);
          match(input,INT,FOLLOW_INT_in_salience1645);
          if (failed)           return retval;
          if (backtracking == 0) {
            INT101_tree=(Object)adaptor.create(INT101);
            adaptor.addChild(root_0,INT101_tree);
          }
        }
      break;
case 2:
{
      pushFollow(FOLLOW_paren_chunk_in_salience1654);
      paren_chunk102=paren_chunk();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,paren_chunk102.getTree());
    }
  break;
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
