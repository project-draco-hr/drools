{
{
    pushFollow(FOLLOW_try_key_in_synpred22_DRL6389);
    try_key();
    state._fsp--;
    if (state.failed)     return;
    pushFollow(FOLLOW_block_in_synpred22_DRL6391);
    block();
    state._fsp--;
    if (state.failed)     return;
    int alt273=3;
    int LA273_0=input.LA(1);
    if ((LA273_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.FINALLY))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.CATCH)))))) {
      int LA273_1=input.LA(2);
      if ((((helper.validateIdentifierKey(DroolsSoftKeywords.CATCH))))) {
        alt273=1;
      }
 else       if ((((helper.validateIdentifierKey(DroolsSoftKeywords.CATCH))))) {
        alt273=2;
      }
 else       if ((((helper.validateIdentifierKey(DroolsSoftKeywords.FINALLY))))) {
        alt273=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",273,1,input);
        throw nvae;
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",273,0,input);
      throw nvae;
    }
switch (alt273) {
case 1:
{
        pushFollow(FOLLOW_catches_in_synpred22_DRL6401);
        catches();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_finally_key_in_synpred22_DRL6403);
        finally_key();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_block_in_synpred22_DRL6405);
        block();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_catches_in_synpred22_DRL6415);
    catches();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 3:
{
pushFollow(FOLLOW_finally_key_in_synpred22_DRL6425);
finally_key();
state._fsp--;
if (state.failed) return;
pushFollow(FOLLOW_block_in_synpred22_DRL6427);
block();
state._fsp--;
if (state.failed) return;
}
break;
}
}
}
