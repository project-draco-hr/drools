{
  Token t=null;
  RestrictionConnectiveDescr and=new RestrictionConnectiveDescr(RestrictionConnectiveDescr.AND);
  try {
{
      pushFollow(FOLLOW_constraint_expression_in_and_restr_connective3590);
      constraint_expression(and);
      _fsp--;
      if (failed)       return;
      loop64:       do {
        int alt64=2;
        alt64=dfa64.predict(input);
switch (alt64) {
case 1:
{
            t=(Token)input.LT(1);
            match(input,DOUBLE_AMPER,FOLLOW_DOUBLE_AMPER_in_and_restr_connective3611);
            if (failed)             return;
            if (backtracking == 0) {
              location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_OPERATOR);
            }
            pushFollow(FOLLOW_constraint_expression_in_and_restr_connective3622);
            constraint_expression(and);
            _fsp--;
            if (failed)             return;
          }
        break;
default :
      break loop64;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (and.getRestrictions().size() == 1) {
base.addOrMerge((RestrictionDescr)and.getRestrictions().get(0));
}
 else if (and.getRestrictions().size() > 1) {
base.addRestriction(and);
}
}
return;
}
