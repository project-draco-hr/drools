{
  DRLParser.defaultValue_return retval=new DRLParser.defaultValue_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.default_key_return default_key900=null;
  DRLParser.elementValue_return elementValue901=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_default_key_in_defaultValue10343);
      default_key900=default_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,default_key900.getTree());
      pushFollow(FOLLOW_elementValue_in_defaultValue10345);
      elementValue901=elementValue();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,elementValue901.getTree());
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
