{
  Token loc=null;
  Token THEN52=null;
  try {
{
      THEN52=(Token)input.LT(1);
      match(input,THEN,FOLLOW_THEN_in_rhs_chunk4365);
      if (failed)       return;
      if (backtracking == 0) {
        location.setType(Location.LOCATION_RHS);
      }
      loop84:       do {
        int alt84=2;
        int LA84_0=input.LA(1);
        if (((LA84_0 >= ATTRIBUTES && LA84_0 <= QUERY) || (LA84_0 >= TEMPLATE && LA84_0 <= 80))) {
          alt84=1;
        }
switch (alt84) {
case 1:
{
            if ((input.LA(1) >= ATTRIBUTES && input.LA(1) <= QUERY) || (input.LA(1) >= TEMPLATE && input.LA(1) <= 80)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_rhs_chunk4373);
              throw mse;
            }
          }
        break;
default :
      break loop84;
  }
}
 while (true);
loc=(Token)input.LT(1);
match(input,END,FOLLOW_END_in_rhs_chunk4397);
if (failed) return;
pushFollow(FOLLOW_opt_semicolon_in_rhs_chunk4399);
opt_semicolon();
_fsp--;
if (failed) return;
if (backtracking == 0) {
  String buf=input.toString(THEN52,loc);
  buf=buf.substring(0,buf.length() - 3);
  if (buf.indexOf('\n') > -1) {
    buf=buf.substring(buf.indexOf('\n') + 1);
  }
 else   if (buf.indexOf('\r') > -1) {
    buf=buf.substring(buf.indexOf('\r') + 1);
  }
  rule.setConsequence(buf);
  rule.setConsequenceLocation(offset(THEN52.getLine()),THEN52.getCharPositionInLine());
  rule.setEndCharacter(((CommonToken)loc).getStopIndex());
  location.setProperty(Location.LOCATION_RHS_CONTENT,rule.getConsequence());
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
