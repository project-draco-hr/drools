{
  DRLParser.classCreatorRest_return retval=new DRLParser.classCreatorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.arguments_return arguments623=null;
  DRLParser.classBody_return classBody624=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_arguments_in_classCreatorRest8206);
      arguments623=arguments();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,arguments623.getTree());
      int alt194=2;
      int LA194_0=input.LA(1);
      if ((LA194_0 == LEFT_CURLY)) {
        alt194=1;
      }
switch (alt194) {
case 1:
{
          pushFollow(FOLLOW_classBody_in_classCreatorRest8208);
          classBody624=classBody();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,classBody624.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
