{
  DRLParser.normalClassDeclaration_return retval=new DRLParser.normalClassDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID690=null;
  DRLParser.class_key_return class_key689=null;
  DRLParser.typeParameters_return typeParameters691=null;
  DRLParser.extends_key_return extends_key692=null;
  DRLParser.type_return type693=null;
  DRLParser.implements_key_return implements_key694=null;
  DRLParser.typeList_return typeList695=null;
  DRLParser.classBody_return classBody696=null;
  Object ID690_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_class_key_in_normalClassDeclaration8772);
      class_key689=class_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,class_key689.getTree());
      ID690=(Token)match(input,ID,FOLLOW_ID_in_normalClassDeclaration8774);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID690_tree=(Object)adaptor.create(ID690);
        adaptor.addChild(root_0,ID690_tree);
      }
      int alt207=2;
      int LA207_0=input.LA(1);
      if ((LA207_0 == LESS)) {
        alt207=1;
      }
switch (alt207) {
case 1:
{
          pushFollow(FOLLOW_typeParameters_in_normalClassDeclaration8777);
          typeParameters691=typeParameters();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,typeParameters691.getTree());
        }
      break;
  }
  int alt208=2;
  int LA208_0=input.LA(1);
  if ((LA208_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
    int LA208_1=input.LA(2);
    if ((LA208_1 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
      int LA208_3=input.LA(3);
      if ((((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS))))) {
        alt208=1;
      }
    }
  }
switch (alt208) {
case 1:
{
      pushFollow(FOLLOW_extends_key_in_normalClassDeclaration8790);
      extends_key692=extends_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,extends_key692.getTree());
      pushFollow(FOLLOW_type_in_normalClassDeclaration8792);
      type693=type();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,type693.getTree());
    }
  break;
}
int alt209=2;
int LA209_0=input.LA(1);
if ((LA209_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))))) {
alt209=1;
}
switch (alt209) {
case 1:
{
  pushFollow(FOLLOW_implements_key_in_normalClassDeclaration8805);
  implements_key694=implements_key();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,implements_key694.getTree());
  pushFollow(FOLLOW_typeList_in_normalClassDeclaration8807);
  typeList695=typeList();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,typeList695.getTree());
}
break;
}
pushFollow(FOLLOW_classBody_in_normalClassDeclaration8819);
classBody696=classBody();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,classBody696.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
