{
  DRLParser.normalClassDeclaration_return retval=new DRLParser.normalClassDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID675=null;
  DRLParser.class_key_return class_key674=null;
  DRLParser.typeParameters_return typeParameters676=null;
  DRLParser.extends_key_return extends_key677=null;
  DRLParser.type_return type678=null;
  DRLParser.implements_key_return implements_key679=null;
  DRLParser.typeList_return typeList680=null;
  DRLParser.classBody_return classBody681=null;
  Object ID675_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_class_key_in_normalClassDeclaration8669);
      class_key674=class_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,class_key674.getTree());
      ID675=(Token)match(input,ID,FOLLOW_ID_in_normalClassDeclaration8671);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID675_tree=(Object)adaptor.create(ID675);
        adaptor.addChild(root_0,ID675_tree);
      }
      int alt205=2;
      int LA205_0=input.LA(1);
      if ((LA205_0 == LESS)) {
        alt205=1;
      }
switch (alt205) {
case 1:
{
          pushFollow(FOLLOW_typeParameters_in_normalClassDeclaration8674);
          typeParameters676=typeParameters();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,typeParameters676.getTree());
        }
      break;
  }
  int alt206=2;
  int LA206_0=input.LA(1);
  if ((LA206_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
    int LA206_1=input.LA(2);
    if ((LA206_1 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
      int LA206_3=input.LA(3);
      if ((((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS))))) {
        alt206=1;
      }
    }
  }
switch (alt206) {
case 1:
{
      pushFollow(FOLLOW_extends_key_in_normalClassDeclaration8687);
      extends_key677=extends_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,extends_key677.getTree());
      pushFollow(FOLLOW_type_in_normalClassDeclaration8689);
      type678=type();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,type678.getTree());
    }
  break;
}
int alt207=2;
int LA207_0=input.LA(1);
if ((LA207_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.IMPLEMENTS))))) {
alt207=1;
}
switch (alt207) {
case 1:
{
  pushFollow(FOLLOW_implements_key_in_normalClassDeclaration8702);
  implements_key679=implements_key();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,implements_key679.getTree());
  pushFollow(FOLLOW_typeList_in_normalClassDeclaration8704);
  typeList680=typeList();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,typeList680.getTree());
}
break;
}
pushFollow(FOLLOW_classBody_in_normalClassDeclaration8716);
classBody681=classBody();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,classBody681.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
