{
  String typeArgument="";
  try {
    int first=input.index(), last=first;
    int next=input.LA(1);
switch (next) {
case DRLLexer.QUESTION:
      match(input,DRLLexer.QUESTION,null,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return typeArgument;
  if (helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)) {
    match(input,DRLLexer.ID,DroolsSoftKeywords.EXTENDS,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return typeArgument;
    type();
    if (state.failed)     return typeArgument;
  }
 else   if (helper.validateIdentifierKey(DroolsSoftKeywords.SUPER)) {
    match(input,DRLLexer.ID,DroolsSoftKeywords.SUPER,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return typeArgument;
    type();
    if (state.failed)     return typeArgument;
  }
break;
case DRLLexer.ID:
type();
if (state.failed) return typeArgument;
break;
default :
}
last=input.LT(-1).getTokenIndex();
typeArgument=input.toString(first,last);
}
 catch (RecognitionException re) {
reportError(re);
}
return typeArgument;
}
