{
  BaseDescr pd=null;
  BaseDescr fe=null;
  BaseDescr f=null;
  pd=null;
  boolean multi=false;
  try {
    int alt36=2;
    int LA36_0=input.LA(1);
    if ((LA36_0 == LEFT_PAREN)) {
      alt36=1;
    }
 else     if ((LA36_0 == ID)) {
      alt36=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("890:2: fact_expression_in_paren[String id] returns [BaseDescr pd] : ( '(' fe= fact_expression_in_paren[id] ')' | f= fact ( ('or'|'||')f= fact )* );",36,0,input);
      throw nvae;
    }
switch (alt36) {
case 1:
{
        match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_fact_expression_in_paren2167);
        pushFollow(FOLLOW_fact_expression_in_paren_in_fact_expression_in_paren2171);
        fe=fact_expression_in_paren(id);
        _fsp--;
        match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_fact_expression_in_paren2173);
        pd=fe;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_fact_in_fact_expression_in_paren2184);
    f=fact();
    _fsp--;
    ((ColumnDescr)f).setIdentifier(id);
    pd=f;
    loop35:     do {
      int alt35=2;
      int LA35_0=input.LA(1);
      if (((LA35_0 >= 57 && LA35_0 <= 58))) {
        alt35=1;
      }
switch (alt35) {
case 1:
{
          if ((input.LA(1) >= 57 && input.LA(1) <= 58)) {
            input.consume();
            errorRecovery=false;
          }
 else {
            MismatchedSetException mse=new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FOLLOW_set_in_fact_expression_in_paren2197);
            throw mse;
          }
          if (!multi) {
            BaseDescr first=pd;
            pd=new OrDescr();
            ((OrDescr)pd).addDescr(first);
            multi=true;
          }
          pushFollow(FOLLOW_fact_in_fact_expression_in_paren2214);
          f=fact();
          _fsp--;
          ((ColumnDescr)f).setIdentifier(id);
          ((OrDescr)pd).addDescr(f);
        }
      break;
default :
    break loop35;
}
}
 while (true);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return pd;
}
