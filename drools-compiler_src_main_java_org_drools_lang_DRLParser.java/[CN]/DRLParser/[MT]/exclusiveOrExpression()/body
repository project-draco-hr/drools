{
  DRLParser.exclusiveOrExpression_return retval=new DRLParser.exclusiveOrExpression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token XOR372=null;
  DRLParser.andExpression_return andExpression371=null;
  DRLParser.andExpression_return andExpression373=null;
  Object XOR372_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression6251);
      andExpression371=andExpression();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,andExpression371.getTree());
      loop126:       do {
        int alt126=2;
        int LA126_0=input.LA(1);
        if ((LA126_0 == XOR)) {
          alt126=1;
        }
switch (alt126) {
case 1:
{
            XOR372=(Token)match(input,XOR,FOLLOW_XOR_in_exclusiveOrExpression6255);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              XOR372_tree=(Object)adaptor.create(XOR372);
              adaptor.addChild(root_0,XOR372_tree);
            }
            pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression6257);
            andExpression373=andExpression();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,andExpression373.getTree());
          }
        break;
default :
      break loop126;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
