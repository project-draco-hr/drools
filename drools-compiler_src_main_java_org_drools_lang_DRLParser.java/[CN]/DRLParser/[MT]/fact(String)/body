{
  BaseDescr d=null;
  Token LEFT_PAREN49=null;
  Token RIGHT_PAREN50=null;
  qualified_id_return id=null;
  d=null;
  PatternDescr pattern=null;
  try {
{
      if (backtracking == 0) {
        pattern=new PatternDescr();
        if (ident != null) {
          pattern.setIdentifier(ident);
        }
        d=pattern;
      }
      pushFollow(FOLLOW_qualified_id_in_fact3150);
      id=qualified_id();
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        if (id != null) {
          pattern.setObjectType(input.toString(id.start,id.stop));
          pattern.setEndCharacter(-1);
          pattern.setStartCharacter(((CommonToken)((Token)id.start)).getStartIndex());
        }
      }
      LEFT_PAREN49=(Token)input.LT(1);
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_fact3160);
      if (failed)       return d;
      if (backtracking == 0) {
        location.setType(Location.LOCATION_LHS_INSIDE_CONDITION_START);
        location.setProperty(Location.LOCATION_PROPERTY_CLASS_NAME,input.toString(id.start,id.stop));
        pattern.setLocation(offset(LEFT_PAREN49.getLine()),LEFT_PAREN49.getCharPositionInLine());
        pattern.setLeftParentCharacter(((CommonToken)LEFT_PAREN49).getStartIndex());
      }
      int alt58=2;
      int LA58_0=input.LA(1);
      if (((LA58_0 >= ATTRIBUTES && LA58_0 <= ID) || (LA58_0 >= GLOBAL && LA58_0 <= LEFT_PAREN) || (LA58_0 >= QUERY && LA58_0 <= WHEN)|| LA58_0 == ENABLED || LA58_0 == SALIENCE || LA58_0 == DURATION || LA58_0 == FROM || LA58_0 == EVAL || (LA58_0 >= INIT && LA58_0 <= RESULT) || (LA58_0 >= CONTAINS && LA58_0 <= IN) || LA58_0 == THEN)) {
        alt58=1;
      }
switch (alt58) {
case 1:
{
          pushFollow(FOLLOW_constraints_in_fact3174);
          constraints(pattern);
          _fsp--;
          if (failed)           return d;
        }
      break;
  }
  RIGHT_PAREN50=(Token)input.LT(1);
  match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_fact3185);
  if (failed)   return d;
  if (backtracking == 0) {
    this.location.setType(Location.LOCATION_LHS_BEGIN_OF_CONDITION);
    pattern.setEndLocation(offset(RIGHT_PAREN50.getLine()),RIGHT_PAREN50.getCharPositionInLine());
    pattern.setEndCharacter(((CommonToken)RIGHT_PAREN50).getStopIndex());
    pattern.setRightParentCharacter(((CommonToken)RIGHT_PAREN50).getStartIndex());
  }
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
