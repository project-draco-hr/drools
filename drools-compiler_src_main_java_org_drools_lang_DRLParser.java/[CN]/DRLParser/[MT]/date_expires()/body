{
  date_expires_return retval=new date_expires_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING98=null;
  date_expires_key_return date_expires_key97=null;
  Object STRING98_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_date_expires_key_in_date_expires1791);
      date_expires_key97=date_expires_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(date_expires_key97.getTree(),root_0);
      if (backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      STRING98=(Token)input.LT(1);
      match(input,STRING,FOLLOW_STRING_in_date_expires1796);
      if (failed)       return retval;
      if (backtracking == 0) {
        STRING98_tree=(Object)adaptor.create(STRING98);
        adaptor.addChild(root_0,STRING98_tree);
      }
      if (backtracking == 0) {
        emit(STRING98,DroolsEditorType.STRING_CONST);
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
