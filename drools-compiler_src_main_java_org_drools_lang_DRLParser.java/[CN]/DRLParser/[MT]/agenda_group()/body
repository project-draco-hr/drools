{
  agenda_group_return retval=new agenda_group_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING114=null;
  agenda_group_key_return agenda_group_key113=null;
  Object STRING114_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_agenda_group_key_in_agenda_group1968);
      agenda_group_key113=agenda_group_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(agenda_group_key113.getTree(),root_0);
      if (backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      STRING114=(Token)input.LT(1);
      match(input,STRING,FOLLOW_STRING_in_agenda_group1973);
      if (failed)       return retval;
      if (backtracking == 0) {
        STRING114_tree=(Object)adaptor.create(STRING114);
        adaptor.addChild(root_0,STRING114_tree);
      }
      if (backtracking == 0) {
        emit(STRING114,DroolsEditorType.STRING_CONST);
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
