{
  DRLParser.param_definition_return retval=new DRLParser.param_definition_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.data_type_return data_type349=null;
  DRLParser.argument_return argument350=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt118=2;
      alt118=dfa118.predict(input);
switch (alt118) {
case 1:
{
          pushFollow(FOLLOW_data_type_in_param_definition5996);
          data_type349=data_type();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,data_type349.getTree());
        }
      break;
  }
  pushFollow(FOLLOW_argument_in_param_definition5999);
  argument350=argument();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,argument350.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
