{
  rhs_chunk_data_return retval=new rhs_chunk_data_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token THEN299=null;
  Token set300=null;
  Token END301=null;
  Token SEMICOLON302=null;
  Object THEN299_tree=null;
  Object set300_tree=null;
  Object END301_tree=null;
  Object SEMICOLON302_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      THEN299=(Token)input.LT(1);
      match(input,THEN,FOLLOW_THEN_in_rhs_chunk_data3854);
      if (failed)       return retval;
      if (backtracking == 0) {
        THEN299_tree=(Object)adaptor.create(THEN299);
        adaptor.addChild(root_0,THEN299_tree);
      }
      loop96:       do {
        int alt96=2;
        int LA96_0=input.LA(1);
        if (((LA96_0 >= VT_COMPILATION_UNIT && LA96_0 <= DOT_STAR) || (LA96_0 >= STRING && LA96_0 <= MULTI_LINE_COMMENT))) {
          alt96=1;
        }
switch (alt96) {
case 1:
{
            set300=(Token)input.LT(1);
            if ((input.LA(1) >= VT_COMPILATION_UNIT && input.LA(1) <= DOT_STAR) || (input.LA(1) >= STRING && input.LA(1) <= MULTI_LINE_COMMENT)) {
              input.consume();
              if (backtracking == 0)               adaptor.addChild(root_0,adaptor.create(set300));
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_rhs_chunk_data3858);
              throw mse;
            }
          }
        break;
default :
      break loop96;
  }
}
 while (true);
END301=(Token)input.LT(1);
match(input,END,FOLLOW_END_in_rhs_chunk_data3864);
if (failed) return retval;
if (backtracking == 0) {
  END301_tree=(Object)adaptor.create(END301);
  adaptor.addChild(root_0,END301_tree);
}
int alt97=2;
int LA97_0=input.LA(1);
if ((LA97_0 == SEMICOLON)) {
  alt97=1;
}
switch (alt97) {
case 1:
{
    SEMICOLON302=(Token)input.LT(1);
    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_rhs_chunk_data3866);
    if (failed)     return retval;
    if (backtracking == 0) {
      SEMICOLON302_tree=(Object)adaptor.create(SEMICOLON302);
      adaptor.addChild(root_0,SEMICOLON302_tree);
    }
  }
break;
}
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
