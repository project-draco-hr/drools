{
  DRLParser.rhs_chunk_data_return retval=new DRLParser.rhs_chunk_data_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token THEN282=null;
  Token SEMICOLON285=null;
  DRLParser.not_end_key_return not_end_key283=null;
  DRLParser.end_key_return end_key284=null;
  Object THEN282_tree=null;
  Object SEMICOLON285_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      THEN282=(Token)match(input,THEN,FOLLOW_THEN_in_rhs_chunk_data4685);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        THEN282_tree=(Object)adaptor.create(THEN282);
        adaptor.addChild(root_0,THEN282_tree);
      }
      if (state.backtracking == 0) {
        if ((THEN282 != null ? THEN282.getText() : null).equalsIgnoreCase("then")) {
          emit(THEN282,DroolsEditorType.KEYWORD);
          emit(Location.LOCATION_RHS);
        }
      }
      loop103:       do {
        int alt103=2;
        int LA103_0=input.LA(1);
        if ((LA103_0 == ID) && (((!(validateIdentifierKey(DroolsSoftKeywords.END))) || ((validateIdentifierKey(DroolsSoftKeywords.END)))))) {
          int LA103_1=input.LA(2);
          if (((!(validateIdentifierKey(DroolsSoftKeywords.END))))) {
            alt103=1;
          }
        }
 else         if (((LA103_0 >= VT_COMPILATION_UNIT && LA103_0 <= SEMICOLON) || (LA103_0 >= DOT && LA103_0 <= IdentifierPart)) && ((!(validateIdentifierKey(DroolsSoftKeywords.END))))) {
          alt103=1;
        }
switch (alt103) {
case 1:
{
            pushFollow(FOLLOW_not_end_key_in_rhs_chunk_data4694);
            not_end_key283=not_end_key();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,not_end_key283.getTree());
          }
        break;
default :
      break loop103;
  }
}
 while (true);
pushFollow(FOLLOW_end_key_in_rhs_chunk_data4700);
end_key284=end_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,end_key284.getTree());
int alt104=2;
int LA104_0=input.LA(1);
if ((LA104_0 == SEMICOLON)) {
  alt104=1;
}
switch (alt104) {
case 1:
{
    SEMICOLON285=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_rhs_chunk_data4705);
    if (state.failed)     return retval;
    if (state.backtracking == 0) {
      SEMICOLON285_tree=(Object)adaptor.create(SEMICOLON285);
      adaptor.addChild(root_0,SEMICOLON285_tree);
    }
  }
break;
}
if (state.backtracking == 0) {
emit(SEMICOLON285,DroolsEditorType.KEYWORD);
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
