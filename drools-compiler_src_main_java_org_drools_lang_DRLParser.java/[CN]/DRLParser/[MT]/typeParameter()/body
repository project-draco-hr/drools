{
  DRLParser.typeParameter_return retval=new DRLParser.typeParameter_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID776=null;
  DRLParser.extends_key_return extends_key777=null;
  DRLParser.bound_return bound778=null;
  Object ID776_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      ID776=(Token)match(input,ID,FOLLOW_ID_in_typeParameter9419);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID776_tree=(Object)adaptor.create(ID776);
        adaptor.addChild(root_0,ID776_tree);
      }
      int alt229=2;
      int LA229_0=input.LA(1);
      if ((LA229_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS))))) {
        alt229=1;
      }
switch (alt229) {
case 1:
{
          pushFollow(FOLLOW_extends_key_in_typeParameter9422);
          extends_key777=extends_key();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,extends_key777.getTree());
          pushFollow(FOLLOW_bound_in_typeParameter9424);
          bound778=bound();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,bound778.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
