{
  DRLParser.typeParameter_return retval=new DRLParser.typeParameter_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token ID761=null;
  DRLParser.extends_key_return extends_key762=null;
  DRLParser.bound_return bound763=null;
  Object ID761_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      ID761=(Token)match(input,ID,FOLLOW_ID_in_typeParameter9316);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        ID761_tree=(Object)adaptor.create(ID761);
        adaptor.addChild(root_0,ID761_tree);
      }
      int alt227=2;
      int LA227_0=input.LA(1);
      if ((LA227_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS))))) {
        alt227=1;
      }
switch (alt227) {
case 1:
{
          pushFollow(FOLLOW_extends_key_in_typeParameter9319);
          extends_key762=extends_key();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,extends_key762.getTree());
          pushFollow(FOLLOW_bound_in_typeParameter9321);
          bound763=bound();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,bound763.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
