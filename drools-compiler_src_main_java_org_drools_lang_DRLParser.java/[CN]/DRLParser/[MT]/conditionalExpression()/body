{
  DRLParser.conditionalExpression_return retval=new DRLParser.conditionalExpression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token QUESTION328=null;
  Token COLON330=null;
  DRLParser.conditionalOrExpression_return conditionalOrExpression327=null;
  DRLParser.expression_return expression329=null;
  DRLParser.expression_return expression331=null;
  Object QUESTION328_tree=null;
  Object COLON330_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_conditionalOrExpression_in_conditionalExpression5629);
      conditionalOrExpression327=conditionalOrExpression();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,conditionalOrExpression327.getTree());
      int alt115=2;
      int LA115_0=input.LA(1);
      if ((LA115_0 == QUESTION)) {
        alt115=1;
      }
switch (alt115) {
case 1:
{
          QUESTION328=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_conditionalExpression5633);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            QUESTION328_tree=(Object)adaptor.create(QUESTION328);
            adaptor.addChild(root_0,QUESTION328_tree);
          }
          pushFollow(FOLLOW_expression_in_conditionalExpression5635);
          expression329=expression();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,expression329.getTree());
          COLON330=(Token)match(input,COLON,FOLLOW_COLON_in_conditionalExpression5637);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            COLON330_tree=(Object)adaptor.create(COLON330);
            adaptor.addChild(root_0,COLON330_tree);
          }
          pushFollow(FOLLOW_expression_in_conditionalExpression5639);
          expression331=expression();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,expression331.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
