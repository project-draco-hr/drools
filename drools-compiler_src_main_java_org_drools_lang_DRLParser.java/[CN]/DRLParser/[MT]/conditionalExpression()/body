{
  DRLParser.conditionalExpression_return retval=new DRLParser.conditionalExpression_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token QUESTION358=null;
  Token COLON360=null;
  DRLParser.conditionalOrExpression_return conditionalOrExpression357=null;
  DRLParser.expression_return expression359=null;
  DRLParser.expression_return expression361=null;
  Object QUESTION358_tree=null;
  Object COLON360_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_conditionalOrExpression_in_conditionalExpression6148);
      conditionalOrExpression357=conditionalOrExpression();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,conditionalOrExpression357.getTree());
      int alt122=2;
      int LA122_0=input.LA(1);
      if ((LA122_0 == QUESTION)) {
        alt122=1;
      }
switch (alt122) {
case 1:
{
          QUESTION358=(Token)match(input,QUESTION,FOLLOW_QUESTION_in_conditionalExpression6152);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            QUESTION358_tree=(Object)adaptor.create(QUESTION358);
            adaptor.addChild(root_0,QUESTION358_tree);
          }
          pushFollow(FOLLOW_expression_in_conditionalExpression6154);
          expression359=expression();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,expression359.getTree());
          COLON360=(Token)match(input,COLON,FOLLOW_COLON_in_conditionalExpression6156);
          if (state.failed)           return retval;
          if (state.backtracking == 0) {
            COLON360_tree=(Object)adaptor.create(COLON360);
            adaptor.addChild(root_0,COLON360_tree);
          }
          pushFollow(FOLLOW_expression_in_conditionalExpression6158);
          expression361=expression();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,expression361.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
