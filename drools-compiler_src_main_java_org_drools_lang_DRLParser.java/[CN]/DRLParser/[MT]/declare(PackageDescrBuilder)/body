{
  BaseDescr declaration=null;
  try {
    DeclareDescrBuilder declare=helper.start(pkg,DeclareDescrBuilder.class,null);
    match(input,DRLLexer.ID,DroolsSoftKeywords.DECLARE,null,DroolsEditorType.KEYWORD);
    if (state.failed)     return null;
    if (helper.validateIdentifierKey(DroolsSoftKeywords.ENTRY)) {
      declaration=entryPointDeclaration(declare);
    }
 else     if (helper.validateIdentifierKey(DroolsSoftKeywords.WINDOW)) {
      declaration=windowDeclaration(declare);
    }
 else     if (helper.validateIdentifierKey(DroolsSoftKeywords.TRAIT)) {
      match(input,DRLLexer.ID,DroolsSoftKeywords.TRAIT,null,DroolsEditorType.KEYWORD);
      if (state.failed)       return null;
      declaration=typeDeclaration(declare,true);
    }
 else     if (helper.validateIdentifierKey(DroolsSoftKeywords.ENUM)) {
      match(input,DRLLexer.ID,DroolsSoftKeywords.ENUM,null,DroolsEditorType.KEYWORD);
      if (state.failed)       return null;
      declaration=enumDeclaration(declare);
    }
 else {
      declaration=typeDeclaration(declare,false);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
  }
  return declaration;
}
