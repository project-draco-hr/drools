{
  DRLParser.annotationName_return retval=new DRLParser.annotationName_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token id=null;
  Token mid=null;
  Token DOT861=null;
  Object id_tree=null;
  Object mid_tree=null;
  Object DOT861_tree=null;
  retval.name="";
  try {
{
      root_0=(Object)adaptor.nil();
      id=(Token)match(input,ID,FOLLOW_ID_in_annotationName10015);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        id_tree=(Object)adaptor.create(id);
        adaptor.addChild(root_0,id_tree);
      }
      if (state.backtracking == 0) {
        retval.name+=(id != null ? id.getText() : null);
        helper.emit(id,DroolsEditorType.IDENTIFIER);
      }
      loop256:       do {
        int alt256=2;
        int LA256_0=input.LA(1);
        if ((LA256_0 == DOT)) {
          alt256=1;
        }
switch (alt256) {
case 1:
{
            DOT861=(Token)match(input,DOT,FOLLOW_DOT_in_annotationName10023);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              DOT861_tree=(Object)adaptor.create(DOT861);
              adaptor.addChild(root_0,DOT861_tree);
            }
            mid=(Token)match(input,ID,FOLLOW_ID_in_annotationName10027);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              mid_tree=(Object)adaptor.create(mid);
              adaptor.addChild(root_0,mid_tree);
            }
            if (state.backtracking == 0) {
              retval.name+=(mid != null ? mid.getText() : null);
            }
          }
        break;
default :
      break loop256;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
