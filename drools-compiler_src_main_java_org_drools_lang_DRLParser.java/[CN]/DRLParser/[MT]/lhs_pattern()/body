{
  lhs_pattern_return retval=new lhs_pattern_return();
  retval.start=input.LT(1);
  Object root_0=null;
  fact_binding_return fact_binding196=null;
  fact_return fact197=null;
  RewriteRuleSubtreeStream stream_fact_binding=new RewriteRuleSubtreeStream(adaptor,"rule fact_binding");
  RewriteRuleSubtreeStream stream_fact=new RewriteRuleSubtreeStream(adaptor,"rule fact");
  try {
    int alt70=2;
    int LA70_0=input.LA(1);
    if ((LA70_0 == ID)) {
      int LA70_1=input.LA(2);
      if ((LA70_1 == COLON)) {
        alt70=1;
      }
 else       if ((LA70_1 == DOT || LA70_1 == LEFT_PAREN || LA70_1 == LEFT_SQUARE)) {
        alt70=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("1044:1: lhs_pattern : ( fact_binding -> ^( VT_PATTERN fact_binding ) | fact -> ^( VT_PATTERN fact ) );",70,1,input);
        throw nvae;
      }
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("1044:1: lhs_pattern : ( fact_binding -> ^( VT_PATTERN fact_binding ) | fact -> ^( VT_PATTERN fact ) );",70,0,input);
      throw nvae;
    }
switch (alt70) {
case 1:
{
        pushFollow(FOLLOW_fact_binding_in_lhs_pattern3500);
        fact_binding196=fact_binding();
        _fsp--;
        if (failed)         return retval;
        if (backtracking == 0)         stream_fact_binding.add(fact_binding196.getTree());
        if (backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
          root_0=(Object)adaptor.nil();
{
{
              Object root_1=(Object)adaptor.nil();
              root_1=(Object)adaptor.becomeRoot(adaptor.create(VT_PATTERN,"VT_PATTERN"),root_1);
              adaptor.addChild(root_1,stream_fact_binding.next());
              adaptor.addChild(root_0,root_1);
            }
          }
        }
      }
    break;
case 2:
{
    pushFollow(FOLLOW_fact_in_lhs_pattern3513);
    fact197=fact();
    _fsp--;
    if (failed)     return retval;
    if (backtracking == 0)     stream_fact.add(fact197.getTree());
    if (backtracking == 0) {
      retval.tree=root_0;
      RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
      root_0=(Object)adaptor.nil();
{
{
          Object root_1=(Object)adaptor.nil();
          root_1=(Object)adaptor.becomeRoot(adaptor.create(VT_PATTERN,"VT_PATTERN"),root_1);
          adaptor.addChild(root_1,stream_fact.next());
          adaptor.addChild(root_0,root_1);
        }
      }
    }
  }
break;
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
