{
  DRLParser.dimension_definition_return retval=new DRLParser.dimension_definition_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE300=null;
  Token RIGHT_SQUARE301=null;
  Object LEFT_SQUARE300_tree=null;
  Object RIGHT_SQUARE301_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      LEFT_SQUARE300=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_dimension_definition5256);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        LEFT_SQUARE300_tree=(Object)adaptor.create(LEFT_SQUARE300);
        adaptor.addChild(root_0,LEFT_SQUARE300_tree);
      }
      if (state.backtracking == 0) {
        helper.emit(LEFT_SQUARE300,DroolsEditorType.SYMBOL);
      }
      RIGHT_SQUARE301=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_dimension_definition5263);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        RIGHT_SQUARE301_tree=(Object)adaptor.create(RIGHT_SQUARE301);
        adaptor.addChild(root_0,RIGHT_SQUARE301_tree);
      }
      if (state.backtracking == 0) {
        helper.emit(RIGHT_SQUARE301,DroolsEditorType.SYMBOL);
      }
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
