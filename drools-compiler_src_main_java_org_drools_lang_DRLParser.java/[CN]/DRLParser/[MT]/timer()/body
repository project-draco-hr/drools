{
  DRLParser.timer_return retval=new DRLParser.timer_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.duration_key_return duration_key106=null;
  DRLParser.timer_key_return timer_key107=null;
  DRLParser.signed_decimal_return signed_decimal108=null;
  DRLParser.paren_chunk_return paren_chunk109=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt35=2;
      int LA35_0=input.LA(1);
      if ((LA35_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.TIMER))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.DURATION)))))) {
        int LA35_1=input.LA(2);
        if ((((helper.validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
          alt35=1;
        }
 else         if ((((helper.validateIdentifierKey(DroolsSoftKeywords.TIMER))))) {
          alt35=2;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",35,1,input);
          throw nvae;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",35,0,input);
        throw nvae;
      }
switch (alt35) {
case 1:
{
          pushFollow(FOLLOW_duration_key_in_timer2062);
          duration_key106=duration_key();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           root_0=(Object)adaptor.becomeRoot(duration_key106.getTree(),root_0);
        }
      break;
case 2:
{
      pushFollow(FOLLOW_timer_key_in_timer2065);
      timer_key107=timer_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(timer_key107.getTree(),root_0);
    }
  break;
}
if (state.backtracking == 0) {
helper.emit(Location.LOCATION_RULE_HEADER_KEYWORD);
}
int alt36=2;
int LA36_0=input.LA(1);
if ((LA36_0 == DECIMAL || (LA36_0 >= PLUS && LA36_0 <= MINUS))) {
alt36=1;
}
 else if ((LA36_0 == LEFT_PAREN)) {
alt36=2;
}
 else {
if (state.backtracking > 0) {
  state.failed=true;
  return retval;
}
NoViableAltException nvae=new NoViableAltException("",36,0,input);
throw nvae;
}
switch (alt36) {
case 1:
{
  pushFollow(FOLLOW_signed_decimal_in_timer2076);
  signed_decimal108=signed_decimal();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,signed_decimal108.getTree());
}
break;
case 2:
{
pushFollow(FOLLOW_paren_chunk_in_timer2087);
paren_chunk109=paren_chunk();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,paren_chunk109.getTree());
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
