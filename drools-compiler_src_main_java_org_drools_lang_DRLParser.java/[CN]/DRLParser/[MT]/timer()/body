{
  DRLParser.timer_return retval=new DRLParser.timer_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token INT116=null;
  DRLParser.duration_key_return duration_key114=null;
  DRLParser.timer_key_return timer_key115=null;
  DRLParser.paren_chunk_return paren_chunk117=null;
  Object INT116_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      int alt43=2;
      int LA43_0=input.LA(1);
      if ((LA43_0 == ID) && ((((validateIdentifierKey(DroolsSoftKeywords.DURATION))) || ((validateIdentifierKey(DroolsSoftKeywords.TIMER)))))) {
        int LA43_1=input.LA(2);
        if ((((validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
          alt43=1;
        }
 else         if ((((validateIdentifierKey(DroolsSoftKeywords.TIMER))))) {
          alt43=2;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",43,1,input);
          throw nvae;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",43,0,input);
        throw nvae;
      }
switch (alt43) {
case 1:
{
          pushFollow(FOLLOW_duration_key_in_timer1956);
          duration_key114=duration_key();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           root_0=(Object)adaptor.becomeRoot(duration_key114.getTree(),root_0);
        }
      break;
case 2:
{
      pushFollow(FOLLOW_timer_key_in_timer1959);
      timer_key115=timer_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(timer_key115.getTree(),root_0);
    }
  break;
}
if (state.backtracking == 0) {
emit(Location.LOCATION_RULE_HEADER_KEYWORD);
}
int alt44=2;
int LA44_0=input.LA(1);
if ((LA44_0 == INT)) {
alt44=1;
}
 else if ((LA44_0 == LEFT_PAREN)) {
alt44=2;
}
 else {
if (state.backtracking > 0) {
  state.failed=true;
  return retval;
}
NoViableAltException nvae=new NoViableAltException("",44,0,input);
throw nvae;
}
switch (alt44) {
case 1:
{
  INT116=(Token)match(input,INT,FOLLOW_INT_in_timer1973);
  if (state.failed)   return retval;
  if (state.backtracking == 0) {
    INT116_tree=(Object)adaptor.create(INT116);
    adaptor.addChild(root_0,INT116_tree);
  }
  if (state.backtracking == 0) {
    emit(INT116,DroolsEditorType.NUMERIC_CONST);
  }
}
break;
case 2:
{
pushFollow(FOLLOW_paren_chunk_in_timer1984);
paren_chunk117=paren_chunk();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,paren_chunk117.getTree());
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
