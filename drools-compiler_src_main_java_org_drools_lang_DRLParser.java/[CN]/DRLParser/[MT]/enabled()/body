{
  enabled_return retval=new enabled_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token BOOL102=null;
  enabled_key_return enabled_key101=null;
  Object BOOL102_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_enabled_key_in_enabled1643);
      enabled_key101=enabled_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       root_0=(Object)adaptor.becomeRoot(enabled_key101.getTree(),root_0);
      BOOL102=(Token)input.LT(1);
      match(input,BOOL,FOLLOW_BOOL_in_enabled1646);
      if (failed)       return retval;
      if (backtracking == 0) {
        BOOL102_tree=(Object)adaptor.create(BOOL102);
        adaptor.addChild(root_0,BOOL102_tree);
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
