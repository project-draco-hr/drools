{
  entrypoint_statement_return retval=new entrypoint_statement_return();
  retval.start=input.LT(1);
  Object root_0=null;
  entry_point_key_return entry_point_key195=null;
  entrypoint_id_return entrypoint_id196=null;
  RewriteRuleSubtreeStream stream_entrypoint_id=new RewriteRuleSubtreeStream(adaptor,"rule entrypoint_id");
  RewriteRuleSubtreeStream stream_entry_point_key=new RewriteRuleSubtreeStream(adaptor,"rule entry_point_key");
  try {
{
      pushFollow(FOLLOW_entry_point_key_in_entrypoint_statement2756);
      entry_point_key195=entry_point_key();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_entry_point_key.add(entry_point_key195.getTree());
      pushFollow(FOLLOW_entrypoint_id_in_entrypoint_statement2758);
      entrypoint_id196=entrypoint_id();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       stream_entrypoint_id.add(entrypoint_id196.getTree());
      if (backtracking == 0) {
        retval.tree=root_0;
        RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
        root_0=(Object)adaptor.nil();
{
{
            Object root_1=(Object)adaptor.nil();
            root_1=(Object)adaptor.becomeRoot(stream_entry_point_key.nextNode(),root_1);
            adaptor.addChild(root_1,stream_entrypoint_id.next());
            adaptor.addChild(root_0,root_1);
          }
        }
      }
    }
    retval.stop=input.LT(-1);
    if (backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
