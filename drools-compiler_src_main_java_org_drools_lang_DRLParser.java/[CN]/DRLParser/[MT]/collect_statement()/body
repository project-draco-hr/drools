{
  CollectDescr d=null;
  Token loc=null;
  BaseDescr column=null;
  d=this.factory.createCollect();
  try {
{
      loc=(Token)this.input.LT(1);
      match(this.input,COLLECT,FOLLOW_COLLECT_in_collect_statement2067);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        d.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      match(this.input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_collect_statement2077);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_lhs_column_in_collect_statement2081);
      column=lhs_column();
      this._fsp--;
      if (this.failed) {
        return d;
      }
      loc=(Token)this.input.LT(1);
      match(this.input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_collect_statement2085);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setSourceColumn((ColumnDescr)column);
        d.setEndCharacter(((CommonToken)loc).getStopIndex());
      }
    }
  }
 catch (  final RecognitionException re) {
    reportError(re);
    recover(this.input,re);
  }
 finally {
  }
  return d;
}
