{
  DRLParser.formalParameter_return retval=new DRLParser.formalParameter_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.variableModifier_return variableModifier449=null;
  DRLParser.type_return type450=null;
  DRLParser.variableDeclaratorId_return variableDeclaratorId451=null;
  try {
{
      root_0=(Object)adaptor.nil();
      loop144:       do {
        int alt144=2;
        alt144=dfa144.predict(input);
switch (alt144) {
case 1:
{
            pushFollow(FOLLOW_variableModifier_in_formalParameter6655);
            variableModifier449=variableModifier();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,variableModifier449.getTree());
          }
        break;
default :
      break loop144;
  }
}
 while (true);
pushFollow(FOLLOW_type_in_formalParameter6658);
type450=type();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,type450.getTree());
pushFollow(FOLLOW_variableDeclaratorId_in_formalParameter6660);
variableDeclaratorId451=variableDeclaratorId();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,variableDeclaratorId451.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
