{
  try {
{
      int alt34=2;
      int LA34_0=input.LA(1);
      if (((LA34_0 >= ATTRIBUTES && LA34_0 <= WHEN) || LA34_0 == ENABLED || LA34_0 == SALIENCE || LA34_0 == DURATION || (LA34_0 >= ACCUMULATE && LA34_0 <= OR) || (LA34_0 >= CONTAINS && LA34_0 <= MEMBEROF) || LA34_0 == NULL || (LA34_0 >= AND && LA34_0 <= THEN))) {
        alt34=1;
      }
 else       if ((LA34_0 == LEFT_PAREN)) {
        alt34=2;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("922:4: ( constraint[pattern] | predicate[pattern] )",34,0,input);
        throw nvae;
      }
switch (alt34) {
case 1:
{
          pushFollow(FOLLOW_constraint_in_constraints2421);
          constraint(pattern);
          _fsp--;
          if (failed)           return;
        }
      break;
case 2:
{
      pushFollow(FOLLOW_predicate_in_constraints2424);
      predicate(pattern);
      _fsp--;
      if (failed)       return;
    }
  break;
}
loop36: do {
int alt36=2;
int LA36_0=input.LA(1);
if ((LA36_0 == 68)) {
  alt36=1;
}
switch (alt36) {
case 1:
{
    match(input,68,FOLLOW_68_in_constraints2432);
    if (failed)     return;
    int alt35=2;
    int LA35_0=input.LA(1);
    if (((LA35_0 >= ATTRIBUTES && LA35_0 <= WHEN) || LA35_0 == ENABLED || LA35_0 == SALIENCE || LA35_0 == DURATION || (LA35_0 >= ACCUMULATE && LA35_0 <= OR) || (LA35_0 >= CONTAINS && LA35_0 <= MEMBEROF) || LA35_0 == NULL || (LA35_0 >= AND && LA35_0 <= THEN))) {
      alt35=1;
    }
 else     if ((LA35_0 == LEFT_PAREN)) {
      alt35=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("923:9: ( constraint[pattern] | predicate[pattern] )",35,0,input);
      throw nvae;
    }
switch (alt35) {
case 1:
{
        pushFollow(FOLLOW_constraint_in_constraints2435);
        constraint(pattern);
        _fsp--;
        if (failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_predicate_in_constraints2438);
    predicate(pattern);
    _fsp--;
    if (failed)     return;
  }
break;
}
}
break;
default :
break loop36;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
