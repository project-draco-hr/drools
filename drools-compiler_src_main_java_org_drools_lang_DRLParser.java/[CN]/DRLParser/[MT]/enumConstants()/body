{
  DRLParser.enumConstants_return retval=new DRLParser.enumConstants_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA846=null;
  DRLParser.enumConstant_return enumConstant845=null;
  DRLParser.enumConstant_return enumConstant847=null;
  Object COMMA846_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_enumConstant_in_enumConstants9853);
      enumConstant845=enumConstant();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,enumConstant845.getTree());
      loop249:       do {
        int alt249=2;
        int LA249_0=input.LA(1);
        if ((LA249_0 == COMMA)) {
          int LA249_1=input.LA(2);
          if ((LA249_1 == ID || LA249_1 == AT)) {
            alt249=1;
          }
        }
switch (alt249) {
case 1:
{
            COMMA846=(Token)match(input,COMMA,FOLLOW_COMMA_in_enumConstants9856);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              COMMA846_tree=(Object)adaptor.create(COMMA846);
              adaptor.addChild(root_0,COMMA846_tree);
            }
            pushFollow(FOLLOW_enumConstant_in_enumConstants9858);
            enumConstant847=enumConstant();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,enumConstant847.getTree());
          }
        break;
default :
      break loop249;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
