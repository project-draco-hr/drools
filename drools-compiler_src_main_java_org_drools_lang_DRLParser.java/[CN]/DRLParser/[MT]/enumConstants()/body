{
  DRLParser.enumConstants_return retval=new DRLParser.enumConstants_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token COMMA831=null;
  DRLParser.enumConstant_return enumConstant830=null;
  DRLParser.enumConstant_return enumConstant832=null;
  Object COMMA831_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_enumConstant_in_enumConstants9750);
      enumConstant830=enumConstant();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,enumConstant830.getTree());
      loop247:       do {
        int alt247=2;
        int LA247_0=input.LA(1);
        if ((LA247_0 == COMMA)) {
          int LA247_1=input.LA(2);
          if ((LA247_1 == ID || LA247_1 == AT)) {
            alt247=1;
          }
        }
switch (alt247) {
case 1:
{
            COMMA831=(Token)match(input,COMMA,FOLLOW_COMMA_in_enumConstants9753);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              COMMA831_tree=(Object)adaptor.create(COMMA831);
              adaptor.addChild(root_0,COMMA831_tree);
            }
            pushFollow(FOLLOW_enumConstant_in_enumConstants9755);
            enumConstant832=enumConstant();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,enumConstant832.getTree());
          }
        break;
default :
      break loop247;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
