{
  DRLParser.enumBody_return retval=new DRLParser.enumBody_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_CURLY840=null;
  Token COMMA842=null;
  Token RIGHT_CURLY844=null;
  DRLParser.enumConstants_return enumConstants841=null;
  DRLParser.enumBodyDeclarations_return enumBodyDeclarations843=null;
  Object LEFT_CURLY840_tree=null;
  Object COMMA842_tree=null;
  Object RIGHT_CURLY844_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      LEFT_CURLY840=(Token)match(input,LEFT_CURLY,FOLLOW_LEFT_CURLY_in_enumBody9831);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        LEFT_CURLY840_tree=(Object)adaptor.create(LEFT_CURLY840);
        adaptor.addChild(root_0,LEFT_CURLY840_tree);
      }
      int alt246=2;
      int LA246_0=input.LA(1);
      if ((LA246_0 == ID || LA246_0 == AT)) {
        alt246=1;
      }
switch (alt246) {
case 1:
{
          pushFollow(FOLLOW_enumConstants_in_enumBody9833);
          enumConstants841=enumConstants();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,enumConstants841.getTree());
        }
      break;
  }
  int alt247=2;
  int LA247_0=input.LA(1);
  if ((LA247_0 == COMMA)) {
    alt247=1;
  }
switch (alt247) {
case 1:
{
      COMMA842=(Token)match(input,COMMA,FOLLOW_COMMA_in_enumBody9836);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        COMMA842_tree=(Object)adaptor.create(COMMA842);
        adaptor.addChild(root_0,COMMA842_tree);
      }
    }
  break;
}
int alt248=2;
int LA248_0=input.LA(1);
if ((LA248_0 == SEMICOLON)) {
alt248=1;
}
switch (alt248) {
case 1:
{
  pushFollow(FOLLOW_enumBodyDeclarations_in_enumBody9839);
  enumBodyDeclarations843=enumBodyDeclarations();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,enumBodyDeclarations843.getTree());
}
break;
}
RIGHT_CURLY844=(Token)match(input,RIGHT_CURLY,FOLLOW_RIGHT_CURLY_in_enumBody9842);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_CURLY844_tree=(Object)adaptor.create(RIGHT_CURLY844);
adaptor.addChild(root_0,RIGHT_CURLY844_tree);
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
