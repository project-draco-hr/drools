{
  if (state.backtracking == 0 && input.LA(1) != DRLLexer.EOF) {
    helper.emit(Location.LOCATION_LHS_INSIDE_CONDITION_START);
  }
  String bind=null;
  if (input.LA(1) == DRLLexer.ID && input.LA(2) == DRLLexer.COLON) {
    Token id=match(input,DRLLexer.ID,null,null,DroolsEditorType.IDENTIFIER_VARIABLE);
    if (state.failed)     return;
    bind=id.getText();
    match(input,DRLLexer.COLON,null,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return;
  }
  int first=input.index();
  exprParser.conditionalOrExpression();
  if (state.failed)   return;
  if (state.backtracking == 0 && input.index() > first) {
    String expr=input.toString(first,input.LT(-1).getTokenIndex());
    if (bind == null) {
      pattern.constraint(expr);
    }
 else {
      pattern.bind(bind,expr);
    }
  }
  if (state.backtracking == 0) {
    helper.emit(Location.LOCATION_LHS_INSIDE_CONDITION_END);
  }
}
