{
  DRLParser.voidMethodDeclaratorRest_return retval=new DRLParser.voidMethodDeclaratorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token SEMICOLON735=null;
  DRLParser.formalParameters_return formalParameters731=null;
  DRLParser.throws_key_return throws_key732=null;
  DRLParser.typeNameList_return typeNameList733=null;
  DRLParser.block_return block734=null;
  Object SEMICOLON735_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_formalParameters_in_voidMethodDeclaratorRest9135);
      formalParameters731=formalParameters();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,formalParameters731.getTree());
      int alt218=2;
      int LA218_0=input.LA(1);
      if ((LA218_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.THROWS))))) {
        alt218=1;
      }
switch (alt218) {
case 1:
{
          pushFollow(FOLLOW_throws_key_in_voidMethodDeclaratorRest9138);
          throws_key732=throws_key();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,throws_key732.getTree());
          pushFollow(FOLLOW_typeNameList_in_voidMethodDeclaratorRest9140);
          typeNameList733=typeNameList();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,typeNameList733.getTree());
        }
      break;
  }
  int alt219=2;
  int LA219_0=input.LA(1);
  if ((LA219_0 == LEFT_CURLY)) {
    alt219=1;
  }
 else   if ((LA219_0 == SEMICOLON)) {
    alt219=2;
  }
 else {
    if (state.backtracking > 0) {
      state.failed=true;
      return retval;
    }
    NoViableAltException nvae=new NoViableAltException("",219,0,input);
    throw nvae;
  }
switch (alt219) {
case 1:
{
      pushFollow(FOLLOW_block_in_voidMethodDeclaratorRest9156);
      block734=block();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,block734.getTree());
    }
  break;
case 2:
{
  SEMICOLON735=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidMethodDeclaratorRest9170);
  if (state.failed)   return retval;
  if (state.backtracking == 0) {
    SEMICOLON735_tree=(Object)adaptor.create(SEMICOLON735);
    adaptor.addChild(root_0,SEMICOLON735_tree);
  }
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
