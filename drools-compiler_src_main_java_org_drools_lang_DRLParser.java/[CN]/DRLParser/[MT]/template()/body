{
  FactTemplateDescr template=null;
  Token loc=null;
  Token templateName=null;
  FieldTemplateDescr slot=null;
  template=null;
  try {
{
      loc=(Token)this.input.LT(1);
      match(this.input,TEMPLATE,FOLLOW_TEMPLATE_in_template661);
      if (this.failed) {
        return template;
      }
      pushFollow(FOLLOW_identifier_in_template665);
      templateName=identifier();
      this._fsp--;
      if (this.failed) {
        return template;
      }
      pushFollow(FOLLOW_opt_semicolon_in_template667);
      opt_semicolon();
      this._fsp--;
      if (this.failed) {
        return template;
      }
      if (this.backtracking == 0) {
        template=new FactTemplateDescr(templateName.getText());
        template.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        template.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      int cnt12=0;
      loop12:       do {
        int alt12=2;
        final int LA12_0=this.input.LA(1);
        if ((LA12_0 == ID)) {
          alt12=1;
        }
switch (alt12) {
case 1:
{
            pushFollow(FOLLOW_template_slot_in_template682);
            slot=template_slot();
            this._fsp--;
            if (this.failed) {
              return template;
            }
            if (this.backtracking == 0) {
              template.addFieldTemplate(slot);
            }
          }
        break;
default :
      if (cnt12 >= 1) {
        break loop12;
      }
    if (this.backtracking > 0) {
      this.failed=true;
      return template;
    }
  final EarlyExitException eee=new EarlyExitException(12,this.input);
throw eee;
}
cnt12++;
}
 while (true);
loc=(Token)this.input.LT(1);
match(this.input,END,FOLLOW_END_in_template699);
if (this.failed) {
return template;
}
pushFollow(FOLLOW_opt_semicolon_in_template701);
opt_semicolon();
this._fsp--;
if (this.failed) {
return template;
}
if (this.backtracking == 0) {
template.setEndCharacter(((CommonToken)loc).getStopIndex());
}
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return template;
}
