{
  DRLParser.classBodyDeclaration_return retval=new DRLParser.classBodyDeclaration_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token SEMICOLON685=null;
  DRLParser.block_return block686=null;
  DRLParser.modifiedClassMember_return modifiedClassMember687=null;
  Object SEMICOLON685_tree=null;
  try {
    int alt209=3;
switch (input.LA(1)) {
case SEMICOLON:
{
        alt209=1;
      }
    break;
case LEFT_CURLY:
{
    alt209=2;
  }
break;
case ID:
case LESS:
case AT:
{
alt209=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",209,0,input);
throw nvae;
}
switch (alt209) {
case 1:
{
root_0=(Object)adaptor.nil();
SEMICOLON685=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classBodyDeclaration8746);
if (state.failed) return retval;
if (state.backtracking == 0) {
SEMICOLON685_tree=(Object)adaptor.create(SEMICOLON685);
adaptor.addChild(root_0,SEMICOLON685_tree);
}
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_block_in_classBodyDeclaration8754);
block686=block();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,block686.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
pushFollow(FOLLOW_modifiedClassMember_in_classBodyDeclaration8761);
modifiedClassMember687=modifiedClassMember();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,modifiedClassMember687.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
