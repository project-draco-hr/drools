{
  paren_chunk_return retval=new paren_chunk_return();
  retval.start=input.LT(1);
  try {
{
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_paren_chunk4569);
      if (failed)       return retval;
      loop75:       do {
        int alt75=3;
        int LA75_0=input.LA(1);
        if (((LA75_0 >= PACKAGE && LA75_0 <= GLOBAL) || LA75_0 == COMMA || (LA75_0 >= QUERY && LA75_0 <= 83))) {
          alt75=1;
        }
 else         if ((LA75_0 == LEFT_PAREN)) {
          alt75=2;
        }
switch (alt75) {
case 1:
{
            if ((input.LA(1) >= PACKAGE && input.LA(1) <= GLOBAL) || input.LA(1) == COMMA || (input.LA(1) >= QUERY && input.LA(1) <= 83)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_paren_chunk4573);
              throw mse;
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_paren_chunk_in_paren_chunk4582);
        paren_chunk();
        _fsp--;
        if (failed)         return retval;
      }
    break;
default :
  break loop75;
}
}
 while (true);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_paren_chunk4587);
if (failed) return retval;
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
