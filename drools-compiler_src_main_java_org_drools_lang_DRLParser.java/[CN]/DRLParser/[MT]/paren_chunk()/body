{
  paren_chunk_return retval=new paren_chunk_return();
  retval.start=input.LT(1);
  try {
{
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_paren_chunk4338);
      if (failed)       return retval;
      loop78:       do {
        int alt78=3;
        int LA78_0=input.LA(1);
        if (((LA78_0 >= ATTRIBUTES && LA78_0 <= GLOBAL) || LA78_0 == COMMA || (LA78_0 >= QUERY && LA78_0 <= 80))) {
          alt78=1;
        }
 else         if ((LA78_0 == LEFT_PAREN)) {
          alt78=2;
        }
switch (alt78) {
case 1:
{
            if ((input.LA(1) >= ATTRIBUTES && input.LA(1) <= GLOBAL) || input.LA(1) == COMMA || (input.LA(1) >= QUERY && input.LA(1) <= 80)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return retval;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_paren_chunk4342);
              throw mse;
            }
          }
        break;
case 2:
{
        pushFollow(FOLLOW_paren_chunk_in_paren_chunk4351);
        paren_chunk();
        _fsp--;
        if (failed)         return retval;
      }
    break;
default :
  break loop78;
}
}
 while (true);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_paren_chunk4356);
if (failed) return retval;
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
