{
  Token loc=null;
  String retType=null;
  Token n=null;
  String paramType=null;
  String paramName=null;
  String body=null;
  FunctionDescr f=null;
  try {
{
      loc=(Token)this.input.LT(1);
      match(this.input,FUNCTION,FOLLOW_FUNCTION_in_function471);
      if (this.failed) {
        return;
      }
      int alt7=2;
      final int LA7_0=this.input.LA(1);
      if ((LA7_0 == ID)) {
        final int LA7_1=this.input.LA(2);
        if (((LA7_1 >= PACKAGE && LA7_1 <= ATTRIBUTES) || LA7_1 == ENABLED || LA7_1 == SALIENCE || LA7_1 == DURATION || (LA7_1 >= ACCUMULATE && LA7_1 <= OR) || (LA7_1 >= CONTAINS && LA7_1 <= EXCLUDES) || LA7_1 == NULL || LA7_1 == LEFT_SQUARE || (LA7_1 >= AND && LA7_1 <= THEN) || LA7_1 == 64)) {
          alt7=1;
        }
      }
switch (alt7) {
case 1:
{
          pushFollow(FOLLOW_dotted_name_in_function476);
          retType=dotted_name(null);
          this._fsp--;
          if (this.failed) {
            return;
          }
        }
      break;
  }
  pushFollow(FOLLOW_identifier_in_function483);
  n=identifier();
  this._fsp--;
  if (this.failed) {
    return;
  }
  if (this.backtracking == 0) {
    f=this.factory.createFunction(n.getText(),retType);
    f.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
    f.setStartCharacter(((CommonToken)loc).getStartIndex());
    this.packageDescr.addFunction(f);
  }
  match(this.input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_function492);
  if (this.failed) {
    return;
  }
  int alt11=2;
  final int LA11_0=this.input.LA(1);
  if (((LA11_0 >= PACKAGE && LA11_0 <= ATTRIBUTES) || LA11_0 == ENABLED || LA11_0 == SALIENCE || LA11_0 == DURATION || (LA11_0 >= ACCUMULATE && LA11_0 <= OR) || (LA11_0 >= CONTAINS && LA11_0 <= EXCLUDES) || LA11_0 == NULL || (LA11_0 >= AND && LA11_0 <= THEN))) {
    alt11=1;
  }
switch (alt11) {
case 1:
{
      int alt8=2;
      alt8=this.dfa8.predict(this.input);
switch (alt8) {
case 1:
{
          pushFollow(FOLLOW_dotted_name_in_function502);
          paramType=dotted_name(null);
          this._fsp--;
          if (this.failed) {
            return;
          }
        }
      break;
  }
  pushFollow(FOLLOW_argument_in_function509);
  paramName=argument();
  this._fsp--;
  if (this.failed) {
    return;
  }
  if (this.backtracking == 0) {
    f.addParameter(paramType,paramName);
  }
  loop10:   do {
    int alt10=2;
    final int LA10_0=this.input.LA(1);
    if ((LA10_0 == 66)) {
      alt10=1;
    }
switch (alt10) {
case 1:
{
        match(this.input,66,FOLLOW_66_in_function523);
        if (this.failed) {
          return;
        }
        int alt9=2;
        alt9=this.dfa9.predict(this.input);
switch (alt9) {
case 1:
{
            pushFollow(FOLLOW_dotted_name_in_function528);
            paramType=dotted_name(null);
            this._fsp--;
            if (this.failed) {
              return;
            }
          }
        break;
    }
    pushFollow(FOLLOW_argument_in_function535);
    paramName=argument();
    this._fsp--;
    if (this.failed) {
      return;
    }
    if (this.backtracking == 0) {
      f.addParameter(paramType,paramName);
    }
  }
break;
default :
break loop10;
}
}
 while (true);
}
break;
}
match(this.input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_function559);
if (this.failed) {
return;
}
pushFollow(FOLLOW_curly_chunk_in_function565);
body=curly_chunk(f);
this._fsp--;
if (this.failed) {
return;
}
if (this.backtracking == 0) {
f.setText(body.substring(1,body.length() - 1));
}
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
