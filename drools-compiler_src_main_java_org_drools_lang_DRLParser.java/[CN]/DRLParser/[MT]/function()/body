{
  Token loc=null;
  Token name=null;
  Token body=null;
  String retType=null;
  String paramType=null;
  String paramName=null;
  FunctionDescr f=null;
  try {
{
      loc=(Token)input.LT(1);
      match(input,32,FOLLOW_32_in_function366);
      if (failed)       return;
      int alt7=2;
      int LA7_0=input.LA(1);
      if ((LA7_0 == ID)) {
        int LA7_1=input.LA(2);
        if ((LA7_1 == ID || LA7_1 == LEFT_SQUARE || LA7_1 == 33)) {
          alt7=1;
        }
      }
switch (alt7) {
case 1:
{
          pushFollow(FOLLOW_dotted_name_in_function371);
          retType=dotted_name();
          _fsp--;
          if (failed)           return;
        }
      break;
  }
  name=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function377);
  if (failed)   return;
  if (backtracking == 0) {
    f=new FunctionDescr(name.getText(),retType);
    f.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
  }
  match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_function386);
  if (failed)   return;
  int alt11=2;
  int LA11_0=input.LA(1);
  if ((LA11_0 == ID)) {
    alt11=1;
  }
switch (alt11) {
case 1:
{
      int alt8=2;
      alt8=dfa8.predict(input);
switch (alt8) {
case 1:
{
          pushFollow(FOLLOW_dotted_name_in_function396);
          paramType=dotted_name();
          _fsp--;
          if (failed)           return;
        }
      break;
  }
  pushFollow(FOLLOW_argument_in_function402);
  paramName=argument();
  _fsp--;
  if (failed)   return;
  if (backtracking == 0) {
    f.addParameter(paramType,paramName);
  }
  loop10:   do {
    int alt10=2;
    int LA10_0=input.LA(1);
    if ((LA10_0 == 36)) {
      alt10=1;
    }
switch (alt10) {
case 1:
{
        match(input,36,FOLLOW_36_in_function416);
        if (failed)         return;
        int alt9=2;
        alt9=dfa9.predict(input);
switch (alt9) {
case 1:
{
            pushFollow(FOLLOW_dotted_name_in_function421);
            paramType=dotted_name();
            _fsp--;
            if (failed)             return;
          }
        break;
    }
    pushFollow(FOLLOW_argument_in_function427);
    paramName=argument();
    _fsp--;
    if (failed)     return;
    if (backtracking == 0) {
      f.addParameter(paramType,paramName);
    }
  }
break;
default :
break loop10;
}
}
 while (true);
}
break;
}
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_function451);
if (failed) return;
body=(Token)input.LT(1);
match(input,CURLY_CHUNK,FOLLOW_CURLY_CHUNK_in_function457);
if (failed) return;
if (backtracking == 0) {
String bodys=body.getText();
bodys=bodys.substring(1,bodys.length() - 1);
f.setText(bodys);
packageDescr.addFunction(f);
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
