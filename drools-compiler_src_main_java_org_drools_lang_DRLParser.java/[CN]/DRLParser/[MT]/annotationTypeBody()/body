{
  DRLParser.annotationTypeBody_return retval=new DRLParser.annotationTypeBody_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_CURLY864=null;
  Token RIGHT_CURLY866=null;
  DRLParser.annotationTypeElementDeclarations_return annotationTypeElementDeclarations865=null;
  Object LEFT_CURLY864_tree=null;
  Object RIGHT_CURLY866_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      LEFT_CURLY864=(Token)match(input,LEFT_CURLY,FOLLOW_LEFT_CURLY_in_annotationTypeBody10088);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        LEFT_CURLY864_tree=(Object)adaptor.create(LEFT_CURLY864);
        adaptor.addChild(root_0,LEFT_CURLY864_tree);
      }
      int alt260=2;
      int LA260_0=input.LA(1);
      if ((LA260_0 == ID || LA260_0 == AT)) {
        alt260=1;
      }
switch (alt260) {
case 1:
{
          pushFollow(FOLLOW_annotationTypeElementDeclarations_in_annotationTypeBody10091);
          annotationTypeElementDeclarations865=annotationTypeElementDeclarations();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,annotationTypeElementDeclarations865.getTree());
        }
      break;
  }
  RIGHT_CURLY866=(Token)match(input,RIGHT_CURLY,FOLLOW_RIGHT_CURLY_in_annotationTypeBody10095);
  if (state.failed)   return retval;
  if (state.backtracking == 0) {
    RIGHT_CURLY866_tree=(Object)adaptor.create(RIGHT_CURLY866);
    adaptor.addChild(root_0,RIGHT_CURLY866_tree);
  }
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(Object)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
