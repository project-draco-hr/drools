{
  QueryDescr query=null;
  Token paramName=null;
  Token QUERY8=null;
  Token END9=null;
  name_return queryName=null;
  qualified_id_return paramType=null;
  query=null;
  AndDescr lhs=null;
  List params=null;
  List types=null;
  try {
{
      QUERY8=(Token)input.LT(1);
      match(input,QUERY,FOLLOW_QUERY_in_query678);
      if (failed)       return query;
      pushFollow(FOLLOW_name_in_query682);
      queryName=name();
      _fsp--;
      if (failed)       return query;
      if (backtracking == 0) {
        query=factory.createQuery(queryName.name);
        query.setLocation(offset(QUERY8.getLine()),QUERY8.getCharPositionInLine());
        query.setStartCharacter(((CommonToken)QUERY8).getStartIndex());
        lhs=new AndDescr();
        query.setLhs(lhs);
        lhs.setLocation(offset(QUERY8.getLine()),QUERY8.getCharPositionInLine());
        location.setType(Location.LOCATION_RULE_HEADER);
      }
      int alt17=2;
      alt17=dfa17.predict(input);
switch (alt17) {
case 1:
{
          match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_query692);
          if (failed)           return query;
          int alt16=2;
          int LA16_0=input.LA(1);
          if ((LA16_0 == ID)) {
            alt16=1;
          }
switch (alt16) {
case 1:
{
              if (backtracking == 0) {
                params=new ArrayList();
                types=new ArrayList();
              }
{
                int alt13=2;
                int LA13_0=input.LA(1);
                if ((LA13_0 == ID)) {
                  int LA13_1=input.LA(2);
                  if (((LA13_1 >= ID && LA13_1 <= DOT) || LA13_1 == LEFT_SQUARE)) {
                    alt13=1;
                  }
                }
switch (alt13) {
case 1:
{
                    pushFollow(FOLLOW_qualified_id_in_query727);
                    paramType=qualified_id();
                    _fsp--;
                    if (failed)                     return query;
                  }
                break;
            }
            paramName=(Token)input.LT(1);
            match(input,ID,FOLLOW_ID_in_query732);
            if (failed)             return query;
            if (backtracking == 0) {
              params.add(paramName.getText());
              String type=(paramType != null) ? paramType.text : "Object";
              types.add(type);
            }
          }
          loop15:           do {
            int alt15=2;
            int LA15_0=input.LA(1);
            if ((LA15_0 == COMMA)) {
              alt15=1;
            }
switch (alt15) {
case 1:
{
                match(input,COMMA,FOLLOW_COMMA_in_query753);
                if (failed)                 return query;
                int alt14=2;
                int LA14_0=input.LA(1);
                if ((LA14_0 == ID)) {
                  int LA14_1=input.LA(2);
                  if (((LA14_1 >= ID && LA14_1 <= DOT) || LA14_1 == LEFT_SQUARE)) {
                    alt14=1;
                  }
                }
switch (alt14) {
case 1:
{
                    pushFollow(FOLLOW_qualified_id_in_query757);
                    paramType=qualified_id();
                    _fsp--;
                    if (failed)                     return query;
                  }
                break;
            }
            paramName=(Token)input.LT(1);
            match(input,ID,FOLLOW_ID_in_query762);
            if (failed)             return query;
            if (backtracking == 0) {
              params.add(paramName.getText());
              String type=(paramType != null) ? paramType.text : "Object";
              types.add(type);
            }
          }
        break;
default :
      break loop15;
  }
}
 while (true);
if (backtracking == 0) {
  query.setParameters((String[])params.toArray(new String[params.size()]));
  query.setParameterTypes((String[])types.toArray(new String[types.size()]));
}
}
break;
}
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_query812);
if (failed) return query;
}
break;
}
if (backtracking == 0) {
location.setType(Location.LOCATION_LHS_BEGIN_OF_CONDITION);
}
pushFollow(FOLLOW_normal_lhs_block_in_query841);
normal_lhs_block(lhs);
_fsp--;
if (failed) return query;
END9=(Token)input.LT(1);
match(input,END,FOLLOW_END_in_query846);
if (failed) return query;
pushFollow(FOLLOW_opt_semicolon_in_query848);
opt_semicolon();
_fsp--;
if (failed) return query;
if (backtracking == 0) {
query.setEndCharacter(((CommonToken)END9).getStopIndex());
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return query;
}
