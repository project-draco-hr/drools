{
  QueryDescr query=null;
  Token loc=null;
  Token paramName=null;
  String queryName=null;
  query=null;
  AndDescr lhs=null;
  List params=null;
  try {
{
      loc=(Token)input.LT(1);
      match(input,QUERY,FOLLOW_QUERY_in_query639);
      if (failed)       return query;
      pushFollow(FOLLOW_name_in_query643);
      queryName=name();
      _fsp--;
      if (failed)       return query;
      if (backtracking == 0) {
        query=factory.createQuery(queryName);
        query.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        query.setStartCharacter(((CommonToken)loc).getStartIndex());
        lhs=new AndDescr();
        query.setLhs(lhs);
        lhs.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      }
      int alt17=2;
      int LA17_0=input.LA(1);
      if ((LA17_0 == LEFT_PAREN)) {
        int LA17_1=input.LA(2);
        if ((LA17_1 == ID)) {
          int LA17_3=input.LA(3);
          if ((LA17_3 == RIGHT_PAREN || LA17_3 == COMMA)) {
            alt17=1;
          }
        }
 else         if ((LA17_1 == RIGHT_PAREN)) {
          alt17=1;
        }
      }
switch (alt17) {
case 1:
{
          match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_query656);
          if (failed)           return query;
          int alt16=2;
          int LA16_0=input.LA(1);
          if ((LA16_0 == ID)) {
            alt16=1;
          }
switch (alt16) {
case 1:
{
              if (backtracking == 0) {
                params=new ArrayList();
              }
              paramName=(Token)input.LT(1);
              match(input,ID,FOLLOW_ID_in_query680);
              if (failed)               return query;
              if (backtracking == 0) {
                params.add(paramName.getText());
              }
              loop15:               do {
                int alt15=2;
                int LA15_0=input.LA(1);
                if ((LA15_0 == COMMA)) {
                  alt15=1;
                }
switch (alt15) {
case 1:
{
                    match(input,COMMA,FOLLOW_COMMA_in_query693);
                    if (failed)                     return query;
                    paramName=(Token)input.LT(1);
                    match(input,ID,FOLLOW_ID_in_query697);
                    if (failed)                     return query;
                    if (backtracking == 0) {
                      params.add(paramName.getText());
                    }
                  }
                break;
default :
              break loop15;
          }
        }
 while (true);
        if (backtracking == 0) {
          query.setParameters((String[])params.toArray(new String[params.size()]));
        }
      }
    break;
}
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_query734);
if (failed) return query;
}
break;
}
{
pushFollow(FOLLOW_normal_lhs_block_in_query751);
normal_lhs_block(lhs);
_fsp--;
if (failed) return query;
}
loc=(Token)input.LT(1);
match(input,END,FOLLOW_END_in_query768);
if (failed) return query;
if (backtracking == 0) {
query.setEndCharacter(((CommonToken)loc).getStopIndex());
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return query;
}
