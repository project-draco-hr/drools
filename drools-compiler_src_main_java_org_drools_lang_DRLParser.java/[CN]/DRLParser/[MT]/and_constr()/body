{
  and_constr_return retval=new and_constr_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token DOUBLE_AMPER221=null;
  unary_constr_return unary_constr220=null;
  unary_constr_return unary_constr222=null;
  Object DOUBLE_AMPER221_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_unary_constr_in_and_constr3820);
      unary_constr220=unary_constr();
      _fsp--;
      if (failed)       return retval;
      if (backtracking == 0)       adaptor.addChild(root_0,unary_constr220.getTree());
      loop80:       do {
        int alt80=2;
        int LA80_0=input.LA(1);
        if ((LA80_0 == DOUBLE_AMPER)) {
          alt80=1;
        }
switch (alt80) {
case 1:
{
            DOUBLE_AMPER221=(Token)input.LT(1);
            match(input,DOUBLE_AMPER,FOLLOW_DOUBLE_AMPER_in_and_constr3824);
            if (failed)             return retval;
            if (backtracking == 0) {
              DOUBLE_AMPER221_tree=(Object)adaptor.create(DOUBLE_AMPER221);
              root_0=(Object)adaptor.becomeRoot(DOUBLE_AMPER221_tree,root_0);
            }
            if (backtracking == 0) {
              emit(DOUBLE_AMPER221,DroolsEditorType.SYMBOL);
              ;
            }
            pushFollow(FOLLOW_unary_constr_in_and_constr3831);
            unary_constr222=unary_constr();
            _fsp--;
            if (failed)             return retval;
            if (backtracking == 0)             adaptor.addChild(root_0,unary_constr222.getTree());
          }
        break;
default :
      break loop80;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
