{
  DRLParser.annotationTypeElementDeclarations_return retval=new DRLParser.annotationTypeElementDeclarations_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLParser.annotationTypeElementDeclaration_return annotationTypeElementDeclaration882=null;
  DRLParser.annotationTypeElementDeclaration_return annotationTypeElementDeclaration883=null;
  try {
{
      root_0=(Object)adaptor.nil();
{
        pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations10211);
        annotationTypeElementDeclaration882=annotationTypeElementDeclaration();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,annotationTypeElementDeclaration882.getTree());
      }
      loop263:       do {
        int alt263=2;
        int LA263_0=input.LA(1);
        if ((LA263_0 == ID || LA263_0 == AT)) {
          alt263=1;
        }
switch (alt263) {
case 1:
{
            pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations10215);
            annotationTypeElementDeclaration883=annotationTypeElementDeclaration();
            state._fsp--;
            if (state.failed)             return retval;
            if (state.backtracking == 0)             adaptor.addChild(root_0,annotationTypeElementDeclaration883.getTree());
          }
        break;
default :
      break loop263;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
