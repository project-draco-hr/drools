{
  DRLParser.methodDeclaratorRest_return retval=new DRLParser.methodDeclaratorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE725=null;
  Token RIGHT_SQUARE726=null;
  Token SEMICOLON730=null;
  DRLParser.formalParameters_return formalParameters724=null;
  DRLParser.throws_key_return throws_key727=null;
  DRLParser.typeNameList_return typeNameList728=null;
  DRLParser.block_return block729=null;
  Object LEFT_SQUARE725_tree=null;
  Object RIGHT_SQUARE726_tree=null;
  Object SEMICOLON730_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_formalParameters_in_methodDeclaratorRest9062);
      formalParameters724=formalParameters();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,formalParameters724.getTree());
      loop215:       do {
        int alt215=2;
        int LA215_0=input.LA(1);
        if ((LA215_0 == LEFT_SQUARE)) {
          alt215=1;
        }
switch (alt215) {
case 1:
{
            LEFT_SQUARE725=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_methodDeclaratorRest9065);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              LEFT_SQUARE725_tree=(Object)adaptor.create(LEFT_SQUARE725);
              adaptor.addChild(root_0,LEFT_SQUARE725_tree);
            }
            RIGHT_SQUARE726=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_methodDeclaratorRest9067);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              RIGHT_SQUARE726_tree=(Object)adaptor.create(RIGHT_SQUARE726);
              adaptor.addChild(root_0,RIGHT_SQUARE726_tree);
            }
          }
        break;
default :
      break loop215;
  }
}
 while (true);
int alt216=2;
int LA216_0=input.LA(1);
if ((LA216_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.THROWS))))) {
  alt216=1;
}
switch (alt216) {
case 1:
{
    pushFollow(FOLLOW_throws_key_in_methodDeclaratorRest9080);
    throws_key727=throws_key();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,throws_key727.getTree());
    pushFollow(FOLLOW_typeNameList_in_methodDeclaratorRest9082);
    typeNameList728=typeNameList();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,typeNameList728.getTree());
  }
break;
}
int alt217=2;
int LA217_0=input.LA(1);
if ((LA217_0 == LEFT_CURLY)) {
alt217=1;
}
 else if ((LA217_0 == SEMICOLON)) {
alt217=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",217,0,input);
throw nvae;
}
switch (alt217) {
case 1:
{
pushFollow(FOLLOW_block_in_methodDeclaratorRest9098);
block729=block();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,block729.getTree());
}
break;
case 2:
{
SEMICOLON730=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_methodDeclaratorRest9113);
if (state.failed) return retval;
if (state.backtracking == 0) {
SEMICOLON730_tree=(Object)adaptor.create(SEMICOLON730);
adaptor.addChild(root_0,SEMICOLON730_tree);
}
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
