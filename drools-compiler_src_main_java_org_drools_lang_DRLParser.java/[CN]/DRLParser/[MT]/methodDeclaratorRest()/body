{
  DRLParser.methodDeclaratorRest_return retval=new DRLParser.methodDeclaratorRest_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE740=null;
  Token RIGHT_SQUARE741=null;
  Token SEMICOLON745=null;
  DRLParser.formalParameters_return formalParameters739=null;
  DRLParser.throws_key_return throws_key742=null;
  DRLParser.typeNameList_return typeNameList743=null;
  DRLParser.block_return block744=null;
  Object LEFT_SQUARE740_tree=null;
  Object RIGHT_SQUARE741_tree=null;
  Object SEMICOLON745_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_formalParameters_in_methodDeclaratorRest9165);
      formalParameters739=formalParameters();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,formalParameters739.getTree());
      loop217:       do {
        int alt217=2;
        int LA217_0=input.LA(1);
        if ((LA217_0 == LEFT_SQUARE)) {
          alt217=1;
        }
switch (alt217) {
case 1:
{
            LEFT_SQUARE740=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_methodDeclaratorRest9168);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              LEFT_SQUARE740_tree=(Object)adaptor.create(LEFT_SQUARE740);
              adaptor.addChild(root_0,LEFT_SQUARE740_tree);
            }
            RIGHT_SQUARE741=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_methodDeclaratorRest9170);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              RIGHT_SQUARE741_tree=(Object)adaptor.create(RIGHT_SQUARE741);
              adaptor.addChild(root_0,RIGHT_SQUARE741_tree);
            }
          }
        break;
default :
      break loop217;
  }
}
 while (true);
int alt218=2;
int LA218_0=input.LA(1);
if ((LA218_0 == ID) && (((helper.validateIdentifierKey(DroolsSoftKeywords.THROWS))))) {
  alt218=1;
}
switch (alt218) {
case 1:
{
    pushFollow(FOLLOW_throws_key_in_methodDeclaratorRest9183);
    throws_key742=throws_key();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,throws_key742.getTree());
    pushFollow(FOLLOW_typeNameList_in_methodDeclaratorRest9185);
    typeNameList743=typeNameList();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,typeNameList743.getTree());
  }
break;
}
int alt219=2;
int LA219_0=input.LA(1);
if ((LA219_0 == LEFT_CURLY)) {
alt219=1;
}
 else if ((LA219_0 == SEMICOLON)) {
alt219=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",219,0,input);
throw nvae;
}
switch (alt219) {
case 1:
{
pushFollow(FOLLOW_block_in_methodDeclaratorRest9201);
block744=block();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,block744.getTree());
}
break;
case 2:
{
SEMICOLON745=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_methodDeclaratorRest9216);
if (state.failed) return retval;
if (state.backtracking == 0) {
SEMICOLON745_tree=(Object)adaptor.create(SEMICOLON745);
adaptor.addChild(root_0,SEMICOLON745_tree);
}
}
break;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
