{
  AccumulateDescr d=null;
  Token loc=null;
  BaseDescr column=null;
  String text=null;
  d=this.factory.createAccumulate();
  try {
{
      loc=(Token)this.input.LT(1);
      match(this.input,ACCUMULATE,FOLLOW_ACCUMULATE_in_accumulate_statement1958);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        d.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      match(this.input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_accumulate_statement1968);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_lhs_column_in_accumulate_statement1972);
      column=lhs_column();
      this._fsp--;
      if (this.failed) {
        return d;
      }
      match(this.input,66,FOLLOW_66_in_accumulate_statement1974);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setSourceColumn((ColumnDescr)column);
      }
      match(this.input,INIT,FOLLOW_INIT_in_accumulate_statement1983);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement1987);
      text=paren_chunk(null);
      this._fsp--;
      if (this.failed) {
        return d;
      }
      match(this.input,66,FOLLOW_66_in_accumulate_statement1990);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setInitCode(text.substring(1,text.length() - 1));
      }
      match(this.input,ACTION,FOLLOW_ACTION_in_accumulate_statement1999);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement2003);
      text=paren_chunk(null);
      this._fsp--;
      if (this.failed) {
        return d;
      }
      match(this.input,66,FOLLOW_66_in_accumulate_statement2006);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setActionCode(text.substring(1,text.length() - 1));
      }
      match(this.input,RESULT,FOLLOW_RESULT_in_accumulate_statement2015);
      if (this.failed) {
        return d;
      }
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement2019);
      text=paren_chunk(null);
      this._fsp--;
      if (this.failed) {
        return d;
      }
      loc=(Token)this.input.LT(1);
      match(this.input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_accumulate_statement2024);
      if (this.failed) {
        return d;
      }
      if (this.backtracking == 0) {
        d.setResultCode(text.substring(1,text.length() - 1));
        d.setEndCharacter(((CommonToken)loc).getStopIndex());
      }
    }
  }
 catch (  final RecognitionException re) {
    reportError(re);
    recover(this.input,re);
  }
 finally {
  }
  return d;
}
