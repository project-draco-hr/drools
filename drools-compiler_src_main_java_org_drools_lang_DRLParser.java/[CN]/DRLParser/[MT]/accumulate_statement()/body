{
  AccumulateDescr d=null;
  Token loc=null;
  BaseDescr column=null;
  String text=null;
  d=factory.createAccumulate();
  try {
{
      loc=(Token)input.LT(1);
      match(input,ACCUMULATE,FOLLOW_ACCUMULATE_in_accumulate_statement1888);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
        d.setStartCharacter(((CommonToken)loc).getStartIndex());
      }
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_accumulate_statement1898);
      if (failed)       return d;
      pushFollow(FOLLOW_lhs_column_in_accumulate_statement1902);
      column=lhs_column();
      _fsp--;
      if (failed)       return d;
      match(input,65,FOLLOW_65_in_accumulate_statement1904);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setSourceColumn((ColumnDescr)column);
      }
      match(input,INIT,FOLLOW_INIT_in_accumulate_statement1913);
      if (failed)       return d;
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement1917);
      text=paren_chunk(null);
      _fsp--;
      if (failed)       return d;
      match(input,65,FOLLOW_65_in_accumulate_statement1920);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setInitCode(text.substring(1,text.length() - 1));
      }
      match(input,ACTION,FOLLOW_ACTION_in_accumulate_statement1929);
      if (failed)       return d;
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement1933);
      text=paren_chunk(null);
      _fsp--;
      if (failed)       return d;
      match(input,65,FOLLOW_65_in_accumulate_statement1936);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setActionCode(text.substring(1,text.length() - 1));
      }
      match(input,RESULT,FOLLOW_RESULT_in_accumulate_statement1945);
      if (failed)       return d;
      pushFollow(FOLLOW_paren_chunk_in_accumulate_statement1949);
      text=paren_chunk(null);
      _fsp--;
      if (failed)       return d;
      loc=(Token)input.LT(1);
      match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_accumulate_statement1954);
      if (failed)       return d;
      if (backtracking == 0) {
        d.setResultCode(text.substring(1,text.length() - 1));
        d.setEndCharacter(((CommonToken)loc).getStopIndex());
      }
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return d;
}
