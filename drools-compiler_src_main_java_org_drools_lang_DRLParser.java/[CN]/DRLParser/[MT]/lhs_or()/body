{
  BaseDescr d=null;
  BaseDescr left=null;
  BaseDescr right=null;
  d=null;
  OrDescr or=null;
  try {
{
      pushFollow(FOLLOW_lhs_and_in_lhs_or2759);
      left=lhs_and();
      _fsp--;
      if (failed)       return d;
      if (backtracking == 0) {
        d=left;
      }
      loop42:       do {
        int alt42=2;
        int LA42_0=input.LA(1);
        if (((LA42_0 >= 53 && LA42_0 <= 54))) {
          alt42=1;
        }
switch (alt42) {
case 1:
{
            if ((input.LA(1) >= 53 && input.LA(1) <= 54)) {
              input.consume();
              errorRecovery=false;
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return d;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_lhs_or2768);
              throw mse;
            }
            pushFollow(FOLLOW_lhs_and_in_lhs_or2778);
            right=lhs_and();
            _fsp--;
            if (failed)             return d;
            if (backtracking == 0) {
              if (or == null) {
                or=new OrDescr();
                or.addDescr(left);
                d=or;
              }
              or.addDescr(right);
            }
          }
        break;
default :
      break loop42;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
