{
  BaseDescr d=null;
  BaseDescr left=null;
  BaseDescr right=null;
  d=null;
  try {
{
      OrDescr or=null;
      pushFollow(FOLLOW_lhs_and_in_lhs_or2888);
      left=lhs_and();
      _fsp--;
      d=left;
      loop46:       do {
        int alt46=2;
        int LA46_0=input.LA(1);
        if (((LA46_0 >= 57 && LA46_0 <= 58))) {
          alt46=1;
        }
switch (alt46) {
case 1:
{
            if ((input.LA(1) >= 57 && input.LA(1) <= 58)) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_lhs_or2897);
              throw mse;
            }
            pushFollow(FOLLOW_lhs_and_in_lhs_or2907);
            right=lhs_and();
            _fsp--;
            if (or == null) {
              or=new OrDescr();
              or.addDescr(left);
              d=or;
            }
            or.addDescr(right);
          }
        break;
default :
      break loop46;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
