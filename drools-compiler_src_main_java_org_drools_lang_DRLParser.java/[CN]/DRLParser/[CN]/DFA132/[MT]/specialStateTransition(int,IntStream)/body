{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA132_0=input.LA(1);
  int index132_0=input.index();
input.rewind();
s=-1;
if (((LA132_0 >= SEMICOLON && LA132_0 <= ID) || LA132_0 == STRING || (LA132_0 >= COLON && LA132_0 <= EQUALS_ASSIGN) || (LA132_0 >= COMMA && LA132_0 <= RIGHT_PAREN) || LA132_0 == DECIMAL || (LA132_0 >= DOUBLE_PIPE && LA132_0 <= DOUBLE_AMPER) || LA132_0 == EQUALS || (LA132_0 >= NOT_EQUALS && LA132_0 <= THEN) || (LA132_0 >= RIGHT_CURLY && LA132_0 <= SHIFT_RIGHT) || (LA132_0 >= INCR && LA132_0 <= MOD_ASSIGN))) {
s=1;
}
 else if ((LA132_0 == LESS)) {
s=34;
}
 else if (((LA132_0 >= GREATER && LA132_0 <= GREATER_EQUALS) || LA132_0 == LESS_EQUALS) && (synpred14_DRL())) {
s=43;
}
input.seek(index132_0);
if (s >= 0) return s;
break;
case 1:
int LA132_34=input.LA(1);
int index132_34=input.index();
input.rewind();
s=-1;
if ((synpred14_DRL())) {
s=43;
}
 else if ((true)) {
s=1;
}
input.seek(index132_34);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),132,_s,input);
error(nvae);
throw nvae;
}
