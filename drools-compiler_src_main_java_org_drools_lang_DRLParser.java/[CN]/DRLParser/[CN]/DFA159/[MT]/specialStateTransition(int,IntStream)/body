{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA159_0=input.LA(1);
  int index159_0=input.index();
input.rewind();
s=-1;
if ((LA159_0 == EOF || (LA159_0 >= SEMICOLON && LA159_0 <= ID) || (LA159_0 >= STRING && LA159_0 <= EQUALS_ASSIGN) || (LA159_0 >= COMMA && LA159_0 <= RIGHT_PAREN) || LA159_0 == DECIMAL || (LA159_0 >= DOUBLE_PIPE && LA159_0 <= DOUBLE_AMPER) || LA159_0 == EQUALS || (LA159_0 >= NOT_EQUALS && LA159_0 <= THEN) || (LA159_0 >= RIGHT_CURLY && LA159_0 <= SHIFT_RIGHT) || (LA159_0 >= INCR && LA159_0 <= MOD_ASSIGN))) {
s=1;
}
 else if ((LA159_0 == LESS)) {
s=36;
}
 else if (((LA159_0 >= GREATER && LA159_0 <= GREATER_EQUALS) || LA159_0 == LESS_EQUALS) && (synpred36_DRL())) {
s=44;
}
input.seek(index159_0);
if (s >= 0) return s;
break;
case 1:
int LA159_36=input.LA(1);
int index159_36=input.index();
input.rewind();
s=-1;
if ((synpred36_DRL())) {
s=44;
}
 else if ((true)) {
s=1;
}
input.seek(index159_36);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),159,_s,input);
error(nvae);
throw nvae;
}
