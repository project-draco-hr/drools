{
  int _s=s;
switch (s) {
case 0:
    int LA54_40=input.LA(1);
  int index54_40=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_40);
if (s >= 0) return s;
break;
case 1:
int LA54_29=input.LA(1);
int index54_29=input.index();
input.rewind();
s=-1;
if ((LA54_29 == 78)) {
s=60;
}
 else if ((LA54_29 == DOT)) {
s=61;
}
 else if ((LA54_29 == LEFT_SQUARE)) {
s=62;
}
 else if ((LA54_29 == LEFT_PAREN)) {
s=63;
}
 else if ((LA54_29 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_29 >= PACKAGE && LA54_29 <= ID) || LA54_29 == GLOBAL || LA54_29 == COMMA || (LA54_29 >= DECLARE && LA54_29 <= NULL) || (LA54_29 >= RIGHT_SQUARE && LA54_29 <= 77) || (LA54_29 >= 79 && LA54_29 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_29);
if (s >= 0) return s;
break;
case 2:
int LA54_27=input.LA(1);
int index54_27=input.index();
input.rewind();
s=-1;
if ((LA54_27 == 78)) {
s=56;
}
 else if ((LA54_27 == DOT)) {
s=57;
}
 else if ((LA54_27 == LEFT_SQUARE)) {
s=58;
}
 else if ((LA54_27 == LEFT_PAREN)) {
s=59;
}
 else if ((LA54_27 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_27 >= PACKAGE && LA54_27 <= ID) || LA54_27 == GLOBAL || LA54_27 == COMMA || (LA54_27 >= DECLARE && LA54_27 <= NULL) || (LA54_27 >= RIGHT_SQUARE && LA54_27 <= 77) || (LA54_27 >= 79 && LA54_27 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_27);
if (s >= 0) return s;
break;
case 3:
int LA54_11=input.LA(1);
int index54_11=input.index();
input.rewind();
s=-1;
if ((LA54_11 == 78)) {
s=32;
}
 else if ((LA54_11 == DOT)) {
s=33;
}
 else if ((LA54_11 == LEFT_SQUARE)) {
s=34;
}
 else if ((LA54_11 == LEFT_PAREN)) {
s=35;
}
 else if ((LA54_11 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_11 >= PACKAGE && LA54_11 <= ID) || LA54_11 == GLOBAL || LA54_11 == COMMA || (LA54_11 >= DECLARE && LA54_11 <= NULL) || (LA54_11 >= RIGHT_SQUARE && LA54_11 <= 77) || (LA54_11 >= 79 && LA54_11 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_11);
if (s >= 0) return s;
break;
case 4:
int LA54_35=input.LA(1);
int index54_35=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_35);
if (s >= 0) return s;
break;
case 5:
int LA54_63=input.LA(1);
int index54_63=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_63);
if (s >= 0) return s;
break;
case 6:
int LA54_7=input.LA(1);
int index54_7=input.index();
input.rewind();
s=-1;
if ((LA54_7 == LEFT_PAREN)) {
s=26;
}
 else if ((LA54_7 == ID)) {
s=27;
}
 else if ((LA54_7 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_7 >= PACKAGE && LA54_7 <= FUNCTION) || (LA54_7 >= DOT && LA54_7 <= GLOBAL) || LA54_7 == COMMA || (LA54_7 >= DECLARE && LA54_7 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_7);
if (s >= 0) return s;
break;
case 7:
int LA54_31=input.LA(1);
int index54_31=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_31);
if (s >= 0) return s;
break;
case 8:
int LA54_18=input.LA(1);
int index54_18=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_18);
if (s >= 0) return s;
break;
case 9:
int LA54_34=input.LA(1);
int index54_34=input.index();
input.rewind();
s=-1;
if ((LA54_34 == RIGHT_SQUARE)) {
s=68;
}
 else if ((LA54_34 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_34 >= PACKAGE && LA54_34 <= GLOBAL) || LA54_34 == COMMA || (LA54_34 >= DECLARE && LA54_34 <= LEFT_SQUARE) || (LA54_34 >= THEN && LA54_34 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_34 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_34);
if (s >= 0) return s;
break;
case 10:
int LA54_58=input.LA(1);
int index54_58=input.index();
input.rewind();
s=-1;
if ((LA54_58 == RIGHT_SQUARE)) {
s=96;
}
 else if ((LA54_58 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_58 >= PACKAGE && LA54_58 <= GLOBAL) || LA54_58 == COMMA || (LA54_58 >= DECLARE && LA54_58 <= LEFT_SQUARE) || (LA54_58 >= THEN && LA54_58 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_58 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_58);
if (s >= 0) return s;
break;
case 11:
int LA54_62=input.LA(1);
int index54_62=input.index();
input.rewind();
s=-1;
if ((LA54_62 == RIGHT_SQUARE)) {
s=100;
}
 else if ((LA54_62 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_62 >= PACKAGE && LA54_62 <= GLOBAL) || LA54_62 == COMMA || (LA54_62 >= DECLARE && LA54_62 <= LEFT_SQUARE) || (LA54_62 >= THEN && LA54_62 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_62 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_62);
if (s >= 0) return s;
break;
case 12:
int LA54_43=input.LA(1);
int index54_43=input.index();
input.rewind();
s=-1;
if (((LA54_43 >= PACKAGE && LA54_43 <= ID) || LA54_43 == GLOBAL || (LA54_43 >= QUERY && LA54_43 <= ATTRIBUTES) || LA54_43 == ENABLED || LA54_43 == SALIENCE || (LA54_43 >= DURATION && LA54_43 <= DIALECT) || LA54_43 == FROM || (LA54_43 >= INIT && LA54_43 <= RESULT) || LA54_43 == IN || (LA54_43 >= THEN && LA54_43 <= EVENT))) {
s=79;
}
 else if ((LA54_43 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_43 == DOT || LA54_43 == COMMA || (LA54_43 >= DECLARE && LA54_43 <= STRING) || (LA54_43 >= DATE_EFFECTIVE && LA54_43 <= DATE_EXPIRES) || LA54_43 == BOOL || (LA54_43 >= INT && LA54_43 <= AGENDA_GROUP) || (LA54_43 >= LOCK_ON_ACTIVE && LA54_43 <= DOUBLE_AMPER) || (LA54_43 >= EXISTS && LA54_43 <= ACCUMULATE) || (LA54_43 >= COLLECT && LA54_43 <= TILDE) || (LA54_43 >= FLOAT && LA54_43 <= RIGHT_SQUARE) || (LA54_43 >= EOL && LA54_43 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_43 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_43);
if (s >= 0) return s;
break;
case 13:
int LA54_9=input.LA(1);
int index54_9=input.index();
input.rewind();
s=-1;
if ((LA54_9 == LEFT_PAREN)) {
s=30;
}
 else if ((LA54_9 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_9 >= PACKAGE && LA54_9 <= GLOBAL) || LA54_9 == COMMA || (LA54_9 >= DECLARE && LA54_9 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_9);
if (s >= 0) return s;
break;
case 14:
int LA54_50=input.LA(1);
int index54_50=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_50);
if (s >= 0) return s;
break;
case 15:
int LA54_39=input.LA(1);
int index54_39=input.index();
input.rewind();
s=-1;
if ((LA54_39 == 78)) {
s=73;
}
 else if ((LA54_39 == DOT)) {
s=74;
}
 else if ((LA54_39 == LEFT_SQUARE)) {
s=75;
}
 else if ((LA54_39 == LEFT_PAREN)) {
s=76;
}
 else if ((LA54_39 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_39 >= PACKAGE && LA54_39 <= ID) || LA54_39 == GLOBAL || LA54_39 == COMMA || (LA54_39 >= DECLARE && LA54_39 <= NULL) || (LA54_39 >= RIGHT_SQUARE && LA54_39 <= 77) || (LA54_39 >= 79 && LA54_39 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_39);
if (s >= 0) return s;
break;
case 16:
int LA54_36=input.LA(1);
int index54_36=input.index();
input.rewind();
s=-1;
if ((LA54_36 == 78)) {
s=69;
}
 else if ((LA54_36 == DOT)) {
s=70;
}
 else if ((LA54_36 == LEFT_SQUARE)) {
s=71;
}
 else if ((LA54_36 == LEFT_PAREN)) {
s=72;
}
 else if ((LA54_36 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_36 >= PACKAGE && LA54_36 <= ID) || LA54_36 == GLOBAL || LA54_36 == COMMA || (LA54_36 >= DECLARE && LA54_36 <= NULL) || (LA54_36 >= RIGHT_SQUARE && LA54_36 <= 77) || (LA54_36 >= 79 && LA54_36 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_36);
if (s >= 0) return s;
break;
case 17:
int LA54_19=input.LA(1);
int index54_19=input.index();
input.rewind();
s=-1;
if ((LA54_19 == 78)) {
s=42;
}
 else if ((LA54_19 == DOT)) {
s=43;
}
 else if ((LA54_19 == LEFT_SQUARE)) {
s=44;
}
 else if ((LA54_19 == LEFT_PAREN)) {
s=45;
}
 else if ((LA54_19 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_19 >= PACKAGE && LA54_19 <= ID) || LA54_19 == GLOBAL || LA54_19 == COMMA || (LA54_19 >= DECLARE && LA54_19 <= NULL) || (LA54_19 >= RIGHT_SQUARE && LA54_19 <= 77) || (LA54_19 >= 79 && LA54_19 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_19);
if (s >= 0) return s;
break;
case 18:
int LA54_8=input.LA(1);
int index54_8=input.index();
input.rewind();
s=-1;
if ((LA54_8 == LEFT_PAREN)) {
s=28;
}
 else if ((LA54_8 == ID)) {
s=29;
}
 else if ((LA54_8 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_8 >= PACKAGE && LA54_8 <= FUNCTION) || (LA54_8 >= DOT && LA54_8 <= GLOBAL) || LA54_8 == COMMA || (LA54_8 >= DECLARE && LA54_8 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_8);
if (s >= 0) return s;
break;
case 19:
int LA54_52=input.LA(1);
int index54_52=input.index();
input.rewind();
s=-1;
if ((LA54_52 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_52 == ID)) {
s=89;
}
 else if ((LA54_52 == LEFT_PAREN)) {
s=90;
}
 else if (((LA54_52 >= PACKAGE && LA54_52 <= FUNCTION) || (LA54_52 >= DOT && LA54_52 <= GLOBAL) || LA54_52 == COMMA || (LA54_52 >= DECLARE && LA54_52 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_52);
if (s >= 0) return s;
break;
case 20:
int LA54_2=input.LA(1);
int index54_2=input.index();
input.rewind();
s=-1;
if ((LA54_2 == AND)) {
s=4;
}
 else if ((LA54_2 == OR)) {
s=5;
}
 else if ((LA54_2 == LEFT_PAREN)) {
s=6;
}
 else if ((LA54_2 == EXISTS)) {
s=7;
}
 else if ((LA54_2 == NOT)) {
s=8;
}
 else if ((LA54_2 == EVAL)) {
s=9;
}
 else if ((LA54_2 == FORALL)) {
s=10;
}
 else if ((LA54_2 == ID)) {
s=11;
}
 else if (((LA54_2 >= PACKAGE && LA54_2 <= FUNCTION) || (LA54_2 >= DOT && LA54_2 <= GLOBAL) || LA54_2 == COMMA || (LA54_2 >= DECLARE && LA54_2 <= LOCK_ON_ACTIVE) || LA54_2 == DOUBLE_PIPE || (LA54_2 >= DOUBLE_AMPER && LA54_2 <= FROM) || (LA54_2 >= ACCUMULATE && LA54_2 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_2 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
input.seek(index54_2);
if (s >= 0) return s;
break;
case 21:
int LA54_59=input.LA(1);
int index54_59=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_59);
if (s >= 0) return s;
break;
case 22:
int LA54_20=input.LA(1);
int index54_20=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_20);
if (s >= 0) return s;
break;
case 23:
int LA54_46=input.LA(1);
int index54_46=input.index();
input.rewind();
s=-1;
if ((LA54_46 == 78)) {
s=81;
}
 else if ((LA54_46 == DOT)) {
s=82;
}
 else if ((LA54_46 == LEFT_SQUARE)) {
s=83;
}
 else if ((LA54_46 == LEFT_PAREN)) {
s=84;
}
 else if ((LA54_46 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_46 >= PACKAGE && LA54_46 <= ID) || LA54_46 == GLOBAL || LA54_46 == COMMA || (LA54_46 >= DECLARE && LA54_46 <= NULL) || (LA54_46 >= RIGHT_SQUARE && LA54_46 <= 77) || (LA54_46 >= 79 && LA54_46 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_46);
if (s >= 0) return s;
break;
case 24:
int LA54_25=input.LA(1);
int index54_25=input.index();
input.rewind();
s=-1;
if ((LA54_25 == 78)) {
s=52;
}
 else if ((LA54_25 == DOT)) {
s=53;
}
 else if ((LA54_25 == LEFT_SQUARE)) {
s=54;
}
 else if ((LA54_25 == LEFT_PAREN)) {
s=55;
}
 else if ((LA54_25 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_25 >= PACKAGE && LA54_25 <= ID) || LA54_25 == GLOBAL || LA54_25 == COMMA || (LA54_25 >= DECLARE && LA54_25 <= NULL) || (LA54_25 >= RIGHT_SQUARE && LA54_25 <= 77) || (LA54_25 >= 79 && LA54_25 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_25);
if (s >= 0) return s;
break;
case 25:
int LA54_49=input.LA(1);
int index54_49=input.index();
input.rewind();
s=-1;
if ((LA54_49 == 78)) {
s=85;
}
 else if ((LA54_49 == DOT)) {
s=86;
}
 else if ((LA54_49 == LEFT_SQUARE)) {
s=87;
}
 else if ((LA54_49 == LEFT_PAREN)) {
s=88;
}
 else if ((LA54_49 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_49 >= PACKAGE && LA54_49 <= ID) || LA54_49 == GLOBAL || LA54_49 == COMMA || (LA54_49 >= DECLARE && LA54_49 <= NULL) || (LA54_49 >= RIGHT_SQUARE && LA54_49 <= 77) || (LA54_49 >= 79 && LA54_49 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_49);
if (s >= 0) return s;
break;
case 26:
int LA54_64=input.LA(1);
int index54_64=input.index();
input.rewind();
s=-1;
if ((LA54_64 == DOT)) {
s=101;
}
 else if ((LA54_64 == LEFT_SQUARE)) {
s=102;
}
 else if ((LA54_64 == LEFT_PAREN)) {
s=103;
}
 else if ((LA54_64 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_64 >= PACKAGE && LA54_64 <= ID) || LA54_64 == GLOBAL || LA54_64 == COMMA || (LA54_64 >= DECLARE && LA54_64 <= NULL) || (LA54_64 >= RIGHT_SQUARE && LA54_64 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_64);
if (s >= 0) return s;
break;
case 27:
int LA54_24=input.LA(1);
int index54_24=input.index();
input.rewind();
s=-1;
if ((LA54_24 == LEFT_PAREN)) {
s=51;
}
 else if ((LA54_24 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_24 >= PACKAGE && LA54_24 <= GLOBAL) || LA54_24 == COMMA || (LA54_24 >= DECLARE && LA54_24 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_24);
if (s >= 0) return s;
break;
case 28:
int LA54_55=input.LA(1);
int index54_55=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_55);
if (s >= 0) return s;
break;
case 29:
int LA54_22=input.LA(1);
int index54_22=input.index();
input.rewind();
s=-1;
if ((LA54_22 == LEFT_PAREN)) {
s=48;
}
 else if ((LA54_22 == ID)) {
s=49;
}
 else if ((LA54_22 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_22 >= PACKAGE && LA54_22 <= FUNCTION) || (LA54_22 >= DOT && LA54_22 <= GLOBAL) || LA54_22 == COMMA || (LA54_22 >= DECLARE && LA54_22 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_22);
if (s >= 0) return s;
break;
case 30:
int LA54_30=input.LA(1);
int index54_30=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_30);
if (s >= 0) return s;
break;
case 31:
int LA54_17=input.LA(1);
int index54_17=input.index();
input.rewind();
s=-1;
if ((LA54_17 == LEFT_PAREN)) {
s=41;
}
 else if ((LA54_17 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_17 >= PACKAGE && LA54_17 <= GLOBAL) || LA54_17 == COMMA || (LA54_17 >= DECLARE && LA54_17 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_17);
if (s >= 0) return s;
break;
case 32:
int LA54_51=input.LA(1);
int index54_51=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_51);
if (s >= 0) return s;
break;
case 33:
int LA54_16=input.LA(1);
int index54_16=input.index();
input.rewind();
s=-1;
if ((LA54_16 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_16 >= PACKAGE && LA54_16 <= GLOBAL) || LA54_16 == COMMA || (LA54_16 >= DECLARE && LA54_16 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_16 == LEFT_PAREN)) {
s=40;
}
input.seek(index54_16);
if (s >= 0) return s;
break;
case 34:
int LA54_65=input.LA(1);
int index54_65=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_65);
if (s >= 0) return s;
break;
case 35:
int LA54_4=input.LA(1);
int index54_4=input.index();
input.rewind();
s=-1;
if ((LA54_4 == EXISTS)) {
s=14;
}
 else if ((LA54_4 == NOT)) {
s=15;
}
 else if ((LA54_4 == EVAL)) {
s=16;
}
 else if ((LA54_4 == FORALL)) {
s=17;
}
 else if ((LA54_4 == LEFT_PAREN)) {
s=18;
}
 else if ((LA54_4 == ID)) {
s=19;
}
 else if ((LA54_4 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_4 >= PACKAGE && LA54_4 <= FUNCTION) || (LA54_4 >= DOT && LA54_4 <= GLOBAL) || LA54_4 == COMMA || (LA54_4 >= DECLARE && LA54_4 <= FROM) || (LA54_4 >= ACCUMULATE && LA54_4 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_4);
if (s >= 0) return s;
break;
case 36:
int LA54_32=input.LA(1);
int index54_32=input.index();
input.rewind();
s=-1;
if ((LA54_32 == ID)) {
s=64;
}
 else if ((LA54_32 == LEFT_PAREN)) {
s=65;
}
 else if ((LA54_32 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_32 >= PACKAGE && LA54_32 <= FUNCTION) || (LA54_32 >= DOT && LA54_32 <= GLOBAL) || LA54_32 == COMMA || (LA54_32 >= DECLARE && LA54_32 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_32);
if (s >= 0) return s;
break;
case 37:
int LA54_56=input.LA(1);
int index54_56=input.index();
input.rewind();
s=-1;
if ((LA54_56 == ID)) {
s=93;
}
 else if ((LA54_56 == LEFT_PAREN)) {
s=94;
}
 else if ((LA54_56 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_56 >= PACKAGE && LA54_56 <= FUNCTION) || (LA54_56 >= DOT && LA54_56 <= GLOBAL) || LA54_56 == COMMA || (LA54_56 >= DECLARE && LA54_56 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_56);
if (s >= 0) return s;
break;
case 38:
int LA54_60=input.LA(1);
int index54_60=input.index();
input.rewind();
s=-1;
if ((LA54_60 == ID)) {
s=97;
}
 else if ((LA54_60 == LEFT_PAREN)) {
s=98;
}
 else if ((LA54_60 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_60 >= PACKAGE && LA54_60 <= FUNCTION) || (LA54_60 >= DOT && LA54_60 <= GLOBAL) || LA54_60 == COMMA || (LA54_60 >= DECLARE && LA54_60 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_60);
if (s >= 0) return s;
break;
case 39:
int LA54_5=input.LA(1);
int index54_5=input.index();
input.rewind();
s=-1;
if ((LA54_5 == LEFT_PAREN)) {
s=20;
}
 else if ((LA54_5 == EXISTS)) {
s=21;
}
 else if ((LA54_5 == NOT)) {
s=22;
}
 else if ((LA54_5 == EVAL)) {
s=23;
}
 else if ((LA54_5 == FORALL)) {
s=24;
}
 else if ((LA54_5 == ID)) {
s=25;
}
 else if ((LA54_5 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_5 >= PACKAGE && LA54_5 <= FUNCTION) || (LA54_5 >= DOT && LA54_5 <= GLOBAL) || LA54_5 == COMMA || (LA54_5 >= DECLARE && LA54_5 <= FROM) || (LA54_5 >= ACCUMULATE && LA54_5 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_5);
if (s >= 0) return s;
break;
case 40:
int LA54_14=input.LA(1);
int index54_14=input.index();
input.rewind();
s=-1;
if ((LA54_14 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_14 == ID)) {
s=36;
}
 else if ((LA54_14 == LEFT_PAREN)) {
s=37;
}
 else if (((LA54_14 >= PACKAGE && LA54_14 <= FUNCTION) || (LA54_14 >= DOT && LA54_14 <= GLOBAL) || LA54_14 == COMMA || (LA54_14 >= DECLARE && LA54_14 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_14);
if (s >= 0) return s;
break;
case 41:
int LA54_48=input.LA(1);
int index54_48=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_48);
if (s >= 0) return s;
break;
case 42:
int LA54_28=input.LA(1);
int index54_28=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_28);
if (s >= 0) return s;
break;
case 43:
int LA54_0=input.LA(1);
int index54_0=input.index();
input.rewind();
s=-1;
if ((LA54_0 == LEFT_SQUARE) && (synpred9())) {
s=1;
}
 else if ((LA54_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA54_0 >= ID && LA54_0 <= DOT) || (LA54_0 >= COMMA && LA54_0 <= RIGHT_PAREN) || LA54_0 == END || (LA54_0 >= OR && LA54_0 <= DOUBLE_AMPER) || (LA54_0 >= EXISTS && LA54_0 <= FORALL) || LA54_0 == INIT || LA54_0 == THEN || LA54_0 == 76)) {
s=3;
}
input.seek(index54_0);
if (s >= 0) return s;
break;
case 44:
int LA54_21=input.LA(1);
int index54_21=input.index();
input.rewind();
s=-1;
if ((LA54_21 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_21 == ID)) {
s=46;
}
 else if ((LA54_21 == LEFT_PAREN)) {
s=47;
}
 else if (((LA54_21 >= PACKAGE && LA54_21 <= FUNCTION) || (LA54_21 >= DOT && LA54_21 <= GLOBAL) || LA54_21 == COMMA || (LA54_21 >= DECLARE && LA54_21 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_21);
if (s >= 0) return s;
break;
case 45:
int LA54_53=input.LA(1);
int index54_53=input.index();
input.rewind();
s=-1;
if (((LA54_53 >= PACKAGE && LA54_53 <= ID) || LA54_53 == GLOBAL || (LA54_53 >= QUERY && LA54_53 <= ATTRIBUTES) || LA54_53 == ENABLED || LA54_53 == SALIENCE || (LA54_53 >= DURATION && LA54_53 <= DIALECT) || LA54_53 == FROM || (LA54_53 >= INIT && LA54_53 <= RESULT) || LA54_53 == IN || (LA54_53 >= THEN && LA54_53 <= EVENT))) {
s=91;
}
 else if ((LA54_53 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_53 == DOT || LA54_53 == COMMA || (LA54_53 >= DECLARE && LA54_53 <= STRING) || (LA54_53 >= DATE_EFFECTIVE && LA54_53 <= DATE_EXPIRES) || LA54_53 == BOOL || (LA54_53 >= INT && LA54_53 <= AGENDA_GROUP) || (LA54_53 >= LOCK_ON_ACTIVE && LA54_53 <= DOUBLE_AMPER) || (LA54_53 >= EXISTS && LA54_53 <= ACCUMULATE) || (LA54_53 >= COLLECT && LA54_53 <= TILDE) || (LA54_53 >= FLOAT && LA54_53 <= RIGHT_SQUARE) || (LA54_53 >= EOL && LA54_53 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_53 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_53);
if (s >= 0) return s;
break;
case 46:
int LA54_47=input.LA(1);
int index54_47=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_47);
if (s >= 0) return s;
break;
case 47:
int LA54_54=input.LA(1);
int index54_54=input.index();
input.rewind();
s=-1;
if ((LA54_54 == RIGHT_SQUARE)) {
s=92;
}
 else if ((LA54_54 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_54 >= PACKAGE && LA54_54 <= GLOBAL) || LA54_54 == COMMA || (LA54_54 >= DECLARE && LA54_54 <= LEFT_SQUARE) || (LA54_54 >= THEN && LA54_54 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_54 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_54);
if (s >= 0) return s;
break;
case 48:
int LA54_41=input.LA(1);
int index54_41=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_41);
if (s >= 0) return s;
break;
case 49:
int LA54_38=input.LA(1);
int index54_38=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_38);
if (s >= 0) return s;
break;
case 50:
int LA54_23=input.LA(1);
int index54_23=input.index();
input.rewind();
s=-1;
if ((LA54_23 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_23 >= PACKAGE && LA54_23 <= GLOBAL) || LA54_23 == COMMA || (LA54_23 >= DECLARE && LA54_23 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_23 == LEFT_PAREN)) {
s=50;
}
input.seek(index54_23);
if (s >= 0) return s;
break;
case 51:
int LA54_42=input.LA(1);
int index54_42=input.index();
input.rewind();
s=-1;
if ((LA54_42 == ID)) {
s=77;
}
 else if ((LA54_42 == LEFT_PAREN)) {
s=78;
}
 else if ((LA54_42 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_42 >= PACKAGE && LA54_42 <= FUNCTION) || (LA54_42 >= DOT && LA54_42 <= GLOBAL) || LA54_42 == COMMA || (LA54_42 >= DECLARE && LA54_42 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_42);
if (s >= 0) return s;
break;
case 52:
int LA54_66=input.LA(1);
int index54_66=input.index();
input.rewind();
s=-1;
if ((LA54_66 == LEFT_SQUARE)) {
s=34;
}
 else if ((LA54_66 == LEFT_PAREN)) {
s=35;
}
 else if ((LA54_66 == DOT)) {
s=33;
}
 else if ((LA54_66 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_66 >= PACKAGE && LA54_66 <= ID) || LA54_66 == GLOBAL || LA54_66 == COMMA || (LA54_66 >= DECLARE && LA54_66 <= NULL) || (LA54_66 >= RIGHT_SQUARE && LA54_66 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_66);
if (s >= 0) return s;
break;
case 53:
int LA54_26=input.LA(1);
int index54_26=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_26);
if (s >= 0) return s;
break;
case 54:
int LA54_15=input.LA(1);
int index54_15=input.index();
input.rewind();
s=-1;
if ((LA54_15 == LEFT_PAREN)) {
s=38;
}
 else if ((LA54_15 == ID)) {
s=39;
}
 else if ((LA54_15 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_15 >= PACKAGE && LA54_15 <= FUNCTION) || (LA54_15 >= DOT && LA54_15 <= GLOBAL) || LA54_15 == COMMA || (LA54_15 >= DECLARE && LA54_15 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_15);
if (s >= 0) return s;
break;
case 55:
int LA54_37=input.LA(1);
int index54_37=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_37);
if (s >= 0) return s;
break;
case 56:
int LA54_6=input.LA(1);
int index54_6=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index54_6);
if (s >= 0) return s;
break;
case 57:
int LA54_44=input.LA(1);
int index54_44=input.index();
input.rewind();
s=-1;
if ((LA54_44 == RIGHT_SQUARE)) {
s=80;
}
 else if ((LA54_44 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_44 >= PACKAGE && LA54_44 <= GLOBAL) || LA54_44 == COMMA || (LA54_44 >= DECLARE && LA54_44 <= LEFT_SQUARE) || (LA54_44 >= THEN && LA54_44 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_44 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_44);
if (s >= 0) return s;
break;
case 58:
int LA54_33=input.LA(1);
int index54_33=input.index();
input.rewind();
s=-1;
if (((LA54_33 >= PACKAGE && LA54_33 <= ID) || LA54_33 == GLOBAL || (LA54_33 >= QUERY && LA54_33 <= ATTRIBUTES) || LA54_33 == ENABLED || LA54_33 == SALIENCE || (LA54_33 >= DURATION && LA54_33 <= DIALECT) || LA54_33 == FROM || (LA54_33 >= INIT && LA54_33 <= RESULT) || LA54_33 == IN || (LA54_33 >= THEN && LA54_33 <= EVENT))) {
s=66;
}
 else if ((LA54_33 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_33 == DOT || LA54_33 == COMMA || (LA54_33 >= DECLARE && LA54_33 <= STRING) || (LA54_33 >= DATE_EFFECTIVE && LA54_33 <= DATE_EXPIRES) || LA54_33 == BOOL || (LA54_33 >= INT && LA54_33 <= AGENDA_GROUP) || (LA54_33 >= LOCK_ON_ACTIVE && LA54_33 <= DOUBLE_AMPER) || (LA54_33 >= EXISTS && LA54_33 <= ACCUMULATE) || (LA54_33 >= COLLECT && LA54_33 <= TILDE) || (LA54_33 >= FLOAT && LA54_33 <= RIGHT_SQUARE) || (LA54_33 >= EOL && LA54_33 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_33 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_33);
if (s >= 0) return s;
break;
case 59:
int LA54_57=input.LA(1);
int index54_57=input.index();
input.rewind();
s=-1;
if (((LA54_57 >= PACKAGE && LA54_57 <= ID) || LA54_57 == GLOBAL || (LA54_57 >= QUERY && LA54_57 <= ATTRIBUTES) || LA54_57 == ENABLED || LA54_57 == SALIENCE || (LA54_57 >= DURATION && LA54_57 <= DIALECT) || LA54_57 == FROM || (LA54_57 >= INIT && LA54_57 <= RESULT) || LA54_57 == IN || (LA54_57 >= THEN && LA54_57 <= EVENT))) {
s=95;
}
 else if ((LA54_57 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if ((LA54_57 == DOT || LA54_57 == COMMA || (LA54_57 >= DECLARE && LA54_57 <= STRING) || (LA54_57 >= DATE_EFFECTIVE && LA54_57 <= DATE_EXPIRES) || LA54_57 == BOOL || (LA54_57 >= INT && LA54_57 <= AGENDA_GROUP) || (LA54_57 >= LOCK_ON_ACTIVE && LA54_57 <= DOUBLE_AMPER) || (LA54_57 >= EXISTS && LA54_57 <= ACCUMULATE) || (LA54_57 >= COLLECT && LA54_57 <= TILDE) || (LA54_57 >= FLOAT && LA54_57 <= RIGHT_SQUARE) || (LA54_57 >= EOL && LA54_57 <= 85)) && (synpred10())) {
s=12;
}
 else if ((LA54_57 == LEFT_PAREN) && (synpred10())) {
s=67;
}
input.seek(index54_57);
if (s >= 0) return s;
break;
case 60:
int LA54_61=input.LA(1);
int index54_61=input.index();
input.rewind();
s=-1;
if ((LA54_61 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_61 >= PACKAGE && LA54_61 <= ID) || LA54_61 == GLOBAL || (LA54_61 >= QUERY && LA54_61 <= ATTRIBUTES) || LA54_61 == ENABLED || LA54_61 == SALIENCE || (LA54_61 >= DURATION && LA54_61 <= DIALECT) || LA54_61 == FROM || (LA54_61 >= INIT && LA54_61 <= RESULT) || LA54_61 == IN || (LA54_61 >= THEN && LA54_61 <= EVENT))) {
s=99;
}
 else if ((LA54_61 == LEFT_PAREN) && (synpred10())) {
s=67;
}
 else if ((LA54_61 == DOT || LA54_61 == COMMA || (LA54_61 >= DECLARE && LA54_61 <= STRING) || (LA54_61 >= DATE_EFFECTIVE && LA54_61 <= DATE_EXPIRES) || LA54_61 == BOOL || (LA54_61 >= INT && LA54_61 <= AGENDA_GROUP) || (LA54_61 >= LOCK_ON_ACTIVE && LA54_61 <= DOUBLE_AMPER) || (LA54_61 >= EXISTS && LA54_61 <= ACCUMULATE) || (LA54_61 >= COLLECT && LA54_61 <= TILDE) || (LA54_61 >= FLOAT && LA54_61 <= RIGHT_SQUARE) || (LA54_61 >= EOL && LA54_61 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_61);
if (s >= 0) return s;
break;
case 61:
int LA54_45=input.LA(1);
int index54_45=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index54_45);
if (s >= 0) return s;
break;
case 62:
int LA54_10=input.LA(1);
int index54_10=input.index();
input.rewind();
s=-1;
if ((LA54_10 == LEFT_PAREN)) {
s=31;
}
 else if ((LA54_10 == RIGHT_PAREN) && (synpred10())) {
s=13;
}
 else if (((LA54_10 >= PACKAGE && LA54_10 <= GLOBAL) || LA54_10 == COMMA || (LA54_10 >= DECLARE && LA54_10 <= 85)) && (synpred10())) {
s=12;
}
input.seek(index54_10);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),54,_s,input);
error(nvae);
throw nvae;
}
