{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA46_1=input.LA(1);
  int index46_1=input.index();
input.rewind();
s=-1;
if ((((helper.validateIdentifierKey(DroolsSoftKeywords.EXISTS))))) {
s=3;
}
 else if ((((helper.validateNotWithBinding()) && ((helper.validateIdentifierKey(DroolsSoftKeywords.NOT)))))) {
s=4;
}
 else if ((((helper.validateIdentifierKey(DroolsSoftKeywords.NOT))))) {
s=5;
}
 else if ((((helper.validateIdentifierKey(DroolsSoftKeywords.EVAL))))) {
s=6;
}
 else if ((((helper.validateIdentifierKey(DroolsSoftKeywords.FORALL))))) {
s=7;
}
 else if ((((helper.validateIdentifierKey(DroolsSoftKeywords.FOR))))) {
s=8;
}
 else if ((true)) {
s=9;
}
input.seek(index46_1);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),46,_s,input);
error(nvae);
throw nvae;
}
