{
  int _s=s;
switch (s) {
case 0:
    int LA36_28=input.LA(1);
  int index36_28=input.index();
input.rewind();
s=-1;
if ((LA36_28 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=30;
}
 else if ((LA36_28 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=23;
}
 else if (((LA36_28 >= VT_COMPILATION_UNIT && LA36_28 <= STRING) || (LA36_28 >= COMMA && LA36_28 <= NULL) || (LA36_28 >= RIGHT_SQUARE && LA36_28 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_28);
if (s >= 0) return s;
break;
case 1:
int LA36_17=input.LA(1);
int index36_17=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_17);
if (s >= 0) return s;
break;
case 2:
int LA36_21=input.LA(1);
int index36_21=input.index();
input.rewind();
s=-1;
if ((LA36_21 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=26;
}
 else if ((LA36_21 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=16;
}
 else if (((LA36_21 >= VT_COMPILATION_UNIT && LA36_21 <= STRING) || (LA36_21 >= COMMA && LA36_21 <= NULL) || (LA36_21 >= RIGHT_SQUARE && LA36_21 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_21);
if (s >= 0) return s;
break;
case 3:
int LA36_27=input.LA(1);
int index36_27=input.index();
input.rewind();
s=-1;
if ((LA36_27 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=23;
}
 else if ((LA36_27 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=29;
}
 else if ((LA36_27 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=22;
}
 else if (((LA36_27 >= VT_COMPILATION_UNIT && LA36_27 <= ID) || (LA36_27 >= DOT_STAR && LA36_27 <= STRING) || (LA36_27 >= COMMA && LA36_27 <= NULL)|| (LA36_27 >= RIGHT_SQUARE && LA36_27 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_27);
if (s >= 0) return s;
break;
case 4:
int LA36_20=input.LA(1);
int index36_20=input.index();
input.rewind();
s=-1;
if ((LA36_20 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=16;
}
 else if ((LA36_20 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=25;
}
 else if ((LA36_20 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=15;
}
 else if (((LA36_20 >= VT_COMPILATION_UNIT && LA36_20 <= ID) || (LA36_20 >= DOT_STAR && LA36_20 <= STRING) || (LA36_20 >= COMMA && LA36_20 <= NULL)|| (LA36_20 >= RIGHT_SQUARE && LA36_20 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_20);
if (s >= 0) return s;
break;
case 5:
int LA36_18=input.LA(1);
int index36_18=input.index();
input.rewind();
s=-1;
if ((LA36_18 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=22;
}
 else if ((LA36_18 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=23;
}
 else if ((LA36_18 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=24;
}
 else if (((LA36_18 >= VT_COMPILATION_UNIT && LA36_18 <= ID) || (LA36_18 >= DOT_STAR && LA36_18 <= STRING) || (LA36_18 >= COMMA && LA36_18 <= NULL)|| (LA36_18 >= RIGHT_SQUARE && LA36_18 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_18);
if (s >= 0) return s;
break;
case 6:
int LA36_16=input.LA(1);
int index36_16=input.index();
input.rewind();
s=-1;
if ((LA36_16 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=21;
}
 else if (((LA36_16 >= VT_COMPILATION_UNIT && LA36_16 <= LEFT_SQUARE) || (LA36_16 >= THEN && LA36_16 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_16);
if (s >= 0) return s;
break;
case 7:
int LA36_23=input.LA(1);
int index36_23=input.index();
input.rewind();
s=-1;
if ((LA36_23 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=28;
}
 else if (((LA36_23 >= VT_COMPILATION_UNIT && LA36_23 <= LEFT_SQUARE) || (LA36_23 >= THEN && LA36_23 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_23);
if (s >= 0) return s;
break;
case 8:
int LA36_11=input.LA(1);
int index36_11=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_11);
if (s >= 0) return s;
break;
case 9:
int LA36_30=input.LA(1);
int index36_30=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_30);
if (s >= 0) return s;
break;
case 10:
int LA36_29=input.LA(1);
int index36_29=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_29);
if (s >= 0) return s;
break;
case 11:
int LA36_24=input.LA(1);
int index36_24=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_24);
if (s >= 0) return s;
break;
case 12:
int LA36_14=input.LA(1);
int index36_14=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_14);
if (s >= 0) return s;
break;
case 13:
int LA36_0=input.LA(1);
int index36_0=input.index();
input.rewind();
s=-1;
if ((LA36_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.DURATION))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.ENABLED))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))))) {
s=1;
}
 else if ((LA36_0 == THEN)) {
s=2;
}
 else if ((LA36_0 == COMMA)) {
s=3;
}
input.seek(index36_0);
if (s >= 0) return s;
break;
case 14:
int LA36_19=input.LA(1);
int index36_19=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_19);
if (s >= 0) return s;
break;
case 15:
int LA36_1=input.LA(1);
int index36_1=input.index();
input.rewind();
s=-1;
if ((LA36_1 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=4;
}
 else if ((LA36_1 == STRING) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=5;
}
 else if ((LA36_1 == BOOL) && ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
 else if ((LA36_1 == ID || LA36_1 == COLON || LA36_1 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
 else if ((LA36_1 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=8;
}
 else if ((LA36_1 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
s=9;
}
input.seek(index36_1);
if (s >= 0) return s;
break;
case 16:
int LA36_10=input.LA(1);
int index36_10=input.index();
input.rewind();
s=-1;
if ((LA36_10 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=13;
}
 else if ((LA36_10 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=14;
}
 else if ((LA36_10 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=15;
}
 else if ((LA36_10 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=16;
}
 else if ((LA36_10 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=17;
}
 else if (((LA36_10 >= VT_COMPILATION_UNIT && LA36_10 <= SEMICOLON) || (LA36_10 >= DOT_STAR && LA36_10 <= STRING) || (LA36_10 >= COMMA && LA36_10 <= AT)|| (LA36_10 >= EQUALS && LA36_10 <= NULL)|| (LA36_10 >= RIGHT_SQUARE && LA36_10 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_10);
if (s >= 0) return s;
break;
case 17:
int LA36_15=input.LA(1);
int index36_15=input.index();
input.rewind();
s=-1;
if ((LA36_15 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=20;
}
 else if (((LA36_15 >= VT_COMPILATION_UNIT && LA36_15 <= SEMICOLON) || (LA36_15 >= DOT && LA36_15 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_15);
if (s >= 0) return s;
break;
case 18:
int LA36_22=input.LA(1);
int index36_22=input.index();
input.rewind();
s=-1;
if ((LA36_22 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=27;
}
 else if (((LA36_22 >= VT_COMPILATION_UNIT && LA36_22 <= SEMICOLON) || (LA36_22 >= DOT && LA36_22 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_22);
if (s >= 0) return s;
break;
case 19:
int LA36_13=input.LA(1);
int index36_13=input.index();
input.rewind();
s=-1;
if ((LA36_13 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=18;
}
 else if ((LA36_13 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=19;
}
 else if (((LA36_13 >= VT_COMPILATION_UNIT && LA36_13 <= SEMICOLON) || (LA36_13 >= DOT && LA36_13 <= STRING) || (LA36_13 >= COMMA && LA36_13 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_13);
if (s >= 0) return s;
break;
case 20:
int LA36_26=input.LA(1);
int index36_26=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_26);
if (s >= 0) return s;
break;
case 21:
int LA36_25=input.LA(1);
int index36_25=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateWhenWithParenthesis() && (validateIdentifierKey(DroolsSoftKeywords.WHEN)))))) {
s=7;
}
input.seek(index36_25);
if (s >= 0) return s;
break;
case 22:
int LA36_8=input.LA(1);
int index36_8=input.index();
input.rewind();
s=-1;
if ((LA36_8 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=10;
}
 else if ((LA36_8 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=11;
}
 else if (((LA36_8 >= VT_COMPILATION_UNIT && LA36_8 <= SEMICOLON) || (LA36_8 >= DOT && LA36_8 <= STRING) || (LA36_8 >= COMMA && LA36_8 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=12;
}
input.seek(index36_8);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),36,_s,input);
error(nvae);
throw nvae;
}
