{
  int _s=s;
switch (s) {
case 0:
    int LA56_50=input.LA(1);
  int index56_50=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_50);
if (s >= 0) return s;
break;
case 1:
int LA56_20=input.LA(1);
int index56_20=input.index();
input.rewind();
s=-1;
if ((LA56_20 == LEFT_PAREN)) {
s=46;
}
 else if ((LA56_20 == ID)) {
s=47;
}
 else if ((LA56_20 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_20 >= ATTRIBUTES && LA56_20 <= FUNCTION) || (LA56_20 >= DOT && LA56_20 <= GLOBAL) || LA56_20 == COMMA || (LA56_20 >= QUERY && LA56_20 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_20);
if (s >= 0) return s;
break;
case 2:
int LA56_31=input.LA(1);
int index56_31=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_31);
if (s >= 0) return s;
break;
case 3:
int LA56_29=input.LA(1);
int index56_29=input.index();
input.rewind();
s=-1;
if ((LA56_29 == 72)) {
s=60;
}
 else if ((LA56_29 == DOT)) {
s=61;
}
 else if ((LA56_29 == LEFT_SQUARE)) {
s=62;
}
 else if ((LA56_29 == LEFT_PAREN)) {
s=63;
}
 else if ((LA56_29 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_29 >= ATTRIBUTES && LA56_29 <= ID) || LA56_29 == GLOBAL || LA56_29 == COMMA || (LA56_29 >= QUERY && LA56_29 <= RIGHT_CURLY) || (LA56_29 >= RIGHT_SQUARE && LA56_29 <= 71) || (LA56_29 >= 73 && LA56_29 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_29);
if (s >= 0) return s;
break;
case 4:
int LA56_27=input.LA(1);
int index56_27=input.index();
input.rewind();
s=-1;
if ((LA56_27 == 72)) {
s=56;
}
 else if ((LA56_27 == DOT)) {
s=57;
}
 else if ((LA56_27 == LEFT_SQUARE)) {
s=58;
}
 else if ((LA56_27 == LEFT_PAREN)) {
s=59;
}
 else if ((LA56_27 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_27 >= ATTRIBUTES && LA56_27 <= ID) || LA56_27 == GLOBAL || LA56_27 == COMMA || (LA56_27 >= QUERY && LA56_27 <= RIGHT_CURLY) || (LA56_27 >= RIGHT_SQUARE && LA56_27 <= 71) || (LA56_27 >= 73 && LA56_27 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_27);
if (s >= 0) return s;
break;
case 5:
int LA56_12=input.LA(1);
int index56_12=input.index();
input.rewind();
s=-1;
if ((LA56_12 == 72)) {
s=32;
}
 else if ((LA56_12 == DOT)) {
s=33;
}
 else if ((LA56_12 == LEFT_SQUARE)) {
s=34;
}
 else if ((LA56_12 == LEFT_PAREN)) {
s=35;
}
 else if ((LA56_12 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_12 >= ATTRIBUTES && LA56_12 <= ID) || LA56_12 == GLOBAL || LA56_12 == COMMA || (LA56_12 >= QUERY && LA56_12 <= RIGHT_CURLY) || (LA56_12 >= RIGHT_SQUARE && LA56_12 <= 71) || (LA56_12 >= 73 && LA56_12 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_12);
if (s >= 0) return s;
break;
case 6:
int LA56_5=input.LA(1);
int index56_5=input.index();
input.rewind();
s=-1;
if ((LA56_5 == EXISTS)) {
s=20;
}
 else if ((LA56_5 == NOT)) {
s=21;
}
 else if ((LA56_5 == EVAL)) {
s=22;
}
 else if ((LA56_5 == FORALL)) {
s=23;
}
 else if ((LA56_5 == LEFT_PAREN)) {
s=24;
}
 else if ((LA56_5 == ID)) {
s=25;
}
 else if ((LA56_5 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_5 >= ATTRIBUTES && LA56_5 <= FUNCTION) || (LA56_5 >= DOT && LA56_5 <= GLOBAL) || LA56_5 == COMMA || (LA56_5 >= QUERY && LA56_5 <= FROM) || (LA56_5 >= ACCUMULATE && LA56_5 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_5);
if (s >= 0) return s;
break;
case 7:
int LA56_43=input.LA(1);
int index56_43=input.index();
input.rewind();
s=-1;
if (((LA56_43 >= ATTRIBUTES && LA56_43 <= ID) || LA56_43 == GLOBAL || (LA56_43 >= QUERY && LA56_43 <= WHEN) || LA56_43 == ENABLED || LA56_43 == SALIENCE || (LA56_43 >= DURATION && LA56_43 <= DIALECT) || LA56_43 == FROM || (LA56_43 >= INIT && LA56_43 <= RESULT) || (LA56_43 >= CONTAINS && LA56_43 <= IN) || LA56_43 == THEN)) {
s=79;
}
 else if ((LA56_43 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_43 == DOT || LA56_43 == COMMA || (LA56_43 >= DATE_EFFECTIVE && LA56_43 <= DATE_EXPIRES) || LA56_43 == BOOL || (LA56_43 >= INT && LA56_43 <= AGENDA_GROUP) || (LA56_43 >= LOCK_ON_ACTIVE && LA56_43 <= DOUBLE_AMPER) || (LA56_43 >= EXISTS && LA56_43 <= ACCUMULATE) || LA56_43 == COLLECT || (LA56_43 >= FLOAT && LA56_43 <= RIGHT_SQUARE) || (LA56_43 >= EOL && LA56_43 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_43 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_43);
if (s >= 0) return s;
break;
case 8:
int LA56_33=input.LA(1);
int index56_33=input.index();
input.rewind();
s=-1;
if (((LA56_33 >= ATTRIBUTES && LA56_33 <= ID) || LA56_33 == GLOBAL || (LA56_33 >= QUERY && LA56_33 <= WHEN) || LA56_33 == ENABLED || LA56_33 == SALIENCE || (LA56_33 >= DURATION && LA56_33 <= DIALECT) || LA56_33 == FROM || (LA56_33 >= INIT && LA56_33 <= RESULT) || (LA56_33 >= CONTAINS && LA56_33 <= IN) || LA56_33 == THEN)) {
s=66;
}
 else if ((LA56_33 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_33 == DOT || LA56_33 == COMMA || (LA56_33 >= DATE_EFFECTIVE && LA56_33 <= DATE_EXPIRES) || LA56_33 == BOOL || (LA56_33 >= INT && LA56_33 <= AGENDA_GROUP) || (LA56_33 >= LOCK_ON_ACTIVE && LA56_33 <= DOUBLE_AMPER) || (LA56_33 >= EXISTS && LA56_33 <= ACCUMULATE) || LA56_33 == COLLECT || (LA56_33 >= FLOAT && LA56_33 <= RIGHT_SQUARE) || (LA56_33 >= EOL && LA56_33 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_33 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_33);
if (s >= 0) return s;
break;
case 9:
int LA56_57=input.LA(1);
int index56_57=input.index();
input.rewind();
s=-1;
if (((LA56_57 >= ATTRIBUTES && LA56_57 <= ID) || LA56_57 == GLOBAL || (LA56_57 >= QUERY && LA56_57 <= WHEN) || LA56_57 == ENABLED || LA56_57 == SALIENCE || (LA56_57 >= DURATION && LA56_57 <= DIALECT) || LA56_57 == FROM || (LA56_57 >= INIT && LA56_57 <= RESULT) || (LA56_57 >= CONTAINS && LA56_57 <= IN) || LA56_57 == THEN)) {
s=95;
}
 else if ((LA56_57 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_57 == DOT || LA56_57 == COMMA || (LA56_57 >= DATE_EFFECTIVE && LA56_57 <= DATE_EXPIRES) || LA56_57 == BOOL || (LA56_57 >= INT && LA56_57 <= AGENDA_GROUP) || (LA56_57 >= LOCK_ON_ACTIVE && LA56_57 <= DOUBLE_AMPER) || (LA56_57 >= EXISTS && LA56_57 <= ACCUMULATE) || LA56_57 == COLLECT || (LA56_57 >= FLOAT && LA56_57 <= RIGHT_SQUARE) || (LA56_57 >= EOL && LA56_57 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_57 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_57);
if (s >= 0) return s;
break;
case 10:
int LA56_61=input.LA(1);
int index56_61=input.index();
input.rewind();
s=-1;
if (((LA56_61 >= ATTRIBUTES && LA56_61 <= ID) || LA56_61 == GLOBAL || (LA56_61 >= QUERY && LA56_61 <= WHEN) || LA56_61 == ENABLED || LA56_61 == SALIENCE || (LA56_61 >= DURATION && LA56_61 <= DIALECT) || LA56_61 == FROM || (LA56_61 >= INIT && LA56_61 <= RESULT) || (LA56_61 >= CONTAINS && LA56_61 <= IN) || LA56_61 == THEN)) {
s=99;
}
 else if ((LA56_61 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_61 == DOT || LA56_61 == COMMA || (LA56_61 >= DATE_EFFECTIVE && LA56_61 <= DATE_EXPIRES) || LA56_61 == BOOL || (LA56_61 >= INT && LA56_61 <= AGENDA_GROUP) || (LA56_61 >= LOCK_ON_ACTIVE && LA56_61 <= DOUBLE_AMPER) || (LA56_61 >= EXISTS && LA56_61 <= ACCUMULATE) || LA56_61 == COLLECT || (LA56_61 >= FLOAT && LA56_61 <= RIGHT_SQUARE) || (LA56_61 >= EOL && LA56_61 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_61 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_61);
if (s >= 0) return s;
break;
case 11:
int LA56_0=input.LA(1);
int index56_0=input.index();
input.rewind();
s=-1;
if ((LA56_0 == LEFT_SQUARE) && (synpred6())) {
s=1;
}
 else if ((LA56_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA56_0 >= ID && LA56_0 <= DOT) || (LA56_0 >= COMMA && LA56_0 <= RIGHT_PAREN) || LA56_0 == END || (LA56_0 >= OR && LA56_0 <= DOUBLE_AMPER) || (LA56_0 >= EXISTS && LA56_0 <= FORALL) || LA56_0 == INIT || LA56_0 == THEN || LA56_0 == 71)) {
s=3;
}
input.seek(index56_0);
if (s >= 0) return s;
break;
case 12:
int LA56_36=input.LA(1);
int index56_36=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_36);
if (s >= 0) return s;
break;
case 13:
int LA56_64=input.LA(1);
int index56_64=input.index();
input.rewind();
s=-1;
if ((LA56_64 == DOT)) {
s=101;
}
 else if ((LA56_64 == LEFT_SQUARE)) {
s=102;
}
 else if ((LA56_64 == LEFT_PAREN)) {
s=103;
}
 else if ((LA56_64 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_64 >= ATTRIBUTES && LA56_64 <= ID) || LA56_64 == GLOBAL || LA56_64 == COMMA || (LA56_64 >= QUERY && LA56_64 <= RIGHT_CURLY) || (LA56_64 >= RIGHT_SQUARE && LA56_64 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_64);
if (s >= 0) return s;
break;
case 14:
int LA56_23=input.LA(1);
int index56_23=input.index();
input.rewind();
s=-1;
if ((LA56_23 == LEFT_PAREN)) {
s=51;
}
 else if ((LA56_23 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_23 >= ATTRIBUTES && LA56_23 <= GLOBAL) || LA56_23 == COMMA || (LA56_23 >= QUERY && LA56_23 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_23);
if (s >= 0) return s;
break;
case 15:
int LA56_35=input.LA(1);
int index56_35=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_35);
if (s >= 0) return s;
break;
case 16:
int LA56_59=input.LA(1);
int index56_59=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_59);
if (s >= 0) return s;
break;
case 17:
int LA56_22=input.LA(1);
int index56_22=input.index();
input.rewind();
s=-1;
if ((LA56_22 == LEFT_PAREN)) {
s=50;
}
 else if ((LA56_22 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_22 >= ATTRIBUTES && LA56_22 <= GLOBAL) || LA56_22 == COMMA || (LA56_22 >= QUERY && LA56_22 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_22);
if (s >= 0) return s;
break;
case 18:
int LA56_47=input.LA(1);
int index56_47=input.index();
input.rewind();
s=-1;
if ((LA56_47 == 72)) {
s=81;
}
 else if ((LA56_47 == DOT)) {
s=82;
}
 else if ((LA56_47 == LEFT_SQUARE)) {
s=83;
}
 else if ((LA56_47 == LEFT_PAREN)) {
s=84;
}
 else if ((LA56_47 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_47 >= ATTRIBUTES && LA56_47 <= ID) || LA56_47 == GLOBAL || LA56_47 == COMMA || (LA56_47 >= QUERY && LA56_47 <= RIGHT_CURLY) || (LA56_47 >= RIGHT_SQUARE && LA56_47 <= 71) || (LA56_47 >= 73 && LA56_47 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_47);
if (s >= 0) return s;
break;
case 19:
int LA56_25=input.LA(1);
int index56_25=input.index();
input.rewind();
s=-1;
if ((LA56_25 == 72)) {
s=52;
}
 else if ((LA56_25 == DOT)) {
s=53;
}
 else if ((LA56_25 == LEFT_SQUARE)) {
s=54;
}
 else if ((LA56_25 == LEFT_PAREN)) {
s=55;
}
 else if ((LA56_25 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_25 >= ATTRIBUTES && LA56_25 <= ID) || LA56_25 == GLOBAL || LA56_25 == COMMA || (LA56_25 >= QUERY && LA56_25 <= RIGHT_CURLY) || (LA56_25 >= RIGHT_SQUARE && LA56_25 <= 71) || (LA56_25 >= 73 && LA56_25 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_25);
if (s >= 0) return s;
break;
case 20:
int LA56_49=input.LA(1);
int index56_49=input.index();
input.rewind();
s=-1;
if ((LA56_49 == 72)) {
s=85;
}
 else if ((LA56_49 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_49 == DOT)) {
s=86;
}
 else if ((LA56_49 == LEFT_PAREN)) {
s=87;
}
 else if ((LA56_49 == LEFT_SQUARE)) {
s=88;
}
 else if (((LA56_49 >= ATTRIBUTES && LA56_49 <= ID) || LA56_49 == GLOBAL || LA56_49 == COMMA || (LA56_49 >= QUERY && LA56_49 <= RIGHT_CURLY) || (LA56_49 >= RIGHT_SQUARE && LA56_49 <= 71) || (LA56_49 >= 73 && LA56_49 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_49);
if (s >= 0) return s;
break;
case 21:
int LA56_4=input.LA(1);
int index56_4=input.index();
input.rewind();
s=-1;
if ((LA56_4 == LEFT_PAREN)) {
s=14;
}
 else if ((LA56_4 == EXISTS)) {
s=15;
}
 else if ((LA56_4 == NOT)) {
s=16;
}
 else if ((LA56_4 == EVAL)) {
s=17;
}
 else if ((LA56_4 == FORALL)) {
s=18;
}
 else if ((LA56_4 == ID)) {
s=19;
}
 else if ((LA56_4 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_4 >= ATTRIBUTES && LA56_4 <= FUNCTION) || (LA56_4 >= DOT && LA56_4 <= GLOBAL) || LA56_4 == COMMA || (LA56_4 >= QUERY && LA56_4 <= FROM) || (LA56_4 >= ACCUMULATE && LA56_4 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_4);
if (s >= 0) return s;
break;
case 22:
int LA56_28=input.LA(1);
int index56_28=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_28);
if (s >= 0) return s;
break;
case 23:
int LA56_26=input.LA(1);
int index56_26=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_26);
if (s >= 0) return s;
break;
case 24:
int LA56_39=input.LA(1);
int index56_39=input.index();
input.rewind();
s=-1;
if ((LA56_39 == 72)) {
s=73;
}
 else if ((LA56_39 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_39 == DOT)) {
s=74;
}
 else if ((LA56_39 == LEFT_PAREN)) {
s=75;
}
 else if ((LA56_39 == LEFT_SQUARE)) {
s=76;
}
 else if (((LA56_39 >= ATTRIBUTES && LA56_39 <= ID) || LA56_39 == GLOBAL || LA56_39 == COMMA || (LA56_39 >= QUERY && LA56_39 <= RIGHT_CURLY) || (LA56_39 >= RIGHT_SQUARE && LA56_39 <= 71) || (LA56_39 >= 73 && LA56_39 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_39);
if (s >= 0) return s;
break;
case 25:
int LA56_37=input.LA(1);
int index56_37=input.index();
input.rewind();
s=-1;
if ((LA56_37 == 72)) {
s=69;
}
 else if ((LA56_37 == DOT)) {
s=70;
}
 else if ((LA56_37 == LEFT_SQUARE)) {
s=71;
}
 else if ((LA56_37 == LEFT_PAREN)) {
s=72;
}
 else if ((LA56_37 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_37 >= ATTRIBUTES && LA56_37 <= ID) || LA56_37 == GLOBAL || LA56_37 == COMMA || (LA56_37 >= QUERY && LA56_37 <= RIGHT_CURLY) || (LA56_37 >= RIGHT_SQUARE && LA56_37 <= 71) || (LA56_37 >= 73 && LA56_37 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_37);
if (s >= 0) return s;
break;
case 26:
int LA56_19=input.LA(1);
int index56_19=input.index();
input.rewind();
s=-1;
if ((LA56_19 == 72)) {
s=42;
}
 else if ((LA56_19 == DOT)) {
s=43;
}
 else if ((LA56_19 == LEFT_SQUARE)) {
s=44;
}
 else if ((LA56_19 == LEFT_PAREN)) {
s=45;
}
 else if ((LA56_19 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_19 >= ATTRIBUTES && LA56_19 <= ID) || LA56_19 == GLOBAL || LA56_19 == COMMA || (LA56_19 >= QUERY && LA56_19 <= RIGHT_CURLY) || (LA56_19 >= RIGHT_SQUARE && LA56_19 <= 71) || (LA56_19 >= 73 && LA56_19 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_19);
if (s >= 0) return s;
break;
case 27:
int LA56_38=input.LA(1);
int index56_38=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_38);
if (s >= 0) return s;
break;
case 28:
int LA56_2=input.LA(1);
int index56_2=input.index();
input.rewind();
s=-1;
if ((LA56_2 == OR)) {
s=4;
}
 else if ((LA56_2 == AND)) {
s=5;
}
 else if ((LA56_2 == EXISTS)) {
s=6;
}
 else if ((LA56_2 == LEFT_PAREN)) {
s=7;
}
 else if ((LA56_2 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_2 == NOT)) {
s=9;
}
 else if ((LA56_2 == EVAL)) {
s=10;
}
 else if ((LA56_2 == FORALL)) {
s=11;
}
 else if ((LA56_2 == ID)) {
s=12;
}
 else if (((LA56_2 >= ATTRIBUTES && LA56_2 <= FUNCTION) || (LA56_2 >= DOT && LA56_2 <= GLOBAL) || LA56_2 == COMMA || (LA56_2 >= QUERY && LA56_2 <= LOCK_ON_ACTIVE) || LA56_2 == DOUBLE_PIPE || (LA56_2 >= DOUBLE_AMPER && LA56_2 <= FROM) || (LA56_2 >= ACCUMULATE && LA56_2 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_2);
if (s >= 0) return s;
break;
case 29:
int LA56_11=input.LA(1);
int index56_11=input.index();
input.rewind();
s=-1;
if ((LA56_11 == LEFT_PAREN)) {
s=31;
}
 else if ((LA56_11 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_11 >= ATTRIBUTES && LA56_11 <= GLOBAL) || LA56_11 == COMMA || (LA56_11 >= QUERY && LA56_11 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_11);
if (s >= 0) return s;
break;
case 30:
int LA56_17=input.LA(1);
int index56_17=input.index();
input.rewind();
s=-1;
if ((LA56_17 == LEFT_PAREN)) {
s=40;
}
 else if ((LA56_17 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_17 >= ATTRIBUTES && LA56_17 <= GLOBAL) || LA56_17 == COMMA || (LA56_17 >= QUERY && LA56_17 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_17);
if (s >= 0) return s;
break;
case 31:
int LA56_24=input.LA(1);
int index56_24=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_24);
if (s >= 0) return s;
break;
case 32:
int LA56_6=input.LA(1);
int index56_6=input.index();
input.rewind();
s=-1;
if ((LA56_6 == LEFT_PAREN)) {
s=26;
}
 else if ((LA56_6 == ID)) {
s=27;
}
 else if ((LA56_6 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_6 >= ATTRIBUTES && LA56_6 <= FUNCTION) || (LA56_6 >= DOT && LA56_6 <= GLOBAL) || LA56_6 == COMMA || (LA56_6 >= QUERY && LA56_6 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_6);
if (s >= 0) return s;
break;
case 33:
int LA56_40=input.LA(1);
int index56_40=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_40);
if (s >= 0) return s;
break;
case 34:
int LA56_51=input.LA(1);
int index56_51=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_51);
if (s >= 0) return s;
break;
case 35:
int LA56_21=input.LA(1);
int index56_21=input.index();
input.rewind();
s=-1;
if ((LA56_21 == LEFT_PAREN)) {
s=48;
}
 else if ((LA56_21 == ID)) {
s=49;
}
 else if ((LA56_21 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_21 >= ATTRIBUTES && LA56_21 <= FUNCTION) || (LA56_21 >= DOT && LA56_21 <= GLOBAL) || LA56_21 == COMMA || (LA56_21 >= QUERY && LA56_21 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_21);
if (s >= 0) return s;
break;
case 36:
int LA56_48=input.LA(1);
int index56_48=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_48);
if (s >= 0) return s;
break;
case 37:
int LA56_55=input.LA(1);
int index56_55=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_55);
if (s >= 0) return s;
break;
case 38:
int LA56_34=input.LA(1);
int index56_34=input.index();
input.rewind();
s=-1;
if ((LA56_34 == RIGHT_SQUARE)) {
s=68;
}
 else if ((LA56_34 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_34 >= ATTRIBUTES && LA56_34 <= GLOBAL) || LA56_34 == COMMA || (LA56_34 >= QUERY && LA56_34 <= LEFT_SQUARE) || (LA56_34 >= THEN && LA56_34 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_34 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_34);
if (s >= 0) return s;
break;
case 39:
int LA56_58=input.LA(1);
int index56_58=input.index();
input.rewind();
s=-1;
if ((LA56_58 == RIGHT_SQUARE)) {
s=96;
}
 else if ((LA56_58 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_58 >= ATTRIBUTES && LA56_58 <= GLOBAL) || LA56_58 == COMMA || (LA56_58 >= QUERY && LA56_58 <= LEFT_SQUARE) || (LA56_58 >= THEN && LA56_58 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_58 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_58);
if (s >= 0) return s;
break;
case 40:
int LA56_62=input.LA(1);
int index56_62=input.index();
input.rewind();
s=-1;
if ((LA56_62 == RIGHT_SQUARE)) {
s=100;
}
 else if ((LA56_62 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_62 >= ATTRIBUTES && LA56_62 <= GLOBAL) || LA56_62 == COMMA || (LA56_62 >= QUERY && LA56_62 <= LEFT_SQUARE) || (LA56_62 >= THEN && LA56_62 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_62 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_62);
if (s >= 0) return s;
break;
case 41:
int LA56_44=input.LA(1);
int index56_44=input.index();
input.rewind();
s=-1;
if ((LA56_44 == RIGHT_SQUARE)) {
s=80;
}
 else if ((LA56_44 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_44 >= ATTRIBUTES && LA56_44 <= GLOBAL) || LA56_44 == COMMA || (LA56_44 >= QUERY && LA56_44 <= LEFT_SQUARE) || (LA56_44 >= THEN && LA56_44 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_44 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_44);
if (s >= 0) return s;
break;
case 42:
int LA56_14=input.LA(1);
int index56_14=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_14);
if (s >= 0) return s;
break;
case 43:
int LA56_10=input.LA(1);
int index56_10=input.index();
input.rewind();
s=-1;
if ((LA56_10 == LEFT_PAREN)) {
s=30;
}
 else if ((LA56_10 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_10 >= ATTRIBUTES && LA56_10 <= GLOBAL) || LA56_10 == COMMA || (LA56_10 >= QUERY && LA56_10 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_10);
if (s >= 0) return s;
break;
case 44:
int LA56_63=input.LA(1);
int index56_63=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_63);
if (s >= 0) return s;
break;
case 45:
int LA56_15=input.LA(1);
int index56_15=input.index();
input.rewind();
s=-1;
if ((LA56_15 == LEFT_PAREN)) {
s=36;
}
 else if ((LA56_15 == ID)) {
s=37;
}
 else if ((LA56_15 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_15 >= ATTRIBUTES && LA56_15 <= FUNCTION) || (LA56_15 >= DOT && LA56_15 <= GLOBAL) || LA56_15 == COMMA || (LA56_15 >= QUERY && LA56_15 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_15);
if (s >= 0) return s;
break;
case 46:
int LA56_18=input.LA(1);
int index56_18=input.index();
input.rewind();
s=-1;
if ((LA56_18 == LEFT_PAREN)) {
s=41;
}
 else if ((LA56_18 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_18 >= ATTRIBUTES && LA56_18 <= GLOBAL) || LA56_18 == COMMA || (LA56_18 >= QUERY && LA56_18 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_18);
if (s >= 0) return s;
break;
case 47:
int LA56_32=input.LA(1);
int index56_32=input.index();
input.rewind();
s=-1;
if ((LA56_32 == ID)) {
s=64;
}
 else if ((LA56_32 == LEFT_PAREN)) {
s=65;
}
 else if ((LA56_32 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_32 >= ATTRIBUTES && LA56_32 <= FUNCTION) || (LA56_32 >= DOT && LA56_32 <= GLOBAL) || LA56_32 == COMMA || (LA56_32 >= QUERY && LA56_32 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_32);
if (s >= 0) return s;
break;
case 48:
int LA56_56=input.LA(1);
int index56_56=input.index();
input.rewind();
s=-1;
if ((LA56_56 == ID)) {
s=93;
}
 else if ((LA56_56 == LEFT_PAREN)) {
s=94;
}
 else if ((LA56_56 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_56 >= ATTRIBUTES && LA56_56 <= FUNCTION) || (LA56_56 >= DOT && LA56_56 <= GLOBAL) || LA56_56 == COMMA || (LA56_56 >= QUERY && LA56_56 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_56);
if (s >= 0) return s;
break;
case 49:
int LA56_60=input.LA(1);
int index56_60=input.index();
input.rewind();
s=-1;
if ((LA56_60 == ID)) {
s=97;
}
 else if ((LA56_60 == LEFT_PAREN)) {
s=98;
}
 else if ((LA56_60 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_60 >= ATTRIBUTES && LA56_60 <= FUNCTION) || (LA56_60 >= DOT && LA56_60 <= GLOBAL) || LA56_60 == COMMA || (LA56_60 >= QUERY && LA56_60 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_60);
if (s >= 0) return s;
break;
case 50:
int LA56_41=input.LA(1);
int index56_41=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_41);
if (s >= 0) return s;
break;
case 51:
int LA56_7=input.LA(1);
int index56_7=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_7);
if (s >= 0) return s;
break;
case 52:
int LA56_30=input.LA(1);
int index56_30=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index56_30);
if (s >= 0) return s;
break;
case 53:
int LA56_66=input.LA(1);
int index56_66=input.index();
input.rewind();
s=-1;
if ((LA56_66 == LEFT_SQUARE)) {
s=34;
}
 else if ((LA56_66 == LEFT_PAREN)) {
s=35;
}
 else if ((LA56_66 == DOT)) {
s=33;
}
 else if ((LA56_66 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_66 >= ATTRIBUTES && LA56_66 <= ID) || LA56_66 == GLOBAL || LA56_66 == COMMA || (LA56_66 >= QUERY && LA56_66 <= RIGHT_CURLY) || (LA56_66 >= RIGHT_SQUARE && LA56_66 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_66);
if (s >= 0) return s;
break;
case 54:
int LA56_9=input.LA(1);
int index56_9=input.index();
input.rewind();
s=-1;
if ((LA56_9 == LEFT_PAREN)) {
s=28;
}
 else if ((LA56_9 == ID)) {
s=29;
}
 else if ((LA56_9 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_9 >= ATTRIBUTES && LA56_9 <= FUNCTION) || (LA56_9 >= DOT && LA56_9 <= GLOBAL) || LA56_9 == COMMA || (LA56_9 >= QUERY && LA56_9 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_9);
if (s >= 0) return s;
break;
case 55:
int LA56_54=input.LA(1);
int index56_54=input.index();
input.rewind();
s=-1;
if ((LA56_54 == RIGHT_SQUARE)) {
s=92;
}
 else if ((LA56_54 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_54 >= ATTRIBUTES && LA56_54 <= GLOBAL) || LA56_54 == COMMA || (LA56_54 >= QUERY && LA56_54 <= LEFT_SQUARE) || (LA56_54 >= THEN && LA56_54 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_54 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_54);
if (s >= 0) return s;
break;
case 56:
int LA56_42=input.LA(1);
int index56_42=input.index();
input.rewind();
s=-1;
if ((LA56_42 == ID)) {
s=77;
}
 else if ((LA56_42 == LEFT_PAREN)) {
s=78;
}
 else if ((LA56_42 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_42 >= ATTRIBUTES && LA56_42 <= FUNCTION) || (LA56_42 >= DOT && LA56_42 <= GLOBAL) || LA56_42 == COMMA || (LA56_42 >= QUERY && LA56_42 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_42);
if (s >= 0) return s;
break;
case 57:
int LA56_46=input.LA(1);
int index56_46=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_46);
if (s >= 0) return s;
break;
case 58:
int LA56_52=input.LA(1);
int index56_52=input.index();
input.rewind();
s=-1;
if ((LA56_52 == ID)) {
s=89;
}
 else if ((LA56_52 == LEFT_PAREN)) {
s=90;
}
 else if ((LA56_52 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_52 >= ATTRIBUTES && LA56_52 <= FUNCTION) || (LA56_52 >= DOT && LA56_52 <= GLOBAL) || LA56_52 == COMMA || (LA56_52 >= QUERY && LA56_52 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_52);
if (s >= 0) return s;
break;
case 59:
int LA56_45=input.LA(1);
int index56_45=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_45);
if (s >= 0) return s;
break;
case 60:
int LA56_16=input.LA(1);
int index56_16=input.index();
input.rewind();
s=-1;
if ((LA56_16 == LEFT_PAREN)) {
s=38;
}
 else if ((LA56_16 == ID)) {
s=39;
}
 else if ((LA56_16 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if (((LA56_16 >= ATTRIBUTES && LA56_16 <= FUNCTION) || (LA56_16 >= DOT && LA56_16 <= GLOBAL) || LA56_16 == COMMA || (LA56_16 >= QUERY && LA56_16 <= 80)) && (synpred7())) {
s=13;
}
input.seek(index56_16);
if (s >= 0) return s;
break;
case 61:
int LA56_53=input.LA(1);
int index56_53=input.index();
input.rewind();
s=-1;
if (((LA56_53 >= ATTRIBUTES && LA56_53 <= ID) || LA56_53 == GLOBAL || (LA56_53 >= QUERY && LA56_53 <= WHEN) || LA56_53 == ENABLED || LA56_53 == SALIENCE || (LA56_53 >= DURATION && LA56_53 <= DIALECT) || LA56_53 == FROM || (LA56_53 >= INIT && LA56_53 <= RESULT) || (LA56_53 >= CONTAINS && LA56_53 <= IN) || LA56_53 == THEN)) {
s=91;
}
 else if ((LA56_53 == RIGHT_PAREN) && (synpred7())) {
s=8;
}
 else if ((LA56_53 == DOT || LA56_53 == COMMA || (LA56_53 >= DATE_EFFECTIVE && LA56_53 <= DATE_EXPIRES) || LA56_53 == BOOL || (LA56_53 >= INT && LA56_53 <= AGENDA_GROUP) || (LA56_53 >= LOCK_ON_ACTIVE && LA56_53 <= DOUBLE_AMPER) || (LA56_53 >= EXISTS && LA56_53 <= ACCUMULATE) || LA56_53 == COLLECT || (LA56_53 >= FLOAT && LA56_53 <= RIGHT_SQUARE) || (LA56_53 >= EOL && LA56_53 <= 80)) && (synpred7())) {
s=13;
}
 else if ((LA56_53 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index56_53);
if (s >= 0) return s;
break;
case 62:
int LA56_65=input.LA(1);
int index56_65=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index56_65);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),56,_s,input);
error(nvae);
throw nvae;
}
