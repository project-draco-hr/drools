{
  int _s=s;
switch (s) {
case 0:
    int LA49_8=input.LA(1);
  int index49_8=input.index();
input.rewind();
s=-1;
if ((LA49_8 == LEFT_PAREN)) {
s=28;
}
 else if ((LA49_8 == ID)) {
s=29;
}
 else if ((LA49_8 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_8 >= ATTRIBUTES && LA49_8 <= FUNCTION) || (LA49_8 >= DOT && LA49_8 <= GLOBAL) || LA49_8 == COMMA || (LA49_8 >= QUERY && LA49_8 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_8);
if (s >= 0) return s;
break;
case 1:
int LA49_30=input.LA(1);
int index49_30=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_30);
if (s >= 0) return s;
break;
case 2:
int LA49_45=input.LA(1);
int index49_45=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_45);
if (s >= 0) return s;
break;
case 3:
int LA49_50=input.LA(1);
int index49_50=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_50);
if (s >= 0) return s;
break;
case 4:
int LA49_14=input.LA(1);
int index49_14=input.index();
input.rewind();
s=-1;
if ((LA49_14 == LEFT_PAREN)) {
s=36;
}
 else if ((LA49_14 == ID)) {
s=37;
}
 else if ((LA49_14 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_14 >= ATTRIBUTES && LA49_14 <= FUNCTION) || (LA49_14 >= DOT && LA49_14 <= GLOBAL) || LA49_14 == COMMA || (LA49_14 >= QUERY && LA49_14 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_14);
if (s >= 0) return s;
break;
case 5:
int LA49_21=input.LA(1);
int index49_21=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_21);
if (s >= 0) return s;
break;
case 6:
int LA49_34=input.LA(1);
int index49_34=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_34);
if (s >= 0) return s;
break;
case 7:
int LA49_59=input.LA(1);
int index49_59=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_59);
if (s >= 0) return s;
break;
case 8:
int LA49_32=input.LA(1);
int index49_32=input.index();
input.rewind();
s=-1;
if (((LA49_32 >= ATTRIBUTES && LA49_32 <= ID) || LA49_32 == GLOBAL || (LA49_32 >= QUERY && LA49_32 <= WHEN) || LA49_32 == ENABLED || LA49_32 == SALIENCE || LA49_32 == DURATION || LA49_32 == FROM || (LA49_32 >= INIT && LA49_32 <= RESULT) || (LA49_32 >= CONTAINS && LA49_32 <= IN) || LA49_32 == NULL || LA49_32 == THEN)) {
s=66;
}
 else if ((LA49_32 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_32 == DOT || LA49_32 == COMMA || (LA49_32 >= DATE_EFFECTIVE && LA49_32 <= DATE_EXPIRES) || LA49_32 == BOOL || (LA49_32 >= INT && LA49_32 <= AGENDA_GROUP) || (LA49_32 >= DIALECT && LA49_32 <= DOUBLE_AMPER) || (LA49_32 >= EXISTS && LA49_32 <= ACCUMULATE) || LA49_32 == COLLECT || LA49_32 == FLOAT || (LA49_32 >= LEFT_CURLY && LA49_32 <= RIGHT_SQUARE) || (LA49_32 >= EOL && LA49_32 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_32 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_32);
if (s >= 0) return s;
break;
case 9:
int LA49_57=input.LA(1);
int index49_57=input.index();
input.rewind();
s=-1;
if (((LA49_57 >= ATTRIBUTES && LA49_57 <= ID) || LA49_57 == GLOBAL || (LA49_57 >= QUERY && LA49_57 <= WHEN) || LA49_57 == ENABLED || LA49_57 == SALIENCE || LA49_57 == DURATION || LA49_57 == FROM || (LA49_57 >= INIT && LA49_57 <= RESULT) || (LA49_57 >= CONTAINS && LA49_57 <= IN) || LA49_57 == NULL || LA49_57 == THEN)) {
s=95;
}
 else if ((LA49_57 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_57 == DOT || LA49_57 == COMMA || (LA49_57 >= DATE_EFFECTIVE && LA49_57 <= DATE_EXPIRES) || LA49_57 == BOOL || (LA49_57 >= INT && LA49_57 <= AGENDA_GROUP) || (LA49_57 >= DIALECT && LA49_57 <= DOUBLE_AMPER) || (LA49_57 >= EXISTS && LA49_57 <= ACCUMULATE) || LA49_57 == COLLECT || LA49_57 == FLOAT || (LA49_57 >= LEFT_CURLY && LA49_57 <= RIGHT_SQUARE) || (LA49_57 >= EOL && LA49_57 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_57 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_57);
if (s >= 0) return s;
break;
case 10:
int LA49_61=input.LA(1);
int index49_61=input.index();
input.rewind();
s=-1;
if (((LA49_61 >= ATTRIBUTES && LA49_61 <= ID) || LA49_61 == GLOBAL || (LA49_61 >= QUERY && LA49_61 <= WHEN) || LA49_61 == ENABLED || LA49_61 == SALIENCE || LA49_61 == DURATION || LA49_61 == FROM || (LA49_61 >= INIT && LA49_61 <= RESULT) || (LA49_61 >= CONTAINS && LA49_61 <= IN) || LA49_61 == NULL || LA49_61 == THEN)) {
s=99;
}
 else if ((LA49_61 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_61 == DOT || LA49_61 == COMMA || (LA49_61 >= DATE_EFFECTIVE && LA49_61 <= DATE_EXPIRES) || LA49_61 == BOOL || (LA49_61 >= INT && LA49_61 <= AGENDA_GROUP) || (LA49_61 >= DIALECT && LA49_61 <= DOUBLE_AMPER) || (LA49_61 >= EXISTS && LA49_61 <= ACCUMULATE) || LA49_61 == COLLECT || LA49_61 == FLOAT || (LA49_61 >= LEFT_CURLY && LA49_61 <= RIGHT_SQUARE) || (LA49_61 >= EOL && LA49_61 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_61 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_61);
if (s >= 0) return s;
break;
case 11:
int LA49_41=input.LA(1);
int index49_41=input.index();
input.rewind();
s=-1;
if ((LA49_41 == ID)) {
s=77;
}
 else if ((LA49_41 == LEFT_PAREN)) {
s=78;
}
 else if ((LA49_41 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_41 >= ATTRIBUTES && LA49_41 <= FUNCTION) || (LA49_41 >= DOT && LA49_41 <= GLOBAL) || LA49_41 == COMMA || (LA49_41 >= QUERY && LA49_41 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_41);
if (s >= 0) return s;
break;
case 12:
int LA49_28=input.LA(1);
int index49_28=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_28);
if (s >= 0) return s;
break;
case 13:
int LA49_36=input.LA(1);
int index49_36=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_36);
if (s >= 0) return s;
break;
case 14:
int LA49_15=input.LA(1);
int index49_15=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_15);
if (s >= 0) return s;
break;
case 15:
int LA49_38=input.LA(1);
int index49_38=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_38);
if (s >= 0) return s;
break;
case 16:
int LA49_4=input.LA(1);
int index49_4=input.index();
input.rewind();
s=-1;
if ((LA49_4 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_4 == EXISTS)) {
s=14;
}
 else if ((LA49_4 == LEFT_PAREN)) {
s=15;
}
 else if ((LA49_4 == NOT)) {
s=16;
}
 else if ((LA49_4 == EVAL)) {
s=17;
}
 else if ((LA49_4 == ID)) {
s=18;
}
 else if ((LA49_4 == FORALL)) {
s=19;
}
 else if (((LA49_4 >= ATTRIBUTES && LA49_4 <= FUNCTION) || (LA49_4 >= DOT && LA49_4 <= GLOBAL) || LA49_4 == COMMA || (LA49_4 >= QUERY && LA49_4 <= FROM) || (LA49_4 >= ACCUMULATE && LA49_4 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_4);
if (s >= 0) return s;
break;
case 17:
int LA49_53=input.LA(1);
int index49_53=input.index();
input.rewind();
s=-1;
if ((LA49_53 == RIGHT_SQUARE)) {
s=92;
}
 else if ((LA49_53 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_53 >= ATTRIBUTES && LA49_53 <= GLOBAL) || LA49_53 == COMMA || (LA49_53 >= QUERY && LA49_53 <= LEFT_SQUARE) || (LA49_53 >= THEN && LA49_53 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_53 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_53);
if (s >= 0) return s;
break;
case 18:
int LA49_2=input.LA(1);
int index49_2=input.index();
input.rewind();
s=-1;
if ((LA49_2 == AND)) {
s=4;
}
 else if ((LA49_2 == OR)) {
s=5;
}
 else if ((LA49_2 == LEFT_PAREN)) {
s=6;
}
 else if ((LA49_2 == EXISTS)) {
s=7;
}
 else if ((LA49_2 == NOT)) {
s=8;
}
 else if ((LA49_2 == EVAL)) {
s=9;
}
 else if ((LA49_2 == ID)) {
s=10;
}
 else if ((LA49_2 == FORALL)) {
s=11;
}
 else if (((LA49_2 >= ATTRIBUTES && LA49_2 <= FUNCTION) || (LA49_2 >= DOT && LA49_2 <= GLOBAL) || LA49_2 == COMMA || (LA49_2 >= QUERY && LA49_2 <= LOCK_ON_ACTIVE) || LA49_2 == DOUBLE_PIPE || (LA49_2 >= DOUBLE_AMPER && LA49_2 <= FROM) || (LA49_2 >= ACCUMULATE && LA49_2 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_2 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
input.seek(index49_2);
if (s >= 0) return s;
break;
case 19:
int LA49_25=input.LA(1);
int index49_25=input.index();
input.rewind();
s=-1;
if ((LA49_25 == LEFT_PAREN)) {
s=55;
}
 else if ((LA49_25 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_25 >= ATTRIBUTES && LA49_25 <= GLOBAL) || LA49_25 == COMMA || (LA49_25 >= QUERY && LA49_25 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_25);
if (s >= 0) return s;
break;
case 20:
int LA49_64=input.LA(1);
int index49_64=input.index();
input.rewind();
s=-1;
if ((LA49_64 == DOT)) {
s=101;
}
 else if ((LA49_64 == LEFT_SQUARE)) {
s=102;
}
 else if ((LA49_64 == LEFT_PAREN)) {
s=103;
}
 else if ((LA49_64 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_64 >= ATTRIBUTES && LA49_64 <= ID) || LA49_64 == GLOBAL || LA49_64 == COMMA || (LA49_64 >= QUERY && LA49_64 <= RIGHT_CURLY) || (LA49_64 >= RIGHT_SQUARE && LA49_64 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_64);
if (s >= 0) return s;
break;
case 21:
int LA49_47=input.LA(1);
int index49_47=input.index();
input.rewind();
s=-1;
if ((LA49_47 == 71)) {
s=81;
}
 else if ((LA49_47 == DOT)) {
s=82;
}
 else if ((LA49_47 == LEFT_SQUARE)) {
s=83;
}
 else if ((LA49_47 == LEFT_PAREN)) {
s=84;
}
 else if ((LA49_47 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_47 >= ATTRIBUTES && LA49_47 <= ID) || LA49_47 == GLOBAL || LA49_47 == COMMA || (LA49_47 >= QUERY && LA49_47 <= RIGHT_CURLY) || (LA49_47 >= RIGHT_SQUARE && LA49_47 <= 70) || (LA49_47 >= 72 && LA49_47 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_47);
if (s >= 0) return s;
break;
case 22:
int LA49_24=input.LA(1);
int index49_24=input.index();
input.rewind();
s=-1;
if ((LA49_24 == 71)) {
s=51;
}
 else if ((LA49_24 == DOT)) {
s=52;
}
 else if ((LA49_24 == LEFT_SQUARE)) {
s=53;
}
 else if ((LA49_24 == LEFT_PAREN)) {
s=54;
}
 else if ((LA49_24 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_24 >= ATTRIBUTES && LA49_24 <= ID) || LA49_24 == GLOBAL || LA49_24 == COMMA || (LA49_24 >= QUERY && LA49_24 <= RIGHT_CURLY) || (LA49_24 >= RIGHT_SQUARE && LA49_24 <= 70) || (LA49_24 >= 72 && LA49_24 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_24);
if (s >= 0) return s;
break;
case 23:
int LA49_49=input.LA(1);
int index49_49=input.index();
input.rewind();
s=-1;
if ((LA49_49 == 71)) {
s=85;
}
 else if ((LA49_49 == DOT)) {
s=86;
}
 else if ((LA49_49 == LEFT_SQUARE)) {
s=87;
}
 else if ((LA49_49 == LEFT_PAREN)) {
s=88;
}
 else if ((LA49_49 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_49 >= ATTRIBUTES && LA49_49 <= ID) || LA49_49 == GLOBAL || LA49_49 == COMMA || (LA49_49 >= QUERY && LA49_49 <= RIGHT_CURLY) || (LA49_49 >= RIGHT_SQUARE && LA49_49 <= 70) || (LA49_49 >= 72 && LA49_49 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_49);
if (s >= 0) return s;
break;
case 24:
int LA49_7=input.LA(1);
int index49_7=input.index();
input.rewind();
s=-1;
if ((LA49_7 == LEFT_PAREN)) {
s=26;
}
 else if ((LA49_7 == ID)) {
s=27;
}
 else if ((LA49_7 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_7 >= ATTRIBUTES && LA49_7 <= FUNCTION) || (LA49_7 >= DOT && LA49_7 <= GLOBAL) || LA49_7 == COMMA || (LA49_7 >= QUERY && LA49_7 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_7);
if (s >= 0) return s;
break;
case 25:
int LA49_39=input.LA(1);
int index49_39=input.index();
input.rewind();
s=-1;
if ((LA49_39 == 71)) {
s=73;
}
 else if ((LA49_39 == DOT)) {
s=74;
}
 else if ((LA49_39 == LEFT_SQUARE)) {
s=75;
}
 else if ((LA49_39 == LEFT_PAREN)) {
s=76;
}
 else if ((LA49_39 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_39 >= ATTRIBUTES && LA49_39 <= ID) || LA49_39 == GLOBAL || LA49_39 == COMMA || (LA49_39 >= QUERY && LA49_39 <= RIGHT_CURLY) || (LA49_39 >= RIGHT_SQUARE && LA49_39 <= 70) || (LA49_39 >= 72 && LA49_39 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_39);
if (s >= 0) return s;
break;
case 26:
int LA49_37=input.LA(1);
int index49_37=input.index();
input.rewind();
s=-1;
if ((LA49_37 == 71)) {
s=69;
}
 else if ((LA49_37 == DOT)) {
s=70;
}
 else if ((LA49_37 == LEFT_SQUARE)) {
s=71;
}
 else if ((LA49_37 == LEFT_PAREN)) {
s=72;
}
 else if ((LA49_37 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_37 >= ATTRIBUTES && LA49_37 <= ID) || LA49_37 == GLOBAL || LA49_37 == COMMA || (LA49_37 >= QUERY && LA49_37 <= RIGHT_CURLY) || (LA49_37 >= RIGHT_SQUARE && LA49_37 <= 70) || (LA49_37 >= 72 && LA49_37 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_37);
if (s >= 0) return s;
break;
case 27:
int LA49_18=input.LA(1);
int index49_18=input.index();
input.rewind();
s=-1;
if ((LA49_18 == 71)) {
s=41;
}
 else if ((LA49_18 == DOT)) {
s=42;
}
 else if ((LA49_18 == LEFT_SQUARE)) {
s=43;
}
 else if ((LA49_18 == LEFT_PAREN)) {
s=44;
}
 else if ((LA49_18 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_18 >= ATTRIBUTES && LA49_18 <= ID) || LA49_18 == GLOBAL || LA49_18 == COMMA || (LA49_18 >= QUERY && LA49_18 <= RIGHT_CURLY) || (LA49_18 >= RIGHT_SQUARE && LA49_18 <= 70) || (LA49_18 >= 72 && LA49_18 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_18);
if (s >= 0) return s;
break;
case 28:
int LA49_5=input.LA(1);
int index49_5=input.index();
input.rewind();
s=-1;
if ((LA49_5 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_5 == EXISTS)) {
s=20;
}
 else if ((LA49_5 == LEFT_PAREN)) {
s=21;
}
 else if ((LA49_5 == NOT)) {
s=22;
}
 else if ((LA49_5 == EVAL)) {
s=23;
}
 else if ((LA49_5 == ID)) {
s=24;
}
 else if ((LA49_5 == FORALL)) {
s=25;
}
 else if (((LA49_5 >= ATTRIBUTES && LA49_5 <= FUNCTION) || (LA49_5 >= DOT && LA49_5 <= GLOBAL) || LA49_5 == COMMA || (LA49_5 >= QUERY && LA49_5 <= FROM) || (LA49_5 >= ACCUMULATE && LA49_5 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_5);
if (s >= 0) return s;
break;
case 29:
int LA49_31=input.LA(1);
int index49_31=input.index();
input.rewind();
s=-1;
if ((LA49_31 == ID)) {
s=64;
}
 else if ((LA49_31 == LEFT_PAREN)) {
s=65;
}
 else if ((LA49_31 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_31 >= ATTRIBUTES && LA49_31 <= FUNCTION) || (LA49_31 >= DOT && LA49_31 <= GLOBAL) || LA49_31 == COMMA || (LA49_31 >= QUERY && LA49_31 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_31);
if (s >= 0) return s;
break;
case 30:
int LA49_56=input.LA(1);
int index49_56=input.index();
input.rewind();
s=-1;
if ((LA49_56 == ID)) {
s=93;
}
 else if ((LA49_56 == LEFT_PAREN)) {
s=94;
}
 else if ((LA49_56 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_56 >= ATTRIBUTES && LA49_56 <= FUNCTION) || (LA49_56 >= DOT && LA49_56 <= GLOBAL) || LA49_56 == COMMA || (LA49_56 >= QUERY && LA49_56 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_56);
if (s >= 0) return s;
break;
case 31:
int LA49_60=input.LA(1);
int index49_60=input.index();
input.rewind();
s=-1;
if ((LA49_60 == ID)) {
s=97;
}
 else if ((LA49_60 == LEFT_PAREN)) {
s=98;
}
 else if ((LA49_60 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_60 >= ATTRIBUTES && LA49_60 <= FUNCTION) || (LA49_60 >= DOT && LA49_60 <= GLOBAL) || LA49_60 == COMMA || (LA49_60 >= QUERY && LA49_60 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_60);
if (s >= 0) return s;
break;
case 32:
int LA49_6=input.LA(1);
int index49_6=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_6);
if (s >= 0) return s;
break;
case 33:
int LA49_16=input.LA(1);
int index49_16=input.index();
input.rewind();
s=-1;
if ((LA49_16 == LEFT_PAREN)) {
s=38;
}
 else if ((LA49_16 == ID)) {
s=39;
}
 else if ((LA49_16 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_16 >= ATTRIBUTES && LA49_16 <= FUNCTION) || (LA49_16 >= DOT && LA49_16 <= GLOBAL) || LA49_16 == COMMA || (LA49_16 >= QUERY && LA49_16 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_16);
if (s >= 0) return s;
break;
case 34:
int LA49_40=input.LA(1);
int index49_40=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_40);
if (s >= 0) return s;
break;
case 35:
int LA49_29=input.LA(1);
int index49_29=input.index();
input.rewind();
s=-1;
if ((LA49_29 == 71)) {
s=60;
}
 else if ((LA49_29 == DOT)) {
s=61;
}
 else if ((LA49_29 == LEFT_SQUARE)) {
s=62;
}
 else if ((LA49_29 == LEFT_PAREN)) {
s=63;
}
 else if ((LA49_29 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_29 >= ATTRIBUTES && LA49_29 <= ID) || LA49_29 == GLOBAL || LA49_29 == COMMA || (LA49_29 >= QUERY && LA49_29 <= RIGHT_CURLY) || (LA49_29 >= RIGHT_SQUARE && LA49_29 <= 70) || (LA49_29 >= 72 && LA49_29 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_29);
if (s >= 0) return s;
break;
case 36:
int LA49_27=input.LA(1);
int index49_27=input.index();
input.rewind();
s=-1;
if ((LA49_27 == 71)) {
s=56;
}
 else if ((LA49_27 == DOT)) {
s=57;
}
 else if ((LA49_27 == LEFT_SQUARE)) {
s=58;
}
 else if ((LA49_27 == LEFT_PAREN)) {
s=59;
}
 else if ((LA49_27 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_27 >= ATTRIBUTES && LA49_27 <= ID) || LA49_27 == GLOBAL || LA49_27 == COMMA || (LA49_27 >= QUERY && LA49_27 <= RIGHT_CURLY) || (LA49_27 >= RIGHT_SQUARE && LA49_27 <= 70) || (LA49_27 >= 72 && LA49_27 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_27);
if (s >= 0) return s;
break;
case 37:
int LA49_10=input.LA(1);
int index49_10=input.index();
input.rewind();
s=-1;
if ((LA49_10 == 71)) {
s=31;
}
 else if ((LA49_10 == DOT)) {
s=32;
}
 else if ((LA49_10 == LEFT_SQUARE)) {
s=33;
}
 else if ((LA49_10 == LEFT_PAREN)) {
s=34;
}
 else if ((LA49_10 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_10 >= ATTRIBUTES && LA49_10 <= ID) || LA49_10 == GLOBAL || LA49_10 == COMMA || (LA49_10 >= QUERY && LA49_10 <= RIGHT_CURLY) || (LA49_10 >= RIGHT_SQUARE && LA49_10 <= 70) || (LA49_10 >= 72 && LA49_10 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_10);
if (s >= 0) return s;
break;
case 38:
int LA49_44=input.LA(1);
int index49_44=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_44);
if (s >= 0) return s;
break;
case 39:
int LA49_22=input.LA(1);
int index49_22=input.index();
input.rewind();
s=-1;
if ((LA49_22 == LEFT_PAREN)) {
s=48;
}
 else if ((LA49_22 == ID)) {
s=49;
}
 else if ((LA49_22 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_22 >= ATTRIBUTES && LA49_22 <= FUNCTION) || (LA49_22 >= DOT && LA49_22 <= GLOBAL) || LA49_22 == COMMA || (LA49_22 >= QUERY && LA49_22 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_22);
if (s >= 0) return s;
break;
case 40:
int LA49_9=input.LA(1);
int index49_9=input.index();
input.rewind();
s=-1;
if ((LA49_9 == LEFT_PAREN)) {
s=30;
}
 else if ((LA49_9 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_9 >= ATTRIBUTES && LA49_9 <= GLOBAL) || LA49_9 == COMMA || (LA49_9 >= QUERY && LA49_9 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_9);
if (s >= 0) return s;
break;
case 41:
int LA49_42=input.LA(1);
int index49_42=input.index();
input.rewind();
s=-1;
if (((LA49_42 >= ATTRIBUTES && LA49_42 <= ID) || LA49_42 == GLOBAL || (LA49_42 >= QUERY && LA49_42 <= WHEN) || LA49_42 == ENABLED || LA49_42 == SALIENCE || LA49_42 == DURATION || LA49_42 == FROM || (LA49_42 >= INIT && LA49_42 <= RESULT) || (LA49_42 >= CONTAINS && LA49_42 <= IN) || LA49_42 == NULL || LA49_42 == THEN)) {
s=79;
}
 else if ((LA49_42 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_42 == DOT || LA49_42 == COMMA || (LA49_42 >= DATE_EFFECTIVE && LA49_42 <= DATE_EXPIRES) || LA49_42 == BOOL || (LA49_42 >= INT && LA49_42 <= AGENDA_GROUP) || (LA49_42 >= DIALECT && LA49_42 <= DOUBLE_AMPER) || (LA49_42 >= EXISTS && LA49_42 <= ACCUMULATE) || LA49_42 == COLLECT || LA49_42 == FLOAT || (LA49_42 >= LEFT_CURLY && LA49_42 <= RIGHT_SQUARE) || (LA49_42 >= EOL && LA49_42 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_42 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_42);
if (s >= 0) return s;
break;
case 42:
int LA49_48=input.LA(1);
int index49_48=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_48);
if (s >= 0) return s;
break;
case 43:
int LA49_20=input.LA(1);
int index49_20=input.index();
input.rewind();
s=-1;
if ((LA49_20 == LEFT_PAREN)) {
s=46;
}
 else if ((LA49_20 == ID)) {
s=47;
}
 else if ((LA49_20 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_20 >= ATTRIBUTES && LA49_20 <= FUNCTION) || (LA49_20 >= DOT && LA49_20 <= GLOBAL) || LA49_20 == COMMA || (LA49_20 >= QUERY && LA49_20 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_20);
if (s >= 0) return s;
break;
case 44:
int LA49_52=input.LA(1);
int index49_52=input.index();
input.rewind();
s=-1;
if (((LA49_52 >= ATTRIBUTES && LA49_52 <= ID) || LA49_52 == GLOBAL || (LA49_52 >= QUERY && LA49_52 <= WHEN) || LA49_52 == ENABLED || LA49_52 == SALIENCE || LA49_52 == DURATION || LA49_52 == FROM || (LA49_52 >= INIT && LA49_52 <= RESULT) || (LA49_52 >= CONTAINS && LA49_52 <= IN) || LA49_52 == NULL || LA49_52 == THEN)) {
s=91;
}
 else if ((LA49_52 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if ((LA49_52 == DOT || LA49_52 == COMMA || (LA49_52 >= DATE_EFFECTIVE && LA49_52 <= DATE_EXPIRES) || LA49_52 == BOOL || (LA49_52 >= INT && LA49_52 <= AGENDA_GROUP) || (LA49_52 >= DIALECT && LA49_52 <= DOUBLE_AMPER) || (LA49_52 >= EXISTS && LA49_52 <= ACCUMULATE) || LA49_52 == COLLECT || LA49_52 == FLOAT || (LA49_52 >= LEFT_CURLY && LA49_52 <= RIGHT_SQUARE) || (LA49_52 >= EOL && LA49_52 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_52 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_52);
if (s >= 0) return s;
break;
case 45:
int LA49_43=input.LA(1);
int index49_43=input.index();
input.rewind();
s=-1;
if ((LA49_43 == RIGHT_SQUARE)) {
s=80;
}
 else if ((LA49_43 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_43 >= ATTRIBUTES && LA49_43 <= GLOBAL) || LA49_43 == COMMA || (LA49_43 >= QUERY && LA49_43 <= LEFT_SQUARE) || (LA49_43 >= THEN && LA49_43 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_43 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_43);
if (s >= 0) return s;
break;
case 46:
int LA49_26=input.LA(1);
int index49_26=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index49_26);
if (s >= 0) return s;
break;
case 47:
int LA49_63=input.LA(1);
int index49_63=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_63);
if (s >= 0) return s;
break;
case 48:
int LA49_46=input.LA(1);
int index49_46=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_46);
if (s >= 0) return s;
break;
case 49:
int LA49_17=input.LA(1);
int index49_17=input.index();
input.rewind();
s=-1;
if ((LA49_17 == LEFT_PAREN)) {
s=40;
}
 else if ((LA49_17 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_17 >= ATTRIBUTES && LA49_17 <= GLOBAL) || LA49_17 == COMMA || (LA49_17 >= QUERY && LA49_17 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_17);
if (s >= 0) return s;
break;
case 50:
int LA49_33=input.LA(1);
int index49_33=input.index();
input.rewind();
s=-1;
if ((LA49_33 == RIGHT_SQUARE)) {
s=68;
}
 else if ((LA49_33 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_33 >= ATTRIBUTES && LA49_33 <= GLOBAL) || LA49_33 == COMMA || (LA49_33 >= QUERY && LA49_33 <= LEFT_SQUARE) || (LA49_33 >= THEN && LA49_33 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_33 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_33);
if (s >= 0) return s;
break;
case 51:
int LA49_55=input.LA(1);
int index49_55=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_55);
if (s >= 0) return s;
break;
case 52:
int LA49_58=input.LA(1);
int index49_58=input.index();
input.rewind();
s=-1;
if ((LA49_58 == RIGHT_SQUARE)) {
s=96;
}
 else if ((LA49_58 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_58 >= ATTRIBUTES && LA49_58 <= GLOBAL) || LA49_58 == COMMA || (LA49_58 >= QUERY && LA49_58 <= LEFT_SQUARE) || (LA49_58 >= THEN && LA49_58 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_58 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_58);
if (s >= 0) return s;
break;
case 53:
int LA49_62=input.LA(1);
int index49_62=input.index();
input.rewind();
s=-1;
if ((LA49_62 == RIGHT_SQUARE)) {
s=100;
}
 else if ((LA49_62 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_62 >= ATTRIBUTES && LA49_62 <= GLOBAL) || LA49_62 == COMMA || (LA49_62 >= QUERY && LA49_62 <= LEFT_SQUARE) || (LA49_62 >= THEN && LA49_62 <= 79)) && (synpred2())) {
s=12;
}
 else if ((LA49_62 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index49_62);
if (s >= 0) return s;
break;
case 54:
int LA49_0=input.LA(1);
int index49_0=input.index();
input.rewind();
s=-1;
if ((LA49_0 == LEFT_SQUARE) && (synpred1())) {
s=1;
}
 else if ((LA49_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA49_0 >= ID && LA49_0 <= DOT) || LA49_0 == RIGHT_PAREN || LA49_0 == END || (LA49_0 >= OR && LA49_0 <= DOUBLE_AMPER) || (LA49_0 >= EXISTS && LA49_0 <= FORALL) || LA49_0 == THEN || LA49_0 == 70)) {
s=3;
}
input.seek(index49_0);
if (s >= 0) return s;
break;
case 55:
int LA49_35=input.LA(1);
int index49_35=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_35);
if (s >= 0) return s;
break;
case 56:
int LA49_54=input.LA(1);
int index49_54=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_54);
if (s >= 0) return s;
break;
case 57:
int LA49_51=input.LA(1);
int index49_51=input.index();
input.rewind();
s=-1;
if ((LA49_51 == ID)) {
s=89;
}
 else if ((LA49_51 == LEFT_PAREN)) {
s=90;
}
 else if ((LA49_51 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_51 >= ATTRIBUTES && LA49_51 <= FUNCTION) || (LA49_51 >= DOT && LA49_51 <= GLOBAL) || LA49_51 == COMMA || (LA49_51 >= QUERY && LA49_51 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_51);
if (s >= 0) return s;
break;
case 58:
int LA49_11=input.LA(1);
int index49_11=input.index();
input.rewind();
s=-1;
if ((LA49_11 == LEFT_PAREN)) {
s=35;
}
 else if ((LA49_11 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_11 >= ATTRIBUTES && LA49_11 <= GLOBAL) || LA49_11 == COMMA || (LA49_11 >= QUERY && LA49_11 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_11);
if (s >= 0) return s;
break;
case 59:
int LA49_23=input.LA(1);
int index49_23=input.index();
input.rewind();
s=-1;
if ((LA49_23 == LEFT_PAREN)) {
s=50;
}
 else if ((LA49_23 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_23 >= ATTRIBUTES && LA49_23 <= GLOBAL) || LA49_23 == COMMA || (LA49_23 >= QUERY && LA49_23 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_23);
if (s >= 0) return s;
break;
case 60:
int LA49_66=input.LA(1);
int index49_66=input.index();
input.rewind();
s=-1;
if ((LA49_66 == LEFT_SQUARE)) {
s=33;
}
 else if ((LA49_66 == LEFT_PAREN)) {
s=34;
}
 else if ((LA49_66 == DOT)) {
s=32;
}
 else if ((LA49_66 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_66 >= ATTRIBUTES && LA49_66 <= ID) || LA49_66 == GLOBAL || LA49_66 == COMMA || (LA49_66 >= QUERY && LA49_66 <= RIGHT_CURLY) || (LA49_66 >= RIGHT_SQUARE && LA49_66 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_66);
if (s >= 0) return s;
break;
case 61:
int LA49_19=input.LA(1);
int index49_19=input.index();
input.rewind();
s=-1;
if ((LA49_19 == LEFT_PAREN)) {
s=45;
}
 else if ((LA49_19 == RIGHT_PAREN) && (synpred2())) {
s=13;
}
 else if (((LA49_19 >= ATTRIBUTES && LA49_19 <= GLOBAL) || LA49_19 == COMMA || (LA49_19 >= QUERY && LA49_19 <= 79)) && (synpred2())) {
s=12;
}
input.seek(index49_19);
if (s >= 0) return s;
break;
case 62:
int LA49_65=input.LA(1);
int index49_65=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index49_65);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),49,_s,input);
error(nvae);
throw nvae;
}
