{
  int _s=s;
switch (s) {
case 0:
    int LA57_54=input.LA(1);
  int index57_54=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_54);
if (s >= 0) return s;
break;
case 1:
int LA57_17=input.LA(1);
int index57_17=input.index();
input.rewind();
s=-1;
if ((LA57_17 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_17 >= ATTRIBUTES && LA57_17 <= GLOBAL) || LA57_17 == COMMA || (LA57_17 >= QUERY && LA57_17 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_17 == LEFT_PAREN)) {
s=40;
}
input.seek(index57_17);
if (s >= 0) return s;
break;
case 2:
int LA57_6=input.LA(1);
int index57_6=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_6);
if (s >= 0) return s;
break;
case 3:
int LA57_47=input.LA(1);
int index57_47=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_47);
if (s >= 0) return s;
break;
case 4:
int LA57_18=input.LA(1);
int index57_18=input.index();
input.rewind();
s=-1;
if ((LA57_18 == LEFT_PAREN)) {
s=41;
}
 else if ((LA57_18 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_18 >= ATTRIBUTES && LA57_18 <= GLOBAL) || LA57_18 == COMMA || (LA57_18 >= QUERY && LA57_18 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_18);
if (s >= 0) return s;
break;
case 5:
int LA57_39=input.LA(1);
int index57_39=input.index();
input.rewind();
s=-1;
if ((LA57_39 == 72)) {
s=73;
}
 else if ((LA57_39 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_39 == DOT)) {
s=74;
}
 else if ((LA57_39 == LEFT_PAREN)) {
s=75;
}
 else if ((LA57_39 == LEFT_SQUARE)) {
s=76;
}
 else if (((LA57_39 >= ATTRIBUTES && LA57_39 <= ID) || LA57_39 == GLOBAL || LA57_39 == COMMA || (LA57_39 >= QUERY && LA57_39 <= RIGHT_CURLY) || (LA57_39 >= RIGHT_SQUARE && LA57_39 <= 71) || (LA57_39 >= 73 && LA57_39 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_39);
if (s >= 0) return s;
break;
case 6:
int LA57_36=input.LA(1);
int index57_36=input.index();
input.rewind();
s=-1;
if ((LA57_36 == 72)) {
s=69;
}
 else if ((LA57_36 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_36 == DOT)) {
s=70;
}
 else if ((LA57_36 == LEFT_PAREN)) {
s=71;
}
 else if ((LA57_36 == LEFT_SQUARE)) {
s=72;
}
 else if (((LA57_36 >= ATTRIBUTES && LA57_36 <= ID) || LA57_36 == GLOBAL || LA57_36 == COMMA || (LA57_36 >= QUERY && LA57_36 <= RIGHT_CURLY) || (LA57_36 >= RIGHT_SQUARE && LA57_36 <= 71) || (LA57_36 >= 73 && LA57_36 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_36);
if (s >= 0) return s;
break;
case 7:
int LA57_19=input.LA(1);
int index57_19=input.index();
input.rewind();
s=-1;
if ((LA57_19 == 72)) {
s=42;
}
 else if ((LA57_19 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_19 == DOT)) {
s=43;
}
 else if ((LA57_19 == LEFT_PAREN)) {
s=44;
}
 else if ((LA57_19 == LEFT_SQUARE)) {
s=45;
}
 else if (((LA57_19 >= ATTRIBUTES && LA57_19 <= ID) || LA57_19 == GLOBAL || LA57_19 == COMMA || (LA57_19 >= QUERY && LA57_19 <= RIGHT_CURLY) || (LA57_19 >= RIGHT_SQUARE && LA57_19 <= 71) || (LA57_19 >= 73 && LA57_19 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_19);
if (s >= 0) return s;
break;
case 8:
int LA57_55=input.LA(1);
int index57_55=input.index();
input.rewind();
s=-1;
if ((LA57_55 == RIGHT_SQUARE)) {
s=92;
}
 else if ((LA57_55 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_55 >= ATTRIBUTES && LA57_55 <= GLOBAL) || LA57_55 == COMMA || (LA57_55 >= QUERY && LA57_55 <= LEFT_SQUARE) || (LA57_55 >= THEN && LA57_55 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_55 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_55);
if (s >= 0) return s;
break;
case 9:
int LA57_30=input.LA(1);
int index57_30=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_30);
if (s >= 0) return s;
break;
case 10:
int LA57_45=input.LA(1);
int index57_45=input.index();
input.rewind();
s=-1;
if ((LA57_45 == RIGHT_SQUARE)) {
s=80;
}
 else if ((LA57_45 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_45 >= ATTRIBUTES && LA57_45 <= GLOBAL) || LA57_45 == COMMA || (LA57_45 >= QUERY && LA57_45 <= LEFT_SQUARE) || (LA57_45 >= THEN && LA57_45 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_45 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_45);
if (s >= 0) return s;
break;
case 11:
int LA57_35=input.LA(1);
int index57_35=input.index();
input.rewind();
s=-1;
if ((LA57_35 == RIGHT_SQUARE)) {
s=68;
}
 else if ((LA57_35 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_35 >= ATTRIBUTES && LA57_35 <= GLOBAL) || LA57_35 == COMMA || (LA57_35 >= QUERY && LA57_35 <= LEFT_SQUARE) || (LA57_35 >= THEN && LA57_35 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_35 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_35);
if (s >= 0) return s;
break;
case 12:
int LA57_34=input.LA(1);
int index57_34=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_34);
if (s >= 0) return s;
break;
case 13:
int LA57_58=input.LA(1);
int index57_58=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_58);
if (s >= 0) return s;
break;
case 14:
int LA57_59=input.LA(1);
int index57_59=input.index();
input.rewind();
s=-1;
if ((LA57_59 == RIGHT_SQUARE)) {
s=96;
}
 else if ((LA57_59 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_59 >= ATTRIBUTES && LA57_59 <= GLOBAL) || LA57_59 == COMMA || (LA57_59 >= QUERY && LA57_59 <= LEFT_SQUARE) || (LA57_59 >= THEN && LA57_59 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_59 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_59);
if (s >= 0) return s;
break;
case 15:
int LA57_63=input.LA(1);
int index57_63=input.index();
input.rewind();
s=-1;
if ((LA57_63 == RIGHT_SQUARE)) {
s=100;
}
 else if ((LA57_63 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_63 >= ATTRIBUTES && LA57_63 <= GLOBAL) || LA57_63 == COMMA || (LA57_63 >= QUERY && LA57_63 <= LEFT_SQUARE) || (LA57_63 >= THEN && LA57_63 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_63 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_63);
if (s >= 0) return s;
break;
case 16:
int LA57_40=input.LA(1);
int index57_40=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_40);
if (s >= 0) return s;
break;
case 17:
int LA57_10=input.LA(1);
int index57_10=input.index();
input.rewind();
s=-1;
if ((LA57_10 == LEFT_PAREN)) {
s=31;
}
 else if ((LA57_10 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_10 >= ATTRIBUTES && LA57_10 <= GLOBAL) || LA57_10 == COMMA || (LA57_10 >= QUERY && LA57_10 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_10);
if (s >= 0) return s;
break;
case 18:
int LA57_32=input.LA(1);
int index57_32=input.index();
input.rewind();
s=-1;
if ((LA57_32 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_32 == ID)) {
s=64;
}
 else if ((LA57_32 == LEFT_PAREN)) {
s=65;
}
 else if (((LA57_32 >= ATTRIBUTES && LA57_32 <= FUNCTION) || (LA57_32 >= DOT && LA57_32 <= GLOBAL) || LA57_32 == COMMA || (LA57_32 >= QUERY && LA57_32 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_32);
if (s >= 0) return s;
break;
case 19:
int LA57_56=input.LA(1);
int index57_56=input.index();
input.rewind();
s=-1;
if ((LA57_56 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_56 == ID)) {
s=93;
}
 else if ((LA57_56 == LEFT_PAREN)) {
s=94;
}
 else if (((LA57_56 >= ATTRIBUTES && LA57_56 <= FUNCTION) || (LA57_56 >= DOT && LA57_56 <= GLOBAL) || LA57_56 == COMMA || (LA57_56 >= QUERY && LA57_56 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_56);
if (s >= 0) return s;
break;
case 20:
int LA57_60=input.LA(1);
int index57_60=input.index();
input.rewind();
s=-1;
if ((LA57_60 == ID)) {
s=97;
}
 else if ((LA57_60 == LEFT_PAREN)) {
s=98;
}
 else if ((LA57_60 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_60 >= ATTRIBUTES && LA57_60 <= FUNCTION) || (LA57_60 >= DOT && LA57_60 <= GLOBAL) || LA57_60 == COMMA || (LA57_60 >= QUERY && LA57_60 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_60);
if (s >= 0) return s;
break;
case 21:
int LA57_28=input.LA(1);
int index57_28=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_28);
if (s >= 0) return s;
break;
case 22:
int LA57_29=input.LA(1);
int index57_29=input.index();
input.rewind();
s=-1;
if ((LA57_29 == 72)) {
s=60;
}
 else if ((LA57_29 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_29 == DOT)) {
s=61;
}
 else if ((LA57_29 == LEFT_PAREN)) {
s=62;
}
 else if ((LA57_29 == LEFT_SQUARE)) {
s=63;
}
 else if (((LA57_29 >= ATTRIBUTES && LA57_29 <= ID) || LA57_29 == GLOBAL || LA57_29 == COMMA || (LA57_29 >= QUERY && LA57_29 <= RIGHT_CURLY) || (LA57_29 >= RIGHT_SQUARE && LA57_29 <= 71) || (LA57_29 >= 73 && LA57_29 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_29);
if (s >= 0) return s;
break;
case 23:
int LA57_26=input.LA(1);
int index57_26=input.index();
input.rewind();
s=-1;
if ((LA57_26 == 72)) {
s=56;
}
 else if ((LA57_26 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_26 == DOT)) {
s=57;
}
 else if ((LA57_26 == LEFT_PAREN)) {
s=58;
}
 else if ((LA57_26 == LEFT_SQUARE)) {
s=59;
}
 else if (((LA57_26 >= ATTRIBUTES && LA57_26 <= ID) || LA57_26 == GLOBAL || LA57_26 == COMMA || (LA57_26 >= QUERY && LA57_26 <= RIGHT_CURLY) || (LA57_26 >= RIGHT_SQUARE && LA57_26 <= 71) || (LA57_26 >= 73 && LA57_26 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_26);
if (s >= 0) return s;
break;
case 24:
int LA57_11=input.LA(1);
int index57_11=input.index();
input.rewind();
s=-1;
if ((LA57_11 == 72)) {
s=32;
}
 else if ((LA57_11 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_11 == DOT)) {
s=33;
}
 else if ((LA57_11 == LEFT_PAREN)) {
s=34;
}
 else if ((LA57_11 == LEFT_SQUARE)) {
s=35;
}
 else if (((LA57_11 >= ATTRIBUTES && LA57_11 <= ID) || LA57_11 == GLOBAL || LA57_11 == COMMA || (LA57_11 >= QUERY && LA57_11 <= RIGHT_CURLY) || (LA57_11 >= RIGHT_SQUARE && LA57_11 <= 71) || (LA57_11 >= 73 && LA57_11 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_11);
if (s >= 0) return s;
break;
case 25:
int LA57_8=input.LA(1);
int index57_8=input.index();
input.rewind();
s=-1;
if ((LA57_8 == LEFT_PAREN)) {
s=28;
}
 else if ((LA57_8 == ID)) {
s=29;
}
 else if ((LA57_8 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_8 >= ATTRIBUTES && LA57_8 <= FUNCTION) || (LA57_8 >= DOT && LA57_8 <= GLOBAL) || LA57_8 == COMMA || (LA57_8 >= QUERY && LA57_8 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_8);
if (s >= 0) return s;
break;
case 26:
int LA57_41=input.LA(1);
int index57_41=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_41);
if (s >= 0) return s;
break;
case 27:
int LA57_7=input.LA(1);
int index57_7=input.index();
input.rewind();
s=-1;
if ((LA57_7 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_7 == ID)) {
s=26;
}
 else if ((LA57_7 == LEFT_PAREN)) {
s=27;
}
 else if (((LA57_7 >= ATTRIBUTES && LA57_7 <= FUNCTION) || (LA57_7 >= DOT && LA57_7 <= GLOBAL) || LA57_7 == COMMA || (LA57_7 >= QUERY && LA57_7 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_7);
if (s >= 0) return s;
break;
case 28:
int LA57_16=input.LA(1);
int index57_16=input.index();
input.rewind();
s=-1;
if ((LA57_16 == LEFT_PAREN)) {
s=38;
}
 else if ((LA57_16 == ID)) {
s=39;
}
 else if ((LA57_16 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_16 >= ATTRIBUTES && LA57_16 <= FUNCTION) || (LA57_16 >= DOT && LA57_16 <= GLOBAL) || LA57_16 == COMMA || (LA57_16 >= QUERY && LA57_16 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_16);
if (s >= 0) return s;
break;
case 29:
int LA57_24=input.LA(1);
int index57_24=input.index();
input.rewind();
s=-1;
if ((LA57_24 == LEFT_PAREN)) {
s=51;
}
 else if ((LA57_24 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_24 >= ATTRIBUTES && LA57_24 <= GLOBAL) || LA57_24 == COMMA || (LA57_24 >= QUERY && LA57_24 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_24);
if (s >= 0) return s;
break;
case 30:
int LA57_43=input.LA(1);
int index57_43=input.index();
input.rewind();
s=-1;
if ((LA57_43 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_43 >= ATTRIBUTES && LA57_43 <= ID) || LA57_43 == GLOBAL || (LA57_43 >= QUERY && LA57_43 <= WHEN) || LA57_43 == ENABLED || LA57_43 == SALIENCE || LA57_43 == DURATION || LA57_43 == FROM || (LA57_43 >= INIT && LA57_43 <= RESULT) || (LA57_43 >= CONTAINS && LA57_43 <= IN) || LA57_43 == THEN)) {
s=79;
}
 else if ((LA57_43 == LEFT_PAREN) && (synpred7())) {
s=67;
}
 else if ((LA57_43 == DOT || LA57_43 == COMMA || (LA57_43 >= DATE_EFFECTIVE && LA57_43 <= DATE_EXPIRES) || LA57_43 == BOOL || (LA57_43 >= INT && LA57_43 <= AGENDA_GROUP) || (LA57_43 >= DIALECT && LA57_43 <= DOUBLE_AMPER) || (LA57_43 >= EXISTS && LA57_43 <= ACCUMULATE) || LA57_43 == COLLECT || (LA57_43 >= FLOAT && LA57_43 <= RIGHT_SQUARE) || (LA57_43 >= EOL && LA57_43 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_43);
if (s >= 0) return s;
break;
case 31:
int LA57_5=input.LA(1);
int index57_5=input.index();
input.rewind();
s=-1;
if ((LA57_5 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_5 == EXISTS)) {
s=20;
}
 else if ((LA57_5 == LEFT_PAREN)) {
s=21;
}
 else if ((LA57_5 == NOT)) {
s=22;
}
 else if ((LA57_5 == EVAL)) {
s=23;
}
 else if ((LA57_5 == FORALL)) {
s=24;
}
 else if ((LA57_5 == ID)) {
s=25;
}
 else if (((LA57_5 >= ATTRIBUTES && LA57_5 <= FUNCTION) || (LA57_5 >= DOT && LA57_5 <= GLOBAL) || LA57_5 == COMMA || (LA57_5 >= QUERY && LA57_5 <= FROM) || (LA57_5 >= ACCUMULATE && LA57_5 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_5);
if (s >= 0) return s;
break;
case 32:
int LA57_4=input.LA(1);
int index57_4=input.index();
input.rewind();
s=-1;
if ((LA57_4 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_4 == EXISTS)) {
s=14;
}
 else if ((LA57_4 == LEFT_PAREN)) {
s=15;
}
 else if ((LA57_4 == NOT)) {
s=16;
}
 else if ((LA57_4 == EVAL)) {
s=17;
}
 else if ((LA57_4 == FORALL)) {
s=18;
}
 else if ((LA57_4 == ID)) {
s=19;
}
 else if (((LA57_4 >= ATTRIBUTES && LA57_4 <= FUNCTION) || (LA57_4 >= DOT && LA57_4 <= GLOBAL) || LA57_4 == COMMA || (LA57_4 >= QUERY && LA57_4 <= FROM) || (LA57_4 >= ACCUMULATE && LA57_4 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_4);
if (s >= 0) return s;
break;
case 33:
int LA57_52=input.LA(1);
int index57_52=input.index();
input.rewind();
s=-1;
if ((LA57_52 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_52 == ID)) {
s=89;
}
 else if ((LA57_52 == LEFT_PAREN)) {
s=90;
}
 else if (((LA57_52 >= ATTRIBUTES && LA57_52 <= FUNCTION) || (LA57_52 >= DOT && LA57_52 <= GLOBAL) || LA57_52 == COMMA || (LA57_52 >= QUERY && LA57_52 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_52);
if (s >= 0) return s;
break;
case 34:
int LA57_65=input.LA(1);
int index57_65=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_65);
if (s >= 0) return s;
break;
case 35:
int LA57_23=input.LA(1);
int index57_23=input.index();
input.rewind();
s=-1;
if ((LA57_23 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_23 >= ATTRIBUTES && LA57_23 <= GLOBAL) || LA57_23 == COMMA || (LA57_23 >= QUERY && LA57_23 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_23 == LEFT_PAREN)) {
s=50;
}
input.seek(index57_23);
if (s >= 0) return s;
break;
case 36:
int LA57_48=input.LA(1);
int index57_48=input.index();
input.rewind();
s=-1;
if ((LA57_48 == 72)) {
s=85;
}
 else if ((LA57_48 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_48 == DOT)) {
s=86;
}
 else if ((LA57_48 == LEFT_PAREN)) {
s=87;
}
 else if ((LA57_48 == LEFT_SQUARE)) {
s=88;
}
 else if (((LA57_48 >= ATTRIBUTES && LA57_48 <= ID) || LA57_48 == GLOBAL || LA57_48 == COMMA || (LA57_48 >= QUERY && LA57_48 <= RIGHT_CURLY) || (LA57_48 >= RIGHT_SQUARE && LA57_48 <= 71) || (LA57_48 >= 73 && LA57_48 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_48);
if (s >= 0) return s;
break;
case 37:
int LA57_46=input.LA(1);
int index57_46=input.index();
input.rewind();
s=-1;
if ((LA57_46 == 72)) {
s=81;
}
 else if ((LA57_46 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_46 == DOT)) {
s=82;
}
 else if ((LA57_46 == LEFT_PAREN)) {
s=83;
}
 else if ((LA57_46 == LEFT_SQUARE)) {
s=84;
}
 else if (((LA57_46 >= ATTRIBUTES && LA57_46 <= ID) || LA57_46 == GLOBAL || LA57_46 == COMMA || (LA57_46 >= QUERY && LA57_46 <= RIGHT_CURLY) || (LA57_46 >= RIGHT_SQUARE && LA57_46 <= 71) || (LA57_46 >= 73 && LA57_46 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_46);
if (s >= 0) return s;
break;
case 38:
int LA57_25=input.LA(1);
int index57_25=input.index();
input.rewind();
s=-1;
if ((LA57_25 == 72)) {
s=52;
}
 else if ((LA57_25 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_25 == DOT)) {
s=53;
}
 else if ((LA57_25 == LEFT_PAREN)) {
s=54;
}
 else if ((LA57_25 == LEFT_SQUARE)) {
s=55;
}
 else if (((LA57_25 >= ATTRIBUTES && LA57_25 <= ID) || LA57_25 == GLOBAL || LA57_25 == COMMA || (LA57_25 >= QUERY && LA57_25 <= RIGHT_CURLY) || (LA57_25 >= RIGHT_SQUARE && LA57_25 <= 71) || (LA57_25 >= 73 && LA57_25 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_25);
if (s >= 0) return s;
break;
case 39:
int LA57_15=input.LA(1);
int index57_15=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_15);
if (s >= 0) return s;
break;
case 40:
int LA57_66=input.LA(1);
int index57_66=input.index();
input.rewind();
s=-1;
if ((LA57_66 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_66 == LEFT_SQUARE)) {
s=35;
}
 else if ((LA57_66 == LEFT_PAREN)) {
s=34;
}
 else if ((LA57_66 == DOT)) {
s=33;
}
 else if (((LA57_66 >= ATTRIBUTES && LA57_66 <= ID) || LA57_66 == GLOBAL || LA57_66 == COMMA || (LA57_66 >= QUERY && LA57_66 <= RIGHT_CURLY) || (LA57_66 >= RIGHT_SQUARE && LA57_66 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_66);
if (s >= 0) return s;
break;
case 41:
int LA57_49=input.LA(1);
int index57_49=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_49);
if (s >= 0) return s;
break;
case 42:
int LA57_50=input.LA(1);
int index57_50=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_50);
if (s >= 0) return s;
break;
case 43:
int LA57_64=input.LA(1);
int index57_64=input.index();
input.rewind();
s=-1;
if ((LA57_64 == DOT)) {
s=101;
}
 else if ((LA57_64 == LEFT_SQUARE)) {
s=102;
}
 else if ((LA57_64 == LEFT_PAREN)) {
s=103;
}
 else if ((LA57_64 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_64 >= ATTRIBUTES && LA57_64 <= ID) || LA57_64 == GLOBAL || LA57_64 == COMMA || (LA57_64 >= QUERY && LA57_64 <= RIGHT_CURLY) || (LA57_64 >= RIGHT_SQUARE && LA57_64 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_64);
if (s >= 0) return s;
break;
case 44:
int LA57_14=input.LA(1);
int index57_14=input.index();
input.rewind();
s=-1;
if ((LA57_14 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_14 == ID)) {
s=36;
}
 else if ((LA57_14 == LEFT_PAREN)) {
s=37;
}
 else if (((LA57_14 >= ATTRIBUTES && LA57_14 <= FUNCTION) || (LA57_14 >= DOT && LA57_14 <= GLOBAL) || LA57_14 == COMMA || (LA57_14 >= QUERY && LA57_14 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_14);
if (s >= 0) return s;
break;
case 45:
int LA57_37=input.LA(1);
int index57_37=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_37);
if (s >= 0) return s;
break;
case 46:
int LA57_31=input.LA(1);
int index57_31=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_31);
if (s >= 0) return s;
break;
case 47:
int LA57_27=input.LA(1);
int index57_27=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_27);
if (s >= 0) return s;
break;
case 48:
int LA57_33=input.LA(1);
int index57_33=input.index();
input.rewind();
s=-1;
if ((LA57_33 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_33 >= ATTRIBUTES && LA57_33 <= ID) || LA57_33 == GLOBAL || (LA57_33 >= QUERY && LA57_33 <= WHEN) || LA57_33 == ENABLED || LA57_33 == SALIENCE || LA57_33 == DURATION || LA57_33 == FROM || (LA57_33 >= INIT && LA57_33 <= RESULT) || (LA57_33 >= CONTAINS && LA57_33 <= IN) || LA57_33 == THEN)) {
s=66;
}
 else if ((LA57_33 == LEFT_PAREN) && (synpred7())) {
s=67;
}
 else if ((LA57_33 == DOT || LA57_33 == COMMA || (LA57_33 >= DATE_EFFECTIVE && LA57_33 <= DATE_EXPIRES) || LA57_33 == BOOL || (LA57_33 >= INT && LA57_33 <= AGENDA_GROUP) || (LA57_33 >= DIALECT && LA57_33 <= DOUBLE_AMPER) || (LA57_33 >= EXISTS && LA57_33 <= ACCUMULATE) || LA57_33 == COLLECT || (LA57_33 >= FLOAT && LA57_33 <= RIGHT_SQUARE) || (LA57_33 >= EOL && LA57_33 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_33);
if (s >= 0) return s;
break;
case 49:
int LA57_57=input.LA(1);
int index57_57=input.index();
input.rewind();
s=-1;
if ((LA57_57 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_57 >= ATTRIBUTES && LA57_57 <= ID) || LA57_57 == GLOBAL || (LA57_57 >= QUERY && LA57_57 <= WHEN) || LA57_57 == ENABLED || LA57_57 == SALIENCE || LA57_57 == DURATION || LA57_57 == FROM || (LA57_57 >= INIT && LA57_57 <= RESULT) || (LA57_57 >= CONTAINS && LA57_57 <= IN) || LA57_57 == THEN)) {
s=95;
}
 else if ((LA57_57 == LEFT_PAREN) && (synpred7())) {
s=67;
}
 else if ((LA57_57 == DOT || LA57_57 == COMMA || (LA57_57 >= DATE_EFFECTIVE && LA57_57 <= DATE_EXPIRES) || LA57_57 == BOOL || (LA57_57 >= INT && LA57_57 <= AGENDA_GROUP) || (LA57_57 >= DIALECT && LA57_57 <= DOUBLE_AMPER) || (LA57_57 >= EXISTS && LA57_57 <= ACCUMULATE) || LA57_57 == COLLECT || (LA57_57 >= FLOAT && LA57_57 <= RIGHT_SQUARE) || (LA57_57 >= EOL && LA57_57 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_57);
if (s >= 0) return s;
break;
case 50:
int LA57_61=input.LA(1);
int index57_61=input.index();
input.rewind();
s=-1;
if (((LA57_61 >= ATTRIBUTES && LA57_61 <= ID) || LA57_61 == GLOBAL || (LA57_61 >= QUERY && LA57_61 <= WHEN) || LA57_61 == ENABLED || LA57_61 == SALIENCE || LA57_61 == DURATION || LA57_61 == FROM || (LA57_61 >= INIT && LA57_61 <= RESULT) || (LA57_61 >= CONTAINS && LA57_61 <= IN) || LA57_61 == THEN)) {
s=99;
}
 else if ((LA57_61 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_61 == DOT || LA57_61 == COMMA || (LA57_61 >= DATE_EFFECTIVE && LA57_61 <= DATE_EXPIRES) || LA57_61 == BOOL || (LA57_61 >= INT && LA57_61 <= AGENDA_GROUP) || (LA57_61 >= DIALECT && LA57_61 <= DOUBLE_AMPER) || (LA57_61 >= EXISTS && LA57_61 <= ACCUMULATE) || LA57_61 == COLLECT || (LA57_61 >= FLOAT && LA57_61 <= RIGHT_SQUARE) || (LA57_61 >= EOL && LA57_61 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_61 == LEFT_PAREN) && (synpred7())) {
s=67;
}
input.seek(index57_61);
if (s >= 0) return s;
break;
case 51:
int LA57_21=input.LA(1);
int index57_21=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index57_21);
if (s >= 0) return s;
break;
case 52:
int LA57_20=input.LA(1);
int index57_20=input.index();
input.rewind();
s=-1;
if ((LA57_20 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_20 == ID)) {
s=46;
}
 else if ((LA57_20 == LEFT_PAREN)) {
s=47;
}
 else if (((LA57_20 >= ATTRIBUTES && LA57_20 <= FUNCTION) || (LA57_20 >= DOT && LA57_20 <= GLOBAL) || LA57_20 == COMMA || (LA57_20 >= QUERY && LA57_20 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_20);
if (s >= 0) return s;
break;
case 53:
int LA57_38=input.LA(1);
int index57_38=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_38);
if (s >= 0) return s;
break;
case 54:
int LA57_22=input.LA(1);
int index57_22=input.index();
input.rewind();
s=-1;
if ((LA57_22 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_22 == ID)) {
s=48;
}
 else if ((LA57_22 == LEFT_PAREN)) {
s=49;
}
 else if (((LA57_22 >= ATTRIBUTES && LA57_22 <= FUNCTION) || (LA57_22 >= DOT && LA57_22 <= GLOBAL) || LA57_22 == COMMA || (LA57_22 >= QUERY && LA57_22 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_22);
if (s >= 0) return s;
break;
case 55:
int LA57_9=input.LA(1);
int index57_9=input.index();
input.rewind();
s=-1;
if ((LA57_9 == LEFT_PAREN)) {
s=30;
}
 else if ((LA57_9 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_9 >= ATTRIBUTES && LA57_9 <= GLOBAL) || LA57_9 == COMMA || (LA57_9 >= QUERY && LA57_9 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_9);
if (s >= 0) return s;
break;
case 56:
int LA57_2=input.LA(1);
int index57_2=input.index();
input.rewind();
s=-1;
if ((LA57_2 == AND)) {
s=4;
}
 else if ((LA57_2 == OR)) {
s=5;
}
 else if ((LA57_2 == LEFT_PAREN)) {
s=6;
}
 else if ((LA57_2 == EXISTS)) {
s=7;
}
 else if ((LA57_2 == NOT)) {
s=8;
}
 else if ((LA57_2 == EVAL)) {
s=9;
}
 else if ((LA57_2 == FORALL)) {
s=10;
}
 else if ((LA57_2 == ID)) {
s=11;
}
 else if (((LA57_2 >= ATTRIBUTES && LA57_2 <= FUNCTION) || (LA57_2 >= DOT && LA57_2 <= GLOBAL) || LA57_2 == COMMA || (LA57_2 >= QUERY && LA57_2 <= LOCK_ON_ACTIVE) || LA57_2 == DOUBLE_PIPE || (LA57_2 >= DOUBLE_AMPER && LA57_2 <= FROM) || (LA57_2 >= ACCUMULATE && LA57_2 <= 80)) && (synpred7())) {
s=12;
}
 else if ((LA57_2 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
input.seek(index57_2);
if (s >= 0) return s;
break;
case 57:
int LA57_53=input.LA(1);
int index57_53=input.index();
input.rewind();
s=-1;
if ((LA57_53 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if (((LA57_53 >= ATTRIBUTES && LA57_53 <= ID) || LA57_53 == GLOBAL || (LA57_53 >= QUERY && LA57_53 <= WHEN) || LA57_53 == ENABLED || LA57_53 == SALIENCE || LA57_53 == DURATION || LA57_53 == FROM || (LA57_53 >= INIT && LA57_53 <= RESULT) || (LA57_53 >= CONTAINS && LA57_53 <= IN) || LA57_53 == THEN)) {
s=91;
}
 else if ((LA57_53 == LEFT_PAREN) && (synpred7())) {
s=67;
}
 else if ((LA57_53 == DOT || LA57_53 == COMMA || (LA57_53 >= DATE_EFFECTIVE && LA57_53 <= DATE_EXPIRES) || LA57_53 == BOOL || (LA57_53 >= INT && LA57_53 <= AGENDA_GROUP) || (LA57_53 >= DIALECT && LA57_53 <= DOUBLE_AMPER) || (LA57_53 >= EXISTS && LA57_53 <= ACCUMULATE) || LA57_53 == COLLECT || (LA57_53 >= FLOAT && LA57_53 <= RIGHT_SQUARE) || (LA57_53 >= EOL && LA57_53 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_53);
if (s >= 0) return s;
break;
case 58:
int LA57_42=input.LA(1);
int index57_42=input.index();
input.rewind();
s=-1;
if ((LA57_42 == RIGHT_PAREN) && (synpred7())) {
s=13;
}
 else if ((LA57_42 == ID)) {
s=77;
}
 else if ((LA57_42 == LEFT_PAREN)) {
s=78;
}
 else if (((LA57_42 >= ATTRIBUTES && LA57_42 <= FUNCTION) || (LA57_42 >= DOT && LA57_42 <= GLOBAL) || LA57_42 == COMMA || (LA57_42 >= QUERY && LA57_42 <= 80)) && (synpred7())) {
s=12;
}
input.seek(index57_42);
if (s >= 0) return s;
break;
case 59:
int LA57_44=input.LA(1);
int index57_44=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_44);
if (s >= 0) return s;
break;
case 60:
int LA57_51=input.LA(1);
int index57_51=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_51);
if (s >= 0) return s;
break;
case 61:
int LA57_62=input.LA(1);
int index57_62=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index57_62);
if (s >= 0) return s;
break;
case 62:
int LA57_0=input.LA(1);
int index57_0=input.index();
input.rewind();
s=-1;
if ((LA57_0 == LEFT_SQUARE) && (synpred6())) {
s=1;
}
 else if ((LA57_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA57_0 >= ID && LA57_0 <= DOT) || (LA57_0 >= COMMA && LA57_0 <= RIGHT_PAREN) || LA57_0 == END || (LA57_0 >= OR && LA57_0 <= DOUBLE_AMPER) || (LA57_0 >= EXISTS && LA57_0 <= FORALL) || LA57_0 == INIT || LA57_0 == THEN || LA57_0 == 71)) {
s=3;
}
input.seek(index57_0);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),57,_s,input);
error(nvae);
throw nvae;
}
