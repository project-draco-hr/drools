{
  int _s=s;
switch (s) {
case 0:
    int LA67_15=input.LA(1);
  int index67_15=input.index();
input.rewind();
s=-1;
if ((LA67_15 == LEFT_SQUARE)) {
s=12;
}
 else if ((LA67_15 == LEFT_PAREN)) {
s=21;
}
 else if ((LA67_15 == DOT)) {
s=11;
}
 else if ((LA67_15 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_15 >= VT_COMPILATION_UNIT && LA67_15 <= ID) || (LA67_15 >= DOT_STAR && LA67_15 <= STRING) || LA67_15 == COMMA || (LA67_15 >= AT && LA67_15 <= NULL) || (LA67_15 >= RIGHT_SQUARE && LA67_15 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
input.seek(index67_15);
if (s >= 0) return s;
break;
case 1:
int LA67_17=input.LA(1);
int index67_17=input.index();
input.rewind();
s=-1;
if ((LA67_17 == LEFT_PAREN)) {
s=21;
}
 else if ((LA67_17 == LEFT_SQUARE)) {
s=12;
}
 else if ((LA67_17 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_17 >= VT_COMPILATION_UNIT && LA67_17 <= STRING) || LA67_17 == COMMA || (LA67_17 >= AT && LA67_17 <= NULL) || (LA67_17 >= RIGHT_SQUARE && LA67_17 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
input.seek(index67_17);
if (s >= 0) return s;
break;
case 2:
int LA67_14=input.LA(1);
int index67_14=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=16;
}
 else if ((true)) {
s=3;
}
input.seek(index67_14);
if (s >= 0) return s;
break;
case 3:
int LA67_9=input.LA(1);
int index67_9=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=7;
}
 else if ((true)) {
s=3;
}
input.seek(index67_9);
if (s >= 0) return s;
break;
case 4:
int LA67_5=input.LA(1);
int index67_5=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=7;
}
 else if ((true)) {
s=3;
}
input.seek(index67_5);
if (s >= 0) return s;
break;
case 5:
int LA67_12=input.LA(1);
int index67_12=input.index();
input.rewind();
s=-1;
if ((LA67_12 == RIGHT_SQUARE)) {
s=17;
}
 else if ((LA67_12 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_12 >= VT_COMPILATION_UNIT && LA67_12 <= STRING) || LA67_12 == COMMA || (LA67_12 >= AT && LA67_12 <= LEFT_SQUARE) || (LA67_12 >= THEN && LA67_12 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
 else if ((LA67_12 == LEFT_PAREN) && (synpred10())) {
s=16;
}
input.seek(index67_12);
if (s >= 0) return s;
break;
case 6:
int LA67_13=input.LA(1);
int index67_13=input.index();
input.rewind();
s=-1;
if ((LA67_13 == DOT)) {
s=18;
}
 else if ((LA67_13 == LEFT_SQUARE)) {
s=19;
}
 else if ((LA67_13 == LEFT_PAREN)) {
s=20;
}
 else if ((LA67_13 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_13 >= VT_COMPILATION_UNIT && LA67_13 <= ID) || (LA67_13 >= DOT_STAR && LA67_13 <= STRING) || LA67_13 == COMMA || (LA67_13 >= AT && LA67_13 <= NULL) || (LA67_13 >= RIGHT_SQUARE && LA67_13 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
input.seek(index67_13);
if (s >= 0) return s;
break;
case 7:
int LA67_2=input.LA(1);
int index67_2=input.index();
input.rewind();
s=-1;
if ((LA67_2 == ID)) {
s=4;
}
 else if ((LA67_2 == LEFT_PAREN)) {
s=5;
}
 else if (((LA67_2 >= VT_COMPILATION_UNIT && LA67_2 <= SEMICOLON) || (LA67_2 >= DOT && LA67_2 <= STRING) || LA67_2 == COMMA || (LA67_2 >= AT && LA67_2 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
 else if ((LA67_2 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
input.seek(index67_2);
if (s >= 0) return s;
break;
case 8:
int LA67_0=input.LA(1);
int index67_0=input.index();
input.rewind();
s=-1;
if ((LA67_0 == LEFT_SQUARE) && (synpred9())) {
s=1;
}
 else if ((LA67_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA67_0 >= SEMICOLON && LA67_0 <= DOT) || LA67_0 == END || (LA67_0 >= COMMA && LA67_0 <= RIGHT_PAREN) || (LA67_0 >= DOUBLE_PIPE && LA67_0 <= DOUBLE_AMPER) || LA67_0 == THEN)) {
s=3;
}
input.seek(index67_0);
if (s >= 0) return s;
break;
case 9:
int LA67_10=input.LA(1);
int index67_10=input.index();
input.rewind();
s=-1;
if ((synpred10())) {
s=7;
}
 else if ((true)) {
s=3;
}
input.seek(index67_10);
if (s >= 0) return s;
break;
case 10:
int LA67_8=input.LA(1);
int index67_8=input.index();
input.rewind();
s=-1;
if ((LA67_8 == ID)) {
s=13;
}
 else if ((LA67_8 == LEFT_PAREN)) {
s=14;
}
 else if ((LA67_8 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_8 >= VT_COMPILATION_UNIT && LA67_8 <= SEMICOLON) || (LA67_8 >= DOT && LA67_8 <= STRING) || LA67_8 == COMMA || (LA67_8 >= AT && LA67_8 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
input.seek(index67_8);
if (s >= 0) return s;
break;
case 11:
int LA67_11=input.LA(1);
int index67_11=input.index();
input.rewind();
s=-1;
if ((LA67_11 == ID)) {
s=15;
}
 else if ((LA67_11 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_11 >= VT_COMPILATION_UNIT && LA67_11 <= SEMICOLON) || (LA67_11 >= DOT && LA67_11 <= STRING) || LA67_11 == COMMA || (LA67_11 >= AT && LA67_11 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
 else if ((LA67_11 == LEFT_PAREN) && (synpred10())) {
s=16;
}
input.seek(index67_11);
if (s >= 0) return s;
break;
case 12:
int LA67_4=input.LA(1);
int index67_4=input.index();
input.rewind();
s=-1;
if ((LA67_4 == COLON)) {
s=8;
}
 else if ((LA67_4 == ID)) {
s=9;
}
 else if ((LA67_4 == LEFT_PAREN)) {
s=10;
}
 else if ((LA67_4 == DOT)) {
s=11;
}
 else if ((LA67_4 == LEFT_SQUARE)) {
s=12;
}
 else if ((LA67_4 == RIGHT_PAREN) && (synpred10())) {
s=7;
}
 else if (((LA67_4 >= VT_COMPILATION_UNIT && LA67_4 <= SEMICOLON) || (LA67_4 >= DOT_STAR && LA67_4 <= STRING) || LA67_4 == COMMA || LA67_4 == AT || (LA67_4 >= EQUALS && LA67_4 <= NULL) || (LA67_4 >= RIGHT_SQUARE && LA67_4 <= MULTI_LINE_COMMENT)) && (synpred10())) {
s=6;
}
input.seek(index67_4);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),67,_s,input);
error(nvae);
throw nvae;
}
