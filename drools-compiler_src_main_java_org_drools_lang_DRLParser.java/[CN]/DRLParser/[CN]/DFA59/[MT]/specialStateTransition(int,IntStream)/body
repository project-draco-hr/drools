{
  int _s=s;
switch (s) {
case 0:
    int LA59_6=input.LA(1);
  int index59_6=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.INIT)))) {
s=10;
}
 else if ((true)) {
s=9;
}
input.seek(index59_6);
if (s >= 0) return s;
break;
case 1:
int LA59_5=input.LA(1);
int index59_5=input.index();
input.rewind();
s=-1;
if ((LA59_5 == RIGHT_PAREN)) {
s=9;
}
 else if ((LA59_5 == ID || LA59_5 == COMMA) && ((validateIdentifierKey(DroolsSoftKeywords.INIT)))) {
s=10;
}
input.seek(index59_5);
if (s >= 0) return s;
break;
case 2:
int LA59_4=input.LA(1);
int index59_4=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.INIT)))) {
s=7;
}
 else if ((true)) {
s=8;
}
input.seek(index59_4);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),59,_s,input);
error(nvae);
throw nvae;
}
