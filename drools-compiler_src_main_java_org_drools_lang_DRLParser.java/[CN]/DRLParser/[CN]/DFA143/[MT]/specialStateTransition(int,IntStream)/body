{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA143_1=input.LA(1);
  int index143_1=input.index();
input.rewind();
s=-1;
if ((((synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.BOOLEAN)))) || synpred34_DRL() || (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.LONG))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.FLOAT))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.INT))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.DOUBLE))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.SHORT))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.BYTE))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.FINAL))))|| (synpred34_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.CHAR))))))) {
s=17;
}
 else if ((true)) {
s=2;
}
input.seek(index143_1);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),143,_s,input);
error(nvae);
throw nvae;
}
