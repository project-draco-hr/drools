{
  int _s=s;
switch (s) {
case 0:
    int LA55_26=input.LA(1);
  int index55_26=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=46;
}
input.seek(index55_26);
if (s >= 0) return s;
break;
case 1:
int LA55_44=input.LA(1);
int index55_44=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=81;
}
input.seek(index55_44);
if (s >= 0) return s;
break;
case 2:
int LA55_2=input.LA(1);
int index55_2=input.index();
input.rewind();
s=-1;
if ((LA55_2 == COLON)) {
s=5;
}
 else if ((LA55_2 == ID) && (((synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS))) || (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS))) || (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| ((synpred7() && validateNotWithBinding()) && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT)))))) {
s=6;
}
 else if ((LA55_2 == DOT)) {
s=7;
}
 else if ((LA55_2 == LEFT_SQUARE)) {
s=8;
}
 else if ((LA55_2 == LEFT_PAREN)) {
s=9;
}
input.seek(index55_2);
if (s >= 0) return s;
break;
case 3:
int LA55_32=input.LA(1);
int index55_32=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=46;
}
input.seek(index55_32);
if (s >= 0) return s;
break;
case 4:
int LA55_4=input.LA(1);
int index55_4=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=11;
}
input.seek(index55_4);
if (s >= 0) return s;
break;
case 5:
int LA55_31=input.LA(1);
int index55_31=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=64;
}
input.seek(index55_31);
if (s >= 0) return s;
break;
case 6:
int LA55_25=input.LA(1);
int index55_25=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=45;
}
input.seek(index55_25);
if (s >= 0) return s;
break;
case 7:
int LA55_50=input.LA(1);
int index55_50=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=94;
}
input.seek(index55_50);
if (s >= 0) return s;
break;
case 8:
int LA55_53=input.LA(1);
int index55_53=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=99;
}
input.seek(index55_53);
if (s >= 0) return s;
break;
case 9:
int LA55_3=input.LA(1);
int index55_3=input.index();
input.rewind();
s=-1;
if ((synpred7())) {
s=6;
}
 else if ((true)) {
s=10;
}
input.seek(index55_3);
if (s >= 0) return s;
break;
case 10:
int LA55_9=input.LA(1);
int index55_9=input.index();
input.rewind();
s=-1;
if ((((synpred7() && (validateIdentifierKey(DroolsSoftKeywords.FORALL))) || (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.NOT))) || (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EVAL)))|| synpred7()|| (synpred7() && (validateIdentifierKey(DroolsSoftKeywords.EXISTS)))))) {
s=6;
}
 else if ((true)) {
s=16;
}
input.seek(index55_9);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),55,_s,input);
error(nvae);
throw nvae;
}
