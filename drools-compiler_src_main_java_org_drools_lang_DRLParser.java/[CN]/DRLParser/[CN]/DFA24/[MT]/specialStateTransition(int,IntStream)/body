{
  int _s=s;
switch (s) {
case 0:
    int LA24_10=input.LA(1);
  int index24_10=input.index();
input.rewind();
s=-1;
if ((LA24_10 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=14;
}
 else if ((LA24_10 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=15;
}
 else if ((LA24_10 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=16;
}
 else if (((LA24_10 >= VT_COMPILATION_UNIT && LA24_10 <= SEMICOLON) || (LA24_10 >= DOT_STAR && LA24_10 <= STRING) || (LA24_10 >= COMMA && LA24_10 <= RIGHT_PAREN)|| (LA24_10 >= BOOL && LA24_10 <= NULL)|| (LA24_10 >= RIGHT_SQUARE && LA24_10 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if ((LA24_10 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=17;
}
 else if ((LA24_10 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=18;
}
input.seek(index24_10);
if (s >= 0) return s;
break;
case 1:
int LA24_6=input.LA(1);
int index24_6=input.index();
input.rewind();
s=-1;
if ((LA24_6 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES))))) {
s=13;
}
 else if ((LA24_6 == LEFT_PAREN || LA24_6 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_6);
if (s >= 0) return s;
break;
case 2:
int LA24_20=input.LA(1);
int index24_20=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_20);
if (s >= 0) return s;
break;
case 3:
int LA24_16=input.LA(1);
int index24_16=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_16);
if (s >= 0) return s;
break;
case 4:
int LA24_0=input.LA(1);
int index24_0=input.index();
input.rewind();
s=-1;
if ((LA24_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.DURATION))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))|| (validateIdentifierKey(DroolsSoftKeywords.ENABLED))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))))) {
s=1;
}
 else if ((LA24_0 == THEN)) {
s=2;
}
input.seek(index24_0);
if (s >= 0) return s;
break;
case 5:
int LA24_21=input.LA(1);
int index24_21=input.index();
input.rewind();
s=-1;
if (((LA24_21 >= VT_COMPILATION_UNIT && LA24_21 <= ID) || (LA24_21 >= DOT_STAR && LA24_21 <= STRING) || (LA24_21 >= COMMA && LA24_21 <= NULL)|| (LA24_21 >= RIGHT_SQUARE && LA24_21 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if ((LA24_21 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=18;
}
 else if ((LA24_21 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=26;
}
 else if ((LA24_21 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=17;
}
input.seek(index24_21);
if (s >= 0) return s;
break;
case 6:
int LA24_13=input.LA(1);
int index24_13=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_13);
if (s >= 0) return s;
break;
case 7:
int LA24_5=input.LA(1);
int index24_5=input.index();
input.rewind();
s=-1;
if ((LA24_5 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=10;
}
 else if (((LA24_5 >= VT_COMPILATION_UNIT && LA24_5 <= SEMICOLON) || (LA24_5 >= DOT && LA24_5 <= STRING) || (LA24_5 >= COMMA && LA24_5 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if ((LA24_5 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=12;
}
input.seek(index24_5);
if (s >= 0) return s;
break;
case 8:
int LA24_22=input.LA(1);
int index24_22=input.index();
input.rewind();
s=-1;
if (((LA24_22 >= VT_COMPILATION_UNIT && LA24_22 <= STRING) || (LA24_22 >= COMMA && LA24_22 <= NULL) || (LA24_22 >= RIGHT_SQUARE && LA24_22 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if ((LA24_22 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=18;
}
 else if ((LA24_22 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=26;
}
input.seek(index24_22);
if (s >= 0) return s;
break;
case 9:
int LA24_18=input.LA(1);
int index24_18=input.index();
input.rewind();
s=-1;
if ((LA24_18 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=22;
}
 else if (((LA24_18 >= VT_COMPILATION_UNIT && LA24_18 <= LEFT_SQUARE) || (LA24_18 >= THEN && LA24_18 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
input.seek(index24_18);
if (s >= 0) return s;
break;
case 10:
int LA24_1=input.LA(1);
int index24_1=input.index();
input.rewind();
s=-1;
if ((LA24_1 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=3;
}
 else if ((LA24_1 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
s=4;
}
 else if ((LA24_1 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=5;
}
 else if ((LA24_1 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES))))) {
s=6;
}
 else if ((LA24_1 == ID || LA24_1 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
 else if ((LA24_1 == STRING) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=8;
}
 else if ((LA24_1 == BOOL) && ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=9;
}
input.seek(index24_1);
if (s >= 0) return s;
break;
case 11:
int LA24_14=input.LA(1);
int index24_14=input.index();
input.rewind();
s=-1;
if (((LA24_14 >= VT_COMPILATION_UNIT && LA24_14 <= SEMICOLON) || (LA24_14 >= DOT && LA24_14 <= STRING) || (LA24_14 >= COMMA && LA24_14 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if ((LA24_14 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=19;
}
 else if ((LA24_14 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=20;
}
input.seek(index24_14);
if (s >= 0) return s;
break;
case 12:
int LA24_19=input.LA(1);
int index24_19=input.index();
input.rewind();
s=-1;
if ((LA24_19 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=23;
}
 else if ((LA24_19 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=24;
}
 else if ((LA24_19 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=25;
}
 else if (((LA24_19 >= VT_COMPILATION_UNIT && LA24_19 <= ID) || (LA24_19 >= DOT_STAR && LA24_19 <= STRING) || (LA24_19 >= COMMA && LA24_19 <= NULL)|| (LA24_19 >= RIGHT_SQUARE && LA24_19 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
input.seek(index24_19);
if (s >= 0) return s;
break;
case 13:
int LA24_15=input.LA(1);
int index24_15=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_15);
if (s >= 0) return s;
break;
case 14:
int LA24_17=input.LA(1);
int index24_17=input.index();
input.rewind();
s=-1;
if ((LA24_17 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.WHEN)) || (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))))) {
s=21;
}
 else if (((LA24_17 >= VT_COMPILATION_UNIT && LA24_17 <= SEMICOLON) || (LA24_17 >= DOT && LA24_17 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
input.seek(index24_17);
if (s >= 0) return s;
break;
case 15:
int LA24_12=input.LA(1);
int index24_12=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.WHEN)))) {
s=7;
}
input.seek(index24_12);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),24,_s,input);
error(nvae);
throw nvae;
}
