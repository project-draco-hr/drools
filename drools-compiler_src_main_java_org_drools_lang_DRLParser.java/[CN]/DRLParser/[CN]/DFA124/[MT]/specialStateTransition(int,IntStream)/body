{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA124_1=input.LA(1);
  int index124_1=input.index();
input.rewind();
s=-1;
if ((((synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.FINAL)))) || (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.DOUBLE)))) || (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.FLOAT))))|| synpred16_DRL()|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.LONG))))|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.SHORT))))|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.BYTE))))|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.CHAR))))|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.INT))))|| (synpred16_DRL() && ((helper.validateIdentifierKey(DroolsSoftKeywords.BOOLEAN))))))) {
s=19;
}
 else if ((true)) {
s=2;
}
input.seek(index124_1);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),124,_s,input);
error(nvae);
throw nvae;
}
