{
  int _s=s;
switch (s) {
case 0:
    int LA51_39=input.LA(1);
  int index51_39=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_39);
if (s >= 0) return s;
break;
case 1:
int LA51_35=input.LA(1);
int index51_35=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_35);
if (s >= 0) return s;
break;
case 2:
int LA51_59=input.LA(1);
int index51_59=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_59);
if (s >= 0) return s;
break;
case 3:
int LA51_52=input.LA(1);
int index51_52=input.index();
input.rewind();
s=-1;
if ((LA51_52 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_52 >= ATTRIBUTES && LA51_52 <= ID) || LA51_52 == GLOBAL || (LA51_52 >= QUERY && LA51_52 <= WHEN) || LA51_52 == ENABLED || LA51_52 == SALIENCE || LA51_52 == DURATION || LA51_52 == FROM || (LA51_52 >= INIT && LA51_52 <= RESULT) || (LA51_52 >= CONTAINS && LA51_52 <= IN) || LA51_52 == THEN)) {
s=91;
}
 else if ((LA51_52 == LEFT_PAREN) && (synpred2())) {
s=67;
}
 else if ((LA51_52 == DOT || LA51_52 == COMMA || (LA51_52 >= DATE_EFFECTIVE && LA51_52 <= DATE_EXPIRES) || LA51_52 == BOOL || (LA51_52 >= INT && LA51_52 <= AGENDA_GROUP) || (LA51_52 >= DIALECT && LA51_52 <= DOUBLE_AMPER) || (LA51_52 >= EXISTS && LA51_52 <= ACCUMULATE) || LA51_52 == COLLECT || (LA51_52 >= FLOAT && LA51_52 <= RIGHT_SQUARE) || (LA51_52 >= EOL && LA51_52 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_52);
if (s >= 0) return s;
break;
case 4:
int LA51_36=input.LA(1);
int index51_36=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_36);
if (s >= 0) return s;
break;
case 5:
int LA51_38=input.LA(1);
int index51_38=input.index();
input.rewind();
s=-1;
if ((LA51_38 == 72)) {
s=73;
}
 else if ((LA51_38 == DOT)) {
s=74;
}
 else if ((LA51_38 == LEFT_SQUARE)) {
s=75;
}
 else if ((LA51_38 == LEFT_PAREN)) {
s=76;
}
 else if ((LA51_38 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_38 >= ATTRIBUTES && LA51_38 <= ID) || LA51_38 == GLOBAL || LA51_38 == COMMA || (LA51_38 >= QUERY && LA51_38 <= RIGHT_CURLY) || (LA51_38 >= RIGHT_SQUARE && LA51_38 <= 71) || (LA51_38 >= 73 && LA51_38 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_38);
if (s >= 0) return s;
break;
case 6:
int LA51_37=input.LA(1);
int index51_37=input.index();
input.rewind();
s=-1;
if ((LA51_37 == 72)) {
s=69;
}
 else if ((LA51_37 == DOT)) {
s=70;
}
 else if ((LA51_37 == LEFT_SQUARE)) {
s=71;
}
 else if ((LA51_37 == LEFT_PAREN)) {
s=72;
}
 else if ((LA51_37 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_37 >= ATTRIBUTES && LA51_37 <= ID) || LA51_37 == GLOBAL || LA51_37 == COMMA || (LA51_37 >= QUERY && LA51_37 <= RIGHT_CURLY) || (LA51_37 >= RIGHT_SQUARE && LA51_37 <= 71) || (LA51_37 >= 73 && LA51_37 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_37);
if (s >= 0) return s;
break;
case 7:
int LA51_17=input.LA(1);
int index51_17=input.index();
input.rewind();
s=-1;
if ((LA51_17 == 72)) {
s=41;
}
 else if ((LA51_17 == DOT)) {
s=42;
}
 else if ((LA51_17 == LEFT_SQUARE)) {
s=43;
}
 else if ((LA51_17 == LEFT_PAREN)) {
s=44;
}
 else if ((LA51_17 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_17 >= ATTRIBUTES && LA51_17 <= ID) || LA51_17 == GLOBAL || LA51_17 == COMMA || (LA51_17 >= QUERY && LA51_17 <= RIGHT_CURLY) || (LA51_17 >= RIGHT_SQUARE && LA51_17 <= 71) || (LA51_17 >= 73 && LA51_17 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_17);
if (s >= 0) return s;
break;
case 8:
int LA51_50=input.LA(1);
int index51_50=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_50);
if (s >= 0) return s;
break;
case 9:
int LA51_12=input.LA(1);
int index51_12=input.index();
input.rewind();
s=-1;
if ((LA51_12 == LEFT_PAREN)) {
s=35;
}
 else if ((LA51_12 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_12 >= ATTRIBUTES && LA51_12 <= GLOBAL) || LA51_12 == COMMA || (LA51_12 >= QUERY && LA51_12 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_12);
if (s >= 0) return s;
break;
case 10:
int LA51_47=input.LA(1);
int index51_47=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_47);
if (s >= 0) return s;
break;
case 11:
int LA51_49=input.LA(1);
int index51_49=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_49);
if (s >= 0) return s;
break;
case 12:
int LA51_2=input.LA(1);
int index51_2=input.index();
input.rewind();
s=-1;
if ((LA51_2 == AND)) {
s=4;
}
 else if ((LA51_2 == OR)) {
s=5;
}
 else if ((LA51_2 == EXISTS)) {
s=6;
}
 else if ((LA51_2 == LEFT_PAREN)) {
s=7;
}
 else if ((LA51_2 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_2 == NOT)) {
s=9;
}
 else if ((LA51_2 == EVAL)) {
s=10;
}
 else if ((LA51_2 == ID)) {
s=11;
}
 else if ((LA51_2 == FORALL)) {
s=12;
}
 else if (((LA51_2 >= ATTRIBUTES && LA51_2 <= FUNCTION) || (LA51_2 >= DOT && LA51_2 <= GLOBAL) || LA51_2 == COMMA || (LA51_2 >= QUERY && LA51_2 <= LOCK_ON_ACTIVE) || LA51_2 == DOUBLE_PIPE || (LA51_2 >= DOUBLE_AMPER && LA51_2 <= FROM) || (LA51_2 >= ACCUMULATE && LA51_2 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_2);
if (s >= 0) return s;
break;
case 13:
int LA51_26=input.LA(1);
int index51_26=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_26);
if (s >= 0) return s;
break;
case 14:
int LA51_32=input.LA(1);
int index51_32=input.index();
input.rewind();
s=-1;
if (((LA51_32 >= ATTRIBUTES && LA51_32 <= ID) || LA51_32 == GLOBAL || (LA51_32 >= QUERY && LA51_32 <= WHEN) || LA51_32 == ENABLED || LA51_32 == SALIENCE || LA51_32 == DURATION || LA51_32 == FROM || (LA51_32 >= INIT && LA51_32 <= RESULT) || (LA51_32 >= CONTAINS && LA51_32 <= IN) || LA51_32 == THEN)) {
s=66;
}
 else if ((LA51_32 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_32 == DOT || LA51_32 == COMMA || (LA51_32 >= DATE_EFFECTIVE && LA51_32 <= DATE_EXPIRES) || LA51_32 == BOOL || (LA51_32 >= INT && LA51_32 <= AGENDA_GROUP) || (LA51_32 >= DIALECT && LA51_32 <= DOUBLE_AMPER) || (LA51_32 >= EXISTS && LA51_32 <= ACCUMULATE) || LA51_32 == COLLECT || (LA51_32 >= FLOAT && LA51_32 <= RIGHT_SQUARE) || (LA51_32 >= EOL && LA51_32 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_32 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_32);
if (s >= 0) return s;
break;
case 15:
int LA51_55=input.LA(1);
int index51_55=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_55);
if (s >= 0) return s;
break;
case 16:
int LA51_57=input.LA(1);
int index51_57=input.index();
input.rewind();
s=-1;
if ((LA51_57 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_57 >= ATTRIBUTES && LA51_57 <= ID) || LA51_57 == GLOBAL || (LA51_57 >= QUERY && LA51_57 <= WHEN) || LA51_57 == ENABLED || LA51_57 == SALIENCE || LA51_57 == DURATION || LA51_57 == FROM || (LA51_57 >= INIT && LA51_57 <= RESULT) || (LA51_57 >= CONTAINS && LA51_57 <= IN) || LA51_57 == THEN)) {
s=95;
}
 else if ((LA51_57 == LEFT_PAREN) && (synpred2())) {
s=67;
}
 else if ((LA51_57 == DOT || LA51_57 == COMMA || (LA51_57 >= DATE_EFFECTIVE && LA51_57 <= DATE_EXPIRES) || LA51_57 == BOOL || (LA51_57 >= INT && LA51_57 <= AGENDA_GROUP) || (LA51_57 >= DIALECT && LA51_57 <= DOUBLE_AMPER) || (LA51_57 >= EXISTS && LA51_57 <= ACCUMULATE) || LA51_57 == COLLECT || (LA51_57 >= FLOAT && LA51_57 <= RIGHT_SQUARE) || (LA51_57 >= EOL && LA51_57 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_57);
if (s >= 0) return s;
break;
case 17:
int LA51_61=input.LA(1);
int index51_61=input.index();
input.rewind();
s=-1;
if ((LA51_61 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_61 >= ATTRIBUTES && LA51_61 <= ID) || LA51_61 == GLOBAL || (LA51_61 >= QUERY && LA51_61 <= WHEN) || LA51_61 == ENABLED || LA51_61 == SALIENCE || LA51_61 == DURATION || LA51_61 == FROM || (LA51_61 >= INIT && LA51_61 <= RESULT) || (LA51_61 >= CONTAINS && LA51_61 <= IN) || LA51_61 == THEN)) {
s=99;
}
 else if ((LA51_61 == LEFT_PAREN) && (synpred2())) {
s=67;
}
 else if ((LA51_61 == DOT || LA51_61 == COMMA || (LA51_61 >= DATE_EFFECTIVE && LA51_61 <= DATE_EXPIRES) || LA51_61 == BOOL || (LA51_61 >= INT && LA51_61 <= AGENDA_GROUP) || (LA51_61 >= DIALECT && LA51_61 <= DOUBLE_AMPER) || (LA51_61 >= EXISTS && LA51_61 <= ACCUMULATE) || LA51_61 == COLLECT || (LA51_61 >= FLOAT && LA51_61 <= RIGHT_SQUARE) || (LA51_61 >= EOL && LA51_61 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_61);
if (s >= 0) return s;
break;
case 18:
int LA51_45=input.LA(1);
int index51_45=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_45);
if (s >= 0) return s;
break;
case 19:
int LA51_48=input.LA(1);
int index51_48=input.index();
input.rewind();
s=-1;
if ((LA51_48 == 72)) {
s=85;
}
 else if ((LA51_48 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_48 == DOT)) {
s=86;
}
 else if ((LA51_48 == LEFT_PAREN)) {
s=87;
}
 else if ((LA51_48 == LEFT_SQUARE)) {
s=88;
}
 else if (((LA51_48 >= ATTRIBUTES && LA51_48 <= ID) || LA51_48 == GLOBAL || LA51_48 == COMMA || (LA51_48 >= QUERY && LA51_48 <= RIGHT_CURLY) || (LA51_48 >= RIGHT_SQUARE && LA51_48 <= 71) || (LA51_48 >= 73 && LA51_48 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_48);
if (s >= 0) return s;
break;
case 20:
int LA51_46=input.LA(1);
int index51_46=input.index();
input.rewind();
s=-1;
if ((LA51_46 == 72)) {
s=81;
}
 else if ((LA51_46 == DOT)) {
s=82;
}
 else if ((LA51_46 == LEFT_SQUARE)) {
s=83;
}
 else if ((LA51_46 == LEFT_PAREN)) {
s=84;
}
 else if ((LA51_46 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_46 >= ATTRIBUTES && LA51_46 <= ID) || LA51_46 == GLOBAL || LA51_46 == COMMA || (LA51_46 >= QUERY && LA51_46 <= RIGHT_CURLY) || (LA51_46 >= RIGHT_SQUARE && LA51_46 <= 71) || (LA51_46 >= 73 && LA51_46 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_46);
if (s >= 0) return s;
break;
case 21:
int LA51_24=input.LA(1);
int index51_24=input.index();
input.rewind();
s=-1;
if ((LA51_24 == 72)) {
s=51;
}
 else if ((LA51_24 == DOT)) {
s=52;
}
 else if ((LA51_24 == LEFT_SQUARE)) {
s=53;
}
 else if ((LA51_24 == LEFT_PAREN)) {
s=54;
}
 else if ((LA51_24 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_24 >= ATTRIBUTES && LA51_24 <= ID) || LA51_24 == GLOBAL || LA51_24 == COMMA || (LA51_24 >= QUERY && LA51_24 <= RIGHT_CURLY) || (LA51_24 >= RIGHT_SQUARE && LA51_24 <= 71) || (LA51_24 >= 73 && LA51_24 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_24);
if (s >= 0) return s;
break;
case 22:
int LA51_20=input.LA(1);
int index51_20=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_20);
if (s >= 0) return s;
break;
case 23:
int LA51_66=input.LA(1);
int index51_66=input.index();
input.rewind();
s=-1;
if ((LA51_66 == LEFT_SQUARE)) {
s=33;
}
 else if ((LA51_66 == LEFT_PAREN)) {
s=34;
}
 else if ((LA51_66 == DOT)) {
s=32;
}
 else if ((LA51_66 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_66 >= ATTRIBUTES && LA51_66 <= ID) || LA51_66 == GLOBAL || LA51_66 == COMMA || (LA51_66 >= QUERY && LA51_66 <= RIGHT_CURLY) || (LA51_66 >= RIGHT_SQUARE && LA51_66 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_66);
if (s >= 0) return s;
break;
case 24:
int LA51_43=input.LA(1);
int index51_43=input.index();
input.rewind();
s=-1;
if ((LA51_43 == RIGHT_SQUARE)) {
s=80;
}
 else if ((LA51_43 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_43 >= ATTRIBUTES && LA51_43 <= GLOBAL) || LA51_43 == COMMA || (LA51_43 >= QUERY && LA51_43 <= LEFT_SQUARE) || (LA51_43 >= THEN && LA51_43 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_43 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_43);
if (s >= 0) return s;
break;
case 25:
int LA51_34=input.LA(1);
int index51_34=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_34);
if (s >= 0) return s;
break;
case 26:
int LA51_62=input.LA(1);
int index51_62=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_62);
if (s >= 0) return s;
break;
case 27:
int LA51_41=input.LA(1);
int index51_41=input.index();
input.rewind();
s=-1;
if ((LA51_41 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_41 == ID)) {
s=77;
}
 else if ((LA51_41 == LEFT_PAREN)) {
s=78;
}
 else if (((LA51_41 >= ATTRIBUTES && LA51_41 <= FUNCTION) || (LA51_41 >= DOT && LA51_41 <= GLOBAL) || LA51_41 == COMMA || (LA51_41 >= QUERY && LA51_41 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_41);
if (s >= 0) return s;
break;
case 28:
int LA51_42=input.LA(1);
int index51_42=input.index();
input.rewind();
s=-1;
if ((LA51_42 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_42 >= ATTRIBUTES && LA51_42 <= ID) || LA51_42 == GLOBAL || (LA51_42 >= QUERY && LA51_42 <= WHEN) || LA51_42 == ENABLED || LA51_42 == SALIENCE || LA51_42 == DURATION || LA51_42 == FROM || (LA51_42 >= INIT && LA51_42 <= RESULT) || (LA51_42 >= CONTAINS && LA51_42 <= IN) || LA51_42 == THEN)) {
s=79;
}
 else if ((LA51_42 == LEFT_PAREN) && (synpred2())) {
s=67;
}
 else if ((LA51_42 == DOT || LA51_42 == COMMA || (LA51_42 >= DATE_EFFECTIVE && LA51_42 <= DATE_EXPIRES) || LA51_42 == BOOL || (LA51_42 >= INT && LA51_42 <= AGENDA_GROUP) || (LA51_42 >= DIALECT && LA51_42 <= DOUBLE_AMPER) || (LA51_42 >= EXISTS && LA51_42 <= ACCUMULATE) || LA51_42 == COLLECT || (LA51_42 >= FLOAT && LA51_42 <= RIGHT_SQUARE) || (LA51_42 >= EOL && LA51_42 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_42);
if (s >= 0) return s;
break;
case 29:
int LA51_64=input.LA(1);
int index51_64=input.index();
input.rewind();
s=-1;
if ((LA51_64 == DOT)) {
s=101;
}
 else if ((LA51_64 == LEFT_SQUARE)) {
s=102;
}
 else if ((LA51_64 == LEFT_PAREN)) {
s=103;
}
 else if ((LA51_64 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_64 >= ATTRIBUTES && LA51_64 <= ID) || LA51_64 == GLOBAL || LA51_64 == COMMA || (LA51_64 >= QUERY && LA51_64 <= RIGHT_CURLY) || (LA51_64 >= RIGHT_SQUARE && LA51_64 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_64);
if (s >= 0) return s;
break;
case 30:
int LA51_14=input.LA(1);
int index51_14=input.index();
input.rewind();
s=-1;
if ((LA51_14 == LEFT_PAREN)) {
s=36;
}
 else if ((LA51_14 == ID)) {
s=37;
}
 else if ((LA51_14 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_14 >= ATTRIBUTES && LA51_14 <= FUNCTION) || (LA51_14 >= DOT && LA51_14 <= GLOBAL) || LA51_14 == COMMA || (LA51_14 >= QUERY && LA51_14 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_14);
if (s >= 0) return s;
break;
case 31:
int LA51_28=input.LA(1);
int index51_28=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_28);
if (s >= 0) return s;
break;
case 32:
int LA51_10=input.LA(1);
int index51_10=input.index();
input.rewind();
s=-1;
if ((LA51_10 == LEFT_PAREN)) {
s=30;
}
 else if ((LA51_10 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_10 >= ATTRIBUTES && LA51_10 <= GLOBAL) || LA51_10 == COMMA || (LA51_10 >= QUERY && LA51_10 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_10);
if (s >= 0) return s;
break;
case 33:
int LA51_0=input.LA(1);
int index51_0=input.index();
input.rewind();
s=-1;
if ((LA51_0 == LEFT_SQUARE) && (synpred1())) {
s=1;
}
 else if ((LA51_0 == LEFT_PAREN)) {
s=2;
}
 else if (((LA51_0 >= ID && LA51_0 <= DOT) || LA51_0 == RIGHT_PAREN || LA51_0 == END || (LA51_0 >= OR && LA51_0 <= DOUBLE_AMPER) || (LA51_0 >= EXISTS && LA51_0 <= FORALL) || LA51_0 == THEN || LA51_0 == 71)) {
s=3;
}
input.seek(index51_0);
if (s >= 0) return s;
break;
case 34:
int LA51_6=input.LA(1);
int index51_6=input.index();
input.rewind();
s=-1;
if ((LA51_6 == LEFT_PAREN)) {
s=26;
}
 else if ((LA51_6 == ID)) {
s=27;
}
 else if ((LA51_6 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_6 >= ATTRIBUTES && LA51_6 <= FUNCTION) || (LA51_6 >= DOT && LA51_6 <= GLOBAL) || LA51_6 == COMMA || (LA51_6 >= QUERY && LA51_6 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_6);
if (s >= 0) return s;
break;
case 35:
int LA51_51=input.LA(1);
int index51_51=input.index();
input.rewind();
s=-1;
if ((LA51_51 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_51 == ID)) {
s=89;
}
 else if ((LA51_51 == LEFT_PAREN)) {
s=90;
}
 else if (((LA51_51 >= ATTRIBUTES && LA51_51 <= FUNCTION) || (LA51_51 >= DOT && LA51_51 <= GLOBAL) || LA51_51 == COMMA || (LA51_51 >= QUERY && LA51_51 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_51);
if (s >= 0) return s;
break;
case 36:
int LA51_53=input.LA(1);
int index51_53=input.index();
input.rewind();
s=-1;
if ((LA51_53 == RIGHT_SQUARE)) {
s=92;
}
 else if ((LA51_53 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_53 >= ATTRIBUTES && LA51_53 <= GLOBAL) || LA51_53 == COMMA || (LA51_53 >= QUERY && LA51_53 <= LEFT_SQUARE) || (LA51_53 >= THEN && LA51_53 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_53 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_53);
if (s >= 0) return s;
break;
case 37:
int LA51_9=input.LA(1);
int index51_9=input.index();
input.rewind();
s=-1;
if ((LA51_9 == LEFT_PAREN)) {
s=28;
}
 else if ((LA51_9 == ID)) {
s=29;
}
 else if ((LA51_9 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_9 >= ATTRIBUTES && LA51_9 <= FUNCTION) || (LA51_9 >= DOT && LA51_9 <= GLOBAL) || LA51_9 == COMMA || (LA51_9 >= QUERY && LA51_9 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_9);
if (s >= 0) return s;
break;
case 38:
int LA51_15=input.LA(1);
int index51_15=input.index();
input.rewind();
s=-1;
if ((LA51_15 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_15 == ID)) {
s=38;
}
 else if ((LA51_15 == LEFT_PAREN)) {
s=39;
}
 else if (((LA51_15 >= ATTRIBUTES && LA51_15 <= FUNCTION) || (LA51_15 >= DOT && LA51_15 <= GLOBAL) || LA51_15 == COMMA || (LA51_15 >= QUERY && LA51_15 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_15);
if (s >= 0) return s;
break;
case 39:
int LA51_21=input.LA(1);
int index51_21=input.index();
input.rewind();
s=-1;
if ((LA51_21 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_21 == ID)) {
s=46;
}
 else if ((LA51_21 == LEFT_PAREN)) {
s=47;
}
 else if (((LA51_21 >= ATTRIBUTES && LA51_21 <= FUNCTION) || (LA51_21 >= DOT && LA51_21 <= GLOBAL) || LA51_21 == COMMA || (LA51_21 >= QUERY && LA51_21 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_21);
if (s >= 0) return s;
break;
case 40:
int LA51_33=input.LA(1);
int index51_33=input.index();
input.rewind();
s=-1;
if ((LA51_33 == RIGHT_SQUARE)) {
s=68;
}
 else if ((LA51_33 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_33 >= ATTRIBUTES && LA51_33 <= GLOBAL) || LA51_33 == COMMA || (LA51_33 >= QUERY && LA51_33 <= LEFT_SQUARE) || (LA51_33 >= THEN && LA51_33 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_33 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_33);
if (s >= 0) return s;
break;
case 41:
int LA51_30=input.LA(1);
int index51_30=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_30);
if (s >= 0) return s;
break;
case 42:
int LA51_58=input.LA(1);
int index51_58=input.index();
input.rewind();
s=-1;
if ((LA51_58 == RIGHT_SQUARE)) {
s=96;
}
 else if ((LA51_58 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_58 >= ATTRIBUTES && LA51_58 <= GLOBAL) || LA51_58 == COMMA || (LA51_58 >= QUERY && LA51_58 <= LEFT_SQUARE) || (LA51_58 >= THEN && LA51_58 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_58 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_58);
if (s >= 0) return s;
break;
case 43:
int LA51_63=input.LA(1);
int index51_63=input.index();
input.rewind();
s=-1;
if ((LA51_63 == RIGHT_SQUARE)) {
s=100;
}
 else if ((LA51_63 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_63 >= ATTRIBUTES && LA51_63 <= GLOBAL) || LA51_63 == COMMA || (LA51_63 >= QUERY && LA51_63 <= LEFT_SQUARE) || (LA51_63 >= THEN && LA51_63 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_63 == LEFT_PAREN) && (synpred2())) {
s=67;
}
input.seek(index51_63);
if (s >= 0) return s;
break;
case 44:
int LA51_23=input.LA(1);
int index51_23=input.index();
input.rewind();
s=-1;
if ((LA51_23 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_23 >= ATTRIBUTES && LA51_23 <= GLOBAL) || LA51_23 == COMMA || (LA51_23 >= QUERY && LA51_23 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_23 == LEFT_PAREN)) {
s=50;
}
input.seek(index51_23);
if (s >= 0) return s;
break;
case 45:
int LA51_44=input.LA(1);
int index51_44=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_44);
if (s >= 0) return s;
break;
case 46:
int LA51_31=input.LA(1);
int index51_31=input.index();
input.rewind();
s=-1;
if ((LA51_31 == ID)) {
s=64;
}
 else if ((LA51_31 == LEFT_PAREN)) {
s=65;
}
 else if ((LA51_31 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_31 >= ATTRIBUTES && LA51_31 <= FUNCTION) || (LA51_31 >= DOT && LA51_31 <= GLOBAL) || LA51_31 == COMMA || (LA51_31 >= QUERY && LA51_31 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_31);
if (s >= 0) return s;
break;
case 47:
int LA51_18=input.LA(1);
int index51_18=input.index();
input.rewind();
s=-1;
if ((LA51_18 == LEFT_PAREN)) {
s=45;
}
 else if ((LA51_18 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_18 >= ATTRIBUTES && LA51_18 <= GLOBAL) || LA51_18 == COMMA || (LA51_18 >= QUERY && LA51_18 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_18);
if (s >= 0) return s;
break;
case 48:
int LA51_56=input.LA(1);
int index51_56=input.index();
input.rewind();
s=-1;
if ((LA51_56 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_56 == ID)) {
s=93;
}
 else if ((LA51_56 == LEFT_PAREN)) {
s=94;
}
 else if (((LA51_56 >= ATTRIBUTES && LA51_56 <= FUNCTION) || (LA51_56 >= DOT && LA51_56 <= GLOBAL) || LA51_56 == COMMA || (LA51_56 >= QUERY && LA51_56 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_56);
if (s >= 0) return s;
break;
case 49:
int LA51_60=input.LA(1);
int index51_60=input.index();
input.rewind();
s=-1;
if ((LA51_60 == ID)) {
s=97;
}
 else if ((LA51_60 == LEFT_PAREN)) {
s=98;
}
 else if ((LA51_60 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_60 >= ATTRIBUTES && LA51_60 <= FUNCTION) || (LA51_60 >= DOT && LA51_60 <= GLOBAL) || LA51_60 == COMMA || (LA51_60 >= QUERY && LA51_60 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_60);
if (s >= 0) return s;
break;
case 50:
int LA51_4=input.LA(1);
int index51_4=input.index();
input.rewind();
s=-1;
if ((LA51_4 == EXISTS)) {
s=14;
}
 else if ((LA51_4 == NOT)) {
s=15;
}
 else if ((LA51_4 == EVAL)) {
s=16;
}
 else if ((LA51_4 == ID)) {
s=17;
}
 else if ((LA51_4 == FORALL)) {
s=18;
}
 else if ((LA51_4 == LEFT_PAREN)) {
s=19;
}
 else if ((LA51_4 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_4 >= ATTRIBUTES && LA51_4 <= FUNCTION) || (LA51_4 >= DOT && LA51_4 <= GLOBAL) || LA51_4 == COMMA || (LA51_4 >= QUERY && LA51_4 <= FROM) || (LA51_4 >= ACCUMULATE && LA51_4 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_4);
if (s >= 0) return s;
break;
case 51:
int LA51_25=input.LA(1);
int index51_25=input.index();
input.rewind();
s=-1;
if ((LA51_25 == LEFT_PAREN)) {
s=55;
}
 else if ((LA51_25 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_25 >= ATTRIBUTES && LA51_25 <= GLOBAL) || LA51_25 == COMMA || (LA51_25 >= QUERY && LA51_25 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_25);
if (s >= 0) return s;
break;
case 52:
int LA51_40=input.LA(1);
int index51_40=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_40);
if (s >= 0) return s;
break;
case 53:
int LA51_65=input.LA(1);
int index51_65=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_65);
if (s >= 0) return s;
break;
case 54:
int LA51_19=input.LA(1);
int index51_19=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_19);
if (s >= 0) return s;
break;
case 55:
int LA51_54=input.LA(1);
int index51_54=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=67;
}
 else if ((true)) {
s=3;
}
input.seek(index51_54);
if (s >= 0) return s;
break;
case 56:
int LA51_22=input.LA(1);
int index51_22=input.index();
input.rewind();
s=-1;
if ((LA51_22 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_22 == ID)) {
s=48;
}
 else if ((LA51_22 == LEFT_PAREN)) {
s=49;
}
 else if (((LA51_22 >= ATTRIBUTES && LA51_22 <= FUNCTION) || (LA51_22 >= DOT && LA51_22 <= GLOBAL) || LA51_22 == COMMA || (LA51_22 >= QUERY && LA51_22 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_22);
if (s >= 0) return s;
break;
case 57:
int LA51_5=input.LA(1);
int index51_5=input.index();
input.rewind();
s=-1;
if ((LA51_5 == LEFT_PAREN)) {
s=20;
}
 else if ((LA51_5 == EXISTS)) {
s=21;
}
 else if ((LA51_5 == NOT)) {
s=22;
}
 else if ((LA51_5 == EVAL)) {
s=23;
}
 else if ((LA51_5 == ID)) {
s=24;
}
 else if ((LA51_5 == FORALL)) {
s=25;
}
 else if ((LA51_5 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_5 >= ATTRIBUTES && LA51_5 <= FUNCTION) || (LA51_5 >= DOT && LA51_5 <= GLOBAL) || LA51_5 == COMMA || (LA51_5 >= QUERY && LA51_5 <= FROM) || (LA51_5 >= ACCUMULATE && LA51_5 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_5);
if (s >= 0) return s;
break;
case 58:
int LA51_29=input.LA(1);
int index51_29=input.index();
input.rewind();
s=-1;
if ((LA51_29 == 72)) {
s=60;
}
 else if ((LA51_29 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if ((LA51_29 == DOT)) {
s=61;
}
 else if ((LA51_29 == LEFT_PAREN)) {
s=62;
}
 else if ((LA51_29 == LEFT_SQUARE)) {
s=63;
}
 else if (((LA51_29 >= ATTRIBUTES && LA51_29 <= ID) || LA51_29 == GLOBAL || LA51_29 == COMMA || (LA51_29 >= QUERY && LA51_29 <= RIGHT_CURLY) || (LA51_29 >= RIGHT_SQUARE && LA51_29 <= 71) || (LA51_29 >= 73 && LA51_29 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_29);
if (s >= 0) return s;
break;
case 59:
int LA51_27=input.LA(1);
int index51_27=input.index();
input.rewind();
s=-1;
if ((LA51_27 == 72)) {
s=56;
}
 else if ((LA51_27 == DOT)) {
s=57;
}
 else if ((LA51_27 == LEFT_SQUARE)) {
s=58;
}
 else if ((LA51_27 == LEFT_PAREN)) {
s=59;
}
 else if ((LA51_27 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_27 >= ATTRIBUTES && LA51_27 <= ID) || LA51_27 == GLOBAL || LA51_27 == COMMA || (LA51_27 >= QUERY && LA51_27 <= RIGHT_CURLY) || (LA51_27 >= RIGHT_SQUARE && LA51_27 <= 71) || (LA51_27 >= 73 && LA51_27 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_27);
if (s >= 0) return s;
break;
case 60:
int LA51_11=input.LA(1);
int index51_11=input.index();
input.rewind();
s=-1;
if ((LA51_11 == 72)) {
s=31;
}
 else if ((LA51_11 == DOT)) {
s=32;
}
 else if ((LA51_11 == LEFT_SQUARE)) {
s=33;
}
 else if ((LA51_11 == LEFT_PAREN)) {
s=34;
}
 else if ((LA51_11 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_11 >= ATTRIBUTES && LA51_11 <= ID) || LA51_11 == GLOBAL || LA51_11 == COMMA || (LA51_11 >= QUERY && LA51_11 <= RIGHT_CURLY) || (LA51_11 >= RIGHT_SQUARE && LA51_11 <= 71) || (LA51_11 >= 73 && LA51_11 <= 80)) && (synpred2())) {
s=13;
}
input.seek(index51_11);
if (s >= 0) return s;
break;
case 61:
int LA51_7=input.LA(1);
int index51_7=input.index();
input.rewind();
s=-1;
if ((synpred2())) {
s=13;
}
 else if ((true)) {
s=3;
}
input.seek(index51_7);
if (s >= 0) return s;
break;
case 62:
int LA51_16=input.LA(1);
int index51_16=input.index();
input.rewind();
s=-1;
if ((LA51_16 == RIGHT_PAREN) && (synpred2())) {
s=8;
}
 else if (((LA51_16 >= ATTRIBUTES && LA51_16 <= GLOBAL) || LA51_16 == COMMA || (LA51_16 >= QUERY && LA51_16 <= 80)) && (synpred2())) {
s=13;
}
 else if ((LA51_16 == LEFT_PAREN)) {
s=40;
}
input.seek(index51_16);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),51,_s,input);
error(nvae);
throw nvae;
}
