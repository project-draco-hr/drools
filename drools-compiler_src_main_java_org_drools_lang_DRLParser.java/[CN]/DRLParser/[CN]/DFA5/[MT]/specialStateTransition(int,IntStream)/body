{
  int _s=s;
switch (s) {
case 0:
    int LA5_99=input.LA(1);
  int index5_99=input.index();
input.rewind();
s=-1;
if ((LA5_99 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_99 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_99 == COMMA || LA5_99 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_99);
if (s >= 0) return s;
break;
case 1:
int LA5_32=input.LA(1);
int index5_32=input.index();
input.rewind();
s=-1;
if ((LA5_32 == EOF || LA5_32 == SEMICOLON || LA5_32 == DOT_STAR) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_32 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=52;
}
 else if ((LA5_32 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=12;
}
 else if ((LA5_32 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=13;
}
input.seek(index5_32);
if (s >= 0) return s;
break;
case 2:
int LA5_46=input.LA(1);
int index5_46=input.index();
input.rewind();
s=-1;
if ((LA5_46 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=60;
}
 else if ((LA5_46 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=61;
}
 else if ((LA5_46 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_46 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_46 == COMMA || LA5_46 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_46 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=62;
}
input.seek(index5_46);
if (s >= 0) return s;
break;
case 3:
int LA5_131=input.LA(1);
int index5_131=input.index();
input.rewind();
s=-1;
if ((LA5_131 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_131 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if (((LA5_131 >= VT_COMPILATION_UNIT && LA5_131 <= LEFT_PAREN) || (LA5_131 >= COLON && LA5_131 <= NULL) || (LA5_131 >= RIGHT_SQUARE && LA5_131 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_131 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=128;
}
input.seek(index5_131);
if (s >= 0) return s;
break;
case 4:
int LA5_104=input.LA(1);
int index5_104=input.index();
input.rewind();
s=-1;
if ((LA5_104 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=116;
}
 else if ((LA5_104 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if ((LA5_104 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if (((LA5_104 >= VT_COMPILATION_UNIT && LA5_104 <= LEFT_PAREN) || (LA5_104 >= COLON && LA5_104 <= NULL) || (LA5_104 >= RIGHT_SQUARE && LA5_104 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_104);
if (s >= 0) return s;
break;
case 5:
int LA5_14=input.LA(1);
int index5_14=input.index();
input.rewind();
s=-1;
if ((LA5_14 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=34;
}
 else if ((LA5_14 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_14);
if (s >= 0) return s;
break;
case 6:
int LA5_78=input.LA(1);
int index5_78=input.index();
input.rewind();
s=-1;
if ((LA5_78 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_78 == COMMA || LA5_78 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_78 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_78);
if (s >= 0) return s;
break;
case 7:
int LA5_62=input.LA(1);
int index5_62=input.index();
input.rewind();
s=-1;
if ((LA5_62 == COMMA || LA5_62 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_62 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_62 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_62);
if (s >= 0) return s;
break;
case 8:
int LA5_44=input.LA(1);
int index5_44=input.index();
input.rewind();
s=-1;
if ((LA5_44 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=59;
}
input.seek(index5_44);
if (s >= 0) return s;
break;
case 9:
int LA5_65=input.LA(1);
int index5_65=input.index();
input.rewind();
s=-1;
if ((LA5_65 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_65 == COMMA || LA5_65 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_65 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_65);
if (s >= 0) return s;
break;
case 10:
int LA5_87=input.LA(1);
int index5_87=input.index();
input.rewind();
s=-1;
if ((LA5_87 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=98;
}
 else if ((LA5_87 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=99;
}
 else if ((LA5_87 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_87 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_87 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=100;
}
 else if ((LA5_87 == COMMA || LA5_87 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_87);
if (s >= 0) return s;
break;
case 11:
int LA5_25=input.LA(1);
int index5_25=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_25);
if (s >= 0) return s;
break;
case 12:
int LA5_0=input.LA(1);
int index5_0=input.index();
input.rewind();
s=-1;
if ((LA5_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.RULE))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES))|| (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.IMPORT))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.ENABLED))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.GLOBAL))|| (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.DURATION))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))))) {
s=1;
}
input.seek(index5_0);
if (s >= 0) return s;
break;
case 13:
int LA5_81=input.LA(1);
int index5_81=input.index();
input.rewind();
s=-1;
if ((LA5_81 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=92;
}
 else if ((LA5_81 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
 else if ((LA5_81 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
input.seek(index5_81);
if (s >= 0) return s;
break;
case 14:
int LA5_59=input.LA(1);
int index5_59=input.index();
input.rewind();
s=-1;
if ((LA5_59 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=85;
}
 else if ((LA5_59 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=81;
}
 else if ((LA5_59 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=44;
}
 else if ((LA5_59 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_59);
if (s >= 0) return s;
break;
case 15:
int LA5_76=input.LA(1);
int index5_76=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_76);
if (s >= 0) return s;
break;
case 16:
int LA5_132=input.LA(1);
int index5_132=input.index();
input.rewind();
s=-1;
if ((LA5_132 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=122;
}
 else if ((LA5_132 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=130;
}
 else if (((LA5_132 >= VT_COMPILATION_UNIT && LA5_132 <= SEMICOLON) || (LA5_132 >= DOT && LA5_132 <= NULL) || (LA5_132 >= RIGHT_SQUARE && LA5_132 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_132);
if (s >= 0) return s;
break;
case 17:
int LA5_129=input.LA(1);
int index5_129=input.index();
input.rewind();
s=-1;
if (((LA5_129 >= VT_COMPILATION_UNIT && LA5_129 <= SEMICOLON) || (LA5_129 >= DOT && LA5_129 <= NULL) || (LA5_129 >= RIGHT_SQUARE && LA5_129 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_129 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=104;
}
 else if ((LA5_129 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=123;
}
input.seek(index5_129);
if (s >= 0) return s;
break;
case 18:
int LA5_73=input.LA(1);
int index5_73=input.index();
input.rewind();
s=-1;
if ((LA5_73 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_73 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_73 == COMMA || LA5_73 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_73);
if (s >= 0) return s;
break;
case 19:
int LA5_96=input.LA(1);
int index5_96=input.index();
input.rewind();
s=-1;
if ((LA5_96 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_96 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=85;
}
 else if ((LA5_96 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=81;
}
input.seek(index5_96);
if (s >= 0) return s;
break;
case 20:
int LA5_21=input.LA(1);
int index5_21=input.index();
input.rewind();
s=-1;
if ((LA5_21 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=46;
}
input.seek(index5_21);
if (s >= 0) return s;
break;
case 21:
int LA5_63=input.LA(1);
int index5_63=input.index();
input.rewind();
s=-1;
if ((LA5_63 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=87;
}
input.seek(index5_63);
if (s >= 0) return s;
break;
case 22:
int LA5_43=input.LA(1);
int index5_43=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.FUNCTION)))) {
s=45;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_43);
if (s >= 0) return s;
break;
case 23:
int LA5_110=input.LA(1);
int index5_110=input.index();
input.rewind();
s=-1;
if ((LA5_110 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=118;
}
input.seek(index5_110);
if (s >= 0) return s;
break;
case 24:
int LA5_92=input.LA(1);
int index5_92=input.index();
input.rewind();
s=-1;
if ((LA5_92 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=109;
}
input.seek(index5_92);
if (s >= 0) return s;
break;
case 25:
int LA5_95=input.LA(1);
int index5_95=input.index();
input.rewind();
s=-1;
if ((LA5_95 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=111;
}
input.seek(index5_95);
if (s >= 0) return s;
break;
case 26:
int LA5_40=input.LA(1);
int index5_40=input.index();
input.rewind();
s=-1;
if ((LA5_40 == COMMA || LA5_40 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_40 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_40 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_40);
if (s >= 0) return s;
break;
case 27:
int LA5_27=input.LA(1);
int index5_27=input.index();
input.rewind();
s=-1;
if ((LA5_27 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=51;
}
input.seek(index5_27);
if (s >= 0) return s;
break;
case 28:
int LA5_8=input.LA(1);
int index5_8=input.index();
input.rewind();
s=-1;
if ((LA5_8 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=19;
}
 else if ((LA5_8 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_8 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_8);
if (s >= 0) return s;
break;
case 29:
int LA5_111=input.LA(1);
int index5_111=input.index();
input.rewind();
s=-1;
if ((LA5_111 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_111 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
 else if ((LA5_111 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=95;
}
input.seek(index5_111);
if (s >= 0) return s;
break;
case 30:
int LA5_102=input.LA(1);
int index5_102=input.index();
input.rewind();
s=-1;
if ((LA5_102 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=114;
}
 else if (((LA5_102 >= VT_COMPILATION_UNIT && LA5_102 <= SEMICOLON) || (LA5_102 >= DOT && LA5_102 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_102);
if (s >= 0) return s;
break;
case 31:
int LA5_26=input.LA(1);
int index5_26=input.index();
input.rewind();
s=-1;
if ((LA5_26 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=50;
}
input.seek(index5_26);
if (s >= 0) return s;
break;
case 32:
int LA5_36=input.LA(1);
int index5_36=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_36);
if (s >= 0) return s;
break;
case 33:
int LA5_51=input.LA(1);
int index5_51=input.index();
input.rewind();
s=-1;
if ((LA5_51 == ID) && ((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
 else if ((LA5_51 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=27;
}
 else if ((LA5_51 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_51);
if (s >= 0) return s;
break;
case 34:
int LA5_53=input.LA(1);
int index5_53=input.index();
input.rewind();
s=-1;
if ((LA5_53 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.FUNCTION)))) {
s=45;
}
 else if ((LA5_53 == EOF || (LA5_53 >= SEMICOLON && LA5_53 <= ID)) && ((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)))) {
s=71;
}
input.seek(index5_53);
if (s >= 0) return s;
break;
case 35:
int LA5_50=input.LA(1);
int index5_50=input.index();
input.rewind();
s=-1;
if ((LA5_50 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=27;
}
 else if ((LA5_50 == ID) && ((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
 else if ((LA5_50 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=26;
}
 else if ((LA5_50 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_50);
if (s >= 0) return s;
break;
case 36:
int LA5_77=input.LA(1);
int index5_77=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_77);
if (s >= 0) return s;
break;
case 37:
int LA5_109=input.LA(1);
int index5_109=input.index();
input.rewind();
s=-1;
if ((LA5_109 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
 else if ((LA5_109 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_109 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=92;
}
input.seek(index5_109);
if (s >= 0) return s;
break;
case 38:
int LA5_23=input.LA(1);
int index5_23=input.index();
input.rewind();
s=-1;
if ((LA5_23 == COMMA || LA5_23 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_23 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_23 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_23);
if (s >= 0) return s;
break;
case 39:
int LA5_74=input.LA(1);
int index5_74=input.index();
input.rewind();
s=-1;
if ((LA5_74 == COMMA || LA5_74 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_74 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_74 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_74);
if (s >= 0) return s;
break;
case 40:
int LA5_112=input.LA(1);
int index5_112=input.index();
input.rewind();
s=-1;
if ((LA5_112 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=119;
}
 else if ((LA5_112 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_112 == COMMA || LA5_112 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_112 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_112);
if (s >= 0) return s;
break;
case 41:
int LA5_100=input.LA(1);
int index5_100=input.index();
input.rewind();
s=-1;
if ((LA5_100 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_100 == COMMA || LA5_100 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_100 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_100);
if (s >= 0) return s;
break;
case 42:
int LA5_47=input.LA(1);
int index5_47=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_47);
if (s >= 0) return s;
break;
case 43:
int LA5_88=input.LA(1);
int index5_88=input.index();
input.rewind();
s=-1;
if ((LA5_88 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=101;
}
 else if ((LA5_88 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if ((LA5_88 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_88 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=103;
}
 else if (((LA5_88 >= VT_COMPILATION_UNIT && LA5_88 <= SEMICOLON) || (LA5_88 >= DOT_STAR && LA5_88 <= LEFT_PAREN) || (LA5_88 >= COLON && LA5_88 <= NULL)|| (LA5_88 >= RIGHT_SQUARE && LA5_88 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_88 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=104;
}
input.seek(index5_88);
if (s >= 0) return s;
break;
case 44:
int LA5_98=input.LA(1);
int index5_98=input.index();
input.rewind();
s=-1;
if ((LA5_98 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=112;
}
input.seek(index5_98);
if (s >= 0) return s;
break;
case 45:
int LA5_60=input.LA(1);
int index5_60=input.index();
input.rewind();
s=-1;
if ((LA5_60 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=86;
}
input.seek(index5_60);
if (s >= 0) return s;
break;
case 46:
int LA5_56=input.LA(1);
int index5_56=input.index();
input.rewind();
s=-1;
if ((LA5_56 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=75;
}
 else if ((LA5_56 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=76;
}
 else if ((LA5_56 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=77;
}
 else if ((LA5_56 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=78;
}
 else if ((LA5_56 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=79;
}
 else if ((LA5_56 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=80;
}
 else if ((LA5_56 == COLON || LA5_56 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_56);
if (s >= 0) return s;
break;
case 47:
int LA5_108=input.LA(1);
int index5_108=input.index();
input.rewind();
s=-1;
if ((LA5_108 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_108 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_108 == COMMA || LA5_108 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_108);
if (s >= 0) return s;
break;
case 48:
int LA5_58=input.LA(1);
int index5_58=input.index();
input.rewind();
s=-1;
if ((LA5_58 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=82;
}
 else if ((LA5_58 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=83;
}
 else if ((LA5_58 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=84;
}
 else if ((LA5_58 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_58 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
input.seek(index5_58);
if (s >= 0) return s;
break;
case 49:
int LA5_83=input.LA(1);
int index5_83=input.index();
input.rewind();
s=-1;
if ((LA5_83 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=94;
}
input.seek(index5_83);
if (s >= 0) return s;
break;
case 50:
int LA5_1=input.LA(1);
int index5_1=input.index();
input.rewind();
s=-1;
if ((LA5_1 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=2;
}
 else if ((LA5_1 == ID) && ((((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT))) || (validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE))|| (validateIdentifierKey(DroolsSoftKeywords.GLOBAL))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.IMPORT))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=3;
}
 else if ((LA5_1 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=4;
}
 else if ((LA5_1 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
s=5;
}
 else if ((LA5_1 == BOOL) && ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
 else if ((LA5_1 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=7;
}
input.seek(index5_1);
if (s >= 0) return s;
break;
case 51:
int LA5_94=input.LA(1);
int index5_94=input.index();
input.rewind();
s=-1;
if ((LA5_94 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=84;
}
 else if ((LA5_94 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=83;
}
 else if ((LA5_94 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_94 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
input.seek(index5_94);
if (s >= 0) return s;
break;
case 52:
int LA5_67=input.LA(1);
int index5_67=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_67);
if (s >= 0) return s;
break;
case 53:
int LA5_52=input.LA(1);
int index5_52=input.index();
input.rewind();
s=-1;
if ((LA5_52 == STRING || (LA5_52 >= BOOL && LA5_52 <= INT) || LA5_52 == MISC) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_52 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=69;
}
 else if ((LA5_52 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=70;
}
 else if ((LA5_52 == EOF || LA5_52 == SEMICOLON) && ((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)))) {
s=71;
}
input.seek(index5_52);
if (s >= 0) return s;
break;
case 54:
int LA5_82=input.LA(1);
int index5_82=input.index();
input.rewind();
s=-1;
if ((LA5_82 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=93;
}
input.seek(index5_82);
if (s >= 0) return s;
break;
case 55:
int LA5_85=input.LA(1);
int index5_85=input.index();
input.rewind();
s=-1;
if ((LA5_85 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=96;
}
input.seek(index5_85);
if (s >= 0) return s;
break;
case 56:
int LA5_120=input.LA(1);
int index5_120=input.index();
input.rewind();
s=-1;
if ((LA5_120 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=126;
}
 else if (((LA5_120 >= VT_COMPILATION_UNIT && LA5_120 <= SEMICOLON) || (LA5_120 >= DOT && LA5_120 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_120);
if (s >= 0) return s;
break;
case 57:
int LA5_103=input.LA(1);
int index5_103=input.index();
input.rewind();
s=-1;
if ((LA5_103 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=115;
}
 else if (((LA5_103 >= VT_COMPILATION_UNIT && LA5_103 <= SEMICOLON) || (LA5_103 >= DOT && LA5_103 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_103);
if (s >= 0) return s;
break;
case 58:
int LA5_89=input.LA(1);
int index5_89=input.index();
input.rewind();
s=-1;
if ((LA5_89 == LEFT_CURLY) && ((validateIdentifierKey(DroolsSoftKeywords.FUNCTION)))) {
s=45;
}
 else if ((LA5_89 == EOF || LA5_89 == ID) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_89);
if (s >= 0) return s;
break;
case 59:
int LA5_114=input.LA(1);
int index5_114=input.index();
input.rewind();
s=-1;
if ((LA5_114 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=120;
}
 else if ((LA5_114 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=121;
}
 else if ((LA5_114 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=122;
}
 else if ((LA5_114 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_114 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if (((LA5_114 >= VT_COMPILATION_UNIT && LA5_114 <= SEMICOLON) || (LA5_114 >= DOT_STAR && LA5_114 <= LEFT_PAREN) || (LA5_114 >= COLON && LA5_114 <= NULL)|| (LA5_114 >= RIGHT_SQUARE && LA5_114 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_114);
if (s >= 0) return s;
break;
case 60:
int LA5_29=input.LA(1);
int index5_29=input.index();
input.rewind();
s=-1;
if ((LA5_29 == COMMA || LA5_29 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_29 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_29 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_29);
if (s >= 0) return s;
break;
case 61:
int LA5_61=input.LA(1);
int index5_61=input.index();
input.rewind();
s=-1;
if ((LA5_61 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_61 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_61 == COMMA || LA5_61 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_61);
if (s >= 0) return s;
break;
case 62:
int LA5_35=input.LA(1);
int index5_35=input.index();
input.rewind();
s=-1;
if ((LA5_35 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=55;
}
input.seek(index5_35);
if (s >= 0) return s;
break;
case 63:
int LA5_75=input.LA(1);
int index5_75=input.index();
input.rewind();
s=-1;
if ((LA5_75 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=91;
}
input.seek(index5_75);
if (s >= 0) return s;
break;
case 64:
int LA5_121=input.LA(1);
int index5_121=input.index();
input.rewind();
s=-1;
if ((LA5_121 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=127;
}
 else if (((LA5_121 >= VT_COMPILATION_UNIT && LA5_121 <= LEFT_SQUARE) || (LA5_121 >= THEN && LA5_121 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_121);
if (s >= 0) return s;
break;
case 65:
int LA5_101=input.LA(1);
int index5_101=input.index();
input.rewind();
s=-1;
if ((LA5_101 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=113;
}
 else if (((LA5_101 >= VT_COMPILATION_UNIT && LA5_101 <= LEFT_SQUARE) || (LA5_101 >= THEN && LA5_101 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_101);
if (s >= 0) return s;
break;
case 66:
int LA5_39=input.LA(1);
int index5_39=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_39);
if (s >= 0) return s;
break;
case 67:
int LA5_4=input.LA(1);
int index5_4=input.index();
input.rewind();
s=-1;
if ((LA5_4 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=16;
}
 else if ((LA5_4 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_4 == END || LA5_4 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_4 == SEMICOLON) && ((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
 else if ((LA5_4 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_4);
if (s >= 0) return s;
break;
case 68:
int LA5_20=input.LA(1);
int index5_20=input.index();
input.rewind();
s=-1;
if ((LA5_20 == ID || LA5_20 == END || LA5_20 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_20 == LEFT_CURLY) && ((validateIdentifierKey(DroolsSoftKeywords.FUNCTION)))) {
s=45;
}
input.seek(index5_20);
if (s >= 0) return s;
break;
case 69:
int LA5_125=input.LA(1);
int index5_125=input.index();
input.rewind();
s=-1;
if ((LA5_125 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_125 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_125 == COMMA || LA5_125 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_125);
if (s >= 0) return s;
break;
case 70:
int LA5_80=input.LA(1);
int index5_80=input.index();
input.rewind();
s=-1;
if ((LA5_80 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_80 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_80 == COMMA || LA5_80 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_80);
if (s >= 0) return s;
break;
case 71:
int LA5_16=input.LA(1);
int index5_16=input.index();
input.rewind();
s=-1;
if ((LA5_16 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=35;
}
 else if ((LA5_16 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.QUERY))))) {
s=22;
}
 else if ((LA5_16 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=36;
}
 else if ((LA5_16 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=37;
}
 else if ((LA5_16 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=38;
}
 else if ((LA5_16 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=39;
}
 else if ((LA5_16 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=26;
}
 else if ((LA5_16 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=27;
}
 else if ((LA5_16 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=40;
}
 else if ((LA5_16 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_16);
if (s >= 0) return s;
break;
case 72:
int LA5_68=input.LA(1);
int index5_68=input.index();
input.rewind();
s=-1;
if ((LA5_68 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_68 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_68 == COMMA || LA5_68 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_68);
if (s >= 0) return s;
break;
case 73:
int LA5_24=input.LA(1);
int index5_24=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.FUNCTION)))) {
s=45;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_24);
if (s >= 0) return s;
break;
case 74:
int LA5_37=input.LA(1);
int index5_37=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_37);
if (s >= 0) return s;
break;
case 75:
int LA5_107=input.LA(1);
int index5_107=input.index();
input.rewind();
s=-1;
if ((LA5_107 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_107 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_107 == COMMA || LA5_107 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_107);
if (s >= 0) return s;
break;
case 76:
int LA5_86=input.LA(1);
int index5_86=input.index();
input.rewind();
s=-1;
if ((LA5_86 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=97;
}
 else if ((LA5_86 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_86 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_86 == COMMA || LA5_86 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_86);
if (s >= 0) return s;
break;
case 77:
int LA5_42=input.LA(1);
int index5_42=input.index();
input.rewind();
s=-1;
if ((LA5_42 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=58;
}
input.seek(index5_42);
if (s >= 0) return s;
break;
case 78:
int LA5_124=input.LA(1);
int index5_124=input.index();
input.rewind();
s=-1;
if ((LA5_124 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_124 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if (((LA5_124 >= VT_COMPILATION_UNIT && LA5_124 <= LEFT_PAREN) || (LA5_124 >= COLON && LA5_124 <= NULL) || (LA5_124 >= RIGHT_SQUARE && LA5_124 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_124 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=116;
}
input.seek(index5_124);
if (s >= 0) return s;
break;
case 79:
int LA5_93=input.LA(1);
int index5_93=input.index();
input.rewind();
s=-1;
if ((LA5_93 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=110;
}
 else if ((LA5_93 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=84;
}
 else if ((LA5_93 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=82;
}
input.seek(index5_93);
if (s >= 0) return s;
break;
case 80:
int LA5_90=input.LA(1);
int index5_90=input.index();
input.rewind();
s=-1;
if ((LA5_90 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=105;
}
 else if ((LA5_90 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_90 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_90 == COMMA || LA5_90 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_90);
if (s >= 0) return s;
break;
case 81:
int LA5_22=input.LA(1);
int index5_22=input.index();
input.rewind();
s=-1;
if ((LA5_22 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.QUERY))))) {
s=47;
}
 else if ((LA5_22 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE))))) {
s=48;
}
 else if ((LA5_22 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_22);
if (s >= 0) return s;
break;
case 82:
int LA5_19=input.LA(1);
int index5_19=input.index();
input.rewind();
s=-1;
if ((LA5_19 == LEFT_PAREN || LA5_19 == COLON) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_19 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=41;
}
 else if ((LA5_19 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
 else if ((LA5_19 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_19 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=43;
}
 else if ((LA5_19 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=44;
}
input.seek(index5_19);
if (s >= 0) return s;
break;
case 83:
int LA5_130=input.LA(1);
int index5_130=input.index();
input.rewind();
s=-1;
if ((LA5_130 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=132;
}
 else if (((LA5_130 >= VT_COMPILATION_UNIT && LA5_130 <= LEFT_SQUARE) || (LA5_130 >= THEN && LA5_130 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_130);
if (s >= 0) return s;
break;
case 84:
int LA5_128=input.LA(1);
int index5_128=input.index();
input.rewind();
s=-1;
if ((LA5_128 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=131;
}
 else if (((LA5_128 >= VT_COMPILATION_UNIT && LA5_128 <= LEFT_SQUARE) || (LA5_128 >= THEN && LA5_128 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_128);
if (s >= 0) return s;
break;
case 85:
int LA5_123=input.LA(1);
int index5_123=input.index();
input.rewind();
s=-1;
if ((LA5_123 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=129;
}
 else if (((LA5_123 >= VT_COMPILATION_UNIT && LA5_123 <= LEFT_SQUARE) || (LA5_123 >= THEN && LA5_123 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_123);
if (s >= 0) return s;
break;
case 86:
int LA5_116=input.LA(1);
int index5_116=input.index();
input.rewind();
s=-1;
if ((LA5_116 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=124;
}
 else if (((LA5_116 >= VT_COMPILATION_UNIT && LA5_116 <= LEFT_SQUARE) || (LA5_116 >= THEN && LA5_116 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_116);
if (s >= 0) return s;
break;
case 87:
int LA5_9=input.LA(1);
int index5_9=input.index();
input.rewind();
s=-1;
if ((LA5_9 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=21;
}
 else if ((LA5_9 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.QUERY))))) {
s=22;
}
 else if ((LA5_9 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=23;
}
 else if ((LA5_9 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))|| (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=24;
}
 else if ((LA5_9 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=25;
}
 else if ((LA5_9 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=26;
}
 else if ((LA5_9 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=27;
}
 else if ((LA5_9 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=28;
}
 else if ((LA5_9 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=29;
}
 else if ((LA5_9 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=30;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)))) {
s=31;
}
input.seek(index5_9);
if (s >= 0) return s;
break;
case 88:
int LA5_3=input.LA(1);
int index5_3=input.index();
input.rewind();
s=-1;
if ((LA5_3 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=8;
}
 else if ((LA5_3 == ID) && ((((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT))) || ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT))) || ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.IMPORT))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.RULE))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.GLOBAL))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.QUERY))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))|| ((validateLT(1,"import") && validateLT(2,"function")) && (validateIdentifierKey(DroolsSoftKeywords.IMPORT)))))) {
s=9;
}
 else if ((LA5_3 == END) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_3 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_3 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=12;
}
 else if ((LA5_3 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=13;
}
 else if ((LA5_3 == SEMICOLON) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=14;
}
 else if ((LA5_3 == EOF || LA5_3 == DOT_STAR) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_3);
if (s >= 0) return s;
break;
case 89:
int LA5_97=input.LA(1);
int index5_97=input.index();
input.rewind();
s=-1;
if ((LA5_97 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_97 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_97 == COMMA || LA5_97 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_97);
if (s >= 0) return s;
break;
case 90:
int LA5_34=input.LA(1);
int index5_34=input.index();
input.rewind();
s=-1;
if (((LA5_34 >= STRING && LA5_34 <= LEFT_PAREN) || (LA5_34 >= BOOL && LA5_34 <= INT) || LA5_34 == MISC) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_34 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.TEMPLATE))))) {
s=54;
}
 else if ((LA5_34 == DOT || LA5_34 == LEFT_SQUARE) && ((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
input.seek(index5_34);
if (s >= 0) return s;
break;
case 91:
int LA5_79=input.LA(1);
int index5_79=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_79);
if (s >= 0) return s;
break;
case 92:
int LA5_105=input.LA(1);
int index5_105=input.index();
input.rewind();
s=-1;
if ((LA5_105 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_105 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_105 == COMMA || LA5_105 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_105);
if (s >= 0) return s;
break;
case 93:
int LA5_113=input.LA(1);
int index5_113=input.index();
input.rewind();
s=-1;
if ((LA5_113 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_113 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if (((LA5_113 >= VT_COMPILATION_UNIT && LA5_113 <= SEMICOLON) || (LA5_113 >= DOT && LA5_113 <= LEFT_PAREN) || (LA5_113 >= COLON && LA5_113 <= NULL)|| (LA5_113 >= RIGHT_SQUARE && LA5_113 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_113 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=101;
}
 else if ((LA5_113 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=104;
}
input.seek(index5_113);
if (s >= 0) return s;
break;
case 94:
int LA5_41=input.LA(1);
int index5_41=input.index();
input.rewind();
s=-1;
if ((LA5_41 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=57;
}
input.seek(index5_41);
if (s >= 0) return s;
break;
case 95:
int LA5_126=input.LA(1);
int index5_126=input.index();
input.rewind();
s=-1;
if (((LA5_126 >= VT_COMPILATION_UNIT && LA5_126 <= SEMICOLON) || (LA5_126 >= DOT_STAR && LA5_126 <= NULL) || (LA5_126 >= RIGHT_SQUARE && LA5_126 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_126 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=130;
}
 else if ((LA5_126 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=122;
}
 else if ((LA5_126 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=120;
}
input.seek(index5_126);
if (s >= 0) return s;
break;
case 96:
int LA5_115=input.LA(1);
int index5_115=input.index();
input.rewind();
s=-1;
if (((LA5_115 >= VT_COMPILATION_UNIT && LA5_115 <= SEMICOLON) || (LA5_115 >= DOT_STAR && LA5_115 <= NULL) || (LA5_115 >= RIGHT_SQUARE && LA5_115 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_115 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=123;
}
 else if ((LA5_115 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=104;
}
 else if ((LA5_115 == DOT) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=103;
}
input.seek(index5_115);
if (s >= 0) return s;
break;
case 97:
int LA5_33=input.LA(1);
int index5_33=input.index();
input.rewind();
s=-1;
if ((LA5_33 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=53;
}
 else if ((LA5_33 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=13;
}
input.seek(index5_33);
if (s >= 0) return s;
break;
case 98:
int LA5_91=input.LA(1);
int index5_91=input.index();
input.rewind();
s=-1;
if ((LA5_91 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=106;
}
 else if ((LA5_91 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=107;
}
 else if ((LA5_91 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=108;
}
 else if ((LA5_91 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
 else if ((LA5_91 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_91 == COMMA || LA5_91 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_91);
if (s >= 0) return s;
break;
case 99:
int LA5_55=input.LA(1);
int index5_55=input.index();
input.rewind();
s=-1;
if ((LA5_55 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=72;
}
 else if ((LA5_55 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=73;
}
 else if ((LA5_55 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=74;
}
 else if ((LA5_55 == COMMA || LA5_55 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_55 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_55 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_55);
if (s >= 0) return s;
break;
case 100:
int LA5_38=input.LA(1);
int index5_38=input.index();
input.rewind();
s=-1;
if ((LA5_38 == COMMA || LA5_38 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_38 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_38 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_38);
if (s >= 0) return s;
break;
case 101:
int LA5_48=input.LA(1);
int index5_48=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
input.seek(index5_48);
if (s >= 0) return s;
break;
case 102:
int LA5_66=input.LA(1);
int index5_66=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_66);
if (s >= 0) return s;
break;
case 103:
int LA5_84=input.LA(1);
int index5_84=input.index();
input.rewind();
s=-1;
if ((LA5_84 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=95;
}
 else if ((LA5_84 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_84 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
input.seek(index5_84);
if (s >= 0) return s;
break;
case 104:
int LA5_54=input.LA(1);
int index5_54=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.TEMPLATE)))) {
s=17;
}
input.seek(index5_54);
if (s >= 0) return s;
break;
case 105:
int LA5_64=input.LA(1);
int index5_64=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_64);
if (s >= 0) return s;
break;
case 106:
int LA5_106=input.LA(1);
int index5_106=input.index();
input.rewind();
s=-1;
if ((LA5_106 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=117;
}
input.seek(index5_106);
if (s >= 0) return s;
break;
case 107:
int LA5_72=input.LA(1);
int index5_72=input.index();
input.rewind();
s=-1;
if ((LA5_72 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=90;
}
input.seek(index5_72);
if (s >= 0) return s;
break;
case 108:
int LA5_13=input.LA(1);
int index5_13=input.index();
input.rewind();
s=-1;
if ((LA5_13 == RIGHT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=33;
}
input.seek(index5_13);
if (s >= 0) return s;
break;
case 109:
int LA5_127=input.LA(1);
int index5_127=input.index();
input.rewind();
s=-1;
if ((LA5_127 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=122;
}
 else if ((LA5_127 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=121;
}
 else if ((LA5_127 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_127 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
 else if (((LA5_127 >= VT_COMPILATION_UNIT && LA5_127 <= SEMICOLON) || (LA5_127 >= DOT && LA5_127 <= LEFT_PAREN) || (LA5_127 >= COLON && LA5_127 <= NULL)|| (LA5_127 >= RIGHT_SQUARE && LA5_127 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
input.seek(index5_127);
if (s >= 0) return s;
break;
case 110:
int LA5_49=input.LA(1);
int index5_49=input.index();
input.rewind();
s=-1;
if ((LA5_49 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=63;
}
 else if ((LA5_49 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=64;
}
 else if ((LA5_49 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=65;
}
 else if ((LA5_49 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=66;
}
 else if ((LA5_49 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=67;
}
 else if ((LA5_49 == COLON || LA5_49 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_49 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=68;
}
input.seek(index5_49);
if (s >= 0) return s;
break;
case 111:
int LA5_69=input.LA(1);
int index5_69=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)))) {
s=71;
}
input.seek(index5_69);
if (s >= 0) return s;
break;
case 112:
int LA5_119=input.LA(1);
int index5_119=input.index();
input.rewind();
s=-1;
if ((LA5_119 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_119 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT))))) {
s=49;
}
 else if ((LA5_119 == COMMA || LA5_119 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_119);
if (s >= 0) return s;
break;
case 113:
int LA5_57=input.LA(1);
int index5_57=input.index();
input.rewind();
s=-1;
if ((LA5_57 == LEFT_PAREN) && ((validateIdentifierKey(DroolsSoftKeywords.QUERY)))) {
s=10;
}
 else if ((LA5_57 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=41;
}
 else if ((LA5_57 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=42;
}
 else if ((LA5_57 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=20;
}
 else if ((LA5_57 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=81;
}
input.seek(index5_57);
if (s >= 0) return s;
break;
case 114:
int LA5_28=input.LA(1);
int index5_28=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
input.seek(index5_28);
if (s >= 0) return s;
break;
case 115:
int LA5_12=input.LA(1);
int index5_12=input.index();
input.rewind();
s=-1;
if ((LA5_12 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.GLOBAL)) || (validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=32;
}
input.seek(index5_12);
if (s >= 0) return s;
break;
case 116:
int LA5_118=input.LA(1);
int index5_118=input.index();
input.rewind();
s=-1;
if ((LA5_118 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=84;
}
 else if ((LA5_118 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.QUERY)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=110;
}
input.seek(index5_118);
if (s >= 0) return s;
break;
case 117:
int LA5_117=input.LA(1);
int index5_117=input.index();
input.rewind();
s=-1;
if ((LA5_117 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=125;
}
 else if ((LA5_117 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.RULE)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=56;
}
 else if ((LA5_117 == COMMA || LA5_117 == THEN) && ((validateIdentifierKey(DroolsSoftKeywords.RULE)))) {
s=11;
}
 else if ((LA5_117 == EOF) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=18;
}
input.seek(index5_117);
if (s >= 0) return s;
break;
case 118:
int LA5_122=input.LA(1);
int index5_122=input.index();
input.rewind();
s=-1;
if ((LA5_122 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
 else if ((LA5_122 == LEFT_SQUARE) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=128;
}
 else if (((LA5_122 >= VT_COMPILATION_UNIT && LA5_122 <= LEFT_PAREN) || (LA5_122 >= COLON && LA5_122 <= NULL) || (LA5_122 >= RIGHT_SQUARE && LA5_122 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_122 == COMMA) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=102;
}
input.seek(index5_122);
if (s >= 0) return s;
break;
case 119:
int LA5_70=input.LA(1);
int index5_70=input.index();
input.rewind();
s=-1;
if ((LA5_70 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=88;
}
 else if (((LA5_70 >= VT_COMPILATION_UNIT && LA5_70 <= SEMICOLON) || (LA5_70 >= DOT && LA5_70 <= COMMA) || (LA5_70 >= COLON && LA5_70 <= MULTI_LINE_COMMENT)) && ((validateIdentifierKey(DroolsSoftKeywords.IMPORT)))) {
s=15;
}
 else if ((LA5_70 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.IMPORT)) || (validateIdentifierKey(DroolsSoftKeywords.FUNCTION))))) {
s=89;
}
input.seek(index5_70);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),5,_s,input);
error(nvae);
throw nvae;
}
