{
  int _s=s;
switch (s) {
case 0:
    int LA37_11=input.LA(1);
  int index37_11=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=18;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
input.seek(index37_11);
if (s >= 0) return s;
break;
case 1:
int LA37_4=input.LA(1);
int index37_4=input.index();
input.rewind();
s=-1;
if (((LA37_4 >= VT_COMPILATION_UNIT && LA37_4 <= STRING) || LA37_4 == COMMA || (LA37_4 >= AT && LA37_4 <= MULTI_LINE_COMMENT)) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=10;
}
 else if ((LA37_4 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=11;
}
 else if ((LA37_4 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=12;
}
input.seek(index37_4);
if (s >= 0) return s;
break;
case 2:
int LA37_12=input.LA(1);
int index37_12=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=8;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
input.seek(index37_12);
if (s >= 0) return s;
break;
case 3:
int LA37_1=input.LA(1);
int index37_1=input.index();
input.rewind();
s=-1;
if ((LA37_1 == MISC) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=2;
}
 else if ((LA37_1 == INT) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.DURATION))))) {
s=3;
}
 else if ((LA37_1 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=4;
}
 else if ((LA37_1 == STRING) && ((validateIdentifierKey(DroolsSoftKeywords.DIALECT)))) {
s=5;
}
 else if ((LA37_1 == BOOL) && ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
input.seek(index37_1);
if (s >= 0) return s;
break;
case 4:
int LA37_7=input.LA(1);
int index37_7=input.index();
input.rewind();
s=-1;
if ((LA37_7 == MISC) && ((validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE)))) {
s=13;
}
 else if ((LA37_7 == STRING) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=14;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP)))) {
s=15;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS)))) {
s=16;
}
input.seek(index37_7);
if (s >= 0) return s;
break;
case 5:
int LA37_3=input.LA(1);
int index37_3=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=8;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.DURATION)))) {
s=9;
}
input.seek(index37_3);
if (s >= 0) return s;
break;
case 6:
int LA37_14=input.LA(1);
int index37_14=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
s=19;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
s=20;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE)))) {
s=21;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)))) {
s=22;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))) {
s=23;
}
input.seek(index37_14);
if (s >= 0) return s;
break;
case 7:
int LA37_17=input.LA(1);
int index37_17=input.index();
input.rewind();
s=-1;
if (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))) {
s=24;
}
 else if (((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))) {
s=6;
}
input.seek(index37_17);
if (s >= 0) return s;
break;
case 8:
int LA37_0=input.LA(1);
int index37_0=input.index();
input.rewind();
s=-1;
if ((LA37_0 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.DIALECT))|| (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.SALIENCE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.ENABLED))|| (validateIdentifierKey(DroolsSoftKeywords.DURATION))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=1;
}
input.seek(index37_0);
if (s >= 0) return s;
break;
case 9:
int LA37_10=input.LA(1);
int index37_10=input.index();
input.rewind();
s=-1;
if ((LA37_10 == RIGHT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=12;
}
 else if (((LA37_10 >= VT_COMPILATION_UNIT && LA37_10 <= STRING) || LA37_10 == COMMA || (LA37_10 >= AT && LA37_10 <= MULTI_LINE_COMMENT)) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=10;
}
 else if ((LA37_10 == LEFT_PAREN) && (((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)) || (validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=17;
}
input.seek(index37_10);
if (s >= 0) return s;
break;
case 10:
int LA37_2=input.LA(1);
int index37_2=input.index();
input.rewind();
s=-1;
if ((LA37_2 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)) || (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)) || (validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE))|| (validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP))|| (validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))|| (validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS))|| (validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE))))) {
s=7;
}
input.seek(index37_2);
if (s >= 0) return s;
break;
}
if (backtracking > 0) {
failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),37,_s,input);
error(nvae);
throw nvae;
}
