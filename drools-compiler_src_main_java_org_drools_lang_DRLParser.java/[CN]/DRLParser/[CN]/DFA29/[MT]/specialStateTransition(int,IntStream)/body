{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA29_0=input.LA(1);
  int index29_0=input.index();
input.rewind();
s=-1;
if ((LA29_0 == ID) && ((((validateIdentifierKey(DroolsSoftKeywords.DIALECT))) || ((validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))) || ((validateIdentifierKey(DroolsSoftKeywords.EXTEND)))|| ((validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP)))|| ((validateIdentifierKey(DroolsSoftKeywords.DURATION)))|| ((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE)))|| ((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))|| ((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES)))|| ((validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE)))|| ((validateIdentifierKey(DroolsSoftKeywords.SALIENCE)))|| ((validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))|| ((validateIdentifierKey(DroolsSoftKeywords.ENABLED)))|| ((validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES)))|| ((validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS)))))) {
s=1;
}
 else if ((LA29_0 == AT || LA29_0 == WHEN || LA29_0 == THEN)) {
s=2;
}
input.seek(index29_0);
if (s >= 0) return s;
break;
case 1:
int LA29_5=input.LA(1);
int index29_5=input.index();
input.rewind();
s=-1;
if ((((validateIdentifierKey(DroolsSoftKeywords.EXTEND))))) {
s=6;
}
 else if ((((validateIdentifierKey(DroolsSoftKeywords.DIALECT))))) {
s=9;
}
input.seek(index29_5);
if (s >= 0) return s;
break;
case 2:
int LA29_1=input.LA(1);
int index29_1=input.index();
input.rewind();
s=-1;
if ((LA29_1 == MISC) && ((((validateIdentifierKey(DroolsSoftKeywords.AGENDA) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP))) || ((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EXPIRES))) || ((validateIdentifierKey(DroolsSoftKeywords.ACTIVATION) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))|| ((validateIdentifierKey(DroolsSoftKeywords.LOCK) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.ON)&& validateLT(4,"-")&& validateLT(5,DroolsSoftKeywords.ACTIVE)))|| ((validateIdentifierKey(DroolsSoftKeywords.NO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.LOOP)))|| ((validateIdentifierKey(DroolsSoftKeywords.RULEFLOW) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.GROUP)))|| ((validateIdentifierKey(DroolsSoftKeywords.AUTO) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.FOCUS)))|| ((validateIdentifierKey(DroolsSoftKeywords.DATE) && validateLT(2,"-") && validateLT(3,DroolsSoftKeywords.EFFECTIVE)))))) {
s=3;
}
 else if ((LA29_1 == COLON) && (((validateIdentifierKey(DroolsSoftKeywords.ATTRIBUTES))))) {
s=4;
}
 else if ((LA29_1 == STRING) && ((((validateIdentifierKey(DroolsSoftKeywords.DIALECT))) || ((validateIdentifierKey(DroolsSoftKeywords.EXTEND)))))) {
s=5;
}
 else if ((LA29_1 == ID) && (((validateIdentifierKey(DroolsSoftKeywords.EXTEND))))) {
s=6;
}
 else if ((LA29_1 == INT) && ((((validateIdentifierKey(DroolsSoftKeywords.SALIENCE))) || ((validateIdentifierKey(DroolsSoftKeywords.DURATION)))))) {
s=7;
}
 else if ((LA29_1 == LEFT_PAREN) && ((((validateIdentifierKey(DroolsSoftKeywords.SALIENCE))) || ((validateIdentifierKey(DroolsSoftKeywords.ENABLED))) || ((validateIdentifierKey(DroolsSoftKeywords.DURATION)))))) {
s=8;
}
 else if ((LA29_1 == BOOL) && (((validateIdentifierKey(DroolsSoftKeywords.ENABLED))))) {
s=9;
}
input.seek(index29_1);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),29,_s,input);
error(nvae);
throw nvae;
}
