{
  Description childDescription=Description.createTestDescription(getClass(),scenario.getName());
  descr.addChild(childDescription);
  EachTestNotifier eachNotifier=new EachTestNotifier(notifier,childDescription);
  try {
    eachNotifier.fireTestStarted();
    if (ksessions == null || ksessions.values().isEmpty()) {
      eachNotifier.addFailure(new NullKieSessionException("Unable to get a Session to run tests. Check the project for build errors."));
    }
 else {
      KieSession ksession=getKSession(scenario.getKSessions());
      if (ksession == null) {
        String ksessionName=getKSessionName(scenario.getKSessions());
        if (ksessionName == null) {
          eachNotifier.addFailure(new NullPointerException("Test scenario runner could not find the default knowledge session."));
        }
 else {
          eachNotifier.addFailure(new NullPointerException("Test scenario runner could not find a stateless knowledge session with the name \'" + ksessionName + "\'."));
        }
      }
 else {
        final ScenarioRunner runner=new ScenarioRunner(ksession,maxRuleFirings);
        runner.run(scenario);
        if (!scenario.wasSuccessful()) {
          StringBuilder builder=new StringBuilder();
          for (          String message : scenario.getFailureMessages()) {
            builder.append(message).append("\n");
          }
          eachNotifier.addFailedAssumption(new AssumptionViolatedException(builder.toString()));
        }
        for (        FactHandle factHandle : ksession.getFactHandles()) {
          ksession.delete(factHandle);
        }
      }
    }
  }
 catch (  Throwable t) {
    eachNotifier.addFailure(t);
  }
 finally {
    eachNotifier.fireTestFinished();
  }
}
