{
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(StateExampleWithDynamicRules.class.getResourceAsStream("StateExampleUsingSalience.drl")));
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(builder.getPackage());
  final StatefulSession session=ruleBase.newStatefulSession();
  final WorkingMemoryFileLogger logger=new WorkingMemoryFileLogger(session);
  logger.setFileName("log/state");
  final State a=new State("A");
  final State b=new State("B");
  final State c=new State("C");
  final State d=new State("D");
  final State e=new State("E");
  final boolean dynamic=true;
  session.insert(a,dynamic);
  session.insert(b,dynamic);
  session.insert(c,dynamic);
  session.insert(d,dynamic);
  session.insert(e,dynamic);
  session.fireAllRules();
  builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(StateExampleWithDynamicRules.class.getResourceAsStream("StateExampleDynamicRule.drl")));
  ruleBase.addPackage(builder.getPackage());
  session.fireAllRules();
  session.dispose();
  logger.writeToDisk();
}
