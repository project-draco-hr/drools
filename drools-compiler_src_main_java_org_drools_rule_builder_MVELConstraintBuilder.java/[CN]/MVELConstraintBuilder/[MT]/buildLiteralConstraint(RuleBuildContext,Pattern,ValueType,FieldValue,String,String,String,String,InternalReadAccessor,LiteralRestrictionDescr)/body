{
  if (!isMvelOperator(operator)) {
    Evaluator evaluator=buildLiteralEvaluator(context,extractor,restrictionDescr,vtype);
    return new EvaluatorConstraint(field,evaluator,extractor);
  }
  String mvelExpr=normalizeMVELLiteralExpression(vtype,field,expression,leftValue,operator,rightValue,restrictionDescr);
  boolean isIndexable=operator.equals("==");
  MVELCompilationUnit compilationUnit=buildCompilationUnit(context,pattern,mvelExpr);
  return new MvelConstraint(context.getPkg().getName(),mvelExpr,compilationUnit,isIndexable,field,extractor);
}
