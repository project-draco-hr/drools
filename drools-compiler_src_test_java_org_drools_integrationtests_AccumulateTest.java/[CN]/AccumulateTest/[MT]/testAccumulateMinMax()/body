{
  String drl="package org.drools.test \n" + "import org.drools.Cheese \n" + "global java.util.List results \n "+ "rule minMax \n"+ "when \n"+ "    accumulate( Cheese( $p: price ), $min: min($p), $max: max($p) ) \n"+ "then \n"+ "    results.add($min); results.add($max); \n"+ "end \n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(drl);
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  final List<Number> results=new ArrayList<Number>();
  ksession.setGlobal("results",results);
  final Cheese[] cheese=new Cheese[]{new Cheese("Emmentaler",4),new Cheese("Appenzeller",6),new Cheese("Greyerzer",2),new Cheese("Raclette",3),new Cheese("Olm??tzer Quargel",15),new Cheese("Brie",17),new Cheese("Dolcelatte",8)};
  for (int i=0; i < cheese.length; i++) {
    ksession.insert(cheese[i]);
  }
  ksession.fireAllRules();
  assertEquals(2,results.size());
  assertEquals(results.get(0).intValue(),2);
  assertEquals(results.get(1).intValue(),17);
}
