{
  RuleModel m=new RuleModel();
  m.name="test sub constraints";
  FactPattern p=new FactPattern("Person");
  SingleFieldConstraint con=new SingleFieldConstraint();
  con.setFieldName("field1");
  p.addConstraint(con);
  SingleFieldConstraint con2=new SingleFieldConstraint();
  con2.setFieldName("field2");
  con2.setOperator("==");
  con2.setValue("variableHere");
  con2.setConstraintValueType(SingleFieldConstraint.TYPE_VARIABLE);
  con2.setParent(con);
  p.addConstraint(con2);
  m.addLhsItem(p);
  String expected="rule \"test sub constraints\"" + "\tdialect \"mvel\"\n when " + "     Person(field1.field2 == variableHere)"+ " then "+ "end";
  PackageDataModelOracle dmo=mock(PackageDataModelOracle.class);
  when(dmo.getModelFields()).thenReturn(new HashMap<String,ModelField[]>(){
{
      put("Person",new ModelField[]{new ModelField("field1","Field1",ModelField.FIELD_CLASS_TYPE.TYPE_DECLARATION_CLASS,ModelField.FIELD_ORIGIN.DECLARED,FieldAccessorsAndMutators.BOTH,"Field1")});
      put("Field1",new ModelField[]{new ModelField("field2","Field2",ModelField.FIELD_CLASS_TYPE.TYPE_DECLARATION_CLASS,ModelField.FIELD_ORIGIN.DECLARED,FieldAccessorsAndMutators.BOTH,"Field2")});
    }
  }
);
  when(dmo.getAllFactTypes()).thenReturn(new String[]{"Person","Field1","Field2"});
  checkMarshallUnmarshall(expected,m,dmo);
}
