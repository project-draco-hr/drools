{
  RulesRepository repo=getRepo();
  AssetItem item=repo.loadGlobalArea().addAsset("testShareableNodesWithQueryOriginal","desc");
  item.updateFormat("xyz");
  item.getNode().addMixin("mix:shareable");
  PackageItem source=repo.createPackage("testShareableNodesWithQueryPackage","desc");
  repo.save();
  AssetItemIterator it=repo.loadGlobalArea().queryAssets("drools:format='xyz'");
  List list=iteratorToList(it);
  assertEquals(1,list.size());
  assertTrue(list.get(0) instanceof AssetItem);
  source.checkout();
  Session session=repo.getSession();
  Workspace workspace=session.getWorkspace();
  String path="/drools:repository/drools:package_area/testShareableNodesWithQueryPackage/assets/testShareableNodesWithQueryShared";
  workspace.clone(workspace.getName(),item.getNode().getPath(),path,false);
  repo.save();
  AssetItem originalItem=repo.loadGlobalArea().loadAsset("testShareableNodesWithQueryOriginal");
  AssetItem sharedItem=repo.loadPackage("testShareableNodesWithQueryPackage").loadAsset("testShareableNodesWithQueryShared");
  assertTrue(originalItem.getFormat().equals("xyz"));
  assertTrue(sharedItem.getFormat().equals("xyz"));
  it=repo.loadGlobalArea().queryAssets("drools:format='xyz'");
  list=iteratorToList(it);
  assertEquals(1,list.size());
  assertTrue(list.get(0) instanceof AssetItem);
}
