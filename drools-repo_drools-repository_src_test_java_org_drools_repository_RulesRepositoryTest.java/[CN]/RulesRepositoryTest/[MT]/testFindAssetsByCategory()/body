{
  RulesRepository repo=RepositorySessionUtil.getRepository();
  repo.loadCategory("/").addCategory("testFindAssetsByCategoryUsingFilterCat","X");
  PackageItem pkg=repo.createPackage("testFindAssetsByCategoryUsingFilterPack","");
  pkg.addAsset("testCat1","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat2","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  repo.save();
  List items=repo.findAssetsByCategory("/testFindAssetsByCategoryUsingFilterCat",0,-1).assets;
  assertEquals(2,items.size());
  AssetItemPageResult apl=repo.findAssetsByCategory("/testFindAssetsByCategoryUsingFilterCat",false,0,-1,new RepositoryFilter(){
    public boolean accept(    Object artifact,    String action){
      if (!(artifact instanceof AssetItem))       return false;
      if (((AssetItem)artifact).getName().equalsIgnoreCase("testCat1")) {
        return true;
      }
 else {
        return false;
      }
    }
  }
);
  assertEquals(1,apl.assets.size());
  assertEquals("testCat1",((AssetItem)apl.assets.get(0)).getName());
  pkg.addAsset("testCat3","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat4","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat5","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat6","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat7","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.addAsset("testCat8","x","/testFindAssetsByCategoryUsingFilterCat","drl");
  pkg.loadAsset("testCat1").archiveItem(true).checkin("");
  pkg.loadAsset("testCat2").archiveItem(true).checkin("");
  pkg.loadAsset("testCat3").archiveItem(true).checkin("");
  pkg.loadAsset("testCat4").archiveItem(true).checkin("");
  repo.save();
  apl=repo.findAssetsByCategory("/testFindAssetsByCategoryUsingFilterCat",0,-1);
  assertEquals(4,apl.assets.size());
  List<String> names=new ArrayList<String>();
  for (  AssetItem as : apl.assets) {
    if (names.contains(as.getName())) {
      fail("dupe returned.");
    }
    names.add(as.getName());
  }
  names=new ArrayList<String>();
  boolean hasNext=true;
  int skip=0;
  while (hasNext) {
    apl=repo.findAssetsByCategory("/testFindAssetsByCategoryUsingFilterCat",skip,2);
    for (    AssetItem as : apl.assets) {
      if (names.contains(as.getName())) {
        fail("dupe returned");
      }
      names.add(as.getName());
    }
    skip=(int)(apl.currentPosition + apl.assets.size() - 2);
    hasNext=apl.hasNext;
  }
  assertEquals(4,names.size());
  assertTrue(names.contains("testCat5"));
  assertTrue(names.contains("testCat6"));
  assertTrue(names.contains("testCat7"));
  assertTrue(names.contains("testCat8"));
}
