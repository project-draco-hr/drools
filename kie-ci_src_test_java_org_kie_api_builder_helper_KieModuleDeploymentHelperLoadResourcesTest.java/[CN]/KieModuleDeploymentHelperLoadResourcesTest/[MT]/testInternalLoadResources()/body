{
  List<KJarResource> resources=null;
  String path="/builder/simple_query_test.drl";
  resources=internalLoadResources(path,false);
  assertEquals(path,1,resources.size());
  String content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  path="/builder/test/";
  resources=internalLoadResources(path,true);
  assertEquals(path,2,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  path="/builder/";
  resources=internalLoadResources(path,true);
  assertEquals(path,1,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  path="META-INF/WorkDefinitions.conf";
  resources=internalLoadResources(path,false);
  assertEquals(path,1,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  path="META-INF/plexus/";
  resources=internalLoadResources(path,true);
  assertEquals(path,2,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  content="test file created by " + this.getClass().getSimpleName();
  final String baseTempPath=System.getProperty("java.io.tmpdir");
  File tempFile=File.createTempFile(UUID.randomUUID().toString(),".tst");
  tempFile.deleteOnExit();
  FileOutputStream fos=new FileOutputStream(tempFile);
  fos.write(content.getBytes());
  fos.close();
  resources=internalLoadResources(tempFile.getAbsolutePath(),false);
  assertEquals(path,1,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
  File tempDir=new File(baseTempPath + "/" + UUID.randomUUID().toString());
  tempDir.mkdir();
  tempDir.deleteOnExit();
  tempFile=new File(tempDir.getAbsolutePath() + "/" + UUID.randomUUID().toString()+ ".tst");
  fos=new FileOutputStream(tempFile);
  fos.write(content.getBytes());
  fos.close();
  resources=internalLoadResources(tempDir.getAbsolutePath(),true);
  assertEquals(path,1,resources.size());
  content=resources.get(0).content;
  assertTrue(content != null && content.length() > 10);
}
