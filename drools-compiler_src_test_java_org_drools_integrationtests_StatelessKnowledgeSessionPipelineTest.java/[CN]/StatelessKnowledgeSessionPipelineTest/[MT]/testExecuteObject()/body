{
  String str="";
  str+="package org.sample \n";
  str+="global java.util.List list; \n";
  str+="rule rule1 \n";
  str+="  when \n";
  str+="    s : String() \n";
  str+="  then \n";
  str+="    list.add( s ); ";
  str+="end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    System.out.println(kbuilder.getErrors());
  }
  assertFalse(kbuilder.hasErrors());
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatelessKnowledgeSession ksession=kbase.newStatelessKnowledgeSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  MvelAction mvelAction=new MvelAction("context.object = this");
  StatelessKnowledgeSessionExecuteStage stage1=new StatelessKnowledgeSessionExecuteStage();
  mvelAction.setReceiver(stage1);
  StatelessKnowledgeSessionPipelineImpl pipeline=new StatelessKnowledgeSessionPipelineImpl(ksession);
  pipeline.setReceiver(mvelAction);
  pipeline.insert("hello world",null);
  assertEquals(1,list.size());
  assertEquals("hello world",list.get(0));
}
