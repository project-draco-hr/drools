{
  String drl="package org.foo.bar\n" + "rule R1 when\n" + "then\n"+ "    System.exit(0);"+ "end\n";
  try {
    KieServices ks=KieServices.Factory.get();
    KieFileSystem kfs=ks.newKieFileSystem().write(ResourceFactory.newByteArrayResource(drl.getBytes()).setSourcePath("org/foo/bar/r1.drl"));
    ks.newKieBuilder(kfs).buildAll();
    ReleaseId releaseId=ks.getRepository().getDefaultReleaseId();
    KieContainer kc=ks.newKieContainer(releaseId);
    KieSession ksession=kc.newKieSession();
    ksession.fireAllRules();
    Assert.fail("The security policy for the rule should have prevented this from executing...");
  }
 catch (  ShouldHavePrevented e) {
    Assert.fail("The security policy for the rule should have prevented this from executing...");
  }
catch (  ConsequenceException e) {
  }
}
