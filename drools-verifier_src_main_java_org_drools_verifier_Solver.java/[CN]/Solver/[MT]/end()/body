{
  if (subSolver != null && subSolver.subSolver == null) {
    if (type == OperatorDescr.Type.AND) {
      if (possibilityLists.isEmpty()) {
        possibilityLists.add(new HashSet<AnalyticsComponent>());
      }
      List<Set<AnalyticsComponent>> newPossibilities=new ArrayList<Set<AnalyticsComponent>>();
      List<Set<AnalyticsComponent>> sets=subSolver.getPossibilityLists();
      for (      Set<AnalyticsComponent> possibilityList : possibilityLists) {
        for (        Set<AnalyticsComponent> set : sets) {
          Set<AnalyticsComponent> newSet=new HashSet<AnalyticsComponent>();
          newSet.addAll(possibilityList);
          newSet.addAll(set);
          newPossibilities.add(newSet);
        }
      }
      possibilityLists=newPossibilities;
    }
 else     if (type == OperatorDescr.Type.OR) {
      possibilityLists.addAll(subSolver.getPossibilityLists());
    }
    subSolver=null;
  }
 else   if (subSolver != null && subSolver.subSolver != null) {
    subSolver.end();
  }
}
