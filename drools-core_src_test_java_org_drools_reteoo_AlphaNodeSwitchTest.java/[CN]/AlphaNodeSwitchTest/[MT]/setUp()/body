{
  super.setUp();
  this.workingMemory=new ReteooWorkingMemory(1,new ReteooRuleBase());
  final MockObjectSource source=new MockObjectSource(15);
  final MockObjectSink sink=new MockObjectSink();
  final FieldExtractor extractor=new ClassFieldExtractor(Cheese.class,"type");
  final FieldExtractor extractor2=new ClassFieldExtractor(Cheese.class,"price");
  final FieldValue field1=new MockField("cheddar");
  final FieldValue field2=new MockField("mussarela");
  final Evaluator evaluator=EvaluatorFactory.getEvaluator(Evaluator.OBJECT_TYPE,Evaluator.EQUAL);
  this.constraint1=new LiteralConstraint(field1,extractor,evaluator);
  this.constraint2=new LiteralConstraint(field2,extractor,evaluator);
  this.constraint3=new LiteralConstraint(field2,extractor2,evaluator);
  this.alphaNode1=new AlphaNode(2,this.constraint1,source);
  this.alphaNode1.addObjectSink(sink);
  this.alphaNode2=new AlphaNode(2,this.constraint2,source);
  this.alphaNode2.addObjectSink(sink);
  final Cheese cheddar=new Cheese("mussarela",5);
  this.f0=new DefaultFactHandle(0,cheddar);
}
