{
  super.setUp();
  workingMemory=new WorkingMemoryImpl(new RuleBaseImpl());
  MockObjectSource source=new MockObjectSource(15);
  MockObjectSink sink=new MockObjectSink();
  FieldExtractor extractor=new ClassFieldExtractor(Cheese.class,"type");
  FieldExtractor extractor2=new ClassFieldExtractor(Cheese.class,"price");
  FieldValue field1=new MockField("cheddar");
  FieldValue field2=new MockField("mussarela");
  Evaluator evaluator=EvaluatorFactory.getEvaluator(Evaluator.OBJECT_TYPE,Evaluator.EQUAL);
  constraint1=new LiteralConstraint(field1,extractor,evaluator);
  constraint2=new LiteralConstraint(field2,extractor,evaluator);
  constraint3=new LiteralConstraint(field2,extractor2,evaluator);
  alphaNode1=new AlphaNode(2,constraint1,source);
  alphaNode1.addObjectSink(sink);
  alphaNode2=new AlphaNode(2,constraint2,source);
  alphaNode2.addObjectSink(sink);
  Cheese cheddar=new Cheese("mussarela",5);
  f0=new FactHandleImpl(0);
  workingMemory.putObject(f0,cheddar);
}
