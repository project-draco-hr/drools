{
  if (showUsage) {
    useKeyword=new HashMap<String,Integer>();
    useWhen=new HashMap<String,Integer>();
    useThen=new HashMap<String,Integer>();
  }
  drl=removeComments(drl);
  drl=expandKeywords(drl);
  drl=cleanupExpressions(drl);
  final StringBuffer buf=expandConstructions(drl);
  if (showUsage) {
    displayUsage("keyword",useKeyword);
    displayUsage("when",useWhen);
    displayUsage("then",useThen);
  }
  if (showResult) {
    StringBuffer show=new StringBuffer();
    Formatter fmt=new Formatter(show);
    int offset=0;
    int nlPos;
    int iLine=1;
    while ((nlPos=buf.indexOf(nl,offset)) >= 0) {
      fmt.format("%4d  %s%n",iLine++,buf.substring(offset,nlPos));
      offset=nlPos + 1;
    }
    logger.info("=== DRL xpanded from DSLR ===");
    logger.info(show.toString());
    logger.info("=============================");
  }
  return buf.toString();
}
