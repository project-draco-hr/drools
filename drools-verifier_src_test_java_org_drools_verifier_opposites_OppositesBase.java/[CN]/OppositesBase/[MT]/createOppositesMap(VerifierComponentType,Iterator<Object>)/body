{
  Map<Cause,Set<Cause>> map=new HashMap<Cause,Set<Cause>>();
  while (iter.hasNext()) {
    Object o=(Object)iter.next();
    if (o instanceof Opposites) {
      Opposites r=(Opposites)o;
      if (((VerifierComponent)r.getLeft()).getVerifierComponentType().equals(type)) {
        Cause left=r.getLeft();
        Cause right=r.getRight();
        if (map.containsKey(left)) {
          Set<Cause> set=map.get(left);
          set.add(right);
        }
 else {
          Set<Cause> set=new HashSet<Cause>();
          set.add(right);
          map.put(left,set);
        }
      }
    }
  }
  return map;
}
