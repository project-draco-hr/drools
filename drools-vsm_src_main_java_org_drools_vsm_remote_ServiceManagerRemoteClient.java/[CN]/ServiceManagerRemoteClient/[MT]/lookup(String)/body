{
  String commandId="client.lookup" + getNextId();
  String kresultsId="kresults_" + getSessionId();
  Message msg=new Message(getSessionId(),counter.incrementAndGet(),false,new KnowledgeContextResolveFromContextCommand(new LookupCommand(identifier,commandId),null,null,null,kresultsId));
  BlockingMessageResponseHandler handler=new BlockingMessageResponseHandler();
  try {
    client.addResponseHandler(msg.getResponseId(),handler);
    client.write(msg);
    Object object=handler.getMessage().getPayload();
    if (object == null) {
      throw new RuntimeException("Response was not correctly received");
    }
    String value=(String)((ExecutionResults)object).getValue(commandId);
    String type=String.valueOf(value.charAt(0));
    String instanceId=value.substring(2);
    CommandExecutor executor=null;
switch (Integer.parseInt(type)) {
case 0:
{
        executor=new StatefulKnowledgeSessionRemoteClient(instanceId,this);
        break;
      }
default :
{
    }
}
return executor;
}
 catch (Exception e) {
throw new RuntimeException("Unable to execute message",e);
}
}
