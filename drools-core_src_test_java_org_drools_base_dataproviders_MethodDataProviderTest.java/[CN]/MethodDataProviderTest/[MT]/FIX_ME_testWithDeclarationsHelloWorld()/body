{
  Column column=new Column(0,new ClassObjectType(Cheese.class));
  Extractor ex=new ColumnExtractor(new ClassObjectType(TestVariable.class));
  final Declaration varDec=new Declaration("var",ex,column);
  this.declarations.put("var",varDec);
  column=new Column(1,new ClassObjectType(Cheese.class));
  ex=new ColumnExtractor(new ClassObjectType(String.class));
  final Declaration var2Dec=new Declaration("var2",ex,column);
  this.declarations.put("var2",var2Dec);
  final List args=new ArrayList();
  args.add(new LiteralValue("boo"));
  args.add(new LiteralValue(new Integer(42)));
  args.add(new DeclarationVariable(var2Dec));
  final MethodInvoker invoker=new MethodInvoker("helloWorld",new DeclarationVariable(varDec),(ValueHandler[])args.toArray(new ValueHandler[args.size()]));
  final MethodDataProvider prov=new MethodDataProvider(invoker);
  final TestVariable var=new TestVariable();
  final FactHandle varHandle=this.workingMemory.assertObject(var);
  final FactHandle var2Handle=this.workingMemory.assertObject("hola");
  final Tuple tuple=new ReteTuple(new ReteTuple((DefaultFactHandle)varHandle),(DefaultFactHandle)var2Handle);
  final Iterator it=prov.getResults(tuple,this.workingMemory,this.context);
  final Object result=it.next();
  assertEquals("boo42hola",result);
}
