{
  String str="";
  str+="package org.drools\n";
  str+="query cheeses(String $type) \n";
  str+="    $cheese : Cheese(type == $type) \n";
  str+="end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  KnowledgeSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  conf.setOption(option);
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession(conf,null);
  for (int i=0; i < 10000; i++) {
    ksession.insert(new Cheese(i % 2 == 0 ? "stilton" : "brie"));
  }
  long start=System.currentTimeMillis();
  List<Cheese> cheeses;
  for (int i=0; i < 100; i++) {
    org.drools.runtime.rule.QueryResults queryResults=ksession.getQueryResults("cheeses",new Object[]{"stilton"});
    cheeses=new ArrayList<Cheese>();
    for (    QueryResultsRow row : queryResults) {
      cheeses.add((Cheese)row.get("$cheese"));
    }
    assertEquals(5000,cheeses.size());
  }
  long end=System.currentTimeMillis();
  System.out.println("Query time = " + (end - start));
}
