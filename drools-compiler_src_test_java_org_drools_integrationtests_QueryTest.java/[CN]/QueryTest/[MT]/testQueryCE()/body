{
  String str="";
  str+="package org.drools.test  \n";
  str+="import org.drools.Person \n";
  str+="query peeps( String $name, String $likes, int $age ) \n";
  str+="    $p : Person( $name : name, $likes : likes, $age : age; ) from new Person(\"darth\",\n" + "                                                                            \"stilton\",\n" + "                                                                             100)\n";
  str+="end\n";
  str+="query peeps2( Person $p, String $name, String $likes, int $age ) \n";
  str+="    $p : Person( $name : name, $likes : likes, $age : age; ) from new Person(\"darth\",\n" + "                                                                            \"stilton\",\n" + "                                                                             200)\n";
  str+="end\n";
  str+="rule xxx\n" + "when\n" + "    String( this == \"go1\" )\n"+ "    peeps($name1, \"stilton\", $age1 )\n"+ "then\n"+ "    System.out.println( $name1 + \" : \" + $age1 );\n"+ "end \n";
  str+="rule yyy\n" + "when\n" + "    String( this == \"go2\" )\n"+ "    peeps($name1; $likes : \"stilton\", $age1 : $age )\n"+ "then\n"+ "    System.out.println( $name1 + \" : \" + $age1  );\n"+ "end ";
  str+="rule zzz\n" + "when\n" + "    String( this == \"go3\" )\n"+ "    $n1 : String() from \"darth\"\n "+ "    peeps($n1; $likes : \"stilton\", $age1 : $age )\n"+ "then\n"+ "    System.out.println( $n1 + \" : \" + $age1 );\n"+ "end ";
  str+="rule qqq\n" + "when\n" + "    String( this == \"go4\" )\n"+ "    $n1 : String() from \"darth\"\n "+ "    peeps2($p, $n1; $likes : \"stilton\", $age1 : $age )\n"+ "then\n"+ "    System.out.println( $p +\":\"+ $n1 +  \":\" + $age1);\n"+ "end ";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.insert("go1");
  ksession.fireAllRules();
  System.out.println("");
  ksession.insert("go2");
  ksession.fireAllRules();
  System.out.println("");
  ksession.insert("go3");
  ksession.fireAllRules();
  System.out.println("");
  ksession.insert("go4");
  ksession.fireAllRules();
}
