{
  int type=context.stream.readInt();
  int id=context.stream.readInt();
  long recency=context.stream.readLong();
  int strategyIndex=context.stream.readInt();
  Object object;
  if (strategyIndex >= 0) {
    ObjectMarshallingStrategy strategy=context.resolverStrategyFactory.getStrategy(strategyIndex);
    object=strategy.read(context.stream);
  }
 else {
    object=null;
  }
  WorkingMemoryEntryPoint entryPoint=null;
  if (context.readBoolean()) {
    String entryPointId=context.readUTF();
    if (entryPointId != null && !entryPointId.equals("")) {
      entryPoint=context.wm.getEntryPoints().get(entryPointId);
    }
  }
  InternalFactHandle handle=null;
switch (type) {
case 0:
{
      handle=new DefaultFactHandle(id,object,recency,entryPoint);
      break;
    }
case 1:
{
    handle=new QueryElementFactHandle(object,id,recency);
    break;
  }
default :
{
  throw new IllegalStateException("Unable to marshal FactHandle, as type does not exist:" + type);
}
}
return handle;
}
