{
  final int numInterfaces=(interfaces == null ? 0 : interfaces.length);
  if (numInterfaces == 0) {
    throw new ClassNotFoundException("Cannot generate proxy with no interfaces");
  }
  final Class[] interfaceClasses=new Class[numInterfaces];
  for (int count=0; count < numInterfaces; count++) {
    interfaceClasses[count]=forName(interfaces[count],caller);
  }
  final ClassLoader proxyClassLoader;
  final ClassLoader threadClassLoader=Thread.currentThread().getContextClassLoader();
  if (threadClassLoader != null) {
    proxyClassLoader=threadClassLoader;
  }
 else {
    final ClassLoader classLoader=caller.getClassLoader();
    if (classLoader != null) {
      proxyClassLoader=classLoader;
    }
 else {
      proxyClassLoader=ClassLoader.getSystemClassLoader();
    }
  }
  return Proxy.getProxyClass(proxyClassLoader,interfaceClasses);
}
