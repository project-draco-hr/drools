{
  List<IPattern> definition1=Arrays.asList(new FactPattern("Mock1"));
  column1.setDefinition(definition1);
  List<BRLConditionVariableColumn> childColumns1=Arrays.asList(new BRLConditionVariableColumn("var1","FieldType1"));
  column1.setChildColumns(childColumns1);
  column1.setHeader("header1");
  column1.setHideColumn(false);
  List<IPattern> definition2=Arrays.asList(new FactPattern("Mock2"));
  column2.setDefinition(definition2);
  List<BRLConditionVariableColumn> childColumns2=Arrays.asList(new BRLConditionVariableColumn("var2","FieldType2"));
  column2.setChildColumns(childColumns2);
  column2.setHeader("header2");
  column2.setHideColumn(true);
  List<BaseColumnFieldDiff> diff=column1.diff(column2);
  assertNotNull(diff);
  assertEquals(FIELD_HIDE_COLUMN,diff.get(0).getFieldName());
  assertEquals(false,diff.get(0).getOldValue());
  assertEquals(true,diff.get(0).getValue());
  assertEquals(FIELD_HEADER,diff.get(1).getFieldName());
  assertEquals("header1",diff.get(1).getOldValue());
  assertEquals("header2",diff.get(1).getValue());
  assertEquals(FIELD_DEFINITION,diff.get(2).getFieldName());
  assertEquals(definition1,diff.get(2).getOldValue());
  assertEquals(definition2,diff.get(2).getValue());
  assertEquals(FIELD_FIELD_TYPE,diff.get(3).getFieldName());
  assertEquals("FieldType1",diff.get(3).getOldValue());
  assertEquals("FieldType2",diff.get(3).getValue());
  assertEquals(FIELD_VAR_NAME,diff.get(4).getFieldName());
  assertEquals("var1",diff.get(4).getOldValue());
  assertEquals("var2",diff.get(4).getValue());
}
