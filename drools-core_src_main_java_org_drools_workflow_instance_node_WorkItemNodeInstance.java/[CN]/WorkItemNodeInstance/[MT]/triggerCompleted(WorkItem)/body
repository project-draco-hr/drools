{
  this.workItem=workItem;
  WorkItemNode workItemNode=getWorkItemNode();
  if (workItemNode != null) {
    for (Iterator<Map.Entry<String,String>> iterator=getWorkItemNode().getOutMappings().entrySet().iterator(); iterator.hasNext(); ) {
      Map.Entry<String,String> mapping=iterator.next();
      VariableScopeInstance variableScopeInstance=(VariableScopeInstance)resolveContextInstance(VariableScope.VARIABLE_SCOPE,mapping.getValue());
      if (variableScopeInstance != null) {
        Object value=workItem.getResult(mapping.getKey());
        if (value == null) {
          try {
            value=MVEL.eval(mapping.getKey(),new WorkItemResolverFactory(workItem));
          }
 catch (          Throwable t) {
          }
        }
        variableScopeInstance.setVariable(mapping.getValue(),value);
      }
 else {
        System.err.println("Could not find variable scope for variable " + mapping.getValue());
        System.err.println("when trying to complete Work Item " + workItem.getName());
        System.err.println("Continuing without setting variable.");
      }
    }
  }
  if (isInversionOfControl()) {
    WorkingMemory workingMemory=((ProcessInstance)getProcessInstance()).getWorkingMemory();
    workingMemory.update(workingMemory.getFactHandle(this),this);
  }
 else {
    triggerCompleted();
  }
}
