{
  Work work=workItemNode.getWork();
  workItem=new WorkItemImpl();
  ((InternalWorkItem)workItem).setName(work.getName());
  ((InternalWorkItem)workItem).setProcessInstanceId(getProcessInstance().getId());
  ((InternalWorkItem)workItem).setParameters(new HashMap<String,Object>(work.getParameters()));
  for (Iterator<Map.Entry<String,String>> iterator=workItemNode.getInMappings().entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,String> mapping=iterator.next();
    VariableScopeInstance variableScopeInstance=(VariableScopeInstance)resolveContextInstance(VariableScope.VARIABLE_SCOPE,mapping.getValue());
    if (variableScopeInstance != null) {
      ((InternalWorkItem)workItem).setParameter(mapping.getKey(),variableScopeInstance.getVariable(mapping.getValue()));
    }
 else {
      System.err.println("Could not find variable scope for variable " + mapping.getValue());
      System.err.println("when trying to execute Work Item " + work.getName());
      System.err.println("Continuing without setting parameter.");
    }
  }
  for (  Map.Entry<String,Object> entry : workItem.getParameters().entrySet()) {
    if (entry.getValue() instanceof String) {
      String s=(String)entry.getValue();
      Map<String,String> replacements=new HashMap<String,String>();
      Matcher matcher=PARAMETER_MATCHER.matcher(s);
      while (matcher.find()) {
        String paramName=matcher.group(1);
        if (replacements.get(paramName) == null) {
          VariableScopeInstance variableScopeInstance=(VariableScopeInstance)resolveContextInstance(VariableScope.VARIABLE_SCOPE,paramName);
          if (variableScopeInstance != null) {
            Object variableValue=variableScopeInstance.getVariable(paramName);
            String variableValueString=variableValue == null ? "" : variableValue.toString();
            replacements.put(paramName,variableValueString);
          }
 else {
            System.err.println("Could not find variable scope for variable " + paramName);
            System.err.println("when trying to replace variable in string for Work Item " + work.getName());
            System.err.println("Continuing without setting parameter.");
          }
        }
      }
      for (      Map.Entry<String,String> replacement : replacements.entrySet()) {
        s=s.replace("#{" + replacement.getKey() + "}",replacement.getValue());
      }
      ((InternalWorkItem)workItem).setParameter(entry.getKey(),s);
    }
  }
  return workItem;
}
