{
  ClassBuilderFactory cbf=rcf.getClassBuilderFactory();
  rcf.getTraitFactory().mode=newMode;
switch (newMode) {
case MAP:
    if (!(cbf.getPropertyWrapperBuilder() instanceof TraitMapProxyClassBuilderImpl)) {
      cbf.setPropertyWrapperBuilder(new TraitMapPropertyWrapperClassBuilderImpl());
    }
  if (!(cbf.getTraitProxyBuilder() instanceof TraitMapProxyClassBuilderImpl)) {
    cbf.setTraitProxyBuilder(new TraitMapProxyClassBuilderImpl());
  }
break;
case TRIPLES:
if (!(cbf.getPropertyWrapperBuilder() instanceof TraitTriplePropertyWrapperClassBuilderImpl)) {
cbf.setPropertyWrapperBuilder(new TraitTriplePropertyWrapperClassBuilderImpl());
}
if (!(cbf.getTraitProxyBuilder() instanceof TraitTripleProxyClassBuilderImpl)) {
cbf.setTraitProxyBuilder(new TraitTripleProxyClassBuilderImpl());
}
break;
default :
throw new RuntimeException(" This should not happen : unexpected property wrapping method " + newMode);
}
}
