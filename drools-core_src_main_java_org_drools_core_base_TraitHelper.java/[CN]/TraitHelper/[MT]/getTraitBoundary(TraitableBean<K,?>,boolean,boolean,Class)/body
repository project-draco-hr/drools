{
  boolean refresh=!needsProxy && !hasTrait && Thing.class != trait;
  if (!refresh) {
    return null;
  }
  if (inner._getTraitMap() == null || inner instanceof Thing)   return Collections.EMPTY_LIST;
  if (inner._getTraitMap().isEmpty())   return null;
  Collection<Thing> ts=new ArrayList<Thing>();
  for (  Thing t : inner._getTraitMap().values()) {
    if (t instanceof TraitProxy) {
      if (((TraitProxy)t).hasOtns()) {
        ts.add(t);
      }
    }
  }
  return ts;
}
