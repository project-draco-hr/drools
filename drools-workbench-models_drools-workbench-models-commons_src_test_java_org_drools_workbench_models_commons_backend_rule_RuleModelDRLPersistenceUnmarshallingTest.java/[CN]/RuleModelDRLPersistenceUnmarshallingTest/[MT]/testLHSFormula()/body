{
  String drl="package org.test;\n" + "rule \"MyRule\"\n" + "dialect \"java\"\n"+ "agenda-group \"MyGroup\"\n"+ "salience 900\n"+ "when\n"+ "  $bundle : MyClass( $protocolSequence : protocolSequence )\n"+ "  eval( $protocolSequence != null )\n"+ "  $followupBundle : MyClass( protocolSequence == ( $protocolSequence + 1 ) )\n"+ "then\n"+ "end";
  addModelField("org.test.MyClass","this","org.test.MyClass",DataType.TYPE_THIS);
  addModelField("org.test.MyClass","protocolSequence",Integer.class.getName(),DataType.TYPE_NUMERIC_INTEGER);
  when(dmo.getPackageName()).thenReturn("org.test");
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.emptyList(),dmo);
  assertNotNull(m);
  assertEquals(3,m.lhs.length);
  final IPattern p0=m.lhs[0];
  assertTrue(p0 instanceof FactPattern);
  final FactPattern fp0=(FactPattern)p0;
  assertEquals("$bundle",fp0.getBoundName());
  assertEquals("MyClass",fp0.getFactType());
  final IPattern p1=m.lhs[1];
  assertTrue(p1 instanceof FreeFormLine);
  final FreeFormLine ffl1=(FreeFormLine)p1;
  assertEquals("eval( $protocolSequence != null )",ffl1.getText());
  final IPattern p2=m.lhs[2];
  assertTrue(p2 instanceof FactPattern);
  final FactPattern fp2=(FactPattern)p2;
  assertEquals("$followupBundle",fp2.getBoundName());
  assertEquals("MyClass",fp2.getFactType());
  assertEquals(1,fp2.getNumberOfConstraints());
  assertTrue(fp2.getConstraint(0) instanceof SingleFieldConstraint);
  final SingleFieldConstraint sfc1=(SingleFieldConstraint)fp2.getConstraint(0);
  assertEquals("MyClass",sfc1.getFactType());
  assertEquals("protocolSequence",sfc1.getFieldName());
  assertEquals(DataType.TYPE_NUMERIC_INTEGER,sfc1.getFieldType());
  assertEquals("==",sfc1.getOperator());
  assertEquals("$protocolSequence + 1",sfc1.getValue());
  assertEquals(BaseSingleFieldConstraint.TYPE_RET_VALUE,sfc1.getConstraintValueType());
  assertEqualsIgnoreWhitespace(drl,RuleModelDRLPersistenceImpl.getInstance().marshal(m));
}
