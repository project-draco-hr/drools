{
  String drl="import java.lang.Number;\n" + "import org.mortgages.Applicant;\n" + "rule \"rule1\"\n"+ "when\n"+ "  total : Number( intValue > 0 ) from accumulate ( Applicant( age < 30 ), count() )\n"+ "then\n"+ "end";
  addModelField("java.lang.Number","intValue","java.lang.Integer",DataType.TYPE_NUMERIC);
  addModelField("org.mortgages.Applicant","age","java.lang.Integer",DataType.TYPE_NUMERIC);
  RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,dmo);
  assertNotNull(m);
  assertTrue(m.lhs[0] instanceof FromAccumulateCompositeFactPattern);
  FromAccumulateCompositeFactPattern pattern=(FromAccumulateCompositeFactPattern)m.lhs[0];
  assertNotNull(pattern.getFactPattern());
  FactPattern factPattern=pattern.getFactPattern();
  assertEquals("total",factPattern.getBoundName());
  assertNotNull(factPattern.getConstraintList());
  assertEquals(1,factPattern.getConstraintList().getNumberOfConstraints());
  FieldConstraint constraint=factPattern.getConstraintList().getConstraint(0);
  assertTrue(constraint instanceof SingleFieldConstraint);
  SingleFieldConstraint fieldConstraint=(SingleFieldConstraint)constraint;
  assertEquals("Number",fieldConstraint.getFactType());
  assertEquals("intValue",fieldConstraint.getFieldName());
  assertEquals("Integer",fieldConstraint.getFieldType());
  assertEquals(">",fieldConstraint.getOperator());
  assertEquals("0",fieldConstraint.getValue());
}
