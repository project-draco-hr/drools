{
  String drl="package org.mortgages;\n" + "rule \"test\"\n" + " dialect \"mvel\"\n"+ " when\n"+ "  Calculator( s : summer)\n"+ "  Applicant( $age : age)\n"+ " then\n"+ "  s.sum( $age, $age );\n"+ "end";
  addModelField("Calculator","summer","Summer","Summer");
  addModelField("Applicant","age","java.lang.Integer",DataType.TYPE_NUMERIC_INTEGER);
  HashMap<String,List<MethodInfo>> map=new HashMap<String,List<MethodInfo>>();
  ArrayList<MethodInfo> methodInfos=new ArrayList<MethodInfo>();
  ArrayList<String> params=new ArrayList<String>();
  params.add("Integer");
  params.add("Integer");
  methodInfos.add(new MethodInfo("sum",params,"java.lang.Integer",null,"Summer"));
  map.put("Calculator",methodInfos);
  when(dmo.getProjectMethodInformation()).thenReturn(map);
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,new ArrayList<String>(),dmo);
  assertNotNull(m);
  assertEquals(2,m.lhs.length);
  assertEquals(1,m.rhs.length);
  ActionCallMethod actionCallMethod=(ActionCallMethod)m.rhs[0];
  assertEquals("sum",actionCallMethod.getMethodName());
  assertEquals("s",actionCallMethod.getVariable());
  assertEquals(2,actionCallMethod.getFieldValues().length);
  assertEquals("sum",actionCallMethod.getFieldValue(0).getField());
  assertEquals("$age",actionCallMethod.getFieldValue(0).getValue());
  assertEquals(2,actionCallMethod.getFieldValue(0).getNature());
  assertEquals("java.lang.Integer",actionCallMethod.getFieldValue(0).getType());
  assertEquals("sum",actionCallMethod.getFieldValue(1).getField());
  assertEquals("$age",actionCallMethod.getFieldValue(1).getValue());
  assertEquals(2,actionCallMethod.getFieldValue(1).getNature());
  assertEquals("java.lang.Integer",actionCallMethod.getFieldValue(1).getType());
  assertEqualsIgnoreWhitespace(drl,RuleModelDRLPersistenceImpl.getInstance().marshal(m));
}
