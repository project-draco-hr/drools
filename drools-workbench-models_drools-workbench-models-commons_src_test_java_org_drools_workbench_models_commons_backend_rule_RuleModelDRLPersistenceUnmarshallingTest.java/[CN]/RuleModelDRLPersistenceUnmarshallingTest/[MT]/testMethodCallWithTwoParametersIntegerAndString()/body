{
  String drl="package org.mortgages;\n" + "rule \"test\"\n" + " dialect \"mvel\"\n"+ " when\n"+ "  $t : TestClass()\n"+ " then\n"+ "  $t.testFunction( 123, \"hello\" );\n"+ "end";
  final HashMap<String,List<MethodInfo>> map=new HashMap<>();
  final ArrayList<MethodInfo> methodInfos=new ArrayList<>();
  final ArrayList<String> params=new ArrayList<>();
  params.add("Integer");
  params.add("String");
  methodInfos.add(new MethodInfo("testFunction",params,"java.lang.Void",null,"TestClass"));
  map.put("TestClass",methodInfos);
  when(dmo.getProjectMethodInformation()).thenReturn(map);
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.emptyList(),dmo);
  assertNotNull(m);
  assertEquals(1,m.lhs.length);
  assertEquals(1,m.rhs.length);
  ActionCallMethod actionCallMethod=(ActionCallMethod)m.rhs[0];
  assertEquals("testFunction",actionCallMethod.getMethodName());
  assertEquals("$t",actionCallMethod.getVariable());
  assertEquals(2,actionCallMethod.getFieldValues().length);
  assertEquals("testFunction",actionCallMethod.getFieldValue(0).getField());
  assertEquals("123",actionCallMethod.getFieldValue(0).getValue());
  assertEquals(FieldNatureType.TYPE_LITERAL,actionCallMethod.getFieldValue(0).getNature());
  assertEquals("Integer",actionCallMethod.getFieldValue(0).getType());
  assertEquals("testFunction",actionCallMethod.getFieldValue(1).getField());
  assertEquals("hello",actionCallMethod.getFieldValue(1).getValue());
  assertEquals(FieldNatureType.TYPE_LITERAL,actionCallMethod.getFieldValue(1).getNature());
  assertEquals("String",actionCallMethod.getFieldValue(1).getType());
  assertEqualsIgnoreWhitespace(drl,RuleModelDRLPersistenceImpl.getInstance().marshal(m));
}
