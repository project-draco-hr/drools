{
  String drl="import java.lang.Number;\n" + "import org.drools.workbench.models.commons.backend.rule.Counter;\n" + "rule \"rule1\"\n"+ "when\n"+ "cc : Counter()\n"+ "Number() from cc.number\n"+ "then\n"+ "end";
  addModelField("org.drools.workbench.models.commons.backend.rule.Counter","number","java.lang.Number",DataType.TYPE_NUMERIC);
  RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.EMPTY_LIST,dmo);
  assertNotNull(m);
  assertEquals("rule1",m.name);
  assertEquals(2,m.lhs.length);
  IPattern p0=m.lhs[0];
  assertTrue(p0 instanceof FactPattern);
  FactPattern fp0=(FactPattern)p0;
  assertEquals("Counter",fp0.getFactType());
  assertEquals("cc",fp0.getBoundName());
  assertEquals(0,fp0.getNumberOfConstraints());
  IPattern p1=m.lhs[1];
  assertTrue(p1 instanceof FromCompositeFactPattern);
  FromCompositeFactPattern fcfp1=(FromCompositeFactPattern)p1;
  FactPattern fp1=fcfp1.getFactPattern();
  ExpressionFormLine efl1=fcfp1.getExpression();
  assertNotNull(fp1);
  assertNotNull(efl1);
  assertEquals("Number",fp1.getFactType());
  assertEquals(0,fp1.getNumberOfConstraints());
  assertEquals(2,efl1.getParts().size());
  assertTrue(efl1.getParts().get(0) instanceof ExpressionVariable);
  assertTrue(efl1.getParts().get(1) instanceof ExpressionField);
  ExpressionVariable eflv1=(ExpressionVariable)efl1.getParts().get(0);
  assertEquals("cc",eflv1.getName());
  assertEquals("Counter",eflv1.getClassType());
  assertEquals(DataType.TYPE_NUMERIC,eflv1.getGenericType());
  ExpressionField eflf1=(ExpressionField)efl1.getParts().get(1);
  assertEquals("number",eflf1.getName());
  assertEquals("java.lang.Number",eflf1.getClassType());
  assertEquals(DataType.TYPE_NUMERIC,eflf1.getGenericType());
}
