{
  String drl="" + "rule \" broken \"\n" + "dialect \"mvel\"\n"+ "  when\n"+ "    Customer( contact != null , contact.tel1 > \"15\" )\n"+ "  then\n"+ "end";
  addModelField("Customer","contact","Contact","Contact");
  addModelField("Contact","tel1","String","String");
  RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.EMPTY_LIST,dmo);
  FactPattern pattern=(FactPattern)m.lhs[0];
  SingleFieldConstraint constraint=(SingleFieldConstraint)pattern.getFieldConstraints()[0];
  assertEquals("Customer",constraint.getFactType());
  assertEquals("contact",constraint.getFieldName());
  assertEquals("Contact",constraint.getFieldType());
  SingleFieldConstraintEBLeftSide constraint2=(SingleFieldConstraintEBLeftSide)pattern.getFieldConstraints()[1];
  assertEquals("tel1",constraint2.getFieldName());
  assertEquals("String",constraint2.getFieldType());
  assertEquals("15",constraint2.getValue());
  assertEquals(">",constraint2.getOperator());
  assertEquals(3,constraint2.getExpressionLeftSide().getParts().size());
  ExpressionPart part1=constraint2.getExpressionLeftSide().getParts().get(0);
  assertEquals("Customer",part1.getName());
  assertEquals("Customer",part1.getClassType());
  assertEquals("Customer",part1.getGenericType());
  ExpressionPart part2=constraint2.getExpressionLeftSide().getParts().get(1);
  assertEquals("contact",part2.getName());
  assertEquals("Contact",part2.getClassType());
  assertEquals("Contact",part2.getGenericType());
  ExpressionPart part3=constraint2.getExpressionLeftSide().getParts().get(2);
  assertEquals("tel1",part3.getName());
  assertEquals("String",part3.getClassType());
  assertEquals("String",part3.getGenericType());
}
