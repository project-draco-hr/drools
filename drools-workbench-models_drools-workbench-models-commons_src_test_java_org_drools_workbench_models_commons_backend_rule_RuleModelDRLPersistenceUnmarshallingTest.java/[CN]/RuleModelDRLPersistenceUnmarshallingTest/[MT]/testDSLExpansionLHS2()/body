{
  String drl="rule \"rule1\"\n" + "dialect \"mvel\"\n" + "when\n"+ "There is an Applicant\n"+ "- credit rating is AA\n"+ "then\n"+ "end\n";
  final String dslDefinition1="There is an Applicant";
  final String dslFile1="[when]" + dslDefinition1 + "=Applicant( )";
  final String dslDefinition2="- credit rating is {rating:ENUM:Applicant.creditRating}";
  final String dslFile2="[when]" + dslDefinition2 + "=creditRating == {rating}";
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshalUsingDSL(drl,new ArrayList<String>(),dmo,new String[]{dslFile1,dslFile2});
  assertNotNull(m);
  assertEquals(2,m.lhs.length);
  assertTrue(m.lhs[0] instanceof DSLSentence);
  assertTrue(m.lhs[1] instanceof DSLSentence);
  DSLSentence dslSentence1=(DSLSentence)m.lhs[0];
  assertEquals(dslDefinition1,dslSentence1.getDefinition());
  assertEquals(0,dslSentence1.getValues().size());
  DSLSentence dslSentence2=(DSLSentence)m.lhs[1];
  assertEquals(dslDefinition2,dslSentence2.getDefinition());
  assertEquals(1,dslSentence2.getValues().size());
  assertTrue(dslSentence2.getValues().get(0) instanceof DSLComplexVariableValue);
  DSLComplexVariableValue dslComplexVariableValue=(DSLComplexVariableValue)dslSentence2.getValues().get(0);
  assertEquals("AA",dslComplexVariableValue.getValue());
  assertEquals("ENUM:Applicant.creditRating",dslComplexVariableValue.getId());
  assertEqualsIgnoreWhitespace(drl,RuleModelDRLPersistenceImpl.getInstance().marshal(m));
}
