{
  String drl="package org.mortgages;\n" + "import java.lang.Number;\n" + "import java.lang.String;\n"+ "rule \"rule1\"\n"+ "dialect \"mvel\"\n"+ "when\n"+ "  s : String()\n"+ "then\n"+ "  s.indexOf( 0 );\n"+ "end\n";
  Map<String,List<MethodInfo>> methodInformation=new HashMap<String,List<MethodInfo>>();
  List<MethodInfo> mapMethodInformation=new ArrayList<MethodInfo>();
  mapMethodInformation.add(new MethodInfo("indexOf",Arrays.asList(new String[]{DataType.TYPE_STRING}),"int",null,DataType.TYPE_STRING));
  mapMethodInformation.add(new MethodInfo("indexOf",Arrays.asList(new String[]{DataType.TYPE_NUMERIC_INTEGER}),"int",null,DataType.TYPE_STRING));
  methodInformation.put("java.lang.String",mapMethodInformation);
  when(dmo.getProjectMethodInformation()).thenReturn(methodInformation);
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.EMPTY_LIST,dmo);
  assertNotNull(m);
  assertEquals(1,m.rhs.length);
  assertTrue(m.rhs[0] instanceof ActionCallMethod);
  ActionCallMethod actionCallMethod1=(ActionCallMethod)m.rhs[0];
  assertEquals(1,actionCallMethod1.getState());
  assertEquals("indexOf",actionCallMethod1.getMethodName());
  assertEquals("s",actionCallMethod1.getVariable());
  assertEquals(1,actionCallMethod1.getFieldValues().length);
  assertEquals("indexOf",actionCallMethod1.getFieldValues()[0].getField());
  assertEquals("0",actionCallMethod1.getFieldValues()[0].getValue());
  assertEquals(FieldNatureType.TYPE_LITERAL,actionCallMethod1.getFieldValues()[0].getNature());
  assertEquals(DataType.TYPE_NUMERIC_INTEGER,actionCallMethod1.getFieldValues()[0].getType());
  assertEqualsIgnoreWhitespace(drl,RuleModelDRLPersistenceImpl.getInstance().marshal(m));
}
