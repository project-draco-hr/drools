{
  String drl="package org.sample.resourceassignment;\n" + "rule \"r1\"\n" + "dialect \"mvel\"\n"+ "when\n"+ "$trans : Transactions()\n"+ "$transactions : java.util.List( eval( size > 0 ) ) from collect ( Transaction() from $trans.getRecCategorization().get(\"APES-01\") )\n"+ "then\n"+ "end";
  addModelField("Transactions","recCategorization","java.util.Map",DataType.TYPE_COLLECTION);
  addMethodInformation("Transactions","getRecCategorization()",Collections.emptyList(),"java.util.Map",null,DataType.TYPE_COLLECTION);
  addMethodInformation("java.util.Map","get",new ArrayList<String>(){
{
      add("p0");
    }
  }
,"java.lang.String",null,DataType.TYPE_STRING);
  final RuleModel m=RuleModelDRLPersistenceImpl.getInstance().unmarshal(drl,Collections.emptyList(),dmo);
  assertNotNull(m);
  assertEquals(2,m.lhs.length);
  IPattern p0=m.lhs[0];
  assertTrue(p0 instanceof FactPattern);
  FactPattern fp0=(FactPattern)p0;
  assertEquals("Transactions",fp0.getFactType());
  assertEquals("$trans",fp0.getBoundName());
  assertEquals(0,fp0.getNumberOfConstraints());
  IPattern p1=m.lhs[1];
  assertTrue(p1 instanceof FromCollectCompositeFactPattern);
  FromCollectCompositeFactPattern fp1=(FromCollectCompositeFactPattern)p1;
  assertEquals("java.util.List",fp1.getFactPattern().getFactType());
  assertEquals("$transactions",fp1.getFactPattern().getBoundName());
  assertEquals(1,fp1.getFactPattern().getNumberOfConstraints());
  assertTrue(fp1.getFactPattern().getConstraint(0) instanceof SingleFieldConstraint);
  SingleFieldConstraint fp1sfc=(SingleFieldConstraint)fp1.getFactPattern().getConstraint(0);
  assertEquals("size > 0",fp1sfc.getValue());
  assertEquals(BaseSingleFieldConstraint.TYPE_PREDICATE,fp1sfc.getConstraintValueType());
  assertTrue(fp1.getRightPattern() instanceof FromCompositeFactPattern);
  FromCompositeFactPattern fp2=(FromCompositeFactPattern)fp1.getRightPattern();
  assertNotNull(fp2.getFactPattern());
  FactPattern fp3=fp2.getFactPattern();
  assertEquals("Transaction",fp3.getFactType());
  assertEquals(0,fp3.getNumberOfConstraints());
  assertNotNull(fp2.getExpression());
  ExpressionFormLine efl=fp2.getExpression();
  assertEquals(3,efl.getParts().size());
  assertTrue(efl.getParts().get(0) instanceof ExpressionVariable);
  ExpressionVariable ev=(ExpressionVariable)efl.getParts().get(0);
  assertEquals("$trans",ev.getName());
  assertEquals("Transactions",ev.getClassType());
  assertTrue(efl.getParts().get(1) instanceof ExpressionMethod);
  ExpressionMethod em=(ExpressionMethod)efl.getParts().get(1);
  assertEquals("getRecCategorization()",em.getName());
  assertEquals("java.util.Map",em.getClassType());
  assertEquals(DataType.TYPE_COLLECTION,em.getGenericType());
  assertTrue(efl.getParts().get(2) instanceof ExpressionText);
  ExpressionText et=(ExpressionText)efl.getParts().get(2);
  assertEquals("get(\"APES-01\")",et.getName());
  assertEquals("java.lang.String",et.getClassType());
  assertEquals(DataType.TYPE_STRING,et.getGenericType());
  assertEquals(0,m.rhs.length);
}
