{
  Object action=getActionNode().getAction();
  if (action instanceof DroolsConsequenceAction) {
    String actionString=((DroolsConsequenceAction)action).getConsequence();
    ExpressionCompiler compiler=new ExpressionCompiler(actionString);
    ParserContext parserContext=new ParserContext();
    Serializable expression=compiler.compile(parserContext);
    Map globalDefs=getProcessInstance().getRuleFlowProcess().getGlobals();
    Map globals=new HashMap();
    if (globalDefs != null) {
      for (Iterator iterator=globalDefs.entrySet().iterator(); iterator.hasNext(); ) {
        Map.Entry entry=(Map.Entry)iterator.next();
        try {
          globals.put(entry.getKey(),Class.forName((String)entry.getValue()));
        }
 catch (        ClassNotFoundException exc) {
          throw new IllegalArgumentException("Could not find type " + entry.getValue() + " of global "+ entry.getKey());
        }
      }
    }
    DroolsMVELFactory factory=new DroolsMVELFactory(Collections.EMPTY_MAP,null,globals);
    factory.setContext(null,null,null,getProcessInstance().getWorkingMemory(),null);
    MVEL.executeExpression(expression,null,factory);
  }
 else {
    throw new RuntimeException("Unknown action: " + action);
  }
  triggerCompleted();
}
