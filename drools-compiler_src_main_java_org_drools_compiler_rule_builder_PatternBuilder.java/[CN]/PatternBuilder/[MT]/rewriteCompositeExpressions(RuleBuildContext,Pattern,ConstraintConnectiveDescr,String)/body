{
  String[] subExprs=expr.split("\\Q" + d.getConnective().getConnective() + "\\E");
  if (subExprs.length != d.getDescrs().size()) {
    return expr;
  }
  int i=0;
  StringBuilder sb=new StringBuilder();
  for (  BaseDescr subDescr : d.getDescrs()) {
    if (i > 0) {
      sb.append(" ").append(d.getConnective().getConnective()).append(" ");
    }
    String normalizedExpr;
    if (subDescr instanceof RelationalExprDescr && isSimpleExpr((RelationalExprDescr)subDescr)) {
      normalizedExpr=normalizeExpression(context,pattern,(RelationalExprDescr)subDescr,subExprs[i++]);
    }
 else     if (subDescr instanceof ConstraintConnectiveDescr) {
      normalizedExpr="(" + rewriteCompositeExpressions(context,pattern,(ConstraintConnectiveDescr)subDescr,subExprs[i++]) + ")";
    }
 else {
      normalizedExpr=subExprs[i++];
    }
    sb.append(normalizedExpr);
  }
  return sb.toString();
}
