{
  if (context.getDeclarationResolver().isDuplicated(context.getRule(),fieldBindingDescr.getVariable(),null)) {
    processDuplicateBindings(fieldBindingDescr.isUnification(),patternDescr,pattern,fieldBindingDescr,fieldBindingDescr.getBindingField(),fieldBindingDescr.getVariable(),context);
    if (fieldBindingDescr.isUnification()) {
      return;
    }
  }
  Declaration declr=pattern.addDeclaration(fieldBindingDescr.getVariable());
  final InternalReadAccessor extractor=getFieldReadAccessor(context,fieldBindingDescr,pattern,fieldBindingDescr.getBindingField(),declr,true);
  declr.setReadAccessor(extractor);
  if (extractor instanceof ClassFieldReader) {
    ObjectType patternType=pattern.getObjectType();
    if (patternType instanceof ClassObjectType) {
      Class<?> patternClass=((ClassObjectType)patternType).getClassType();
      TypeDeclaration typeDeclaration=context.getKnowledgeBuilder().getTypeDeclaration(patternClass);
      String fieldName=((ClassFieldReader)extractor).getFieldName();
      if (typeDeclaration.getSettableProperties().contains(fieldName)) {
        List<String> watchlist=pattern.getListenedProperties();
        if (watchlist == null) {
          watchlist=new ArrayList<String>();
          pattern.setListenedProperties(watchlist);
        }
        watchlist.add(fieldName);
      }
    }
  }
}
