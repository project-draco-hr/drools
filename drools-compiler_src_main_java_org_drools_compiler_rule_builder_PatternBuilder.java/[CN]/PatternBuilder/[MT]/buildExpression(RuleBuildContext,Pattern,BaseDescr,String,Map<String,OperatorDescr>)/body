{
  if ("_.neg".equals(expr)) {
    pattern.setHasNegativeConstraint(true);
    return new NegConstraint();
  }
 else   if ("!_.neg".equals(expr)) {
    pattern.setHasNegativeConstraint(true);
    return new NegConstraint(false);
  }
  RelationalExprDescr relDescr=d instanceof RelationalExprDescr ? (RelationalExprDescr)d : null;
  boolean simple=isSimpleExpr(relDescr);
  if (simple && !ClassObjectType.Map_ObjectType.isAssignableFrom(pattern.getObjectType()) && !ClassObjectType.Match_ObjectType.isAssignableFrom(pattern.getObjectType())) {
    String normalizedExpr=normalizeExpression(context,pattern,relDescr,expr);
    return buildRelationalExpression(context,pattern,relDescr,normalizedExpr,aliases);
  }
  return createAndBuildPredicate(context,pattern,d,rewriteOrExpressions(context,pattern,d,expr),aliases);
}
