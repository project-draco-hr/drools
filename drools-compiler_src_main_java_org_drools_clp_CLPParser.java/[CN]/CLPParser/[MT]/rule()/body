{
  RuleDescr rule=null;
  Token loc=null;
  Token ruleName=null;
  ColumnDescr column=null;
  rule=null;
  AndDescr lhs=null;
  ColumnDescr colum=null;
  try {
{
      loc=(Token)input.LT(1);
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_rule64);
      match(input,28,FOLLOW_28_in_rule66);
      ruleName=(Token)input.LT(1);
      match(input,ID,FOLLOW_ID_in_rule74);
      debug("start rule: " + ruleName.getText());
      rule=new RuleDescr(ruleName.getText(),null);
      rule.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      rule.setStartCharacter(((CommonToken)loc).getStartIndex());
      lhs=new AndDescr();
      rule.setLhs(lhs);
      lhs.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      lhs.setStartCharacter(((CommonToken)loc).getStartIndex());
      loop2:       do {
        int alt2=3;
        int LA2_0=input.LA(1);
        if ((LA2_0 == VAR)) {
          alt2=1;
        }
 else         if ((LA2_0 == LEFT_PAREN)) {
          alt2=2;
        }
switch (alt2) {
case 1:
{
            pushFollow(FOLLOW_bound_pattern_in_rule89);
            column=bound_pattern();
            _fsp--;
            lhs.addDescr(column);
          }
        break;
case 2:
{
        pushFollow(FOLLOW_pattern_in_rule105);
        column=pattern();
        _fsp--;
        lhs.addDescr(column);
      }
    break;
default :
  break loop2;
}
}
 while (true);
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_rule131);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return rule;
}
