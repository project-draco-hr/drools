{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA168_34=input.LA(1);
  int index168_34=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_34);
if (s >= 0) return s;
break;
case 1:
int LA168_35=input.LA(1);
int index168_35=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_35);
if (s >= 0) return s;
break;
case 2:
int LA168_36=input.LA(1);
int index168_36=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_36);
if (s >= 0) return s;
break;
case 3:
int LA168_37=input.LA(1);
int index168_37=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_37);
if (s >= 0) return s;
break;
case 4:
int LA168_38=input.LA(1);
int index168_38=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_38);
if (s >= 0) return s;
break;
case 5:
int LA168_39=input.LA(1);
int index168_39=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_39);
if (s >= 0) return s;
break;
case 6:
int LA168_40=input.LA(1);
int index168_40=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_40);
if (s >= 0) return s;
break;
case 7:
int LA168_41=input.LA(1);
int index168_41=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_41);
if (s >= 0) return s;
break;
case 8:
int LA168_42=input.LA(1);
int index168_42=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_42);
if (s >= 0) return s;
break;
case 9:
int LA168_43=input.LA(1);
int index168_43=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_43);
if (s >= 0) return s;
break;
case 10:
int LA168_44=input.LA(1);
int index168_44=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_44);
if (s >= 0) return s;
break;
case 11:
int LA168_45=input.LA(1);
int index168_45=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_45);
if (s >= 0) return s;
break;
case 12:
int LA168_46=input.LA(1);
int index168_46=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_46);
if (s >= 0) return s;
break;
case 13:
int LA168_47=input.LA(1);
int index168_47=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_47);
if (s >= 0) return s;
break;
case 14:
int LA168_48=input.LA(1);
int index168_48=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_48);
if (s >= 0) return s;
break;
case 15:
int LA168_49=input.LA(1);
int index168_49=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_49);
if (s >= 0) return s;
break;
case 16:
int LA168_50=input.LA(1);
int index168_50=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_50);
if (s >= 0) return s;
break;
case 17:
int LA168_51=input.LA(1);
int index168_51=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_51);
if (s >= 0) return s;
break;
case 18:
int LA168_52=input.LA(1);
int index168_52=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_52);
if (s >= 0) return s;
break;
case 19:
int LA168_53=input.LA(1);
int index168_53=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_53);
if (s >= 0) return s;
break;
case 20:
int LA168_54=input.LA(1);
int index168_54=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_54);
if (s >= 0) return s;
break;
case 21:
int LA168_55=input.LA(1);
int index168_55=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_55);
if (s >= 0) return s;
break;
case 22:
int LA168_56=input.LA(1);
int index168_56=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_56);
if (s >= 0) return s;
break;
case 23:
int LA168_58=input.LA(1);
int index168_58=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_58);
if (s >= 0) return s;
break;
case 24:
int LA168_59=input.LA(1);
int index168_59=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_59);
if (s >= 0) return s;
break;
case 25:
int LA168_60=input.LA(1);
int index168_60=input.index();
input.rewind();
s=-1;
if ((synpred259_Java())) {
s=2;
}
 else if ((true)) {
s=4;
}
input.seek(index168_60);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),168,_s,input);
error(nvae);
throw nvae;
}
