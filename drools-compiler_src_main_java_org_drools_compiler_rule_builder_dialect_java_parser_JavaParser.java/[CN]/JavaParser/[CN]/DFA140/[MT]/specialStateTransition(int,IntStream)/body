{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA140_1=input.LA(1);
  int index140_1=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_1);
if (s >= 0) return s;
break;
case 1:
int LA140_2=input.LA(1);
int index140_2=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_2);
if (s >= 0) return s;
break;
case 2:
int LA140_3=input.LA(1);
int index140_3=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_3);
if (s >= 0) return s;
break;
case 3:
int LA140_4=input.LA(1);
int index140_4=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_4);
if (s >= 0) return s;
break;
case 4:
int LA140_5=input.LA(1);
int index140_5=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_5);
if (s >= 0) return s;
break;
case 5:
int LA140_6=input.LA(1);
int index140_6=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_6);
if (s >= 0) return s;
break;
case 6:
int LA140_7=input.LA(1);
int index140_7=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_7);
if (s >= 0) return s;
break;
case 7:
int LA140_8=input.LA(1);
int index140_8=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_8);
if (s >= 0) return s;
break;
case 8:
int LA140_9=input.LA(1);
int index140_9=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_9);
if (s >= 0) return s;
break;
case 9:
int LA140_10=input.LA(1);
int index140_10=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_10);
if (s >= 0) return s;
break;
case 10:
int LA140_11=input.LA(1);
int index140_11=input.index();
input.rewind();
s=-1;
if ((synpred201_Java())) {
s=42;
}
 else if ((true)) {
s=12;
}
input.seek(index140_11);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),140,_s,input);
error(nvae);
throw nvae;
}
