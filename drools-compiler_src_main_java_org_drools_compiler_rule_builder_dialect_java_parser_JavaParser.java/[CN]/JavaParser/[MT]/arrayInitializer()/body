{
  int arrayInitializer_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,45)) {
      return;
    }
{
      match(input,116,FOLLOW_116_in_arrayInitializer1534);
      if (state.failed)       return;
      int alt63=2;
      int LA63_0=input.LA(1);
      if (((LA63_0 >= CharacterLiteral && LA63_0 <= DecimalLiteral) || LA63_0 == FloatingPointLiteral || (LA63_0 >= HexLiteral && LA63_0 <= Identifier) || (LA63_0 >= OctalLiteral && LA63_0 <= StringLiteral) || LA63_0 == 24 || LA63_0 == 31 || (LA63_0 >= 35 && LA63_0 <= 36) || (LA63_0 >= 39 && LA63_0 <= 40) || LA63_0 == 48 || LA63_0 == 60 || LA63_0 == 62 || (LA63_0 >= 65 && LA63_0 <= 66) || LA63_0 == 72 || (LA63_0 >= 74 && LA63_0 <= 75) || LA63_0 == 77 || LA63_0 == 80 || LA63_0 == 87 || LA63_0 == 89 || (LA63_0 >= 92 && LA63_0 <= 93) || LA63_0 == 100 || LA63_0 == 103 || LA63_0 == 106 || LA63_0 == 110 || LA63_0 == 113 || LA63_0 == 116 || LA63_0 == 121)) {
        alt63=1;
      }
switch (alt63) {
case 1:
{
          pushFollow(FOLLOW_variableInitializer_in_arrayInitializer1537);
          variableInitializer();
          state._fsp--;
          if (state.failed)           return;
          loop61:           while (true) {
            int alt61=2;
            int LA61_0=input.LA(1);
            if ((LA61_0 == 38)) {
              int LA61_1=input.LA(2);
              if (((LA61_1 >= CharacterLiteral && LA61_1 <= DecimalLiteral) || LA61_1 == FloatingPointLiteral || (LA61_1 >= HexLiteral && LA61_1 <= Identifier) || (LA61_1 >= OctalLiteral && LA61_1 <= StringLiteral) || LA61_1 == 24 || LA61_1 == 31 || (LA61_1 >= 35 && LA61_1 <= 36) || (LA61_1 >= 39 && LA61_1 <= 40) || LA61_1 == 48 || LA61_1 == 60 || LA61_1 == 62 || (LA61_1 >= 65 && LA61_1 <= 66) || LA61_1 == 72 || (LA61_1 >= 74 && LA61_1 <= 75) || LA61_1 == 77 || LA61_1 == 80 || LA61_1 == 87 || LA61_1 == 89 || (LA61_1 >= 92 && LA61_1 <= 93) || LA61_1 == 100 || LA61_1 == 103 || LA61_1 == 106 || LA61_1 == 110 || LA61_1 == 113 || LA61_1 == 116 || LA61_1 == 121)) {
                alt61=1;
              }
            }
switch (alt61) {
case 1:
{
                match(input,38,FOLLOW_38_in_arrayInitializer1540);
                if (state.failed)                 return;
                pushFollow(FOLLOW_variableInitializer_in_arrayInitializer1542);
                variableInitializer();
                state._fsp--;
                if (state.failed)                 return;
              }
            break;
default :
          break loop61;
      }
    }
    int alt62=2;
    int LA62_0=input.LA(1);
    if ((LA62_0 == 38)) {
      alt62=1;
    }
switch (alt62) {
case 1:
{
        match(input,38,FOLLOW_38_in_arrayInitializer1547);
        if (state.failed)         return;
      }
    break;
}
}
break;
}
match(input,120,FOLLOW_120_in_arrayInitializer1554);
if (state.failed) return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,45,arrayInitializer_StartIndex);
}
}
}
