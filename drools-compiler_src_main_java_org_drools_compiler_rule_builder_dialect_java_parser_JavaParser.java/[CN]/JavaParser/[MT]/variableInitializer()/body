{
  int variableInitializer_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,44)) {
      return;
    }
    int alt60=2;
    int LA60_0=input.LA(1);
    if ((LA60_0 == 115)) {
      alt60=1;
    }
 else     if (((LA60_0 >= CharacterLiteral && LA60_0 <= DecimalLiteral) || LA60_0 == FloatingPointLiteral || (LA60_0 >= HexLiteral && LA60_0 <= Identifier) || (LA60_0 >= OctalLiteral && LA60_0 <= StringLiteral) || LA60_0 == 24 || LA60_0 == 31 || (LA60_0 >= 35 && LA60_0 <= 36) || (LA60_0 >= 39 && LA60_0 <= 40) || LA60_0 == 48 || LA60_0 == 60 || LA60_0 == 62 || (LA60_0 >= 65 && LA60_0 <= 66) || LA60_0 == 71 || (LA60_0 >= 73 && LA60_0 <= 74) || LA60_0 == 76 || LA60_0 == 79 || LA60_0 == 86 || LA60_0 == 88 || (LA60_0 >= 91 && LA60_0 <= 92) || LA60_0 == 99 || LA60_0 == 102 || LA60_0 == 105 || LA60_0 == 109 || LA60_0 == 112 || LA60_0 == 120)) {
      alt60=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",60,0,input);
      throw nvae;
    }
switch (alt60) {
case 1:
{
        pushFollow(FOLLOW_arrayInitializer_in_variableInitializer1507);
        arrayInitializer();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_expression_in_variableInitializer1517);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,44,variableInitializer_StartIndex);
}
}
}
