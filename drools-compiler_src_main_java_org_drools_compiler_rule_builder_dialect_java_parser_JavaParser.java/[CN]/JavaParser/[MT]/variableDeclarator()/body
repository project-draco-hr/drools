{
  variableDeclarator_stack.push(new variableDeclarator_scope());
  int variableDeclarator_StartIndex=input.index();
  Token id=null;
  ParserRuleReturnScope rest=null;
  variableDeclarator_stack.peek().ident=new JavaLocalDeclarationDescr.IdentifierDescr();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,39)) {
      return;
    }
{
      id=(Token)match(input,Identifier,FOLLOW_Identifier_in_variableDeclarator1355);
      if (state.failed)       return;
      pushFollow(FOLLOW_variableDeclaratorRest_in_variableDeclarator1359);
      rest=variableDeclaratorRest();
      state._fsp--;
      if (state.failed)       return;
      if (state.backtracking == 0) {
        variableDeclarator_stack.peek().ident.setIdentifier((id != null ? id.getText() : null));
        variableDeclarator_stack.peek().ident.setStart(((CommonToken)id).getStartIndex() - 1);
        if ((rest != null ? (rest.stop) : null) != null) {
          variableDeclarator_stack.peek().ident.setEnd(((CommonToken)(rest != null ? (rest.stop) : null)).getStopIndex());
        }
      }
    }
    if (state.backtracking == 0) {
      if (VarDecl_stack.peek().descr != null) {
        VarDecl_stack.peek().descr.addIdentifier(variableDeclarator_stack.peek().ident);
      }
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
    if (state.backtracking > 0) {
      memoize(input,39,variableDeclarator_StartIndex);
    }
    variableDeclarator_stack.pop();
  }
}
