{
  int annotation_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,65)) {
      return;
    }
{
      match(input,53,FOLLOW_53_in_annotation2305);
      if (state.failed)       return;
      pushFollow(FOLLOW_annotationName_in_annotation2307);
      annotationName();
      state._fsp--;
      if (state.failed)       return;
      int alt87=2;
      int LA87_0=input.LA(1);
      if ((LA87_0 == 31)) {
        alt87=1;
      }
switch (alt87) {
case 1:
{
          match(input,31,FOLLOW_31_in_annotation2310);
          if (state.failed)           return;
          int alt86=2;
          int LA86_0=input.LA(1);
          if (((LA86_0 >= CharacterLiteral && LA86_0 <= DecimalLiteral) || LA86_0 == FloatingPointLiteral || (LA86_0 >= HexLiteral && LA86_0 <= Identifier) || (LA86_0 >= OctalLiteral && LA86_0 <= StringLiteral) || LA86_0 == 24 || LA86_0 == 31 || (LA86_0 >= 35 && LA86_0 <= 36) || (LA86_0 >= 39 && LA86_0 <= 40) || LA86_0 == 48 || LA86_0 == 53 || LA86_0 == 60 || LA86_0 == 62 || (LA86_0 >= 65 && LA86_0 <= 66) || LA86_0 == 71 || (LA86_0 >= 73 && LA86_0 <= 74) || LA86_0 == 76 || LA86_0 == 79 || LA86_0 == 86 || LA86_0 == 88 || (LA86_0 >= 91 && LA86_0 <= 92) || LA86_0 == 99 || LA86_0 == 102 || LA86_0 == 105 || LA86_0 == 109 || LA86_0 == 112 || LA86_0 == 115 || LA86_0 == 120)) {
            alt86=1;
          }
switch (alt86) {
case 1:
{
              pushFollow(FOLLOW_elementValuePairs_in_annotation2312);
              elementValuePairs();
              state._fsp--;
              if (state.failed)               return;
            }
          break;
      }
      match(input,32,FOLLOW_32_in_annotation2315);
      if (state.failed)       return;
    }
  break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,65,annotation_StartIndex);
}
}
}
