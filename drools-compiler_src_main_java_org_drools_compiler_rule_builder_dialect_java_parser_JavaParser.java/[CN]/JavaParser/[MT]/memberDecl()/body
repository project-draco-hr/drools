{
  int memberDecl_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,22)) {
      return;
    }
    int alt36=7;
switch (input.LA(1)) {
case 48:
{
        alt36=1;
      }
    break;
case Identifier:
{
switch (input.LA(2)) {
case 48:
{
        int LA36_9=input.LA(3);
        if ((synpred38_Java())) {
          alt36=2;
        }
 else         if ((synpred39_Java())) {
          alt36=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          int nvaeMark=input.mark();
          try {
            for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
              input.consume();
            }
            NoViableAltException nvae=new NoViableAltException("",36,9,input);
            throw nvae;
          }
  finally {
            input.rewind(nvaeMark);
          }
        }
      }
    break;
case 42:
{
    int LA36_10=input.LA(3);
    if ((synpred38_Java())) {
      alt36=2;
    }
 else     if ((synpred39_Java())) {
      alt36=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      int nvaeMark=input.mark();
      try {
        for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
          input.consume();
        }
        NoViableAltException nvae=new NoViableAltException("",36,10,input);
        throw nvae;
      }
  finally {
        input.rewind(nvaeMark);
      }
    }
  }
break;
case 54:
{
int LA36_11=input.LA(3);
if ((synpred38_Java())) {
  alt36=2;
}
 else if ((synpred39_Java())) {
  alt36=3;
}
 else {
  if (state.backtracking > 0) {
    state.failed=true;
    return;
  }
  int nvaeMark=input.mark();
  try {
    for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
      input.consume();
    }
    NoViableAltException nvae=new NoViableAltException("",36,11,input);
    throw nvae;
  }
  finally {
    input.rewind(nvaeMark);
  }
}
}
break;
case Identifier:
{
int LA36_12=input.LA(3);
if ((synpred38_Java())) {
alt36=2;
}
 else if ((synpred39_Java())) {
alt36=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
  input.consume();
}
NoViableAltException nvae=new NoViableAltException("",36,12,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
break;
case 31:
{
alt36=5;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
input.consume();
NoViableAltException nvae=new NoViableAltException("",36,2,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
break;
case 60:
case 62:
case 66:
case 71:
case 79:
case 86:
case 88:
case 99:
{
int LA36_3=input.LA(2);
if ((LA36_3 == 54)) {
int LA36_14=input.LA(3);
if ((synpred38_Java())) {
alt36=2;
}
 else if ((synpred39_Java())) {
alt36=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
input.consume();
}
NoViableAltException nvae=new NoViableAltException("",36,14,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
 else if ((LA36_3 == Identifier)) {
int LA36_15=input.LA(3);
if ((synpred38_Java())) {
alt36=2;
}
 else if ((synpred39_Java())) {
alt36=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
for (int nvaeConsume=0; nvaeConsume < 3 - 1; nvaeConsume++) {
input.consume();
}
NoViableAltException nvae=new NoViableAltException("",36,15,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
input.consume();
NoViableAltException nvae=new NoViableAltException("",36,3,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
break;
case 112:
{
alt36=4;
}
break;
case 53:
case 87:
{
alt36=6;
}
break;
case ENUM:
case 67:
{
alt36=7;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",36,0,input);
throw nvae;
}
switch (alt36) {
case 1:
{
pushFollow(FOLLOW_genericMethodOrConstructorDecl_in_memberDecl710);
genericMethodOrConstructorDecl();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
pushFollow(FOLLOW_methodDeclaration_in_memberDecl718);
methodDeclaration();
state._fsp--;
if (state.failed) return;
}
break;
case 3:
{
pushFollow(FOLLOW_fieldDeclaration_in_memberDecl726);
fieldDeclaration();
state._fsp--;
if (state.failed) return;
}
break;
case 4:
{
match(input,112,FOLLOW_112_in_memberDecl734);
if (state.failed) return;
match(input,Identifier,FOLLOW_Identifier_in_memberDecl736);
if (state.failed) return;
pushFollow(FOLLOW_voidMethodDeclaratorRest_in_memberDecl738);
voidMethodDeclaratorRest();
state._fsp--;
if (state.failed) return;
}
break;
case 5:
{
match(input,Identifier,FOLLOW_Identifier_in_memberDecl746);
if (state.failed) return;
pushFollow(FOLLOW_constructorDeclaratorRest_in_memberDecl748);
constructorDeclaratorRest();
state._fsp--;
if (state.failed) return;
}
break;
case 6:
{
pushFollow(FOLLOW_interfaceDeclaration_in_memberDecl756);
interfaceDeclaration();
state._fsp--;
if (state.failed) return;
}
break;
case 7:
{
pushFollow(FOLLOW_classDeclaration_in_memberDecl764);
classDeclaration();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,22,memberDecl_StartIndex);
}
}
}
