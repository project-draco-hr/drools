{
  int unaryExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,124)) {
      return;
    }
    int alt156=5;
switch (input.LA(1)) {
case 35:
{
        alt156=1;
      }
    break;
case 39:
{
    alt156=2;
  }
break;
case 36:
{
alt156=3;
}
break;
case 40:
{
alt156=4;
}
break;
case CharacterLiteral:
case DecimalLiteral:
case FloatingPointLiteral:
case HexLiteral:
case Identifier:
case OctalLiteral:
case StringLiteral:
case 24:
case 31:
case 48:
case 60:
case 62:
case 65:
case 66:
case 72:
case 74:
case 75:
case 77:
case 80:
case 87:
case 89:
case 92:
case 93:
case 100:
case 103:
case 106:
case 110:
case 113:
case 121:
{
alt156=5;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",156,0,input);
throw nvae;
}
switch (alt156) {
case 1:
{
match(input,35,FOLLOW_35_in_unaryExpression5484);
if (state.failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpression5486);
unaryExpression();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
match(input,39,FOLLOW_39_in_unaryExpression5494);
if (state.failed) return;
pushFollow(FOLLOW_unaryExpression_in_unaryExpression5496);
unaryExpression();
state._fsp--;
if (state.failed) return;
}
break;
case 3:
{
match(input,36,FOLLOW_36_in_unaryExpression5506);
if (state.failed) return;
pushFollow(FOLLOW_primary_in_unaryExpression5508);
primary();
state._fsp--;
if (state.failed) return;
}
break;
case 4:
{
match(input,40,FOLLOW_40_in_unaryExpression5518);
if (state.failed) return;
pushFollow(FOLLOW_primary_in_unaryExpression5520);
primary();
state._fsp--;
if (state.failed) return;
}
break;
case 5:
{
pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression5530);
unaryExpressionNotPlusMinus();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,124,unaryExpression_StartIndex);
}
}
}
