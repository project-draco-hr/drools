{
  int assignmentOperator_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,108)) {
      return;
    }
    int alt141=12;
switch (input.LA(1)) {
case 49:
{
        alt141=1;
      }
    break;
case 37:
{
    alt141=2;
  }
break;
case 41:
{
alt141=3;
}
break;
case 34:
{
alt141=4;
}
break;
case 45:
{
alt141=5;
}
break;
case 30:
{
alt141=6;
}
break;
case 117:
{
alt141=7;
}
break;
case 57:
{
alt141=8;
}
break;
case 27:
{
alt141=9;
}
break;
case 48:
{
alt141=10;
}
break;
case 51:
{
int LA141_11=input.LA(2);
if ((LA141_11 == 51)) {
int LA141_12=input.LA(3);
if ((synpred211_Java())) {
alt141=11;
}
 else if ((true)) {
alt141=12;
}
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return;
}
int nvaeMark=input.mark();
try {
input.consume();
NoViableAltException nvae=new NoViableAltException("",141,11,input);
throw nvae;
}
  finally {
input.rewind(nvaeMark);
}
}
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",141,0,input);
throw nvae;
}
switch (alt141) {
case 1:
{
match(input,49,FOLLOW_49_in_assignmentOperator4848);
if (state.failed) return;
}
break;
case 2:
{
match(input,37,FOLLOW_37_in_assignmentOperator4858);
if (state.failed) return;
}
break;
case 3:
{
match(input,41,FOLLOW_41_in_assignmentOperator4868);
if (state.failed) return;
}
break;
case 4:
{
match(input,34,FOLLOW_34_in_assignmentOperator4878);
if (state.failed) return;
}
break;
case 5:
{
match(input,45,FOLLOW_45_in_assignmentOperator4888);
if (state.failed) return;
}
break;
case 6:
{
match(input,30,FOLLOW_30_in_assignmentOperator4898);
if (state.failed) return;
}
break;
case 7:
{
match(input,117,FOLLOW_117_in_assignmentOperator4908);
if (state.failed) return;
}
break;
case 8:
{
match(input,57,FOLLOW_57_in_assignmentOperator4918);
if (state.failed) return;
}
break;
case 9:
{
match(input,27,FOLLOW_27_in_assignmentOperator4928);
if (state.failed) return;
}
break;
case 10:
{
match(input,48,FOLLOW_48_in_assignmentOperator4938);
if (state.failed) return;
match(input,48,FOLLOW_48_in_assignmentOperator4940);
if (state.failed) return;
match(input,49,FOLLOW_49_in_assignmentOperator4942);
if (state.failed) return;
}
break;
case 11:
{
match(input,51,FOLLOW_51_in_assignmentOperator4952);
if (state.failed) return;
match(input,51,FOLLOW_51_in_assignmentOperator4954);
if (state.failed) return;
match(input,49,FOLLOW_49_in_assignmentOperator4956);
if (state.failed) return;
}
break;
case 12:
{
match(input,51,FOLLOW_51_in_assignmentOperator4966);
if (state.failed) return;
match(input,51,FOLLOW_51_in_assignmentOperator4968);
if (state.failed) return;
match(input,51,FOLLOW_51_in_assignmentOperator4970);
if (state.failed) return;
match(input,49,FOLLOW_49_in_assignmentOperator4972);
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,108,assignmentOperator_StartIndex);
}
}
}
