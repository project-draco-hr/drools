{
  int modifier_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,46)) {
      return;
    }
    int alt64=12;
switch (input.LA(1)) {
case 53:
{
        alt64=1;
      }
    break;
case 96:
{
    alt64=2;
  }
break;
case 95:
{
alt64=3;
}
break;
case 94:
{
alt64=4;
}
break;
case 100:
{
alt64=5;
}
break;
case 58:
{
alt64=6;
}
break;
case 77:
{
alt64=7;
}
break;
case 90:
{
alt64=8;
}
break;
case 104:
{
alt64=9;
}
break;
case 108:
{
alt64=10;
}
break;
case 113:
{
alt64=11;
}
break;
case 101:
{
alt64=12;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",64,0,input);
throw nvae;
}
switch (alt64) {
case 1:
{
pushFollow(FOLLOW_annotation_in_modifier1573);
annotation();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
match(input,96,FOLLOW_96_in_modifier1583);
if (state.failed) return;
}
break;
case 3:
{
match(input,95,FOLLOW_95_in_modifier1593);
if (state.failed) return;
}
break;
case 4:
{
match(input,94,FOLLOW_94_in_modifier1603);
if (state.failed) return;
}
break;
case 5:
{
match(input,100,FOLLOW_100_in_modifier1613);
if (state.failed) return;
}
break;
case 6:
{
match(input,58,FOLLOW_58_in_modifier1623);
if (state.failed) return;
}
break;
case 7:
{
match(input,77,FOLLOW_77_in_modifier1633);
if (state.failed) return;
}
break;
case 8:
{
match(input,90,FOLLOW_90_in_modifier1643);
if (state.failed) return;
}
break;
case 9:
{
match(input,104,FOLLOW_104_in_modifier1653);
if (state.failed) return;
}
break;
case 10:
{
match(input,108,FOLLOW_108_in_modifier1663);
if (state.failed) return;
}
break;
case 11:
{
match(input,113,FOLLOW_113_in_modifier1673);
if (state.failed) return;
}
break;
case 12:
{
match(input,101,FOLLOW_101_in_modifier1683);
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,46,modifier_StartIndex);
}
}
}
