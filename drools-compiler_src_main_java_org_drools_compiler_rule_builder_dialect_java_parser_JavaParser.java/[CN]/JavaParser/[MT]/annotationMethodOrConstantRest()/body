{
  int annotationMethodOrConstantRest_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,76)) {
      return;
    }
    int alt102=2;
    int LA102_0=input.LA(1);
    if ((LA102_0 == Identifier)) {
      int LA102_1=input.LA(2);
      if ((LA102_1 == 31)) {
        alt102=1;
      }
 else       if ((LA102_1 == 38 || LA102_1 == 47 || LA102_1 == 49 || LA102_1 == 54)) {
        alt102=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        int nvaeMark=input.mark();
        try {
          input.consume();
          NoViableAltException nvae=new NoViableAltException("",102,1,input);
          throw nvae;
        }
  finally {
          input.rewind(nvaeMark);
        }
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",102,0,input);
      throw nvae;
    }
switch (alt102) {
case 1:
{
        pushFollow(FOLLOW_annotationMethodRest_in_annotationMethodOrConstantRest2641);
        annotationMethodRest();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_annotationConstantRest_in_annotationMethodOrConstantRest2651);
    annotationConstantRest();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,76,annotationMethodOrConstantRest_StartIndex);
}
}
}
