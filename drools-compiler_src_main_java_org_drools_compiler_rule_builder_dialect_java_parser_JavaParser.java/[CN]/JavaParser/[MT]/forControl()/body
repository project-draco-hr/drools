{
  VarDecl_stack.push(new VarDecl_scope());
  int forControl_StartIndex=input.index();
  increaseLevel();
  ((VarDecl_scope)VarDecl_stack.peek()).descr=new JavaLocalDeclarationDescr();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,99)) {
      return;
    }
    int alt135=2;
    alt135=dfa135.predict(input);
switch (alt135) {
case 1:
{
        pushFollow(FOLLOW_forVarControl_in_forControl4507);
        forVarControl();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    int alt132=2;
    alt132=dfa132.predict(input);
switch (alt132) {
case 1:
{
        pushFollow(FOLLOW_forInit_in_forControl4515);
        forInit();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
}
match(input,25,FOLLOW_25_in_forControl4518);
if (state.failed) return;
int alt133=2;
alt133=dfa133.predict(input);
switch (alt133) {
case 1:
{
    pushFollow(FOLLOW_expression_in_forControl4520);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
match(input,25,FOLLOW_25_in_forControl4523);
if (state.failed) return;
int alt134=2;
alt134=dfa134.predict(input);
switch (alt134) {
case 1:
{
pushFollow(FOLLOW_forUpdate_in_forControl4525);
forUpdate();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
}
if (state.backtracking == 0) {
addLocalDeclaration(((VarDecl_scope)VarDecl_stack.peek()).descr);
decreaseLevel();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,99,forControl_StartIndex);
}
VarDecl_stack.pop();
}
return;
}
