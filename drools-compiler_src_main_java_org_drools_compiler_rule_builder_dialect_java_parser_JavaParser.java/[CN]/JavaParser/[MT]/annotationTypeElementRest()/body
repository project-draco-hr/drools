{
  int annotationTypeElementRest_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,75)) {
      return;
    }
    int alt101=5;
    alt101=dfa101.predict(input);
switch (alt101) {
case 1:
{
        pushFollow(FOLLOW_type_in_annotationTypeElementRest2568);
        type();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_annotationMethodOrConstantRest_in_annotationTypeElementRest2570);
        annotationMethodOrConstantRest();
        state._fsp--;
        if (state.failed)         return;
        match(input,25,FOLLOW_25_in_annotationTypeElementRest2572);
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_classDeclaration_in_annotationTypeElementRest2582);
    classDeclaration();
    state._fsp--;
    if (state.failed)     return;
    int alt97=2;
    alt97=dfa97.predict(input);
switch (alt97) {
case 1:
{
        match(input,25,FOLLOW_25_in_annotationTypeElementRest2584);
        if (state.failed)         return;
      }
    break;
}
}
break;
case 3:
{
pushFollow(FOLLOW_interfaceDeclaration_in_annotationTypeElementRest2595);
interfaceDeclaration();
state._fsp--;
if (state.failed) return;
int alt98=2;
alt98=dfa98.predict(input);
switch (alt98) {
case 1:
{
match(input,25,FOLLOW_25_in_annotationTypeElementRest2597);
if (state.failed) return;
}
break;
}
}
break;
case 4:
{
pushFollow(FOLLOW_enumDeclaration_in_annotationTypeElementRest2608);
enumDeclaration();
state._fsp--;
if (state.failed) return;
int alt99=2;
alt99=dfa99.predict(input);
switch (alt99) {
case 1:
{
match(input,25,FOLLOW_25_in_annotationTypeElementRest2610);
if (state.failed) return;
}
break;
}
}
break;
case 5:
{
pushFollow(FOLLOW_annotationTypeDeclaration_in_annotationTypeElementRest2621);
annotationTypeDeclaration();
state._fsp--;
if (state.failed) return;
int alt100=2;
alt100=dfa100.predict(input);
switch (alt100) {
case 1:
{
match(input,25,FOLLOW_25_in_annotationTypeElementRest2623);
if (state.failed) return;
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,75,annotationTypeElementRest_StartIndex);
}
}
return;
}
