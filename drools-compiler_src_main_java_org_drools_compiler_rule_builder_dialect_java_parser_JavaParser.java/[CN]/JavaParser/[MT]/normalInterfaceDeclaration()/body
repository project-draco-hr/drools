{
  int normalInterfaceDeclaration_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,17)) {
      return;
    }
{
      match(input,39,FOLLOW_39_in_normalInterfaceDeclaration572);
      if (state.failed)       return;
      match(input,Identifier,FOLLOW_Identifier_in_normalInterfaceDeclaration574);
      if (state.failed)       return;
      int alt28=2;
      int LA28_0=input.LA(1);
      if ((LA28_0 == 33)) {
        alt28=1;
      }
switch (alt28) {
case 1:
{
          pushFollow(FOLLOW_typeParameters_in_normalInterfaceDeclaration576);
          typeParameters();
          state._fsp--;
          if (state.failed)           return;
        }
      break;
  }
  int alt29=2;
  int LA29_0=input.LA(1);
  if ((LA29_0 == 31)) {
    alt29=1;
  }
switch (alt29) {
case 1:
{
      match(input,31,FOLLOW_31_in_normalInterfaceDeclaration580);
      if (state.failed)       return;
      pushFollow(FOLLOW_typeList_in_normalInterfaceDeclaration582);
      typeList();
      state._fsp--;
      if (state.failed)       return;
    }
  break;
}
pushFollow(FOLLOW_interfaceBody_in_normalInterfaceDeclaration586);
interfaceBody();
state._fsp--;
if (state.failed) return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,17,normalInterfaceDeclaration_StartIndex);
}
}
return;
}
