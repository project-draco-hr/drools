{
  int typeDeclaration_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,4)) {
      return;
    }
    int alt8=2;
    int LA8_0=input.LA(1);
    if ((LA8_0 == ENUM || LA8_0 == 53 || LA8_0 == 58 || LA8_0 == 67 || LA8_0 == 77 || LA8_0 == 87 || LA8_0 == 90 || (LA8_0 >= 94 && LA8_0 <= 96) || (LA8_0 >= 100 && LA8_0 <= 101) || LA8_0 == 104 || LA8_0 == 108 || LA8_0 == 113)) {
      alt8=1;
    }
 else     if ((LA8_0 == 47)) {
      alt8=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",8,0,input);
      throw nvae;
    }
switch (alt8) {
case 1:
{
        pushFollow(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration191);
        classOrInterfaceDeclaration();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,47,FOLLOW_47_in_typeDeclaration201);
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,4,typeDeclaration_StartIndex);
}
}
}
