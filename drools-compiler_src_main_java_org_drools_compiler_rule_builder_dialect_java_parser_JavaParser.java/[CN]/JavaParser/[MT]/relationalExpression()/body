{
  int relationalExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,118)) {
      return;
    }
{
      pushFollow(FOLLOW_shiftExpression_in_relationalExpression5274);
      shiftExpression();
      state._fsp--;
      if (state.failed)       return;
      loop150:       while (true) {
        int alt150=2;
        alt150=dfa150.predict(input);
switch (alt150) {
case 1:
{
            pushFollow(FOLLOW_relationalOp_in_relationalExpression5278);
            relationalOp();
            state._fsp--;
            if (state.failed)             return;
            pushFollow(FOLLOW_shiftExpression_in_relationalExpression5280);
            shiftExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop150;
  }
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,118,relationalExpression_StartIndex);
}
}
}
