{
  int forVarControl_StartIndex=input.index();
  Token id=null;
  ParserRuleReturnScope variableModifier13=null;
  ParserRuleReturnScope type14=null;
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,101)) {
      return;
    }
{
      loop138:       while (true) {
        int alt138=2;
        int LA138_0=input.LA(1);
        if ((LA138_0 == 53 || LA138_0 == 77)) {
          alt138=1;
        }
switch (alt138) {
case 1:
{
            pushFollow(FOLLOW_variableModifier_in_forVarControl4627);
            variableModifier13=variableModifier();
            state._fsp--;
            if (state.failed)             return;
            if (state.backtracking == 0) {
              VarDecl_stack.peek().descr.updateStart(((CommonToken)(variableModifier13 != null ? (variableModifier13.start) : null)).getStartIndex() - 1);
              VarDecl_stack.peek().descr.addModifier((variableModifier13 != null ? input.toString(variableModifier13.start,variableModifier13.stop) : null));
            }
          }
        break;
default :
      break loop138;
  }
}
pushFollow(FOLLOW_type_in_forVarControl4662);
type14=type();
state._fsp--;
if (state.failed) return;
if (state.backtracking == 0) {
  VarDecl_stack.peek().descr.updateStart(((CommonToken)(type14 != null ? (type14.start) : null)).getStartIndex() - 1);
  VarDecl_stack.peek().descr.setType((type14 != null ? input.toString(type14.start,type14.stop) : null));
  VarDecl_stack.peek().descr.setEnd(((CommonToken)(type14 != null ? (type14.stop) : null)).getStopIndex());
}
id=(Token)match(input,Identifier,FOLLOW_Identifier_in_forVarControl4684);
if (state.failed) return;
if (state.backtracking == 0) {
  JavaLocalDeclarationDescr.IdentifierDescr ident=new JavaLocalDeclarationDescr.IdentifierDescr();
  ident.setIdentifier((id != null ? id.getText() : null));
  ident.setStart(((CommonToken)id).getStartIndex() - 1);
  ident.setEnd(((CommonToken)id).getStopIndex());
  VarDecl_stack.peek().descr.addIdentifier(ident);
}
match(input,46,FOLLOW_46_in_forVarControl4705);
if (state.failed) return;
pushFollow(FOLLOW_expression_in_forVarControl4707);
expression();
state._fsp--;
if (state.failed) return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,101,forVarControl_StartIndex);
}
}
}
