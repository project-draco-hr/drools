{
  int inclusiveOrExpression_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,113)) {
      return;
    }
{
      pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression5130);
      exclusiveOrExpression();
      state._fsp--;
      if (state.failed)       return;
      loop145:       while (true) {
        int alt145=2;
        int LA145_0=input.LA(1);
        if ((LA145_0 == 117)) {
          alt145=1;
        }
switch (alt145) {
case 1:
{
            match(input,117,FOLLOW_117_in_inclusiveOrExpression5134);
            if (state.failed)             return;
            pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression5136);
            exclusiveOrExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop145;
  }
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,113,inclusiveOrExpression_StartIndex);
}
}
}
