{
  int relationalOp_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,118)) {
      return;
    }
{
      int alt151=4;
      int LA151_0=input.LA(1);
      if ((LA151_0 == 48)) {
        int LA151_1=input.LA(2);
        if ((LA151_1 == 49)) {
          alt151=1;
        }
 else         if (((LA151_1 >= CharacterLiteral && LA151_1 <= DecimalLiteral) || LA151_1 == FloatingPointLiteral || (LA151_1 >= HexLiteral && LA151_1 <= Identifier) || (LA151_1 >= OctalLiteral && LA151_1 <= StringLiteral) || LA151_1 == 24 || LA151_1 == 31 || (LA151_1 >= 35 && LA151_1 <= 36) || (LA151_1 >= 39 && LA151_1 <= 40) || LA151_1 == 48 || LA151_1 == 60 || LA151_1 == 62 || (LA151_1 >= 65 && LA151_1 <= 66) || LA151_1 == 71 || (LA151_1 >= 73 && LA151_1 <= 74) || LA151_1 == 76 || LA151_1 == 79 || LA151_1 == 86 || LA151_1 == 88 || (LA151_1 >= 91 && LA151_1 <= 92) || LA151_1 == 99 || LA151_1 == 102 || LA151_1 == 105 || LA151_1 == 109 || LA151_1 == 112 || LA151_1 == 120)) {
          alt151=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          int nvaeMark=input.mark();
          try {
            input.consume();
            NoViableAltException nvae=new NoViableAltException("",151,1,input);
            throw nvae;
          }
  finally {
            input.rewind(nvaeMark);
          }
        }
      }
 else       if ((LA151_0 == 51)) {
        int LA151_2=input.LA(2);
        if ((LA151_2 == 49)) {
          alt151=2;
        }
 else         if (((LA151_2 >= CharacterLiteral && LA151_2 <= DecimalLiteral) || LA151_2 == FloatingPointLiteral || (LA151_2 >= HexLiteral && LA151_2 <= Identifier) || (LA151_2 >= OctalLiteral && LA151_2 <= StringLiteral) || LA151_2 == 24 || LA151_2 == 31 || (LA151_2 >= 35 && LA151_2 <= 36) || (LA151_2 >= 39 && LA151_2 <= 40) || LA151_2 == 48 || LA151_2 == 60 || LA151_2 == 62 || (LA151_2 >= 65 && LA151_2 <= 66) || LA151_2 == 71 || (LA151_2 >= 73 && LA151_2 <= 74) || LA151_2 == 76 || LA151_2 == 79 || LA151_2 == 86 || LA151_2 == 88 || (LA151_2 >= 91 && LA151_2 <= 92) || LA151_2 == 99 || LA151_2 == 102 || LA151_2 == 105 || LA151_2 == 109 || LA151_2 == 112 || LA151_2 == 120)) {
          alt151=4;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          int nvaeMark=input.mark();
          try {
            input.consume();
            NoViableAltException nvae=new NoViableAltException("",151,2,input);
            throw nvae;
          }
  finally {
            input.rewind(nvaeMark);
          }
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",151,0,input);
        throw nvae;
      }
switch (alt151) {
case 1:
{
          match(input,48,FOLLOW_48_in_relationalOp5250);
          if (state.failed)           return;
          match(input,49,FOLLOW_49_in_relationalOp5252);
          if (state.failed)           return;
        }
      break;
case 2:
{
      match(input,51,FOLLOW_51_in_relationalOp5256);
      if (state.failed)       return;
      match(input,49,FOLLOW_49_in_relationalOp5258);
      if (state.failed)       return;
    }
  break;
case 3:
{
  match(input,48,FOLLOW_48_in_relationalOp5262);
  if (state.failed)   return;
}
break;
case 4:
{
match(input,51,FOLLOW_51_in_relationalOp5266);
if (state.failed) return;
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,118,relationalOp_StartIndex);
}
}
}
