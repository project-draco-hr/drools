{
  JavaParser.type_return retval=new JavaParser.type_return();
  retval.start=input.LT(1);
  int type_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,50)) {
      return retval;
    }
    int alt72=2;
    int LA72_0=input.LA(1);
    if ((LA72_0 == Identifier)) {
      alt72=1;
    }
 else     if (((LA72_0 >= 55 && LA72_0 <= 62))) {
      alt72=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",72,0,input);
      throw nvae;
    }
switch (alt72) {
case 1:
{
        match(input,Identifier,FOLLOW_Identifier_in_type1776);
        if (state.failed)         return retval;
        int alt67=2;
        alt67=dfa67.predict(input);
switch (alt67) {
case 1:
{
            pushFollow(FOLLOW_typeArguments_in_type1779);
            typeArguments();
            state._fsp--;
            if (state.failed)             return retval;
          }
        break;
    }
    loop69:     do {
      int alt69=2;
      alt69=dfa69.predict(input);
switch (alt69) {
case 1:
{
          match(input,28,FOLLOW_28_in_type1784);
          if (state.failed)           return retval;
          match(input,Identifier,FOLLOW_Identifier_in_type1786);
          if (state.failed)           return retval;
          int alt68=2;
          alt68=dfa68.predict(input);
switch (alt68) {
case 1:
{
              pushFollow(FOLLOW_typeArguments_in_type1789);
              typeArguments();
              state._fsp--;
              if (state.failed)               return retval;
            }
          break;
      }
    }
  break;
default :
break loop69;
}
}
 while (true);
loop70: do {
int alt70=2;
alt70=dfa70.predict(input);
switch (alt70) {
case 1:
{
match(input,41,FOLLOW_41_in_type1797);
if (state.failed) return retval;
match(input,42,FOLLOW_42_in_type1799);
if (state.failed) return retval;
}
break;
default :
break loop70;
}
}
 while (true);
}
break;
case 2:
{
pushFollow(FOLLOW_primitiveType_in_type1809);
primitiveType();
state._fsp--;
if (state.failed) return retval;
loop71: do {
int alt71=2;
alt71=dfa71.predict(input);
switch (alt71) {
case 1:
{
match(input,41,FOLLOW_41_in_type1812);
if (state.failed) return retval;
match(input,42,FOLLOW_42_in_type1814);
if (state.failed) return retval;
}
break;
default :
break loop71;
}
}
 while (true);
}
break;
}
retval.stop=input.LT(-1);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
memoize(input,50,type_StartIndex);
}
}
return retval;
}
