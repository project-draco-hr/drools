{
  int arguments_StartIndex=input.index();
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,139)) {
      return;
    }
{
      match(input,31,FOLLOW_31_in_arguments6340);
      if (state.failed)       return;
      int alt192=2;
      int LA192_0=input.LA(1);
      if (((LA192_0 >= CharacterLiteral && LA192_0 <= DecimalLiteral) || LA192_0 == FloatingPointLiteral || (LA192_0 >= HexLiteral && LA192_0 <= Identifier) || (LA192_0 >= OctalLiteral && LA192_0 <= StringLiteral) || LA192_0 == 24 || LA192_0 == 31 || (LA192_0 >= 35 && LA192_0 <= 36) || (LA192_0 >= 39 && LA192_0 <= 40) || LA192_0 == 48 || LA192_0 == 60 || LA192_0 == 62 || (LA192_0 >= 65 && LA192_0 <= 66) || LA192_0 == 71 || (LA192_0 >= 73 && LA192_0 <= 74) || LA192_0 == 76 || LA192_0 == 79 || LA192_0 == 86 || LA192_0 == 88 || (LA192_0 >= 91 && LA192_0 <= 92) || LA192_0 == 99 || LA192_0 == 102 || LA192_0 == 105 || LA192_0 == 109 || LA192_0 == 112 || LA192_0 == 120)) {
        alt192=1;
      }
switch (alt192) {
case 1:
{
          pushFollow(FOLLOW_expressionList_in_arguments6342);
          expressionList();
          state._fsp--;
          if (state.failed)           return;
        }
      break;
  }
  match(input,32,FOLLOW_32_in_arguments6345);
  if (state.failed)   return;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
if (state.backtracking > 0) {
  memoize(input,139,arguments_StartIndex);
}
}
}
