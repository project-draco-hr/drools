{
  MethodVisitor mv;
{
    mv=cw.visitMethod(Opcodes.ACC_PUBLIC,"toString","()Ljava/lang/String;",null,null);
    mv.visitCode();
    Label l0=null;
    if (this.debug) {
      l0=new Label();
      mv.visitLabel(l0);
    }
    mv.visitTypeInsn(Opcodes.NEW,Type.getInternalName(StringBuilder.class));
    mv.visitInsn(Opcodes.DUP);
    mv.visitMethodInsn(Opcodes.INVOKESPECIAL,Type.getInternalName(StringBuilder.class),"<init>","()V");
    mv.visitVarInsn(Opcodes.ASTORE,1);
    mv.visitVarInsn(Opcodes.ALOAD,1);
    mv.visitVarInsn(Opcodes.ALOAD,0);
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,getInternalType(classDef.getClassName()),"getClass","()Ljava/lang/Class;");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(Class.class),"getSimpleName","()Ljava/lang/String;");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
    mv.visitLdcInsn("( ");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
    boolean previous=false;
    for (    FieldDefinition field : classDef.getFieldsDefinitions()) {
      if (previous) {
        mv.visitLdcInsn(", ");
        mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
      }
      mv.visitLdcInsn(field.getName());
      mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
      mv.visitLdcInsn("=");
      mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
      mv.visitVarInsn(Opcodes.ALOAD,0);
      visitFieldOrGetter(mv,classDef,field);
      if (isPrimitive(field.getTypeName())) {
        String type=field.getTypeName().matches("(byte|short)") ? "int" : field.getTypeName();
        mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append",Type.getMethodDescriptor(Type.getType(StringBuilder.class),new Type[]{Type.getType(getTypeDescriptor(type))}));
      }
 else {
        mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append",Type.getMethodDescriptor(Type.getType(StringBuilder.class),new Type[]{Type.getType(Object.class)}));
      }
      previous=true;
    }
    mv.visitLdcInsn(" )");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(StringBuilder.class),"toString","()Ljava/lang/String;");
    mv.visitInsn(Opcodes.ARETURN);
    Label lastLabel=null;
    if (this.debug) {
      lastLabel=new Label();
      mv.visitLabel(lastLabel);
      mv.visitLocalVariable("this",getTypeDescriptor(classDef.getClassName()),null,l0,lastLabel,0);
      mv.visitLocalVariable("buf",Type.getDescriptor(StringBuilder.class),null,l0,lastLabel,1);
    }
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
