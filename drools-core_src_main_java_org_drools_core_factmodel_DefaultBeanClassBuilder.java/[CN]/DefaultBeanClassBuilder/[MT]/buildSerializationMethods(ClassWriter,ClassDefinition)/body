{
  MethodVisitor mv;
{
    mv=cw.visitMethod(ACC_PUBLIC,"writeExternal","(Ljava/io/ObjectOutput;)V",null,new String[]{"java/io/IOException"});
    mv.visitCode();
    for (    FieldDefinition field : classDef.getFieldsDefinitions()) {
      mv.visitVarInsn(ALOAD,1);
      mv.visitVarInsn(ALOAD,0);
      visitFieldOrGetter(mv,classDef,field);
      mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectOutput",BuildUtils.serializationWriterName(field.getTypeName()),"(" + (BuildUtils.isPrimitive(field.getTypeName()) ? BuildUtils.getTypeDescriptor(field.getTypeName()) : "Ljava/lang/Object;") + ")V");
    }
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(Opcodes.GETFIELD,BuildUtils.getInternalType(classDef.getClassName()),TraitableBean.MAP_FIELD_NAME,Type.getDescriptor(Map.class));
    mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectOutput","writeObject","(Ljava/lang/Object;)V");
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(Opcodes.GETFIELD,BuildUtils.getInternalType(classDef.getClassName()),TraitableBean.TRAITSET_FIELD_NAME,Type.getDescriptor(Map.class));
    mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectOutput","writeObject","(Ljava/lang/Object;)V");
    mv.visitInsn(RETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
{
    mv=cw.visitMethod(ACC_PUBLIC,"readExternal","(Ljava/io/ObjectInput;)V",null,new String[]{"java/io/IOException","java/lang/ClassNotFoundException"});
    mv.visitCode();
    for (    FieldDefinition field : classDef.getFieldsDefinitions()) {
      mv.visitVarInsn(ALOAD,0);
      mv.visitVarInsn(ALOAD,1);
      mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectInput",BuildUtils.serializationReaderName(field.getTypeName()),"()" + (BuildUtils.isPrimitive(field.getTypeName()) ? BuildUtils.getTypeDescriptor(field.getTypeName()) : "Ljava/lang/Object;"));
      if (!BuildUtils.isPrimitive(field.getTypeName())) {
        mv.visitTypeInsn(CHECKCAST,BuildUtils.getInternalType(field.getTypeName()));
      }
      mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),BuildUtils.setterName(field.getName(),field.getTypeName()),"(" + BuildUtils.getTypeDescriptor(field.getTypeName()) + ")V");
    }
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectInput","readObject","()Ljava/lang/Object;");
    mv.visitTypeInsn(CHECKCAST,"java/util/Map");
    mv.visitFieldInsn(Opcodes.PUTFIELD,BuildUtils.getInternalType(classDef.getClassName()),TraitableBean.MAP_FIELD_NAME,Type.getDescriptor(Map.class));
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/io/ObjectInput","readObject","()Ljava/lang/Object;");
    mv.visitTypeInsn(CHECKCAST,"java/util/Map");
    mv.visitFieldInsn(Opcodes.PUTFIELD,BuildUtils.getInternalType(classDef.getClassName()),TraitableBean.TRAITSET_FIELD_NAME,Type.getDescriptor(Map.class));
    mv.visitInsn(RETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
