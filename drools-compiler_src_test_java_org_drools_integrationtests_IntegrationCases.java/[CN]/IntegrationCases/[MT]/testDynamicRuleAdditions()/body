{
  Reader reader=new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1.drl"));
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(reader);
  Package pkg1=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg1);
  WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  workingMemory.setGlobal("total",new Integer(0));
  List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  Person bob=new Person("bob","stilton");
  bob.setStatus("Not evaluated");
  workingMemory.assertObject(bob);
  Cheese stilton=new Cheese("stilton",5);
  workingMemory.assertObject(stilton);
  Cheese cheddar=new Cheese("cheddar",5);
  workingMemory.assertObject(cheddar);
  workingMemory.fireAllRules();
  assertEquals(1,list.size());
  assertEquals("stilton",list.get(0));
  reader=new InputStreamReader(getClass().getResourceAsStream("test_Dynamic2.drl"));
  builder=new PackageBuilder();
  builder.addPackageFromDrl(reader);
  Package pkg2=builder.getPackage();
  ruleBase.addPackage(pkg2);
  assertEquals(3,list.size());
  assertEquals("stilton",list.get(0));
  assertEquals("cheddar",list.get(1));
  assertEquals("stilton",list.get(2));
  list.clear();
  reader=new InputStreamReader(getClass().getResourceAsStream("test_Dynamic3.drl"));
  builder=new PackageBuilder();
  builder.addPackageFromDrl(reader);
  Package pkg3=builder.getPackage();
  ruleBase.addPackage(pkg3);
  workingMemory.fireAllRules();
  Assert.assertEquals("Rule from package 3 should have been fired","match Person ok",bob.getStatus());
  assertEquals(1,list.size());
  assertEquals(bob,list.get(0));
  reader=new InputStreamReader(getClass().getResourceAsStream("test_Dynamic4.drl"));
  builder=new PackageBuilder();
  builder.addPackageFromDrl(reader);
  Package pkg4=builder.getPackage();
  ruleBase.addPackage(pkg4);
  Assert.assertEquals("Rule from package 4 should have been fired","Who likes Stilton ok",bob.getStatus());
  assertEquals(2,list.size());
  assertEquals(bob,list.get(1));
}
