{
  final Reader reader=new InputStreamReader(getClass().getResourceAsStream("test_ModifyActivationCreationNoLoop.drl"));
  final RuleBase ruleBase=loadRuleBase(reader);
  final InternalWorkingMemoryActions wm=(InternalWorkingMemoryActions)ruleBase.newWorkingMemory();
  final List created=new ArrayList();
  final List cancelled=new ArrayList();
  AgendaEventListener l=new DefaultAgendaEventListener(){
    public void activationCreated(    ActivationCreatedEvent event,    WorkingMemory workingMemory){
      created.add(event);
    }
    public void activationCancelled(    ActivationCancelledEvent event,    WorkingMemory workingMemory){
      cancelled.add(event);
    }
  }
;
  wm.addEventListener(l);
  Cheese stilton=new Cheese("stilton",15);
  FactHandle stiltonHandle=wm.assertObject(stilton);
  Person p1=new Person("p1");
  p1.setCheese(stilton);
  wm.assertObject(p1);
  Person p2=new Person("p2");
  p2.setCheese(stilton);
  wm.assertObject(p2);
  Person p3=new Person("p3");
  p3.setCheese(stilton);
  wm.assertObject(p3);
  assertEquals(3,created.size());
  assertEquals(0,cancelled.size());
  Activation item=((ActivationCreatedEvent)created.get(2)).getActivation();
  wm.modifyObject(stiltonHandle,stilton,item.getRule(),item);
  assertEquals(5,created.size());
  assertEquals(3,cancelled.size());
}
