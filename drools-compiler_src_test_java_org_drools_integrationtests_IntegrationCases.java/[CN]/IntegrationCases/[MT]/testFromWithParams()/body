{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_FromWithParams.drl")));
  final Package pkg=builder.getPackage();
  final RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  List list=new ArrayList();
  Object globalObject=new Object();
  workingMemory.setGlobal("list",list);
  workingMemory.setGlobal("testObject",new FromTestClass());
  workingMemory.setGlobal("globalObject",globalObject);
  Person bob=new Person("bob");
  workingMemory.assertObject(bob);
  workingMemory.fireAllRules();
  assertEquals(5,list.size());
  Map map=(Map)list.get(0);
  assertEquals(2,map.keySet().size());
  assertTrue(map.keySet().contains(bob));
  assertSame(globalObject,map.get(bob));
  assertTrue(map.keySet().contains("key1"));
  Map nestedMap=(Map)map.get("key1");
  assertEquals(1,nestedMap.keySet().size());
  assertTrue(nestedMap.keySet().contains("key2"));
  assertEquals("value2",nestedMap.get("key2"));
  assertEquals(new Integer(42),list.get(1));
  assertEquals("literal",list.get(2));
  assertSame(bob,list.get(3));
  assertSame(globalObject,list.get(4));
}
