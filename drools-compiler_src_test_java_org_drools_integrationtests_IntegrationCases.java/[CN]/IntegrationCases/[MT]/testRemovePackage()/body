{
  try {
    final PackageBuilder builder=new PackageBuilder();
    builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RemovePackage.drl")));
    final RuleBase ruleBase=getRuleBase();
    String packageName=builder.getPackage().getName();
    ruleBase.addPackage(builder.getPackage());
    final WorkingMemory workingMemory=ruleBase.newWorkingMemory();
    workingMemory.assertObject(new Precondition("genericcode","genericvalue"));
    workingMemory.fireAllRules();
    RuleBase ruleBaseWM=workingMemory.getRuleBase();
    ruleBaseWM.removePackage(packageName);
    final PackageBuilder builder1=new PackageBuilder();
    builder1.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RemovePackage.drl")));
    ruleBaseWM.addPackage(builder1.getPackage());
    workingMemory.fireAllRules();
  }
 catch (  Exception e) {
    Assert.fail("Removing packages should not throw any exception: " + e.getMessage());
  }
}
