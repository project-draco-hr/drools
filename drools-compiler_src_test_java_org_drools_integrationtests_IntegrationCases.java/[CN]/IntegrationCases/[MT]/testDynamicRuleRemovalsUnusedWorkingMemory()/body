{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1.drl")));
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic2.drl")));
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic3.drl")));
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic4.drl")));
  final Package pkg=builder.getPackage();
  org.drools.reteoo.ReteooRuleBase reteooRuleBase=null;
  org.drools.leaps.LeapsRuleBase leapsRuleBase=null;
  final RuleBase ruleBase=getRuleBase();
  if (ruleBase instanceof org.drools.reteoo.ReteooRuleBase) {
    reteooRuleBase=(org.drools.reteoo.ReteooRuleBase)ruleBase;
  }
 else   if (ruleBase instanceof org.drools.leaps.LeapsRuleBase) {
    leapsRuleBase=(org.drools.leaps.LeapsRuleBase)ruleBase;
  }
  ruleBase.addPackage(pkg);
  final WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  if (reteooRuleBase != null) {
    assertEquals(1,reteooRuleBase.getPackages().length);
    assertEquals(4,reteooRuleBase.getPackages()[0].getRules().length);
    reteooRuleBase.removeRule("org.drools.test","Who likes Stilton");
    assertEquals(3,reteooRuleBase.getPackages()[0].getRules().length);
    reteooRuleBase.removeRule("org.drools.test","like cheese");
    assertEquals(2,reteooRuleBase.getPackages()[0].getRules().length);
    reteooRuleBase.removePackage("org.drools.test");
    assertEquals(0,reteooRuleBase.getPackages().length);
  }
 else   if (leapsRuleBase != null) {
    assertEquals(1,leapsRuleBase.getPackages().length);
    assertEquals(4,leapsRuleBase.getPackages()[0].getRules().length);
    leapsRuleBase.removeRule("org.drools.test","Who likes Stilton");
    assertEquals(3,leapsRuleBase.getPackages()[0].getRules().length);
    leapsRuleBase.removeRule("org.drools.test","like cheese");
    assertEquals(2,leapsRuleBase.getPackages()[0].getRules().length);
    leapsRuleBase.removePackage("org.drools.test");
    assertEquals(0,leapsRuleBase.getPackages().length);
  }
}
