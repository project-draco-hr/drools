{
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("literal_rule_test.drl")));
  Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  AgendaEventListener listener=new DefaultAgendaEventListener(){
    public void activationCreated(    ActivationCreatedEvent event){
      System.out.println(event);
    }
    public void activationCancelled(    ActivationCancelledEvent event){
      System.out.println(event);
    }
    public void beforeActivationFired(    BeforeActivationFiredEvent event){
      System.out.println(event);
    }
    public void afterActivationFired(    AfterActivationFiredEvent event){
      System.out.println(event);
    }
  }
;
  workingMemory.addEventListener(listener);
  List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  Cheese stilton=new Cheese("stilton",5);
  workingMemory.assertObject(stilton);
  workingMemory.fireAllRules();
  assertEquals("stilton",list.get(0));
}
