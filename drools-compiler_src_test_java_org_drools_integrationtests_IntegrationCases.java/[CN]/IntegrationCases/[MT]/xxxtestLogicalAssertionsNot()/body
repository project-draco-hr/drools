{
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_LogicalAssertionsNot.drl")));
  Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  List list;
  String a=new String("a");
  Integer i=new Integer(1);
  workingMemory.setGlobal("i",i);
  workingMemory.fireAllRules();
  list=workingMemory.getObjects();
  assertEquals("i was not asserted by not a => i.",1,list.size());
  assertEquals("i was not asserted by not a => i.",i,list.get(0));
  FactHandle h=workingMemory.assertObject(a);
  list=workingMemory.getObjects();
  assertEquals("a was not asserted or i not retracted.",1,list.size());
  assertEquals("a was asserted.",a,list.get(0));
  assertFalse("i was not rectracted.",list.contains(i));
  assertEquals("agenda should be empty.",0,workingMemory.getAgenda().agendaSize());
  workingMemory.retractObject(h);
  workingMemory.fireAllRules();
  list=workingMemory.getObjects();
  assertEquals("i was not asserted by not a => i.",1,list.size());
  assertEquals("i was not asserted by not a => i.",i,list.get(0));
}
