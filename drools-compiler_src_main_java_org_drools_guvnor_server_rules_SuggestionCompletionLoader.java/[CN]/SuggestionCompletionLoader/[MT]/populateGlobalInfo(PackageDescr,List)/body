{
  for (final Iterator it=pkgDescr.getGlobals().iterator(); it.hasNext(); ) {
    final GlobalDescr global=(GlobalDescr)it.next();
    try {
      final String shortTypeName=getShortNameOfClass(global.getType());
      final Class<?> clazz=loadClass(global.getType(),jars);
      if (!this.builder.hasFieldsForType(shortTypeName)) {
        loadClassFields(clazz,shortTypeName);
        this.builder.addGlobalType(global.getIdentifier(),shortTypeName);
      }
      if (clazz != null && Collection.class.isAssignableFrom(clazz)) {
        this.builder.addGlobalCollection(global.getIdentifier());
      }
      this.builder.addGlobalType(global.getIdentifier(),shortTypeName);
    }
 catch (    final IOException e) {
      this.errors.add("Error while inspecting class for global: " + global.getType() + " error message: "+ e.getMessage());
    }
  }
}
