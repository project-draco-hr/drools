{
  GuidedDecisionTable52 dtable=new GuidedDecisionTable52();
  String[][] data=new String[][]{new String[]{"1","desc","Gargamel","Pupa","50"},new String[]{"2","desc","Gargamel","","50"},new String[]{"3","desc","Gargamel","Pupa",""}};
  dtable.setRowNumberCol(new RowNumberCol52());
  dtable.setDescriptionCol(new DescriptionCol52());
  Pattern52 p1=new Pattern52();
  p1.setFactType("Baddie");
  ConditionCol52 con=new ConditionCol52();
  con.setConstraintValueType(BaseSingleFieldConstraint.TYPE_LITERAL);
  con.setFactField("name");
  con.setOperator("==");
  p1.getChildColumns().add(con);
  dtable.getConditions().add(p1);
  BRLConditionColumn brl1=new BRLConditionColumn();
  List<IPattern> brl1Definition=new ArrayList<IPattern>();
  FactPattern brl1DefinitionFactPattern1=new FactPattern("Smurf");
  SingleFieldConstraint brl1DefinitionFactPattern1Constraint1=new SingleFieldConstraint();
  brl1DefinitionFactPattern1Constraint1.setFieldType(DataType.TYPE_STRING);
  brl1DefinitionFactPattern1Constraint1.setConstraintValueType(SingleFieldConstraint.TYPE_TEMPLATE);
  brl1DefinitionFactPattern1Constraint1.setFieldName("name");
  brl1DefinitionFactPattern1Constraint1.setOperator("==");
  brl1DefinitionFactPattern1Constraint1.setValue("$name");
  brl1DefinitionFactPattern1.addConstraint(brl1DefinitionFactPattern1Constraint1);
  SingleFieldConstraint brl1DefinitionFactPattern1Constraint2=new SingleFieldConstraint();
  brl1DefinitionFactPattern1Constraint2.setFieldType(DataType.TYPE_NUMERIC_INTEGER);
  brl1DefinitionFactPattern1Constraint2.setConstraintValueType(SingleFieldConstraint.TYPE_TEMPLATE);
  brl1DefinitionFactPattern1Constraint2.setFieldName("age");
  brl1DefinitionFactPattern1Constraint2.setOperator("==");
  brl1DefinitionFactPattern1Constraint2.setValue("$age");
  brl1DefinitionFactPattern1.addConstraint(brl1DefinitionFactPattern1Constraint2);
  brl1Definition.add(brl1DefinitionFactPattern1);
  brl1.setDefinition(brl1Definition);
  BRLConditionVariableColumn brl1Variable1=new BRLConditionVariableColumn("$name",DataType.TYPE_STRING,"Person","name");
  brl1.getChildColumns().add(brl1Variable1);
  BRLConditionVariableColumn brl1Variable2=new BRLConditionVariableColumn("$age",DataType.TYPE_NUMERIC_INTEGER,"Person","age");
  brl1.getChildColumns().add(brl1Variable2);
  dtable.getConditions().add(brl1);
  dtable.setData(DataUtilities.makeDataLists(data));
  int ruleStartIndex;
  int pattern1StartIndex;
  int pattern2StartIndex;
  GuidedDTDRLPersistence p=GuidedDTDRLPersistence.getInstance();
  String drl=p.marshal(dtable);
  System.out.println(drl);
  ruleStartIndex=drl.indexOf("//from row number: 1");
  assertFalse(ruleStartIndex == -1);
  pattern1StartIndex=drl.indexOf("Baddie( name == \"Gargamel\" )",ruleStartIndex);
  assertFalse(pattern1StartIndex == -1);
  pattern2StartIndex=drl.indexOf("Smurf( name == \"Pupa\" , age == 50 )",ruleStartIndex);
  assertFalse(pattern2StartIndex == -1);
  ruleStartIndex=drl.indexOf("//from row number: 2");
  assertFalse(ruleStartIndex == -1);
  pattern1StartIndex=drl.indexOf("Baddie( name == \"Gargamel\" )",ruleStartIndex);
  assertFalse(pattern1StartIndex == -1);
  pattern2StartIndex=drl.indexOf("Smurf( age == 50 )",ruleStartIndex);
  assertFalse(pattern2StartIndex == -1);
  ruleStartIndex=drl.indexOf("//from row number: 3");
  assertFalse(ruleStartIndex == -1);
  pattern1StartIndex=drl.indexOf("Baddie( name == \"Gargamel\" )",ruleStartIndex);
  assertFalse(pattern1StartIndex == -1);
  pattern2StartIndex=drl.indexOf("Smurf( name == \"Pupa\" )",ruleStartIndex);
  assertFalse(pattern2StartIndex == -1);
}
