{
  GuidedDecisionTable52 dtable=new GuidedDecisionTable52();
  String[][] data=new String[][]{new String[]{"1","desc","Pupa","50"},new String[]{"2","desc","","50"},new String[]{"3","desc","Pupa",""}};
  dtable.setRowNumberCol(new RowNumberCol52());
  dtable.setDescriptionCol(new DescriptionCol52());
  BRLActionColumn brl1=new BRLActionColumn();
  List<IAction> brl1Definition=new ArrayList<IAction>();
  ActionInsertFact brl1DefinitionAction1=new ActionInsertFact("Baddie");
  ActionFieldValue brl1DefinitionAction1FieldValue1=new ActionFieldValue("name","Gargamel",DataType.TYPE_STRING);
  brl1DefinitionAction1FieldValue1.setNature(BaseSingleFieldConstraint.TYPE_LITERAL);
  brl1DefinitionAction1.addFieldValue(brl1DefinitionAction1FieldValue1);
  brl1Definition.add(brl1DefinitionAction1);
  ActionInsertFact brl1DefinitionAction2=new ActionInsertFact("Smurf");
  ActionFieldValue brl1DefinitionAction2FieldValue1=new ActionFieldValue("name","$name",DataType.TYPE_STRING);
  brl1DefinitionAction2FieldValue1.setNature(BaseSingleFieldConstraint.TYPE_TEMPLATE);
  brl1DefinitionAction2.addFieldValue(brl1DefinitionAction2FieldValue1);
  ActionFieldValue brl1DefinitionAction2FieldValue2=new ActionFieldValue("age","$age",DataType.TYPE_NUMERIC_INTEGER);
  brl1DefinitionAction2FieldValue2.setNature(BaseSingleFieldConstraint.TYPE_TEMPLATE);
  brl1DefinitionAction2.addFieldValue(brl1DefinitionAction2FieldValue2);
  brl1Definition.add(brl1DefinitionAction2);
  brl1.setDefinition(brl1Definition);
  BRLActionVariableColumn brl1Variable1=new BRLActionVariableColumn("$name",DataType.TYPE_STRING,"Person","name");
  brl1.getChildColumns().add(brl1Variable1);
  BRLActionVariableColumn brl1Variable2=new BRLActionVariableColumn("$age",DataType.TYPE_NUMERIC_INTEGER,"Person","age");
  brl1.getChildColumns().add(brl1Variable2);
  dtable.getActionCols().add(brl1);
  dtable.setData(DataUtilities.makeDataLists(data));
  int ruleStartIndex;
  int action1StartIndex;
  int action2StartIndex;
  GuidedDTDRLPersistence p=GuidedDTDRLPersistence.getInstance();
  String drl=p.marshal(dtable);
  ruleStartIndex=drl.indexOf("//from row number: 1");
  assertFalse(ruleStartIndex == -1);
  action1StartIndex=drl.indexOf("Baddie fact0 = new Baddie();",ruleStartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("fact0.setName( \"Gargamel\" );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("insert( fact0 );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action2StartIndex=drl.indexOf("Smurf fact1 = new Smurf();",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("fact1.setName( \"Pupa\" );",action2StartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("fact1.setAge( 50 );",action2StartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("insert( fact1 );",action2StartIndex);
  assertFalse(action2StartIndex == -1);
  ruleStartIndex=drl.indexOf("//from row number: 2");
  int ruleEndIndex=drl.indexOf("//from row number: 3");
  assertFalse(ruleStartIndex == -1);
  action1StartIndex=drl.indexOf("Baddie fact0 = new Baddie();",ruleStartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("fact0.setName( \"Gargamel\" );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("insert( fact0 );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action2StartIndex=drl.indexOf("Smurf fact1 = new Smurf();",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("fact1.setName( \"Pupa\" );",ruleStartIndex);
  assertFalse(action2StartIndex < ruleEndIndex);
  action2StartIndex=drl.indexOf("fact1.setAge( 50 );",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("insert( fact1 );",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  ruleStartIndex=drl.indexOf("//from row number: 3");
  assertFalse(ruleStartIndex == -1);
  action1StartIndex=drl.indexOf("Baddie fact0 = new Baddie();",ruleStartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("fact0.setName( \"Gargamel\" );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action1StartIndex=drl.indexOf("insert( fact0 );",action1StartIndex);
  assertFalse(action1StartIndex == -1);
  action2StartIndex=drl.indexOf("Smurf fact1 = new Smurf();",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("fact1.setName( \"Pupa\" );",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("fact1.setAge( 50 );",ruleStartIndex);
  assertTrue(action2StartIndex == -1);
  action2StartIndex=drl.indexOf("insert( fact1 );",ruleStartIndex);
  assertFalse(action2StartIndex == -1);
}
