{
  if (this.docFragment == null) {
    DocumentBuilderFactory f;
    try {
      f=DocumentBuilderFactory.newInstance();
    }
 catch (    FactoryConfigurationError e) {
      try {
        f=(DocumentBuilderFactory)Class.forName("org.apache.xerces.jaxp.DocumentBuilderFactoryImpl").newInstance();
      }
 catch (      Exception e1) {
        throw new RuntimeException("Unable to create new DOM Document",e1);
      }
    }
catch (    Exception e) {
      throw new RuntimeException("Unable to create new DOM Document",e);
    }
    try {
      this.document=f.newDocumentBuilder().newDocument();
    }
 catch (    Exception e) {
      throw new RuntimeException("Unable to create new DOM Document",e);
    }
    this.docFragment=this.document.createDocumentFragment();
  }
  SAXParser localParser=null;
  if (this.parser == null) {
    SAXParserFactory factory=null;
    try {
      factory=SAXParserFactory.newInstance();
    }
 catch (    FactoryConfigurationError e) {
      try {
        factory=(SAXParserFactory)Class.forName("org.apache.xerces.jaxp.SAXParserFactoryImpl").newInstance();
      }
 catch (      Exception e1) {
        throw new RuntimeException("Unable to create new DOM Document",e1);
      }
    }
catch (    Exception e) {
      throw new RuntimeException("Unable to create new DOM Document",e);
    }
    factory.setNamespaceAware(true);
    final String isValidatingString=System.getProperty("drools.schema.validating");
    if (System.getProperty("drools.schema.validating") != null) {
      this.isValidating=Boolean.getBoolean("drools.schema.validating");
    }
    if (this.isValidating == true) {
      factory.setValidating(true);
      try {
        localParser=factory.newSAXParser();
      }
 catch (      final ParserConfigurationException e) {
        throw new RuntimeException(e.getMessage());
      }
      try {
        localParser.setProperty(ExtensibleXmlParser.JAXP_SCHEMA_LANGUAGE,ExtensibleXmlParser.W3C_XML_SCHEMA);
      }
 catch (      final SAXNotRecognizedException e) {
        boolean hideWarnings=Boolean.getBoolean("drools.schema.hidewarnings");
        if (!hideWarnings) {
          logger.warn("Your SAX parser is not JAXP 1.2 compliant - turning off validation.");
        }
        localParser=null;
      }
    }
    if (localParser == null) {
      try {
        this.isValidating=false;
        factory.setValidating(this.isValidating);
        localParser=factory.newSAXParser();
      }
 catch (      final ParserConfigurationException e) {
        throw new RuntimeException(e.getMessage());
      }
    }
  }
 else {
    localParser=this.parser;
  }
  if (!localParser.isNamespaceAware()) {
    throw new RuntimeException("parser must be namespace-aware");
  }
  localParser.parse(in,this);
  return this.data;
}
