{
  this.reteTesterHelper=new ReteTesterHelper();
  this.steps=new HashMap<String,Object>();
  this.steps.put(OBJECT_TYPE_NODE,new ObjectTypeNodeStep(this.reteTesterHelper));
  this.steps.put(LEFT_INPUT_ADAPTER_NODE,new LeftInputAdapterNodeStep(this.reteTesterHelper));
  this.steps.put(BINDING,new BindingStep(this.reteTesterHelper));
  this.steps.put(JOIN_NODE,new JoinNodeStep(this.reteTesterHelper));
  this.steps.put(NOT_NODE,new NotNodeStep(this.reteTesterHelper));
  this.steps.put(EXISTS_NODE,new ExistsNodeStep(this.reteTesterHelper));
  this.steps.put(COLLECT_NODE,new CollectNodeStep(this.reteTesterHelper));
  this.steps.put(ACCUMULATE_NODE,new AccumulateNodeStep(this.reteTesterHelper));
  this.steps.put(RULE_TERMINAL_NODE,new RuleTerminalNodeStep(this.reteTesterHelper));
  this.steps.put(RIGHT_INPUT_ADAPTER_NODE,new RIANodeStep(this.reteTesterHelper));
  this.steps.put(FACTS,new FactsStep(this.reteTesterHelper));
  this.steps.put(WITH,new WithStep(this.reteTesterHelper));
  this.steps.put(LEFT_TUPLE_SINK_STEP,new LeftTupleSinkStep(this.reteTesterHelper));
  this.steps.put(BETA_NODE_STEP,new BetaNodeStep(this.reteTesterHelper));
}
