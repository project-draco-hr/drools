{
  if (!scorecard.isUseReasonCodes()) {
    return;
  }
  String externalClassName=null;
  String reasonCodesField=null;
  String fieldName=null;
  for (  Object obj : scorecard.getExtensionsAndCharacteristicsAndMiningSchemas()) {
    if (obj instanceof Output) {
      Output output=(Output)obj;
      final List<OutputField> outputFields=output.getOutputFields();
      final OutputField outputField=outputFields.get(0);
      externalClassName=ScorecardPMMLUtils.getExtension(outputField.getExtensions(),PMMLExtensionNames.SCORECARD_RESULTANT_SCORE_CLASS).getValue();
      fieldName=outputField.getName();
      Extension e=ScorecardPMMLUtils.getExtension(outputField.getExtensions(),PMMLExtensionNames.SCORECARD_RESULTANT_REASONCODES_FIELD);
      if (e != null) {
        reasonCodesField=e.getValue();
      }
      break;
    }
  }
  if (reasonCodesField != null && externalClassName != null && fieldName != null) {
    Condition condition=new Condition();
    StringBuilder stringBuilder=new StringBuilder("$");
    stringBuilder.append(fieldName).append("Var : ").append(externalClassName).append("()");
    condition.setSnippet(stringBuilder.toString());
    rule.addCondition(condition);
  }
}
