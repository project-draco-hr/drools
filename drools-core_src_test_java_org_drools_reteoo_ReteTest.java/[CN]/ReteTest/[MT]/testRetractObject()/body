{
  final ReteooRuleBase ruleBase=new ReteooRuleBase();
  final ReteooWorkingMemory workingMemory=new ReteooWorkingMemory(ruleBase);
  final Rete rete=ruleBase.getRete();
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,new ClassObjectType(List.class),rete);
  objectTypeNode.attach();
  objectTypeNode.addObjectSink(new MockObjectSink());
  final String string="String";
  final DefaultFactHandle h1=new DefaultFactHandle(1,string);
  rete.assertObject(h1,null,workingMemory);
  final MockObjectSink sink1=(MockObjectSink)objectTypeNode.getObjectSinksAsList().get(0);
  assertLength(0,sink1.getRetracted());
  final List list=new ArrayList();
  final DefaultFactHandle h2=new DefaultFactHandle(1,list);
  rete.retractObject(h2,null,workingMemory);
  final List retracted=sink1.getRetracted();
  assertLength(1,retracted);
  final Object[] results=(Object[])retracted.get(0);
  assertSame(list,((DefaultFactHandle)results[0]).getObject());
}
