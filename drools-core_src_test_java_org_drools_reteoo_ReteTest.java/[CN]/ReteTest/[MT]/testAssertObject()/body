{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final ReteooWorkingMemory workingMemory=new ReteooWorkingMemory(1,ruleBase);
  final Rete rete=ruleBase.getRete();
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,new ClassObjectType(List.class),rete,3);
  objectTypeNode.attach();
  final MockObjectSink sink1=new MockObjectSink();
  objectTypeNode.addObjectSink(sink1);
  final String string="String";
  final DefaultFactHandle h1=new DefaultFactHandle(1,string);
  rete.assertObject(h1,null,workingMemory);
  assertLength(0,sink1.getAsserted());
  final List list=new ArrayList();
  final DefaultFactHandle h2=new DefaultFactHandle(1,list);
  rete.assertObject(h2,new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null),workingMemory);
  final List asserted=sink1.getAsserted();
  assertLength(1,asserted);
  final Object[] results=(Object[])asserted.get(0);
  assertSame(list,((DefaultFactHandle)results[0]).getObject());
}
