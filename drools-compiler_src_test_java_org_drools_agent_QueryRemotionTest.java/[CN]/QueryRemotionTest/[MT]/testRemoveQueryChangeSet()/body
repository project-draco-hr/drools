{
  String header="";
  header+="package org.drools.test\n";
  header+="global java.util.List list\n\n";
  String query1="";
  query1+="query \"all the Strings\"\n";
  query1+="     $strings : String()\n";
  query1+="end\n";
  File f1=fileManager.newFile("rules.drl");
  Writer output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(query1);
  output.close();
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rules.drl' type='DRL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.newFile("changeset.xml");
  output=new BufferedWriter(new FileWriter(fxml));
  output.write(xml);
  output.close();
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase);
  kagent.applyChangeSet(ResourceFactory.newUrlResource(fxml.toURI().toURL()));
  this.kbaseUpdated=false;
  assertEquals(1,kbase.getKnowledgePackages().iterator().next().getRules().size());
  assertTrue(kbase.getKnowledgePackages().iterator().next().getRules().iterator().next().getName().equals("all the Strings"));
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.insert("Some String");
  QueryResults queryResults=ksession.getQueryResults("all the Strings");
  assertTrue(queryResults.size() == 1);
  assertTrue(queryResults.iterator().next().get("$strings").equals("Some String"));
  Thread.sleep(2000);
  query1="";
  query1+="query \"all the Strings 2\"\n";
  query1+="     $strings : String()\n";
  query1+="end\n";
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(query1);
  output.close();
  this.waitUntilKBaseUpdate();
  assertEquals(1,kbase.getKnowledgePackages().iterator().next().getRules().size());
  assertTrue(kbase.getKnowledgePackages().iterator().next().getRules().iterator().next().getName().equals("all the Strings 2"));
  queryResults=ksession.getQueryResults("all the Strings 2");
  assertTrue(queryResults.size() == 1);
  assertTrue(queryResults.iterator().next().get("$strings").equals("Some String"));
  ksession.dispose();
}
