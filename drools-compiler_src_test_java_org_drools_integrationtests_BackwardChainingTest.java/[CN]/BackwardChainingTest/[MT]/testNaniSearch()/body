{
  String str="" + "package org.drools.test  \n" + "import java.util.List\n"+ "import java.util.ArrayList\n"+ "global List list\n"+ "dialect \"mvel\"\n"+ "declare Room"+ "    name : String @position(1)\n"+ "end\n"+ "\n"+ "declare Location\n"+ "    thing : String @position(1)\n"+ "    location : String @position(2)\n"+ "end"+ "\n"+ "declare Door\n"+ "   fromLocation : String @Position(1)\n"+ "   toLocation : String @Position(2)\n"+ "end"+ "\n"+ "declare Edible\n"+ "   thing : String @Position(1)\n"+ "end"+ "\n"+ "declare TastesYucky\n"+ "   thing : String @Position(1)\n"+ "end"+ "\n"+ "declare TastesYucky\n"+ "   thing : String @Position(1)\n"+ "end\n"+ "\n"+ "declare Here\n"+ "   place : String @Position(1)\n"+ "end\n"+ "\n"+ "query whereFood( String thing, String location ) \n"+ "    ( Location(thing, location;) and\n"+ "      Edible(thing;) )\n "+ "    or \n"+ "    ( Location(thing, location;) and\n"+ "      TastesYucky(thing;) ) \n"+ "end\n"+ "\n"+ "query connect( String x, String y ) \n"+ "    Door(x, y;)\n"+ "    or \n"+ "    Door(y, x;)\n"+ "end\n"+ "\n"+ "query look() \n"+ "    Here(place;)\n"+ "    things : List() from accumulate( Location(thing, place;) ,"+ "                                    collectList( thing ) )\n"+ "    exits : List() from accumulate( connect(place, exit;) ,"+ "                                    collectList( [place, exit] ) )\n"+ "end\n"+ "\n"+ "query look2(String place, List things, List food, List exits) \n"+ "    things : List() from accumulate( Location(thing, place;),\n"+ "                                    collectList( thing ) )\n"+ "    food : List() from accumulate( whereFood(thing, place;) ,"+ "                                    collectList( thing ) )\n"+ "    exits : List() from accumulate( connect(place, exit;),\n"+ "                                    collectList( [place, exit] ) )\n"+ "end\n"+ "\n"+ "rule reactiveLook when\n"+ "    Here( place : place) \n"+ "    look2(place, things, exits;)\n"+ "then"+ "    System.out.println( \"  You are in the \" + place );\n"+ "    System.out.println( \"  You can see \" + things );\n"+ "    System.out.println( \"  You can go to \" + exits );\n"+ "end\n"+ "\n"+ "rule init when\n"+ "then\n"+ "        insert( new Room(\"kitchen\") );\n"+ "        insert( new Room(\"office\") );\n"+ "        insert( new Room(\"hall\") );\n"+ "        insert( new Room(\"dining room\") );\n"+ "        insert( new Room(\"cellar\") );\n"+ "        \n"+ "        insert( new Location(\"desk\", \"office\") );\n"+ "        insert( new Location(\"apple\", \"kitchen\") );\n"+ "        insert( new Location(\"flashlight\", \"desk\") );\n"+ "        insert( new Location(\"washing machine\", \"cellar\") );\n"+ "        insert( new Location(\"nani\", \"washing machine\") );\n"+ "        insert( new Location(\"broccoli\", \"kitchen\") );\n"+ "        insert( new Location(\"crackers\", \"kitchen\") );\n"+ "        insert( new Location(\"compuer\", \"office\") );\n"+ "        \n"+ "        insert( new Door(\"office\", \"hall\") );\n"+ "        insert( new Door(\"kitcehn\", \"office\") );\n"+ "        insert( new Door(\"hall\", \"dining room\") );\n"+ "        insert( new Door(\"kitchen\", \"cellar\") );\n"+ "        insert( new Door(\"dining room\", \"kitchen\") );\n"+ "        \n"+ "        insert( new Edible(\"apple\") );\n"+ "        insert( new Edible(\"crackers\") );\n"+ "        \n"+ "        insert( new TastesYucky(\"broccoli\") );  "+ "end\n"+ "\n"+ "rule print when\n"+ "    $o : Object()\n"+ "then"+ "   System.out.println( $o );\n"+ "end\n"+ ""+ "rule go when\n"+ "   String( this == 'go' )\n"+ "then\n"+ "   insert( new Here(\"kitchen\") );\n"+ "end\n";
  System.out.println(str);
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  System.out.println(str);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  QueryResults results=null;
  System.out.println("whereFood");
  results=ksession.getQueryResults("whereFood",new Object[]{variable,variable});
  for (  QueryResultsRow result : results) {
    System.out.println("  " + result.get("thing") + " : "+ result.get("location"));
  }
  System.out.println("");
  System.out.println("connect");
  results=ksession.getQueryResults("connect",new Object[]{variable,variable});
  for (  QueryResultsRow result : results) {
    System.out.println("  " + result.get("x") + " : "+ result.get("y"));
  }
  System.out.println("");
  ksession.insert("go");
  ksession.fireAllRules();
}
