{
  Package pkg=loadPackage("../test_Serializable.drl");
  KnowledgePackage kpkg=new KnowledgePackageImp(pkg);
  kpkg=SerializationHelper.serializeObject(kpkg);
  KnowledgeBase kbase=loadKnowledgeBase();
  kbase.addKnowledgePackages(Collections.singleton(kpkg));
  Map<String,KnowledgeBase> map=new HashMap<String,KnowledgeBase>();
  map.put("x",kbase);
  map=SerializationHelper.serializeObject(map);
  kbase=map.get("x");
  final org.kie.definition.rule.Rule[] rules=kbase.getKnowledgePackages().iterator().next().getRules().toArray(new org.kie.definition.rule.Rule[0]);
  assertEquals(4,rules.length);
  assertEquals("match Person 1",rules[0].getName());
  assertEquals("match Person 2",rules[1].getName());
  assertEquals("match Person 3",rules[2].getName());
  assertEquals("match Integer",rules[3].getName());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.setGlobal("list",new ArrayList());
  final Person bob=new Person("bob");
  ksession.insert(bob);
  ksession=SerializationHelper.getSerialisedStatefulKnowledgeSession(ksession,true);
  assertEquals(1,ksession.getFactCount());
  assertEquals(bob,ksession.getObjects().iterator().next());
  assertEquals(2,((AgendaImpl)ksession.getAgenda()).getAgenda().agendaSize());
  ksession.fireAllRules();
  List list=(List)ksession.getGlobal("list");
  assertEquals(3,list.size());
  assertEquals(new Integer(4),list.get(0));
  List<?> objects=new ArrayList<Object>(ksession.getObjects());
  assertEquals(2,objects.size());
  System.out.println(objects);
  assertTrue(objects.contains(bob));
  assertTrue(objects.contains(new Person("help")));
}
