{
  vars=jtNode.getValues().toArray(new BayesVariable[jtNode.getValues().size()]);
  this.variable=varNode.getContent();
  this.distribution=distribution;
  BayesVariable[] parents=new BayesVariable[varNode.getInEdges().size()];
  for (int i=0; i < parents.length; i++) {
    parents[i]=(BayesVariable)varNode.getInEdges().get(i).getOutGraphNode().getContent();
  }
  varPotential=new double[this.variable.getProbabilityTable().length][];
  for (int i=0; i < varPotential.length; i++) {
    varPotential[i]=distribution;
  }
  BayesVariable[] vars=jtNode.getValues().toArray(new BayesVariable[jtNode.getValues().size()]);
  int numberOfStates=PotentialMultiplier.createNumberOfStates(vars);
  multipliers=PotentialMultiplier.createIndexMultipliers(vars,numberOfStates);
  parentVarPos=PotentialMultiplier.createSubsetVarPos(vars,parents);
  int parentsNumberOfStates=PotentialMultiplier.createNumberOfStates(parents);
  parentIndexMultipliers=PotentialMultiplier.createIndexMultipliers(parents,parentsNumberOfStates);
  varPos=-1;
  for (int i=0; i < vars.length; i++) {
    if (vars[i] == variable) {
      varPos=i;
      break;
    }
  }
  if (varPos == -1 || varPos == vars.length) {
    throw new IllegalStateException("Unable to find Variable in set");
  }
}
