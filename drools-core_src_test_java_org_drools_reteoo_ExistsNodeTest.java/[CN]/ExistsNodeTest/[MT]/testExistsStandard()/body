{
  final Cheese cheddar=new Cheese("cheddar",10);
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.insert(cheddar);
  final LeftTuple tuple1=new LeftTuple(f0);
  this.node.assertLeftTuple(tuple1,this.context,this.workingMemory);
  assertLength(0,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
  final Cheese brie=new Cheese("brie",10);
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.insert(brie);
  this.node.assertObject(f1,this.context,this.workingMemory);
  assertLength(1,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
  assertEquals(new LeftTuple(f0),((Object[])this.sink.getAsserted().get(0))[0]);
  final DefaultFactHandle f2=(DefaultFactHandle)this.workingMemory.insert(new Cheese("gouda",10));
  final LeftTuple tuple2=new LeftTuple(f2);
  this.node.assertLeftTuple(tuple2,this.context,this.workingMemory);
  assertLength(2,this.sink.getAsserted());
  assertLength(0,this.sink.getRetracted());
  assertEquals(2,this.memory.getTupleMemory().size());
  assertEquals(1,this.memory.getFactHandleMemory().size());
  this.node.retractObject(f1,this.context,this.workingMemory);
  assertLength(2,this.sink.getAsserted());
  assertLength(2,this.sink.getRetracted());
}
