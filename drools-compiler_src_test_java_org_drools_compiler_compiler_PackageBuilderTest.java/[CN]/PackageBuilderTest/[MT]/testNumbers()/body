{
  createLiteralRule(new ExprConstraintDescr("booleanPrimitive == true "));
  createLiteralRule(new ExprConstraintDescr("booleanPrimitive == false "));
  createLiteralRule(new ExprConstraintDescr("charPrimitive == 'a' "));
  createLiteralRule(new ExprConstraintDescr("charPrimitive == \"a\" "));
  createLiteralRule(new ExprConstraintDescr("bytePrimitive == 1 "));
  createLiteralRule(new ExprConstraintDescr("bytePrimitive == 0 "));
  createLiteralRule(new ExprConstraintDescr("bytePrimitive == -1 "));
  createLiteralRule(new ExprConstraintDescr("shortPrimitive == 1 "));
  createLiteralRule(new ExprConstraintDescr("shortPrimitive == 0 "));
  createLiteralRule(new ExprConstraintDescr("shortPrimitive == -1 "));
  createLiteralRule(new ExprConstraintDescr("intPrimitive == 1"));
  createLiteralRule(new ExprConstraintDescr("intPrimitive == 0"));
  createLiteralRule(new ExprConstraintDescr("intPrimitive == -1"));
  createLiteralRule(new ExprConstraintDescr("longPrimitive == 1"));
  createLiteralRule(new ExprConstraintDescr("longPrimitive == 0"));
  createLiteralRule(new ExprConstraintDescr("longPrimitive == -1"));
  createLiteralRule(new ExprConstraintDescr("floatPrimitive == 1.1"));
  createLiteralRule(new ExprConstraintDescr("floatPrimitive == 0"));
  createLiteralRule(new ExprConstraintDescr("floatPrimitive == -1.1"));
  createLiteralRule(new ExprConstraintDescr("doublePrimitive == 1.1"));
  createLiteralRule(new ExprConstraintDescr("doublePrimitive == 0"));
  createLiteralRule(new ExprConstraintDescr("doublePrimitive == -1.1"));
}
