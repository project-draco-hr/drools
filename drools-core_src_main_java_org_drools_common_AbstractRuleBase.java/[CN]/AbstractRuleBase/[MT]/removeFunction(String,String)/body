{
synchronized (this.pkgs) {
    final Package pkg=this.pkgs.get(packageName);
    if (pkg == null) {
      throw new IllegalArgumentException("Package name '" + packageName + "' does not exist for this Rule Base.");
    }
    this.eventSupport.fireBeforeFunctionRemoved(pkg,functionName);
    if (!pkg.getFunctions().containsKey(functionName)) {
      throw new IllegalArgumentException("function name '" + packageName + "' does not exist in the Package '"+ packageName+ "'.");
    }
    pkg.removeFunction(functionName);
    if (this.reloadPackageCompilationData == null) {
      this.reloadPackageCompilationData=new ReloadPackageCompilationData();
    }
    this.reloadPackageCompilationData.addDialectDatas(pkg.getDialectRuntimeRegistry());
    this.eventSupport.fireAfterFunctionRemoved(pkg,functionName);
  }
}
