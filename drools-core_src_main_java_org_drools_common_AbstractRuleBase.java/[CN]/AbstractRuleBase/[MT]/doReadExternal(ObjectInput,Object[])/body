{
  this.pkgs=(Map)stream.readObject();
  this.packageClassLoader=new CompositePackageClassLoader(Thread.currentThread().getContextClassLoader());
  for (final Iterator it=this.pkgs.values().iterator(); it.hasNext(); ) {
    this.packageClassLoader.addClassLoader(((Package)it.next()).getPackageCompilationData().getClassLoader());
  }
  final byte[] bytes=(byte[])stream.readObject();
  final ObjectInputStreamWithLoader streamWithLoader=new ObjectInputStreamWithLoader(new ByteArrayInputStream(bytes),this.packageClassLoader);
  this.id=(String)streamWithLoader.readObject();
  this.factHandleFactory=(FactHandleFactory)streamWithLoader.readObject();
  this.globals=(Map)streamWithLoader.readObject();
  this.config=(RuleBaseConfiguration)streamWithLoader.readObject();
  this.statefulSessions=new ObjectHashSet();
  for (int i=0, length=objects.length; i < length; i++) {
    objects[i]=streamWithLoader.readObject();
  }
}
