{
  final Map globals=pkg.getGlobals();
  final List imports=pkg.getImports();
  final PackageCompilationData compilationData=pkg.getPackageCompilationData();
  final PackageCompilationData newCompilationData=newPkg.getPackageCompilationData();
  final String[] files=newCompilationData.list();
  for (int i=0, length=files.length; i < length; i++) {
    compilationData.write(files[i],newCompilationData.read(files[i]));
  }
  imports.addAll(newPkg.getImports());
  compilationData.putAllInvokers(newCompilationData.getInvokers());
  for (final Iterator it=newPkg.getGlobals().keySet().iterator(); it.hasNext(); ) {
    final String identifier=(String)it.next();
    final Class type=(Class)globals.get(identifier);
    if (globals.containsKey(identifier) && !globals.get(identifier).equals(type)) {
      throw new PackageIntegrationException("Unable to merge new Package",newPkg);
    }
  }
  globals.putAll(newPkg.getGlobals());
}
