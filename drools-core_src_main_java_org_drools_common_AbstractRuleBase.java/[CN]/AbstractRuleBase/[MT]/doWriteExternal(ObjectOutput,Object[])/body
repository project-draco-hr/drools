{
  stream.writeObject(this.pkgs);
synchronized (this.classLoader.getStore()) {
    stream.writeObject(this.classLoader.getStore());
  }
  final ByteArrayOutputStream bos=new ByteArrayOutputStream();
  final ObjectOutput out=new ObjectOutputStream(bos);
  out.writeObject(this.id);
  out.writeObject(this.processes);
  out.writeObject(this.agendaGroupRuleTotals);
  out.writeObject(this.factHandleFactory);
  out.writeObject(this.globals);
  out.writeObject(this.config);
  this.eventSupport.removeEventListener(RuleBaseEventListener.class);
  out.writeObject(this.eventSupport);
  for (int i=0, length=objects.length; i < length; i++) {
    out.writeObject(objects[i]);
  }
  out.close();
  stream.writeObject(bos.toByteArray());
}
