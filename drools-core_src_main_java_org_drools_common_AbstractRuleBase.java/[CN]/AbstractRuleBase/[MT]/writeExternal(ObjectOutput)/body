{
  ObjectOutput droolsStream;
  boolean isDrools=out instanceof DroolsObjectOutputStream;
  ByteArrayOutputStream bytes;
  if (isDrools) {
    droolsStream=out;
    bytes=null;
  }
 else {
    bytes=new ByteArrayOutputStream();
    droolsStream=new DroolsObjectOutputStream(bytes);
  }
  droolsStream.writeBoolean(this.config.isClassLoaderCacheEnabled());
  droolsStream.writeObject(this.declarationClassLoader.getStore());
  droolsStream.writeObject(this.config);
  droolsStream.writeObject(this.pkgs);
  droolsStream.writeObject(this.id);
  droolsStream.writeInt(this.workingMemoryCounter.get());
  droolsStream.writeObject(this.processes);
  droolsStream.writeObject(this.agendaGroupRuleTotals);
  droolsStream.writeUTF(this.factHandleFactory.getClass().getName());
  droolsStream.writeObject(buildGlobalMapForSerialization());
  droolsStream.writeObject(this.partitionIDs);
  this.eventSupport.removeEventListener(RuleBaseEventListener.class);
  droolsStream.writeObject(this.eventSupport);
  if (!isDrools) {
    droolsStream.flush();
    droolsStream.close();
    bytes.close();
    out.writeObject(bytes.toByteArray());
  }
}
