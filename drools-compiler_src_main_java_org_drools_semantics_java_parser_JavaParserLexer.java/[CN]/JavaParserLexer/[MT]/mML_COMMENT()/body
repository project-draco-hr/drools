{
  try {
    ruleNestingLevel++;
    int _type=ML_COMMENT;
    int _start=getCharIndex();
    int _line=getLine();
    int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      match("/*");
      loop5:       do {
        int alt5=2;
        int LA5_0=input.LA(1);
        if ((LA5_0 == '*')) {
          int LA5_1=input.LA(2);
          if ((LA5_1 == '/')) {
            alt5=2;
          }
 else           if (((LA5_1 >= '\u0000' && LA5_1 <= '.') || (LA5_1 >= '0' && LA5_1 <= '\uFFFE'))) {
            alt5=1;
          }
        }
 else         if (((LA5_0 >= '\u0000' && LA5_0 <= ')') || (LA5_0 >= '+' && LA5_0 <= '\uFFFE'))) {
          alt5=1;
        }
switch (alt5) {
case 1:
{
            matchAny();
          }
        break;
default :
      break loop5;
  }
}
 while (true);
match("*/");
_channel=HIDDEN;
}
if (token == null && ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
  finally {
ruleNestingLevel--;
}
}
