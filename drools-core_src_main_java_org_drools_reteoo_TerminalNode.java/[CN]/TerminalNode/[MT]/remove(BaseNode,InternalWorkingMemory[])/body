{
  for (int i=0, length=workingMemories.length; i < length; i++) {
    final InternalWorkingMemory workingMemory=workingMemories[i];
    final TerminalNodeMemory memory=(TerminalNodeMemory)workingMemory.getNodeMemory(this);
    final Iterator it=memory.getTupleMemory().iterator();
    for (ObjectEntry entry=(ObjectEntry)it.next(); entry != null; entry=(ObjectEntry)it.next()) {
      final Activation activation=(Activation)entry.getValue();
      if (activation.isActivated()) {
        activation.remove();
        workingMemory.getAgendaEventSupport().fireActivationCancelled(activation);
      }
      final PropagationContext propagationContext=new PropagationContextImpl(workingMemory.getNextPropagationIdCounter(),PropagationContext.RULE_REMOVAL,null,null);
      workingMemory.getTruthMaintenanceSystem().removeLogicalDependencies(activation,propagationContext,this.rule);
    }
    workingMemory.propagateQueuedActions();
  }
  this.tupleSource.remove(this,workingMemories);
}
