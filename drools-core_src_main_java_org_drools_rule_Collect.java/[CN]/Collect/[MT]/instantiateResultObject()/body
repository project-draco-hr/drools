{
  try {
    return (Collection)((ClassObjectType)resultColumn.getObjectType()).getClassType().newInstance();
  }
 catch (  ClassCastException cce) {
    throw new RuntimeDroolsException("Collect CE requires a Collection implementation as return type",cce);
  }
catch (  InstantiationException e) {
    throw new RuntimeDroolsException("Collect CE requires a non-argument constructor for the return type",e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeDroolsException("Collect CE requires an accessible constructor for the return type",e);
  }
}
