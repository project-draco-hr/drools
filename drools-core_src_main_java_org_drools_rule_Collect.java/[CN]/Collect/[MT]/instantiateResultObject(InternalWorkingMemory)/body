{
  try {
    if (this.cls == null) {
      ClassObjectType objType=((ClassObjectType)this.resultPattern.getObjectType());
      String className=determineResultClassName(objType);
      this.cls=((InternalRuleBase)wm.getRuleBase()).getRootClassLoader().loadClass(className);
    }
    return (Collection)this.cls.newInstance();
  }
 catch (  final ClassCastException cce) {
    throw new RuntimeDroolsException("Collect CE requires a Collection implementation as return type",cce);
  }
catch (  final InstantiationException e) {
    throw new RuntimeDroolsException("Collect CE requires a non-argument constructor for the return type",e);
  }
catch (  final IllegalAccessException e) {
    throw new RuntimeDroolsException("Collect CE requires an accessible constructor for the return type",e);
  }
catch (  final ClassNotFoundException e) {
    throw new RuntimeDroolsException("Collect CE could not resolve return result class '" + ((ClassObjectType)this.resultPattern.getObjectType()).getClassName() + "'",e);
  }
}
