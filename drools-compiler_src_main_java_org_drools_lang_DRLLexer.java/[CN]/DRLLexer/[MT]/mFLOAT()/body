{
  try {
    this.ruleNestingLevel++;
    final int _type=FLOAT;
    final int _start=getCharIndex();
    final int _line=getLine();
    final int _charPosition=getCharPositionInLine();
    final int _channel=Token.DEFAULT_CHANNEL;
{
      int alt5=2;
      final int LA5_0=this.input.LA(1);
      if ((LA5_0 == '-')) {
        alt5=1;
      }
switch (alt5) {
case 1:
{
          match('-');
          if (this.failed) {
            return;
          }
        }
      break;
  }
  int cnt6=0;
  loop6:   do {
    int alt6=2;
    final int LA6_0=this.input.LA(1);
    if (((LA6_0 >= '0' && LA6_0 <= '9'))) {
      alt6=1;
    }
switch (alt6) {
case 1:
{
        matchRange('0','9');
        if (this.failed) {
          return;
        }
      }
    break;
default :
  if (cnt6 >= 1) {
    break loop6;
  }
if (this.backtracking > 0) {
  this.failed=true;
  return;
}
final EarlyExitException eee=new EarlyExitException(6,this.input);
throw eee;
}
cnt6++;
}
 while (true);
match('.');
if (this.failed) {
return;
}
int cnt7=0;
loop7: do {
int alt7=2;
final int LA7_0=this.input.LA(1);
if (((LA7_0 >= '0' && LA7_0 <= '9'))) {
alt7=1;
}
switch (alt7) {
case 1:
{
matchRange('0','9');
if (this.failed) {
return;
}
}
break;
default :
if (cnt7 >= 1) {
break loop7;
}
if (this.backtracking > 0) {
this.failed=true;
return;
}
final EarlyExitException eee=new EarlyExitException(7,this.input);
throw eee;
}
cnt7++;
}
 while (true);
}
if (this.backtracking == 0) {
if (this.token == null && this.ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
}
  finally {
this.ruleNestingLevel--;
}
}
