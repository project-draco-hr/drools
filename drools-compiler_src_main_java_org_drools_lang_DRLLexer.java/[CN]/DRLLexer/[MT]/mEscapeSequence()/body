{
  try {
    this.ruleNestingLevel++;
    int alt11=3;
    final int LA11_0=this.input.LA(1);
    if ((LA11_0 == '\\')) {
switch (this.input.LA(2)) {
case '\"':
case '\'':
case '.':
case '\\':
case 'b':
case 'f':
case 'n':
case 'r':
case 't':
        alt11=1;
      break;
case 'u':
    alt11=2;
  break;
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
alt11=3;
break;
default :
if (this.backtracking > 0) {
this.failed=true;
return;
}
final NoViableAltException nvae=new NoViableAltException("1497:1: fragment EscapeSequence : ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\'|'.') | UnicodeEscape | OctalEscape );",11,1,this.input);
throw nvae;
}
}
 else {
if (this.backtracking > 0) {
this.failed=true;
return;
}
final NoViableAltException nvae=new NoViableAltException("1497:1: fragment EscapeSequence : ( '\\\\' ('b'|'t'|'n'|'f'|'r'|'\\\"'|'\\''|'\\\\'|'.') | UnicodeEscape | OctalEscape );",11,0,this.input);
throw nvae;
}
switch (alt11) {
case 1:
{
match('\\');
if (this.failed) {
return;
}
if (this.input.LA(1) == '\"' || this.input.LA(1) == '\'' || this.input.LA(1) == '.' || this.input.LA(1) == '\\' || this.input.LA(1) == 'b' || this.input.LA(1) == 'f' || this.input.LA(1) == 'n' || this.input.LA(1) == 'r' || this.input.LA(1) == 't') {
this.input.consume();
this.failed=false;
}
 else {
if (this.backtracking > 0) {
this.failed=true;
return;
}
final MismatchedSetException mse=new MismatchedSetException(null,this.input);
recover(mse);
throw mse;
}
}
break;
case 2:
{
mUnicodeEscape();
if (this.failed) {
return;
}
}
break;
case 3:
{
mOctalEscape();
if (this.failed) {
return;
}
}
break;
}
}
  finally {
this.ruleNestingLevel--;
}
}
