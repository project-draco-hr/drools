{
  try {
    ruleNestingLevel++;
    int _type=MISC;
    int _start=getCharIndex();
    int _line=getLine();
    int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      if (input.LA(1) == '!' || (input.LA(1) >= '$' && input.LA(1) <= '\'') || (input.LA(1) >= '*' && input.LA(1) <= '-') || input.LA(1) == '/' || input.LA(1) == '=' || (input.LA(1) >= '?' && input.LA(1) <= '@') || input.LA(1) == '\\' || (input.LA(1) >= '^' && input.LA(1) <= '_') || input.LA(1) == '|') {
        input.consume();
        failed=false;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return;
        }
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
    }
    if (backtracking == 0) {
      if (token == null && ruleNestingLevel == 1) {
        emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
      }
    }
  }
  finally {
    ruleNestingLevel--;
  }
}
