{
  try {
    ruleNestingLevel++;
    int _type=WS;
    int _start=getCharIndex();
    int _line=getLine();
    int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      int alt3=4;
switch (input.LA(1)) {
case ' ':
        alt3=1;
      break;
case '\t':
    alt3=2;
  break;
case '\f':
alt3=3;
break;
case '\n':
case '\r':
alt3=4;
break;
default :
if (backtracking > 0) {
failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("1274:17: ( ' ' | '\\t' | '\\f' | EOL )",3,0,input);
throw nvae;
}
switch (alt3) {
case 1:
{
match(' ');
if (failed) return;
}
break;
case 2:
{
match('\t');
if (failed) return;
}
break;
case 3:
{
match('\f');
if (failed) return;
}
break;
case 4:
{
mEOL();
if (failed) return;
}
break;
}
if (backtracking == 0) {
_channel=HIDDEN;
}
}
if (backtracking == 0) {
if (token == null && ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
}
  finally {
ruleNestingLevel--;
}
}
