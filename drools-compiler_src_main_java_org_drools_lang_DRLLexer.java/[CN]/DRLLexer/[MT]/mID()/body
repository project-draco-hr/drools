{
  try {
    this.ruleNestingLevel++;
    final int _type=ID;
    final int _start=getCharIndex();
    final int _line=getLine();
    final int _charPosition=getCharPositionInLine();
    final int _channel=Token.DEFAULT_CHANNEL;
{
      if (this.input.LA(1) == '$' || (this.input.LA(1) >= 'A' && this.input.LA(1) <= 'Z') || this.input.LA(1) == '_' || (this.input.LA(1) >= 'a' && this.input.LA(1) <= 'z') || (this.input.LA(1) >= '\u00C0' && this.input.LA(1) <= '\u00FF')) {
        this.input.consume();
        this.failed=false;
      }
 else {
        if (this.backtracking > 0) {
          this.failed=true;
          return;
        }
        final MismatchedSetException mse=new MismatchedSetException(null,this.input);
        recover(mse);
        throw mse;
      }
      loop14:       do {
        int alt14=2;
        final int LA14_0=this.input.LA(1);
        if (((LA14_0 >= '0' && LA14_0 <= '9') || (LA14_0 >= 'A' && LA14_0 <= 'Z') || LA14_0 == '_' || (LA14_0 >= 'a' && LA14_0 <= 'z') || (LA14_0 >= '\u00C0' && LA14_0 <= '\u00FF'))) {
          alt14=1;
        }
switch (alt14) {
case 1:
{
            if ((this.input.LA(1) >= '0' && this.input.LA(1) <= '9') || (this.input.LA(1) >= 'A' && this.input.LA(1) <= 'Z') || this.input.LA(1) == '_' || (this.input.LA(1) >= 'a' && this.input.LA(1) <= 'z') || (this.input.LA(1) >= '\u00C0' && this.input.LA(1) <= '\u00FF')) {
              this.input.consume();
              this.failed=false;
            }
 else {
              if (this.backtracking > 0) {
                this.failed=true;
                return;
              }
              final MismatchedSetException mse=new MismatchedSetException(null,this.input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      break loop14;
  }
}
 while (true);
}
if (this.backtracking == 0) {
if (this.token == null && this.ruleNestingLevel == 1) {
  emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
}
  finally {
this.ruleNestingLevel--;
}
}
