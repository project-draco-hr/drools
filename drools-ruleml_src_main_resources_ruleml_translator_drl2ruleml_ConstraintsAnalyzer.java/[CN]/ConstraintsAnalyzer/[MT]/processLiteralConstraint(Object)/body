{
  LiteralConstraint literalConstraint=(LiteralConstraint)constraint;
  ClassFieldReader field=(ClassFieldReader)literalConstraint.getFieldExtractor();
  Evaluator evaluator=literalConstraint.getEvaluator();
  String relationName="";
  if (evaluator instanceof StringEqualEvaluator || evaluator instanceof IntegerEqualEvaluator || evaluator instanceof ObjectEqualEvaluator) {
    String fieldName=field.getFieldName();
    String value=literalConstraint.getField().getValue().toString();
    PropertyInfo propertyInfo=new PropertyInfo();
    propertyInfo.setValue(value);
    propertyInfo.setName(fieldName);
    propertyInfo.setClazz(field.getClassName());
    if (whenPartAnalyzer.getBindingsManager().containsKey(fieldName,value)) {
      whenPartAnalyzer.getBindingsManager().get(fieldName,value).setValue(value);
    }
    return propertyInfo;
  }
 else   if (evaluator instanceof IntegerLessEvaluator) {
    relationName="LessThan";
  }
 else   if (evaluator instanceof IntegerLessOrEqualEvaluator) {
    relationName="lessThanOrEqual";
  }
 else   if (evaluator instanceof IntegerGreaterEvaluator) {
    relationName="greaterThan";
  }
 else   if (evaluator instanceof IntegerGreaterOrEqualEvaluator) {
    relationName="greaterThanOrEquals";
  }
  List<JAXBElement<?>> content=new ArrayList<JAXBElement<?>>();
  RelType relType=Drools2RuleMLTranslator.builder.createRel(relationName);
  JAXBElement<?> opAtom=Drools2RuleMLTranslator.builder.createOp(relType);
  content.add(opAtom);
  String var=Drools2RuleMLTranslator.builder.createUniqueVar();
  JAXBElement<VarType> varType=Drools2RuleMLTranslator.builder.createVar(var);
  content.add(varType);
  JAXBElement<IndType> indType=Drools2RuleMLTranslator.builder.createInd(literalConstraint.getField().getValue().toString());
  content.add(indType);
  JAXBElement<AtomType> createAtom=Drools2RuleMLTranslator.builder.createAtom(content.toArray(new JAXBElement<?>[content.size()]));
  this.other.add(createAtom);
  PropertyInfo propertyInfo=new PropertyInfo();
  propertyInfo.setName(field.getFieldName());
  propertyInfo.setVar(var);
  return propertyInfo;
}
