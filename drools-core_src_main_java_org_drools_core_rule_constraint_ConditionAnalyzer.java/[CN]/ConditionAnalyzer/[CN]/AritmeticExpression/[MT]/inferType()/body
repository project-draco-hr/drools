{
  if (isStringConcat()) {
    return String.class;
  }
  if (operator.isBitwiseOperation()) {
    Class<?> type=left.getType();
    return type == long.class || type == Long.class ? long.class : int.class;
  }
  if (left.getType().isPrimitive() && left.getType() == right.getType()) {
    return left.getType();
  }
  if (left.getType() == BigDecimal.class || right.getType() == BigDecimal.class) {
    return BigDecimal.class;
  }
  if (left.getType() == BigInteger.class || right.getType() == BigInteger.class) {
    return BigInteger.class;
  }
  Class<?> primitiveLeft=convertToPrimitiveType(left.getType());
  Class<?> primitiveRight=convertToPrimitiveType(right.getType());
  return primitiveLeft == primitiveRight ? primitiveLeft : double.class;
}
