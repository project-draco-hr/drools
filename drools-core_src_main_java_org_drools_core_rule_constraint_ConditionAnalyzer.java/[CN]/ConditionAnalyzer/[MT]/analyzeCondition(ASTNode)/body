{
  boolean isNegated=false;
  if (node instanceof Negation) {
    isNegated=true;
    ExecutableStatement statement=((Negation)node).getStatement();
    if (statement instanceof ExecutableLiteral) {
      return new FixedValueCondition(!(Boolean)((ExecutableLiteral)statement).getLiteral());
    }
    node=((ExecutableAccessor)statement).getNode();
  }
  node=analyzeSubstatement(node);
  if (node instanceof LiteralNode && node.getEgressType() == Boolean.class) {
    boolean literalValue=(Boolean)node.getLiteralValue();
    return new FixedValueCondition(isNegated ? !literalValue : literalValue);
  }
  if (node instanceof Negation) {
    isNegated=!isNegated;
    node=((ExecutableAccessor)((Negation)node).getStatement()).getNode();
    node=analyzeSubstatement(node);
  }
  if (node instanceof And || node instanceof Or) {
    return analyzeCombinedCondition((BooleanNode)node,isNegated);
  }
  return analyzeSingleCondition(node,isNegated);
}
