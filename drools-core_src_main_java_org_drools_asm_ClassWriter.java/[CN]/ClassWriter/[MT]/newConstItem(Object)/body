{
  if (cst instanceof Integer) {
    final int val=((Integer)cst).intValue();
    return newInteger(val);
  }
 else   if (cst instanceof Byte) {
    final int val=((Byte)cst).intValue();
    return newInteger(val);
  }
 else   if (cst instanceof Character) {
    final int val=((Character)cst).charValue();
    return newInteger(val);
  }
 else   if (cst instanceof Short) {
    final int val=((Short)cst).intValue();
    return newInteger(val);
  }
 else   if (cst instanceof Boolean) {
    final int val=((Boolean)cst).booleanValue() ? 1 : 0;
    return newInteger(val);
  }
 else   if (cst instanceof Float) {
    final float val=((Float)cst).floatValue();
    return newFloat(val);
  }
 else   if (cst instanceof Long) {
    final long val=((Long)cst).longValue();
    return newLong(val);
  }
 else   if (cst instanceof Double) {
    final double val=((Double)cst).doubleValue();
    return newDouble(val);
  }
 else   if (cst instanceof String) {
    return newString((String)cst);
  }
 else   if (cst instanceof Type) {
    final Type t=(Type)cst;
    return newClassItem(t.getSort() == Type.OBJECT ? t.getInternalName() : t.getDescriptor());
  }
 else {
    throw new IllegalArgumentException("value " + cst);
  }
}
