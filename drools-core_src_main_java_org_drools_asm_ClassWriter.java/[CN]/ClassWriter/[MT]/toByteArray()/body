{
  int size=24 + 2 * this.interfaceCount;
  int nbFields=0;
  FieldWriter fb=this.firstField;
  while (fb != null) {
    ++nbFields;
    size+=fb.getSize();
    fb=fb.next;
  }
  int nbMethods=0;
  MethodWriter mb=this.firstMethod;
  while (mb != null) {
    ++nbMethods;
    size+=mb.getSize();
    mb=mb.next;
  }
  int attributeCount=0;
  if (this.signature != 0) {
    ++attributeCount;
    size+=8;
    newUTF8("Signature");
  }
  if (this.sourceFile != 0) {
    ++attributeCount;
    size+=8;
    newUTF8("SourceFile");
  }
  if (this.sourceDebug != null) {
    ++attributeCount;
    size+=this.sourceDebug.length + 4;
    newUTF8("SourceDebugExtension");
  }
  if (this.enclosingMethodOwner != 0) {
    ++attributeCount;
    size+=10;
    newUTF8("EnclosingMethod");
  }
  if ((this.access & Opcodes.ACC_DEPRECATED) != 0) {
    ++attributeCount;
    size+=6;
    newUTF8("Deprecated");
  }
  if ((this.access & Opcodes.ACC_SYNTHETIC) != 0 && (this.version & 0xffff) < Opcodes.V1_5) {
    ++attributeCount;
    size+=6;
    newUTF8("Synthetic");
  }
  if (this.version == Opcodes.V1_4) {
    if ((this.access & Opcodes.ACC_ANNOTATION) != 0) {
      ++attributeCount;
      size+=6;
      newUTF8("Annotation");
    }
    if ((this.access & Opcodes.ACC_ENUM) != 0) {
      ++attributeCount;
      size+=6;
      newUTF8("Enum");
    }
  }
  if (this.innerClasses != null) {
    ++attributeCount;
    size+=8 + this.innerClasses.length;
    newUTF8("InnerClasses");
  }
  if (this.anns != null) {
    ++attributeCount;
    size+=8 + this.anns.getSize();
    newUTF8("RuntimeVisibleAnnotations");
  }
  if (this.ianns != null) {
    ++attributeCount;
    size+=8 + this.ianns.getSize();
    newUTF8("RuntimeInvisibleAnnotations");
  }
  if (this.attrs != null) {
    attributeCount+=this.attrs.getCount();
    size+=this.attrs.getSize(this,null,0,-1,-1);
  }
  size+=this.pool.length;
  final ByteVector out=new ByteVector(size);
  out.putInt(0xCAFEBABE).putInt(this.version);
  out.putShort(this.index).putByteArray(this.pool.data,0,this.pool.length);
  out.putShort(this.access).putShort(this.name).putShort(this.superName);
  out.putShort(this.interfaceCount);
  for (int i=0; i < this.interfaceCount; ++i) {
    out.putShort(this.interfaces[i]);
  }
  out.putShort(nbFields);
  fb=this.firstField;
  while (fb != null) {
    fb.put(out);
    fb=fb.next;
  }
  out.putShort(nbMethods);
  mb=this.firstMethod;
  while (mb != null) {
    mb.put(out);
    mb=mb.next;
  }
  out.putShort(attributeCount);
  if (this.signature != 0) {
    out.putShort(newUTF8("Signature")).putInt(2).putShort(this.signature);
  }
  if (this.sourceFile != 0) {
    out.putShort(newUTF8("SourceFile")).putInt(2).putShort(this.sourceFile);
  }
  if (this.sourceDebug != null) {
    final int len=this.sourceDebug.length - 2;
    out.putShort(newUTF8("SourceDebugExtension")).putInt(len);
    out.putByteArray(this.sourceDebug.data,2,len);
  }
  if (this.enclosingMethodOwner != 0) {
    out.putShort(newUTF8("EnclosingMethod")).putInt(4);
    out.putShort(this.enclosingMethodOwner).putShort(this.enclosingMethod);
  }
  if ((this.access & Opcodes.ACC_DEPRECATED) != 0) {
    out.putShort(newUTF8("Deprecated")).putInt(0);
  }
  if ((this.access & Opcodes.ACC_SYNTHETIC) != 0 && (this.version & 0xffff) < Opcodes.V1_5) {
    out.putShort(newUTF8("Synthetic")).putInt(0);
  }
  if (this.version == Opcodes.V1_4) {
    if ((this.access & Opcodes.ACC_ANNOTATION) != 0) {
      out.putShort(newUTF8("Annotation")).putInt(0);
    }
    if ((this.access & Opcodes.ACC_ENUM) != 0) {
      out.putShort(newUTF8("Enum")).putInt(0);
    }
  }
  if (this.innerClasses != null) {
    out.putShort(newUTF8("InnerClasses"));
    out.putInt(this.innerClasses.length + 2).putShort(this.innerClassesCount);
    out.putByteArray(this.innerClasses.data,0,this.innerClasses.length);
  }
  if (this.anns != null) {
    out.putShort(newUTF8("RuntimeVisibleAnnotations"));
    this.anns.put(out);
  }
  if (this.ianns != null) {
    out.putShort(newUTF8("RuntimeInvisibleAnnotations"));
    this.ianns.put(out);
  }
  if (this.attrs != null) {
    this.attrs.put(this,null,0,-1,-1,out);
  }
  return out.data;
}
