{
  final List<ProcessValidationError> errors=new ArrayList<ProcessValidationError>();
  if (process.getName() == null) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no name."));
  }
  if (process.getId() == null || "".equals(process.getId())) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no id."));
  }
  if (process.getPackageName() == null || "".equals(process.getPackageName())) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no package name."));
  }
  if (process.getStart() == null) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no start node."));
  }
  startNodeFound=false;
  endNodeFound=false;
  final Node[] nodes=process.getNodes();
  validateNodes(nodes,errors,process);
  if (!startNodeFound) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no start node."));
  }
  if (!endNodeFound) {
    errors.add(new ProcessValidationErrorImpl(process,"Process has no end node."));
  }
  for (final Iterator<Variable> it=process.getVariableScope().getVariables().iterator(); it.hasNext(); ) {
    final Variable variable=it.next();
    if (variable.getType() == null) {
      errors.add(new ProcessValidationErrorImpl(process,"Variable '" + variable.getName() + "' has no type."));
    }
  }
  checkAllNodesConnectedToStart(process,errors);
  return errors.toArray(new ProcessValidationError[errors.size()]);
}
