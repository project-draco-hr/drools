{
  if (!nodes.containsKey(node)) {
    throw new IllegalStateException("A process node is connected with a node that does not belong to the process.");
  }
  final Boolean prevValue=(Boolean)nodes.put(node,Boolean.TRUE);
  if (prevValue == Boolean.FALSE) {
    for (final Iterator<List<Connection>> it=node.getOutgoingConnections().values().iterator(); it.hasNext(); ) {
      final List<Connection> list=it.next();
      for (final Iterator<Connection> it2=list.iterator(); it2.hasNext(); ) {
        processNode(it2.next().getTo(),nodes);
      }
    }
  }
}
