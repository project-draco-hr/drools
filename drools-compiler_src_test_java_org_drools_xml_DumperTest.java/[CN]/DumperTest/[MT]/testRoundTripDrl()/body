{
  DrlParser parser=new DrlParser();
  final PackageDescr pkgOriginal=parser.parse(new InputStreamReader(getClass().getResourceAsStream("test_Dump.drl")));
  final DrlDumper dumper=new DrlDumper();
  final String result=dumper.dump(pkgOriginal);
  assertNotNull(result);
  parser=new DrlParser();
  final PackageDescr pkgDumped=parser.parse(new StringReader(result));
  assertEquals(pkgOriginal.getName(),pkgDumped.getName());
  assertEquals(pkgOriginal.getFunctions().size(),pkgDumped.getFunctions().size());
  assertEquals(pkgOriginal.getRules().size(),pkgDumped.getRules().size());
  assertEquals(pkgOriginal.getGlobals().size(),pkgDumped.getGlobals().size());
  final RuleDescr ruleOriginal=(RuleDescr)pkgOriginal.getRules().get(0);
  final RuleDescr ruleDumped=(RuleDescr)pkgDumped.getRules().get(0);
  assertEquals(ruleOriginal.getName(),ruleDumped.getName());
  assertEquals(ruleOriginal.getLhs().getDescrs().size(),ruleDumped.getLhs().getDescrs().size());
  assertEquals(ruleOriginal.getConsequence(),ruleDumped.getConsequence());
  BufferedReader reader=new BufferedReader(new InputStreamReader(getClass().getResourceAsStream("test_Dump.drl")));
  StringBuffer buffer=new StringBuffer();
  String s=null;
  while ((s=reader.readLine()) != null) {
    buffer.append(s);
  }
  assertEqualsIgnoreWhitespace(buffer.toString(),result);
}
