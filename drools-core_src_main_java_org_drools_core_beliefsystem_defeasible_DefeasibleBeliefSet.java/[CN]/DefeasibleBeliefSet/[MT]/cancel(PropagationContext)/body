{
  FastIterator it=iterator();
  for (LinkedListEntry<DefeasibleLogicalDependency> node=getFirst(); node != tailUndefeated; ) {
    LinkedListEntry<DefeasibleLogicalDependency> temp=(LinkedListEntry<DefeasibleLogicalDependency>)it.next(node);
    final DefeasibleLogicalDependency dep=node.getObject();
    dep.getJustifier().getLogicalDependencies().remove(dep);
    remove(dep);
    node=temp;
  }
  LinkedListEntry last=(LinkedListEntry)getFirst();
  final LogicalDependency node=(LogicalDependency)last.getObject();
  node.getJustifier().getLogicalDependencies().remove(node);
  positiveFactHandle=null;
  negativeFactHandle=null;
}
