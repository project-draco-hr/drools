{
  DefeasibleMode newDep=(DefeasibleMode)node;
  newDep.setStatus(resolveStatus(newDep));
  RuleImpl rule=newDep.getLogicalDependency().getJustifier().getRule();
  boolean wasDefeated=false;
  for (DefeasibleMode existingDep=rootUndefeated; existingDep != null; existingDep=(DefeasibleMode)existingDep.getNext()) {
    wasDefeated=checkIsDefeated(newDep,rule,existingDep);
    if (wasDefeated) {
      existingDep.addDefeated(newDep);
      break;
    }
  }
  if (!wasDefeated) {
    DefeasibleMode stagedDeps=null;
    for (DefeasibleMode existingDep=rootUndefeated; existingDep != null; ) {
      DefeasibleMode next=(DefeasibleMode)existingDep.getNext();
      if (checkIsDefeated(existingDep,existingDep.getLogicalDependency().getJustifier().getRule(),newDep)) {
        removeUndefeated(existingDep);
        newDep.addDefeated(existingDep);
        if (existingDep.getRootDefeated() != null) {
          if (stagedDeps == null) {
            stagedDeps=existingDep.getRootDefeated();
          }
 else {
            stagedDeps.setPrevious(existingDep.getTailDefeated());
            stagedDeps=existingDep.getRootDefeated();
          }
        }
        existingDep.clearDefeated();
      }
      existingDep=next;
    }
    addUndefeated(newDep);
    reprocessDefeated(stagedDeps);
  }
  updateStatus();
}
