{
  Map<String,Object> dataEnumLookupFields=loadDataEnumLookupFields();
  if (pat.constraintList != null && pat.constraintList.constraints != null) {
    Object _typeFields=dataEnumLookupFields.get(pat.factType + "." + field);
    if (_typeFields instanceof String) {
      String typeFields=(String)_typeFields;
      FieldConstraint[] cons=pat.constraintList.constraints;
      String key=pat.factType + "." + field;
      boolean addOpeninColumn=true;
      String[] splitTypeFields=typeFields.split(",");
      for (int j=0; j < splitTypeFields.length; j++) {
        String typeField=splitTypeFields[j];
        for (int i=0; i < cons.length; i++) {
          FieldConstraint con=cons[i];
          if (con instanceof SingleFieldConstraint) {
            SingleFieldConstraint sfc=(SingleFieldConstraint)con;
            if (sfc.fieldName.trim().equals(typeField.trim())) {
              if (addOpeninColumn) {
                key+="[";
                addOpeninColumn=false;
              }
              key+=typeField + "=" + sfc.value;
              if (j != (splitTypeFields.length - 1)) {
                key+=",";
              }
            }
          }
        }
      }
      if (!addOpeninColumn) {
        key+="]";
      }
      DropDownData data=DropDownData.create(this.dataEnumLists.get(key));
      if (data != null) {
        return DropDownData.create(this.dataEnumLists.get(key));
      }
    }
 else     if (_typeFields != null) {
      String[] fieldsNeeded=(String[])_typeFields;
      String queryString=getQueryString(pat.factType,field,fieldsNeeded,this.dataEnumLists);
      String[] valuePairs=new String[fieldsNeeded.length];
      for (int i=0; i < fieldsNeeded.length; i++) {
        for (int j=0; j < pat.constraintList.constraints.length; j++) {
          FieldConstraint con=pat.constraintList.constraints[j];
          if (con instanceof SingleFieldConstraint) {
            SingleFieldConstraint sfc=(SingleFieldConstraint)con;
            if (sfc.fieldName.equals(fieldsNeeded[i])) {
              valuePairs[i]=fieldsNeeded[i] + "=" + sfc.value;
            }
          }
        }
      }
      if (valuePairs.length > 0 && valuePairs[0] != null) {
        return DropDownData.create(queryString,valuePairs);
      }
    }
  }
  return DropDownData.create(getEnumValues(pat.factType,field));
}
