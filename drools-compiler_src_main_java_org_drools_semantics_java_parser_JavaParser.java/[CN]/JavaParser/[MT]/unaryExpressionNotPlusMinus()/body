{
  try {
    int alt65=5;
    alt65=dfa65.predict(input);
switch (alt65) {
case 1:
{
        match(input,BNOT,FOLLOW_BNOT_in_unaryExpressionNotPlusMinus2479);
        following.push(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus2481);
        unaryExpression();
        following.pop();
      }
    break;
case 2:
{
    match(input,LNOT,FOLLOW_LNOT_in_unaryExpressionNotPlusMinus2486);
    following.push(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus2488);
    unaryExpression();
    following.pop();
  }
break;
case 3:
{
match(input,LPAREN,FOLLOW_LPAREN_in_unaryExpressionNotPlusMinus2499);
following.push(FOLLOW_builtInTypeSpec_in_unaryExpressionNotPlusMinus2501);
builtInTypeSpec();
following.pop();
match(input,RPAREN,FOLLOW_RPAREN_in_unaryExpressionNotPlusMinus2503);
following.push(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus2513);
unaryExpression();
following.pop();
}
break;
case 4:
{
match(input,LPAREN,FOLLOW_LPAREN_in_unaryExpressionNotPlusMinus2549);
following.push(FOLLOW_classTypeSpec_in_unaryExpressionNotPlusMinus2551);
classTypeSpec();
following.pop();
match(input,RPAREN,FOLLOW_RPAREN_in_unaryExpressionNotPlusMinus2553);
following.push(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpressionNotPlusMinus2563);
unaryExpressionNotPlusMinus();
following.pop();
}
break;
case 5:
{
following.push(FOLLOW_postfixExpression_in_unaryExpressionNotPlusMinus2572);
postfixExpression();
following.pop();
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
}
