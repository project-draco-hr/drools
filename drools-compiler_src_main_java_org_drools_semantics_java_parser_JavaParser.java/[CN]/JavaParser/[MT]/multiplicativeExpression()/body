{
  try {
{
      this.following.push(JavaParser.FOLLOW_unaryExpression_in_multiplicativeExpression2408);
      unaryExpression();
      this.following.pop();
      loop63:       do {
        int alt63=2;
        final int LA63_0=this.input.LA(1);
        if (LA63_0 == JavaParser.STAR || (LA63_0 >= JavaParser.DIV && LA63_0 <= JavaParser.MOD)) {
          alt63=1;
        }
switch (alt63) {
case 1:
{
            if (this.input.LA(1) == JavaParser.STAR || (this.input.LA(1) >= JavaParser.DIV && this.input.LA(1) <= JavaParser.MOD)) {
              this.input.consume();
              this.errorRecovery=false;
            }
 else {
              final MismatchedSetException mse=new MismatchedSetException(null,this.input);
              recoverFromMismatchedSet(this.input,mse,JavaParser.FOLLOW_set_in_multiplicativeExpression2412);
              throw mse;
            }
            this.following.push(JavaParser.FOLLOW_unaryExpression_in_multiplicativeExpression2424);
            unaryExpression();
            this.following.pop();
          }
        break;
default :
      break loop63;
  }
}
 while (true);
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
