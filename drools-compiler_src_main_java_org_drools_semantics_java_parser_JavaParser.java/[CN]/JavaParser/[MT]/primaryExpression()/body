{
  try {
    int alt73=10;
switch (this.input.LA(1)) {
case IDENT:
      alt73=1;
    break;
case NUM_INT:
case CHAR_LITERAL:
case STRING_LITERAL:
case NUM_FLOAT:
  alt73=2;
break;
case 112:
alt73=3;
break;
case 113:
alt73=4;
break;
case 114:
alt73=5;
break;
case 115:
alt73=6;
break;
case 93:
alt73=7;
break;
case 94:
alt73=8;
break;
case LPAREN:
alt73=9;
break;
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
alt73=10;
break;
default :
final NoViableAltException nvae=new NoViableAltException("770:1: primaryExpression : ( identPrimary ( options {greedy=true; } : DOT \'class\' )? | constant | \'true\' | \'false\' | \'null\' | newExpression | \'this\' | \'super\' | LPAREN assignmentExpression RPAREN | builtInType ( LBRACK RBRACK )* DOT \'class\' );",73,0,this.input);
throw nvae;
}
switch (alt73) {
case 1:
{
this.following.push(JavaParser.FOLLOW_identPrimary_in_primaryExpression2881);
identPrimary();
this.following.pop();
int alt71=2;
final int LA71_0=this.input.LA(1);
if (LA71_0 == JavaParser.DOT) {
final int LA71_1=this.input.LA(2);
if (LA71_1 == JavaParser.IDENT || (LA71_1 >= 93 && LA71_1 <= 94) || LA71_1 == 115) {
alt71=2;
}
 else if (LA71_1 == 89) {
alt71=1;
}
 else {
final NoViableAltException nvae=new NoViableAltException("771:30: ( options {greedy=true; } : DOT \'class\' )?",71,1,this.input);
throw nvae;
}
}
 else if ((LA71_0 >= JavaParser.LBRACK && LA71_0 <= JavaParser.RBRACK) || LA71_0 == JavaParser.STAR || (LA71_0 >= JavaParser.SEMI && LA71_0 <= JavaParser.COMMA) || (LA71_0 >= JavaParser.RPAREN && LA71_0 <= JavaParser.DEC) || LA71_0 == 111) {
alt71=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("771:30: ( options {greedy=true; } : DOT \'class\' )?",71,0,this.input);
throw nvae;
}
switch (alt71) {
case 1:
{
match(this.input,JavaParser.DOT,JavaParser.FOLLOW_DOT_in_primaryExpression2893);
match(this.input,89,JavaParser.FOLLOW_89_in_primaryExpression2895);
}
break;
}
}
break;
case 2:
{
this.following.push(JavaParser.FOLLOW_constant_in_primaryExpression2908);
constant();
this.following.pop();
}
break;
case 3:
{
match(this.input,112,JavaParser.FOLLOW_112_in_primaryExpression2913);
}
break;
case 4:
{
match(this.input,113,JavaParser.FOLLOW_113_in_primaryExpression2918);
}
break;
case 5:
{
match(this.input,114,JavaParser.FOLLOW_114_in_primaryExpression2923);
}
break;
case 6:
{
this.following.push(JavaParser.FOLLOW_newExpression_in_primaryExpression2933);
newExpression();
this.following.pop();
}
break;
case 7:
{
match(this.input,93,JavaParser.FOLLOW_93_in_primaryExpression2938);
}
break;
case 8:
{
match(this.input,94,JavaParser.FOLLOW_94_in_primaryExpression2943);
}
break;
case 9:
{
match(this.input,JavaParser.LPAREN,JavaParser.FOLLOW_LPAREN_in_primaryExpression2948);
this.following.push(JavaParser.FOLLOW_assignmentExpression_in_primaryExpression2950);
assignmentExpression();
this.following.pop();
match(this.input,JavaParser.RPAREN,JavaParser.FOLLOW_RPAREN_in_primaryExpression2952);
}
break;
case 10:
{
this.following.push(JavaParser.FOLLOW_builtInType_in_primaryExpression2960);
builtInType();
this.following.pop();
loop72: do {
int alt72=2;
final int LA72_0=this.input.LA(1);
if (LA72_0 == JavaParser.LBRACK) {
alt72=1;
}
switch (alt72) {
case 1:
{
match(this.input,JavaParser.LBRACK,JavaParser.FOLLOW_LBRACK_in_primaryExpression2966);
match(this.input,JavaParser.RBRACK,JavaParser.FOLLOW_RBRACK_in_primaryExpression2969);
}
break;
default :
break loop72;
}
}
 while (true);
match(this.input,JavaParser.DOT,JavaParser.FOLLOW_DOT_in_primaryExpression2976);
match(this.input,89,JavaParser.FOLLOW_89_in_primaryExpression2978);
}
break;
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
