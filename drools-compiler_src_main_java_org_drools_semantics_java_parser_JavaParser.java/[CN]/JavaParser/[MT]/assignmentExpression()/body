{
  try {
{
      this.following.push(JavaParser.FOLLOW_conditionalExpression_in_assignmentExpression1878);
      conditionalExpression();
      this.following.pop();
      int alt51=2;
      final int LA51_0=this.input.LA(1);
      if (LA51_0 == JavaParser.ASSIGN || (LA51_0 >= JavaParser.PLUS_ASSIGN && LA51_0 <= JavaParser.BOR_ASSIGN)) {
        alt51=1;
      }
 else       if (LA51_0 == JavaParser.RBRACK || (LA51_0 >= JavaParser.SEMI && LA51_0 <= JavaParser.COMMA) || LA51_0 == JavaParser.RPAREN || LA51_0 == JavaParser.COLON) {
        alt51=2;
      }
 else {
        final NoViableAltException nvae=new NoViableAltException("621:17: ( (ASSIGN|PLUS_ASSIGN|MINUS_ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|SR_ASSIGN|BSR_ASSIGN|SL_ASSIGN|BAND_ASSIGN|BXOR_ASSIGN|BOR_ASSIGN) assignmentExpression )?",51,0,this.input);
        throw nvae;
      }
switch (alt51) {
case 1:
{
          if (this.input.LA(1) == JavaParser.ASSIGN || (this.input.LA(1) >= JavaParser.PLUS_ASSIGN && this.input.LA(1) <= JavaParser.BOR_ASSIGN)) {
            this.input.consume();
            this.errorRecovery=false;
          }
 else {
            final MismatchedSetException mse=new MismatchedSetException(null,this.input);
            recoverFromMismatchedSet(this.input,mse,JavaParser.FOLLOW_set_in_assignmentExpression1886);
            throw mse;
          }
          this.following.push(JavaParser.FOLLOW_assignmentExpression_in_assignmentExpression2103);
          assignmentExpression();
          this.following.pop();
        }
      break;
  }
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
