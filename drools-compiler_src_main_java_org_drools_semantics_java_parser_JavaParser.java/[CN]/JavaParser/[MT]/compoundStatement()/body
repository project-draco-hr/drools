{
  try {
{
      match(this.input,JavaParser.LCURLY,JavaParser.FOLLOW_LCURLY_in_compoundStatement1185);
      loop35:       do {
        int alt35=2;
        final int LA35_0=this.input.LA(1);
        if (LA35_0 == JavaParser.IDENT || (LA35_0 >= JavaParser.LCURLY && LA35_0 <= JavaParser.SEMI) || LA35_0 == JavaParser.LPAREN || (LA35_0 >= JavaParser.PLUS && LA35_0 <= JavaParser.MINUS) || (LA35_0 >= JavaParser.INC && LA35_0 <= JavaParser.NUM_FLOAT) || (LA35_0 >= 68 && LA35_0 <= 89) || (LA35_0 >= 93 && LA35_0 <= 94) || LA35_0 == 96 || (LA35_0 >= 98 && LA35_0 <= 105) || LA35_0 == 108 || (LA35_0 >= 112 && LA35_0 <= 115)) {
          alt35=1;
        }
switch (alt35) {
case 1:
{
            this.following.push(JavaParser.FOLLOW_statement_in_compoundStatement1196);
            statement();
            this.following.pop();
          }
        break;
default :
      break loop35;
  }
}
 while (true);
match(this.input,JavaParser.RCURLY,JavaParser.FOLLOW_RCURLY_in_compoundStatement1202);
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
