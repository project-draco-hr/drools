{
  try {
    int alt19=3;
switch (this.input.LA(1)) {
case 80:
      final int LA19_1=this.input.LA(2);
    if (LA19_1 == JavaParser.IDENT || (LA19_1 >= 68 && LA19_1 <= 89) || LA19_1 == 91) {
      alt19=1;
    }
 else     if (LA19_1 == JavaParser.LCURLY) {
      alt19=2;
    }
 else {
      final NoViableAltException nvae=new NoViableAltException("278:1: field : ( modifiers ( ctorHead constructorBody | classDefinition | interfaceDefinition | typeSpec ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI ) ) | \'static\' compoundStatement | compoundStatement );",19,1,this.input);
      throw nvae;
    }
  break;
case IDENT:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
case 77:
case 78:
case 79:
case 81:
case 82:
case 83:
case 84:
case 85:
case 86:
case 87:
case 88:
case 89:
case 91:
alt19=1;
break;
case LCURLY:
alt19=3;
break;
default :
final NoViableAltException nvae=new NoViableAltException("278:1: field : ( modifiers ( ctorHead constructorBody | classDefinition | interfaceDefinition | typeSpec ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI ) ) | \'static\' compoundStatement | compoundStatement );",19,0,this.input);
throw nvae;
}
switch (alt19) {
case 1:
{
this.following.push(JavaParser.FOLLOW_modifiers_in_field548);
modifiers();
this.following.pop();
int alt18=4;
switch (this.input.LA(1)) {
case IDENT:
final int LA18_1=this.input.LA(2);
if (LA18_1 == JavaParser.LPAREN) {
alt18=1;
}
 else if (LA18_1 == JavaParser.LBRACK || (LA18_1 >= JavaParser.IDENT && LA18_1 <= JavaParser.DOT)) {
alt18=4;
}
 else {
final NoViableAltException nvae=new NoViableAltException("281:17: ( ctorHead constructorBody | classDefinition | interfaceDefinition | typeSpec ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI ) )",18,1,this.input);
throw nvae;
}
break;
case 89:
alt18=2;
break;
case 91:
alt18=3;
break;
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
alt18=4;
break;
default :
final NoViableAltException nvae=new NoViableAltException("281:17: ( ctorHead constructorBody | classDefinition | interfaceDefinition | typeSpec ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI ) )",18,0,this.input);
throw nvae;
}
switch (alt18) {
case 1:
{
this.following.push(JavaParser.FOLLOW_ctorHead_in_field554);
ctorHead();
this.following.pop();
this.following.push(JavaParser.FOLLOW_constructorBody_in_field556);
constructorBody();
this.following.pop();
}
break;
case 2:
{
this.following.push(JavaParser.FOLLOW_classDefinition_in_field568);
classDefinition();
this.following.pop();
}
break;
case 3:
{
this.following.push(JavaParser.FOLLOW_interfaceDefinition_in_field586);
interfaceDefinition();
this.following.pop();
}
break;
case 4:
{
this.following.push(JavaParser.FOLLOW_typeSpec_in_field600);
typeSpec();
this.following.pop();
int alt17=2;
final int LA17_0=this.input.LA(1);
if (LA17_0 == JavaParser.IDENT) {
final int LA17_1=this.input.LA(2);
if (LA17_1 == JavaParser.LPAREN) {
alt17=1;
}
 else if (LA17_1 == JavaParser.LBRACK || LA17_1 == JavaParser.SEMI || LA17_1 == JavaParser.COMMA || LA17_1 == JavaParser.ASSIGN) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("291:25: ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI )",17,1,this.input);
throw nvae;
}
}
 else {
final NoViableAltException nvae=new NoViableAltException("291:25: ( IDENT LPAREN parameterDeclarationList RPAREN declaratorBrackets ( throwsClause )? ( compoundStatement | SEMI ) | variableDefinitions SEMI )",17,0,this.input);
throw nvae;
}
switch (alt17) {
case 1:
{
match(this.input,JavaParser.IDENT,JavaParser.FOLLOW_IDENT_in_field609);
match(this.input,JavaParser.LPAREN,JavaParser.FOLLOW_LPAREN_in_field623);
this.following.push(JavaParser.FOLLOW_parameterDeclarationList_in_field625);
parameterDeclarationList();
this.following.pop();
match(this.input,JavaParser.RPAREN,JavaParser.FOLLOW_RPAREN_in_field627);
this.following.push(JavaParser.FOLLOW_declaratorBrackets_in_field634);
declaratorBrackets();
this.following.pop();
int alt15=2;
final int LA15_0=this.input.LA(1);
if (LA15_0 == 95) {
alt15=1;
}
 else if ((LA15_0 >= JavaParser.LCURLY && LA15_0 <= JavaParser.SEMI)) {
alt15=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("300:33: ( throwsClause )?",15,0,this.input);
throw nvae;
}
switch (alt15) {
case 1:
{
this.following.push(JavaParser.FOLLOW_throwsClause_in_field652);
throwsClause();
this.following.pop();
}
break;
}
int alt16=2;
final int LA16_0=this.input.LA(1);
if (LA16_0 == JavaParser.LCURLY) {
alt16=1;
}
 else if (LA16_0 == JavaParser.SEMI) {
alt16=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("302:33: ( compoundStatement | SEMI )",16,0,this.input);
throw nvae;
}
switch (alt16) {
case 1:
{
this.following.push(JavaParser.FOLLOW_compoundStatement_in_field663);
compoundStatement();
this.following.pop();
}
break;
case 2:
{
match(this.input,JavaParser.SEMI,JavaParser.FOLLOW_SEMI_in_field667);
}
break;
}
}
break;
case 2:
{
this.following.push(JavaParser.FOLLOW_variableDefinitions_in_field676);
variableDefinitions();
this.following.pop();
match(this.input,JavaParser.SEMI,JavaParser.FOLLOW_SEMI_in_field678);
}
break;
}
}
break;
}
}
break;
case 2:
{
match(this.input,80,JavaParser.FOLLOW_80_in_field704);
this.following.push(JavaParser.FOLLOW_compoundStatement_in_field706);
compoundStatement();
this.following.pop();
}
break;
case 3:
{
this.following.push(JavaParser.FOLLOW_compoundStatement_in_field720);
compoundStatement();
this.following.pop();
}
break;
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
