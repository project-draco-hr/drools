{
  try {
{
      this.following.push(JavaParser.FOLLOW_inclusiveOrExpression_in_logicalAndExpression2169);
      inclusiveOrExpression();
      this.following.pop();
      loop54:       do {
        int alt54=2;
        final int LA54_0=this.input.LA(1);
        if (LA54_0 == JavaParser.LAND) {
          alt54=1;
        }
switch (alt54) {
case 1:
{
            match(this.input,JavaParser.LAND,JavaParser.FOLLOW_LAND_in_logicalAndExpression2172);
            this.following.push(JavaParser.FOLLOW_inclusiveOrExpression_in_logicalAndExpression2174);
            inclusiveOrExpression();
            this.following.pop();
          }
        break;
default :
      break loop54;
  }
}
 while (true);
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
