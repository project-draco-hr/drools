{
  try {
{
      match(input,LCURLY,FOLLOW_LCURLY_in_constructorBody739);
      int alt20=2;
switch (input.LA(1)) {
case 93:
        int LA20_1=input.LA(2);
      if (LA20_1 == LPAREN) {
        alt20=1;
      }
 else       if (LA20_1 == LBRACK || (LA20_1 >= DOT && LA20_1 <= STAR) || LA20_1 == SEMI || LA20_1 == ASSIGN || (LA20_1 >= PLUS_ASSIGN && LA20_1 <= DEC) || LA20_1 == 111) {
        alt20=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("220:13: ( options {greedy=true; } : explicitConstructorInvocation )?",20,1,input);
        throw nvae;
      }
    break;
case 94:
  int LA20_2=input.LA(2);
if (LA20_2 == LPAREN) {
  alt20=1;
}
 else if (LA20_2 == LBRACK || (LA20_2 >= DOT && LA20_2 <= STAR) || LA20_2 == SEMI || LA20_2 == ASSIGN || (LA20_2 >= PLUS_ASSIGN && LA20_2 <= DEC) || LA20_2 == 111) {
  alt20=2;
}
 else {
  NoViableAltException nvae=new NoViableAltException("220:13: ( options {greedy=true; } : explicitConstructorInvocation )?",20,2,input);
  throw nvae;
}
break;
case IDENT:
case LCURLY:
case SEMI:
case RCURLY:
case LPAREN:
case PLUS:
case MINUS:
case INC:
case DEC:
case BNOT:
case LNOT:
case NUM_INT:
case CHAR_LITERAL:
case STRING_LITERAL:
case NUM_FLOAT:
case 68:
case 69:
case 70:
case 71:
case 72:
case 73:
case 74:
case 75:
case 76:
case 77:
case 78:
case 79:
case 80:
case 81:
case 82:
case 83:
case 84:
case 85:
case 86:
case 87:
case 88:
case 89:
case 96:
case 98:
case 99:
case 100:
case 101:
case 102:
case 103:
case 104:
case 105:
case 108:
case 112:
case 113:
case 114:
case 115:
alt20=2;
break;
default :
NoViableAltException nvae=new NoViableAltException("220:13: ( options {greedy=true; } : explicitConstructorInvocation )?",20,0,input);
throw nvae;
}
switch (alt20) {
case 1:
{
following.push(FOLLOW_explicitConstructorInvocation_in_constructorBody765);
explicitConstructorInvocation();
following.pop();
}
break;
}
loop21: do {
int alt21=2;
int LA21_0=input.LA(1);
if (LA21_0 == IDENT || (LA21_0 >= LCURLY && LA21_0 <= SEMI) || LA21_0 == LPAREN || (LA21_0 >= PLUS && LA21_0 <= MINUS) || (LA21_0 >= INC && LA21_0 <= NUM_FLOAT) || (LA21_0 >= 68 && LA21_0 <= 89) || (LA21_0 >= 93 && LA21_0 <= 94) || LA21_0 == 96 || (LA21_0 >= 98 && LA21_0 <= 105) || LA21_0 == 108 || (LA21_0 >= 112 && LA21_0 <= 115)) {
alt21=1;
}
switch (alt21) {
case 1:
{
following.push(FOLLOW_statement_in_constructorBody782);
statement();
following.pop();
}
break;
default :
break loop21;
}
}
 while (true);
match(input,RCURLY,FOLLOW_RCURLY_in_constructorBody794);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
}
