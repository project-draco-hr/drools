{
  this.config=(config != null) ? config : new RuleBaseConfiguration();
  this.config.makeImmutable();
  if (this.config.isPhreakEnabled()) {
    logger.debug("Starting Engine in PHREAK mode");
  }
 else {
    logger.debug("Starting Engine in RETEOO mode");
  }
  createRulebaseId(id);
  this.rootClassLoader=this.config.getClassLoader();
  this.pkgs=new HashMap<String,InternalKnowledgePackage>();
  this.processes=new HashMap<String,Process>();
  this.globals=new HashMap<String,Class<?>>();
  this.statefulSessions=new ObjectHashSet();
  this.classTypeDeclaration=new HashMap<String,TypeDeclaration>();
  this.partitionIDs=new CopyOnWriteArrayList<RuleBasePartitionId>();
  this.classFieldAccessorCache=new ClassFieldAccessorCache(this.rootClassLoader);
  kieComponentFactory=getConfiguration().getComponentFactory();
  this.factHandleFactory=kieComponentFactory.getFactHandleFactoryService();
  kieComponentFactory.getTraitFactory().setRuleBase(this);
  kieComponentFactory.getTripleStore().setId(id);
  setupRete();
  if (config != null && config.isMBeansEnabled()) {
    DroolsManagementAgent.getInstance().registerKnowledgeBase(this);
  }
  if (this.config.getSessionCacheOption().isEnabled()) {
    if (this.config.isPhreakEnabled()) {
      sessionsCache=new SessionsCache(this.config.getSessionCacheOption().isAsync());
    }
 else {
      logger.warn("Session cache can be enabled only in PHREAK mode");
    }
  }
}
