{
  boolean modified=false;
  for (  InternalKnowledgePackage pkg : pkgs.values()) {
    List<RuleImpl> rulesToBeRemoved=pkg.removeRulesGeneratedFromResource(resource);
    for (    RuleImpl rule : rulesToBeRemoved) {
      removeRule(rule);
    }
    List<Function> functionsToBeRemoved=pkg.removeFunctionsGeneratedFromResource(resource);
    for (    Function function : functionsToBeRemoved) {
      removeFunction(function.getName());
    }
    List<Process> processesToBeRemoved=pkg.removeProcessesGeneratedFromResource(resource);
    for (    Process process : processesToBeRemoved) {
      removeProcess(process);
    }
    List<TypeDeclaration> removedTypes=pkg.removeTypesGeneratedFromResource(resource);
    modified|=!rulesToBeRemoved.isEmpty() || !functionsToBeRemoved.isEmpty() || !processesToBeRemoved.isEmpty()|| !removedTypes.isEmpty();
  }
  return modified;
}
