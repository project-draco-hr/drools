{
  DRL5xParser.template_return retval=new DRL5xParser.template_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token semi1=null;
  Token semi2=null;
  DRL5xParser.end_key_return end=null;
  DRL5xParser.template_key_return template_key60=null;
  DRL5xParser.template_id_return template_id61=null;
  DRL5xParser.template_slot_return template_slot62=null;
  Object semi1_tree=null;
  Object semi2_tree=null;
  RewriteRuleTokenStream stream_SEMICOLON=new RewriteRuleTokenStream(adaptor,"token SEMICOLON");
  RewriteRuleSubtreeStream stream_template_id=new RewriteRuleSubtreeStream(adaptor,"rule template_id");
  RewriteRuleSubtreeStream stream_template_slot=new RewriteRuleSubtreeStream(adaptor,"rule template_slot");
  RewriteRuleSubtreeStream stream_template_key=new RewriteRuleSubtreeStream(adaptor,"rule template_key");
  RewriteRuleSubtreeStream stream_end_key=new RewriteRuleSubtreeStream(adaptor,"rule end_key");
  pushParaphrases(DroolsParaphraseTypes.TEMPLATE);
  try {
{
      if (state.backtracking == 0) {
        beginSentence(DroolsSentenceType.TEMPLATE);
      }
      pushFollow(FOLLOW_template_key_in_template1279);
      template_key60=template_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       stream_template_key.add(template_key60.getTree());
      pushFollow(FOLLOW_template_id_in_template1281);
      template_id61=template_id();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       stream_template_id.add(template_id61.getTree());
      int alt24=2;
      int LA24_0=input.LA(1);
      if ((LA24_0 == SEMICOLON)) {
        alt24=1;
      }
switch (alt24) {
case 1:
{
          semi1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_template1288);
          if (state.failed)           return retval;
          if (state.backtracking == 0)           stream_SEMICOLON.add(semi1);
        }
      break;
  }
  if (state.backtracking == 0) {
    emit(semi1,DroolsEditorType.SYMBOL);
  }
  int cnt25=0;
  loop25:   do {
    int alt25=2;
    int LA25_0=input.LA(1);
    if ((LA25_0 == ID)) {
      int LA25_1=input.LA(2);
      if ((LA25_1 == DOT || LA25_1 == LEFT_SQUARE)) {
        alt25=1;
      }
 else       if ((LA25_1 == ID)) {
        int LA25_3=input.LA(3);
        if ((LA25_3 == ID)) {
          int LA25_5=input.LA(4);
          if ((!((((validateIdentifierKey(DroolsSoftKeywords.END))))))) {
            alt25=1;
          }
        }
 else         if ((LA25_3 == SEMICOLON)) {
          alt25=1;
        }
      }
    }
switch (alt25) {
case 1:
{
        pushFollow(FOLLOW_template_slot_in_template1296);
        template_slot62=template_slot();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_template_slot.add(template_slot62.getTree());
      }
    break;
default :
  if (cnt25 >= 1)   break loop25;
if (state.backtracking > 0) {
  state.failed=true;
  return retval;
}
EarlyExitException eee=new EarlyExitException(25,input);
throw eee;
}
cnt25++;
}
 while (true);
pushFollow(FOLLOW_end_key_in_template1303);
end=end_key();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_end_key.add(end.getTree());
int alt26=2;
int LA26_0=input.LA(1);
if ((LA26_0 == SEMICOLON)) {
alt26=1;
}
switch (alt26) {
case 1:
{
semi2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_template1307);
if (state.failed) return retval;
if (state.backtracking == 0) stream_SEMICOLON.add(semi2);
}
break;
}
if (state.backtracking == 0) {
emit(semi2,DroolsEditorType.SYMBOL);
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(Object)adaptor.nil();
{
{
Object root_1=(Object)adaptor.nil();
root_1=(Object)adaptor.becomeRoot(stream_template_key.nextNode(),root_1);
adaptor.addChild(root_1,stream_template_id.nextTree());
if (!(stream_template_slot.hasNext())) {
throw new RewriteEarlyExitException();
}
while (stream_template_slot.hasNext()) {
adaptor.addChild(root_1,stream_template_slot.nextTree());
}
stream_template_slot.reset();
adaptor.addChild(root_1,stream_end_key.nextTree());
adaptor.addChild(root_0,root_1);
}
}
retval.tree=root_0;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
if (state.backtracking == 0) {
paraphrases.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
