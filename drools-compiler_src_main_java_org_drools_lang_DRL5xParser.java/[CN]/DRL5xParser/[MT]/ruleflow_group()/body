{
  DRL5xParser.ruleflow_group_return retval=new DRL5xParser.ruleflow_group_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token STRING111=null;
  DRL5xParser.ruleflow_group_key_return ruleflow_group_key110=null;
  Object STRING111_tree=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_ruleflow_group_key_in_ruleflow_group1917);
      ruleflow_group_key110=ruleflow_group_key();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       root_0=(Object)adaptor.becomeRoot(ruleflow_group_key110.getTree(),root_0);
      if (state.backtracking == 0) {
        emit(Location.LOCATION_RULE_HEADER_KEYWORD);
      }
      STRING111=(Token)match(input,STRING,FOLLOW_STRING_in_ruleflow_group1922);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        STRING111_tree=(Object)adaptor.create(STRING111);
        adaptor.addChild(root_0,STRING111_tree);
      }
      if (state.backtracking == 0) {
        emit(STRING111,DroolsEditorType.STRING_CONST);
      }
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(Object)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
