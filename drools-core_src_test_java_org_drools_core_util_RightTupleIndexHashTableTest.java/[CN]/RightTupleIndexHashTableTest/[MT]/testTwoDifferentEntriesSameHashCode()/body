{
  final InternalReadAccessor extractor=store.getReader(TestClass.class,"object");
  final Pattern pattern=new Pattern(0,new ClassObjectType(TestClass.class));
  final Declaration declaration=new Declaration("theObject",extractor,pattern);
  final FieldIndex fieldIndex=new FieldIndex(extractor,declaration,MvelConstraint.INDEX_EVALUATOR);
  final RightTupleIndexHashTable map=new RightTupleIndexHashTable(new FieldIndex[]{fieldIndex});
  final TestClass c1=new TestClass(0,new TestClass(20,"stilton"));
  final InternalFactHandle ch1=new DefaultFactHandle(1,c1);
  map.add(new RightTupleImpl(ch1,null));
  final TestClass c2=new TestClass(0,new TestClass(20,"cheddar"));
  final InternalFactHandle ch2=new DefaultFactHandle(2,c2);
  map.add(new RightTupleImpl(ch2,null));
  assertEquals(2,map.size());
  assertEquals(1,tablePopulationSize(map));
  Entry[] entries=getEntries(map);
  assertEquals(1,entries.length);
  TupleList list=(TupleList)entries[0];
  assertSame(ch2,list.first.getFactHandle());
  assertNull(list.first.getNext());
  assertSame(ch1,((TupleList)list.next).first.getFactHandle());
  assertNull(((TupleList)list.next).first.getNext());
  assertNull(((TupleList)list.next).next);
}
