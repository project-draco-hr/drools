{
  final InternalReadAccessor extractor=store.getReader(Cheese.class,"type");
  final Pattern pattern=new Pattern(0,new ClassObjectType(Cheese.class));
  final Declaration declaration=new Declaration("typeOfCheese",extractor,pattern);
  final FieldIndex fieldIndex=new FieldIndex(extractor,declaration,MvelConstraint.INDEX_EVALUATOR);
  final TupleIndexHashTable map=new TupleIndexHashTable(new FieldIndex[]{fieldIndex},false);
  assertEquals(0,map.size());
  final Cheese stilton1=new Cheese("stilton",35);
  final InternalFactHandle stiltonHandle1=new DefaultFactHandle(1,stilton1);
  map.add(new RightTupleImpl(stiltonHandle1,null));
  final Cheese cheddar1=new Cheese("cheddar",35);
  final InternalFactHandle cheddarHandle1=new DefaultFactHandle(2,cheddar1);
  map.add(new RightTupleImpl(cheddarHandle1,null));
  final Cheese stilton2=new Cheese("stilton",81);
  final InternalFactHandle stiltonHandle2=new DefaultFactHandle(3,stilton2);
  map.add(new RightTupleImpl(stiltonHandle2,null));
  assertEquals(3,map.size());
  assertEquals(2,tablePopulationSize(map));
  final Cheese stilton3=new Cheese("stilton",89);
  final InternalFactHandle stiltonHandle3=new DefaultFactHandle(4,stilton2);
  final Tuple tuple=map.getFirst(new LeftTupleImpl(stiltonHandle3,null,true));
  assertSame(stiltonHandle1,tuple.getFactHandle());
  assertSame(stiltonHandle2,((RightTuple)tuple.getNext()).getFactHandle());
}
