{
  System.out.println("\n\ntestDSLAndNewInstance\n\n");
  String header="";
  header+="package org.drools.test\n";
  header+="import org.drools.Person\n\n";
  header+="global java.util.List list\n\n";
  File f1=fileManager.newFile("myExpander.dsl");
  Writer output=new BufferedWriter(new FileWriter(f1));
  output.write(this.createCommonDSL(null));
  output.close();
  f1=fileManager.newFile("rules.drl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(this.createCommonDSLRRule("Rule1"));
  output.close();
  String xml="";
  xml+="<change-set xmlns='http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/rules.drl' type='DSLR' />";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/myExpander.dsl' type='DSL' />";
  xml+="    </add> ";
  xml+="</change-set>";
  File fxml=fileManager.newFile("changeset.xml");
  output=new BufferedWriter(new FileWriter(fxml));
  output.write(xml);
  output.close();
  List<String> list=new ArrayList<String>();
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase,true);
  kagent.applyChangeSet(ResourceFactory.newUrlResource(fxml.toURI().toURL()));
  this.kbaseUpdated=false;
  StatefulKnowledgeSession ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  ksession.setGlobal("list",list);
  ksession.insert(new Person());
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("Rule1"));
  list.clear();
  ksession.dispose();
  Thread.sleep(2000);
  f1=fileManager.newFile("myExpander.dsl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(this.createCommonDSL("name == \"John\""));
  output.close();
  f1=fileManager.newFile("rules.drl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(this.createCommonDSLRRule("Rule1"));
  output.close();
  this.waitUntilKBaseUpdate();
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  ksession.setGlobal("list",list);
  ksession.insert(new Person());
  ksession.fireAllRules();
  assertEquals(0,list.size());
  Person p=new Person();
  p.setName("John");
  ksession.insert(p);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("Rule1"));
  ksession.dispose();
  Thread.sleep(2000);
  f1=fileManager.newFile("rules.drl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(this.createCommonDSLRRule("Rule1"));
  output.write(this.createCommonDSLRRule("Rule2"));
  output.close();
  this.waitUntilKBaseUpdate();
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  list.clear();
  ksession.setGlobal("list",list);
  ksession.insert(p);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  assertTrue(list.contains("Rule1"));
  assertTrue(list.contains("Rule2"));
  ksession.dispose();
  Thread.sleep(2000);
  f1=fileManager.newFile("rules.drl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(this.createCommonDSLRRule("Rule3"));
  output.close();
  this.waitUntilKBaseUpdate();
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  list.clear();
  ksession.setGlobal("list",list);
  ksession.insert(p);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertTrue(list.contains("Rule3"));
  ksession.dispose();
  Thread.sleep(2000);
  f1=fileManager.newFile("myExpander.dsl");
  f1.delete();
  f1=fileManager.newFile("rules.drl");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(header);
  output.write(this.createCommonDSLRRule("Rule1"));
  output.close();
  this.waitUntilKBaseUpdate();
  assertTrue(this.compilationErrors);
  this.compilationErrors=false;
  kagent.monitorResourceChangeEvents(false);
}
