{
  String drl="" + "package org.drools.core.factmodel.traits.test;\n" + "\n"+ "import org.drools.core.factmodel.traits.Traitable;\n"+ "import org.drools.core.factmodel.traits.Trait;\n"+ "import org.drools.core.factmodel.traits.Alias;\n"+ "\n"+ "global java.util.List list;\n"+ "\n"+ "\n"+ "declare Foo end \n"+ "declare Bar extends Foo end \n"+ ""+ "declare Parent\n"+ "@Traitable( logical = true )\n"+ "@propertyReactive\n"+ "    id : Foo\n"+ "end\n"+ "\n"+ "declare trait ParentTrait\n"+ "@Trait( logical = true )"+ "@propertyReactive\n"+ "    id : Bar\n"+ "end\n"+ "\n"+ "rule \"init\"\n"+ "when\n"+ "then\n"+ "    Parent p = new Parent(null);\n"+ "    insert( p );\n"+ "end\n"+ "\n"+ "rule \"don\"\n"+ "when\n"+ "    $p : Parent()\n"+ "then\n"+ "    ParentTrait pt = don( $p , ParentTrait.class );\n"+ "    pt.setId( new Bar() ); \n"+ "   list.add( $p.getId() ); \n"+ "end";
  StatefulKnowledgeSession ksession=loadKnowledgeBaseFromString(drl).newStatefulKnowledgeSession();
  TraitFactory.setMode(mode,ksession.getKieBase());
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertEquals("org.drools.core.factmodel.traits.test.Bar",list.get(0).getClass().getName());
}
