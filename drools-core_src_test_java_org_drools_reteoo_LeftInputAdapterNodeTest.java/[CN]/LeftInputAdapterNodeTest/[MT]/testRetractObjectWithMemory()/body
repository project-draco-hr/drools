{
  final PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  IdGenerator idGenerator=ruleBase.getReteooBuilder().getIdGenerator();
  final InternalWorkingMemory workingMemory=(InternalWorkingMemory)ruleBase.newStatefulSession();
  final LeftInputAdapterNode liaNode=new LeftInputAdapterNode(idGenerator.getNextId(),new MockObjectSource(idGenerator.getNextId()),buildContext);
  liaNode.setObjectMemoryEnabled(true);
  final MockTupleSink sink=new MockTupleSink();
  liaNode.addTupleSink(sink);
  final DefaultFactHandle f0=(DefaultFactHandle)workingMemory.insert("f1");
  liaNode.assertObject(f0,context,workingMemory);
  final Tuple tuple=(Tuple)((Object[])sink.getAsserted().get(0))[0];
  final FactHashTable map=(FactHashTable)workingMemory.getNodeMemory(liaNode);
  assertTrue(map.contains(f0));
  liaNode.retractObject(f0,context,workingMemory);
  assertFalse(map.contains(f0));
  assertNotSame(tuple,((Object[])sink.getRetracted().get(0))[0]);
}
