{
  if (this.mHashCode == 0) {
    int result=this.mId[0] & 0xFF;
    result|=(result << 16);
    result|=(result << 8);
    for (int i=1; i < 15; i+=2) {
      final int curr=(this.mId[i] & 0xFF) << 8 | (this.mId[i + 1] & 0xFF);
      final int shift=UUID.kShifts[i >> 1];
      if (shift > 16) {
        result^=(curr << shift) | (curr >>> (32 - shift));
      }
 else {
        result^=(curr << shift);
      }
    }
    final int last=this.mId[15] & 0xFF;
    result^=(last << 3);
    result^=(last << 13);
    result^=(last << 27);
    if (result == 0) {
      this.mHashCode=-1;
    }
 else {
      this.mHashCode=result;
    }
  }
  return this.mHashCode;
}
