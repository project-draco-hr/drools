{
  if (mHashCode == 0) {
    int result=mId[0] & 0xFF;
    result|=(result << 16);
    result|=(result << 8);
    for (int i=1; i < 15; i+=2) {
      int curr=(mId[i] & 0xFF) << 8 | (mId[i + 1] & 0xFF);
      int shift=kShifts[i >> 1];
      if (shift > 16) {
        result^=(curr << shift) | (curr >>> (32 - shift));
      }
 else {
        result^=(curr << shift);
      }
    }
    int last=mId[15] & 0xFF;
    result^=(last << 3);
    result^=(last << 13);
    result^=(last << 27);
    if (result == 0) {
      mHashCode=-1;
    }
 else {
      mHashCode=result;
    }
  }
  return mHashCode;
}
