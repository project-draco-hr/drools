{
  stringBuilder.append("(");
  String dataType=ScorecardPMMLUtils.getDataType(pmmlDocument,ScorecardPMMLUtils.extractFieldNameFromCharacteristic(c));
  if (XLSKeywords.DATATYPE_TEXT.equalsIgnoreCase(dataType)) {
    if (scoreAttribute.getSimplePredicate() != null) {
      SimplePredicate predicate=scoreAttribute.getSimplePredicate();
      String operator=predicate.getOperator();
      if (PMMLOperators.EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(predicate.getField());
        stringBuilder.append(" == ");
        stringBuilder.append("\"").append(predicate.getValue()).append("\"");
      }
 else       if (PMMLOperators.NOT_EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(predicate.getField());
        stringBuilder.append(" != ");
        stringBuilder.append("\"").append(predicate.getValue()).append("\"");
      }
    }
 else     if (scoreAttribute.getSimpleSetPredicate() != null) {
      SimpleSetPredicate simpleSetPredicate=scoreAttribute.getSimpleSetPredicate();
      String content=simpleSetPredicate.getArray().getContent();
      content=content.replaceAll(" ","\",\"");
      stringBuilder.append(simpleSetPredicate.getField()).append(" in ( \"").append(content).append("\" )");
    }
  }
 else   if (XLSKeywords.DATATYPE_BOOLEAN.equalsIgnoreCase(dataType)) {
    if (scoreAttribute.getSimplePredicate() != null) {
      SimplePredicate predicate=scoreAttribute.getSimplePredicate();
      String operator=predicate.getOperator();
      if (PMMLOperators.EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(predicate.getField());
        stringBuilder.append(" == ");
        stringBuilder.append(predicate.getValue().toLowerCase());
      }
 else       if (PMMLOperators.NOT_EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(predicate.getField());
        stringBuilder.append(" != ");
        stringBuilder.append(predicate.getValue().toLowerCase());
      }
    }
  }
 else   if (XLSKeywords.DATATYPE_NUMBER.equalsIgnoreCase(dataType)) {
    if (scoreAttribute.getSimplePredicate() != null) {
      SimplePredicate predicate=scoreAttribute.getSimplePredicate();
      String operator=predicate.getOperator();
      stringBuilder.append(predicate.getField());
      if (PMMLOperators.LESS_THAN.equalsIgnoreCase(operator)) {
        stringBuilder.append(" < ");
      }
 else       if (PMMLOperators.GREATER_THAN.equalsIgnoreCase(operator)) {
        stringBuilder.append(" > ");
      }
 else       if (PMMLOperators.NOT_EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(" <> ");
      }
 else       if (PMMLOperators.EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(" == ");
      }
 else       if (PMMLOperators.GREATER_OR_EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(" >= ");
      }
 else       if (PMMLOperators.LESS_OR_EQUAL.equalsIgnoreCase(operator)) {
        stringBuilder.append(" <= ");
      }
      stringBuilder.append(predicate.getValue());
    }
 else     if (scoreAttribute.getCompoundPredicate() != null) {
      CompoundPredicate predicate=scoreAttribute.getCompoundPredicate();
      String field=null;
      for (      Object obj : predicate.getSimplePredicatesAndCompoundPredicatesAndSimpleSetPredicates()) {
        if (obj instanceof SimplePredicate) {
          SimplePredicate simplePredicate=(SimplePredicate)obj;
          String operator=simplePredicate.getOperator();
          if (field == null) {
            stringBuilder.append(simplePredicate.getField());
            field=simplePredicate.getField();
          }
 else {
            stringBuilder.append(" && ");
          }
          if (PMMLOperators.LESS_THAN.equalsIgnoreCase(operator)) {
            stringBuilder.append(" < ");
          }
 else           if (PMMLOperators.GREATER_THAN.equalsIgnoreCase(operator)) {
            stringBuilder.append(" > ");
          }
 else           if (PMMLOperators.NOT_EQUAL.equalsIgnoreCase(operator)) {
            stringBuilder.append(" <> ");
          }
 else           if (PMMLOperators.EQUAL.equalsIgnoreCase(operator)) {
            stringBuilder.append(" == ");
          }
 else           if (PMMLOperators.GREATER_OR_EQUAL.equalsIgnoreCase(operator)) {
            stringBuilder.append(" >= ");
          }
 else           if (PMMLOperators.LESS_OR_EQUAL.equalsIgnoreCase(operator)) {
            stringBuilder.append(" <= ");
          }
          stringBuilder.append(simplePredicate.getValue());
        }
      }
    }
  }
  stringBuilder.append(")");
}
