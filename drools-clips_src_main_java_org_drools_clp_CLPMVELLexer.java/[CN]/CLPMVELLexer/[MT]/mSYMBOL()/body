{
  try {
{
      if ((input.LA(1) >= '\u0000' && input.LA(1) <= '+') || (input.LA(1) >= '-' && input.LA(1) <= '\uFFFE')) {
        input.consume();
        failed=false;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return;
        }
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
      loop18:       do {
        int alt18=2;
        int LA18_0=input.LA(1);
        if (((LA18_0 >= '\u0000' && LA18_0 <= '\b') || (LA18_0 >= '\u000B' && LA18_0 <= '\f') || (LA18_0 >= '\u000E' && LA18_0 <= '\u001F')|| LA18_0 == '!' || (LA18_0 >= '#' && LA18_0 <= '%') || LA18_0 == '\'' || (LA18_0 >= '*' && LA18_0 <= ':') || (LA18_0 >= '=' && LA18_0 <= '{') || LA18_0 == '}' || (LA18_0 >= '\u007F' && LA18_0 <= '\uFFFE'))) {
          alt18=1;
        }
switch (alt18) {
case 1:
{
            if ((input.LA(1) >= '\u0000' && input.LA(1) <= '#') || (input.LA(1) >= '%' && input.LA(1) <= '\uFFFE')) {
              input.consume();
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      break loop18;
  }
}
 while (true);
}
}
  finally {
}
}
