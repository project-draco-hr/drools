{
  PatternDescrBuilder<?> pattern=null;
  try {
    pattern=helper.start(PatternDescrBuilder.class,null,null);
    String label=null;
    if (input.LA(1) == DRLLexer.ID && input.LA(2) == DRLLexer.COLON) {
      label=label();
      if (state.failed)       return null;
    }
    String type=type();
    if (state.failed)     return null;
    if (state.backtracking == 0) {
      pattern.type(type);
      if (label != null) {
        pattern.id(label);
      }
    }
    match(input,DRLLexer.LEFT_PAREN,null,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return null;
    if (input.LA(1) != DRLLexer.RIGHT_PAREN) {
      constraints(pattern);
    }
    match(input,DRLLexer.RIGHT_PAREN,null,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return null;
    if (helper.validateIdentifierKey(DroolsSoftKeywords.OVER)) {
    }
    if (helper.validateIdentifierKey(DroolsSoftKeywords.FROM)) {
      patternSource(pattern);
    }
  }
  finally {
    helper.end(PatternDescrBuilder.class,null);
  }
  return pattern != null ? pattern.getDescr() : null;
}
