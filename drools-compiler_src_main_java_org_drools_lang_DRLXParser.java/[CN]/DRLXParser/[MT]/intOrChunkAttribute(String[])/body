{
  AttributeDescrBuilder attribute=null;
  try {
    StringBuilder builder=new StringBuilder();
    for (    String k : key) {
      match(input,DRLLexer.ID,k,null,DroolsEditorType.KEYWORD);
      if (state.failed)       return null;
      builder.append(k);
    }
    if (state.backtracking == 0) {
      attribute=helper.start(AttributeDescrBuilder.class,builder.toString());
    }
    if (input.LA(1) == DRLLexer.LEFT_PAREN) {
      String value=chunk(DRLLexer.LEFT_PAREN,DRLLexer.RIGHT_PAREN);
      if (state.failed)       return null;
      if (state.backtracking == 0)       attribute.value(safeStripDelimiters(value,new String[]{"(",")"}));
    }
 else {
      String value="";
      if (input.LA(1) == DRLLexer.PLUS) {
        Token sign=match(input,DRLLexer.PLUS,null,null,DroolsEditorType.NUMERIC_CONST);
        if (state.failed)         return null;
        value+=sign.getText();
      }
 else       if (input.LA(1) == DRLLexer.MINUS) {
        Token sign=match(input,DRLLexer.MINUS,null,null,DroolsEditorType.NUMERIC_CONST);
        if (state.failed)         return null;
        value+=sign.getText();
      }
      Token nbr=match(input,DRLLexer.DECIMAL,null,null,DroolsEditorType.NUMERIC_CONST);
      if (state.failed)       return null;
      value+=nbr.getText();
      if (state.backtracking == 0)       attribute.value(value);
    }
  }
  finally {
    if (attribute != null) {
      helper.end(AttributeDescrBuilder.class);
    }
  }
  return attribute != null ? attribute.getDescr() : null;
}
