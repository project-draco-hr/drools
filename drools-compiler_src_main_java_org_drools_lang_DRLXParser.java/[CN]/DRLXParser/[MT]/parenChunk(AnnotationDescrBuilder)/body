{
  String chunk="";
  int first=-1, last=first;
  try {
    match(input,DRLLexer.LEFT_PAREN,null,null,DroolsEditorType.SYMBOL);
    if (state.failed)     return chunk;
    int nests=0;
    first=input.index();
    while (input.LA(1) != DRLLexer.RIGHT_PAREN || nests > 0) {
switch (input.LA(1)) {
case DRLLexer.RIGHT_PAREN:
        nests--;
      break;
case DRLLexer.LEFT_PAREN:
    nests++;
  break;
}
input.consume();
}
last=input.LT(-1).getTokenIndex();
match(input,DRLLexer.RIGHT_PAREN,null,null,DroolsEditorType.SYMBOL);
if (state.failed) return chunk;
}
 catch (RecognitionException re) {
reportError(re);
}
 finally {
if (last >= first) {
chunk=input.toString(first,last);
}
}
return chunk;
}
