{
  int fileCount=0;
  String prefixPath=kieBaseModel.getName().replace('.','/');
  for (  String fileName : kieModule.getFileNames()) {
    if (((KieBaseModelImpl)kieBaseModel).isDefault() || fileName.startsWith(prefixPath)) {
      if (isKieExtension(fileName) && !fileName.endsWith(".properties")) {
        ResourceConfiguration conf=null;
        if (kieModule.isAvailable(fileName + ".properties")) {
          Properties prop=new Properties();
          try {
            prop.load(new ByteArrayInputStream(kieModule.getBytes(fileName + ".properties")));
          }
 catch (          IOException e) {
            log.error("Error loading resource configuration from file: " + fileName + ".properties");
          }
          conf=ResourceType.fromProperties(prop);
        }
        if (conf == null) {
          ckbuilder.add(ResourceFactory.newByteArrayResource(kieModule.getBytes(fileName)),ResourceType.determineResourceType(fileName));
        }
 else {
          ckbuilder.add(ResourceFactory.newByteArrayResource(kieModule.getBytes(fileName)),ResourceType.determineResourceType(fileName),conf);
        }
        fileCount++;
      }
    }
  }
  if (fileCount == 0) {
    if (kieModule instanceof FileKieModule) {
      log.warn("No files found for KieBase " + kieBaseModel.getName() + ", searching folder "+ kieModule.getFile());
    }
 else {
      log.warn("No files found for KieBase " + kieBaseModel.getName());
    }
  }
}
