{
  RightTuple blocker=leftTuple.getBlocker();
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  if (blocker != null) {
    this.sink.propagateRetractLeftTuple(leftTuple,context,workingMemory);
    LeftTuple previous=(LeftTuple)leftTuple.getBlockedPrevious();
    LeftTuple next=(LeftTuple)leftTuple.getBlockedNext();
    if (previous != null && next != null) {
      previous.setBlockedNext(next);
      next.setBlockedPrevious(previous);
    }
 else     if (next != null) {
      blocker.setBlocked(next);
      next.setBlockedPrevious(null);
    }
 else     if (previous != null) {
      previous.setBlockedNext(null);
    }
 else {
      blocker.setBlocked(null);
    }
  }
 else {
    memory.getLeftTupleMemory().remove(leftTuple);
  }
}
