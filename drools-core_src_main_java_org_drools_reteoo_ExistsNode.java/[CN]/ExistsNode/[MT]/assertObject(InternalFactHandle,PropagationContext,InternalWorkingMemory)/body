{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.getFactHandleMemory().add(handle);
  if (!this.tupleMemoryEnabled) {
    return;
  }
  final Iterator it=memory.getTupleMemory().iterator(handle);
  this.constraints.updateFromFactHandle(memory.getContext(),workingMemory,handle);
  for (ReteTuple tuple=(ReteTuple)it.next(); tuple != null; tuple=(ReteTuple)it.next()) {
    if (this.constraints.isAllowedCachedRight(memory.getContext(),tuple) && tuple.getMatch() == null) {
      tuple.setMatch(handle);
      this.sink.propagateAssertTuple(tuple,context,workingMemory);
    }
  }
  this.constraints.resetFactHandle(memory.getContext());
}
