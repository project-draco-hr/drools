{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("init.drl",getClass()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException("failed to build:\n" + kbuilder.getErrors().toString());
  }
  kbuilder.add(ResourceFactory.newClassPathResource("commands.drl",getClass()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException("failed to build:\n" + kbuilder.getErrors().toString());
  }
  kbuilder.add(ResourceFactory.newClassPathResource("sensors.drl",getClass()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException("failed to build:\n" + kbuilder.getErrors().toString());
  }
  kbuilder.add(ResourceFactory.newClassPathResource("collision.drl",getClass()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException("failed to build:\n" + kbuilder.getErrors().toString());
  }
  kbuilder.add(ResourceFactory.newClassPathResource("ui.drl",GameView.class),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException("failed to build:\n" + kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.setGlobal("randomInteger",new java.util.Random());
  ksession.fireAllRules();
}
