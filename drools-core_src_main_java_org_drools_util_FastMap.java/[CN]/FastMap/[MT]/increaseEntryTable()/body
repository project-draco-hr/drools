{
  final int newLength=this._entries.length << 3;
  FastMap tmp;
  if (newLength <= (1 << 3)) {
    tmp=new FastMap(new Entry[1 << 3][]);
  }
 else   if (newLength <= (1 << 6)) {
    tmp=new FastMap(new Entry[1 << 6][]);
  }
 else   if (newLength <= (1 << 9)) {
    tmp=new FastMap(new Entry[1 << 9][]);
  }
 else   if (newLength <= (1 << 12)) {
    tmp=new FastMap(new Entry[1 << 12][]);
  }
 else   if (newLength <= (1 << 15)) {
    tmp=new FastMap(new Entry[1 << 15][]);
  }
 else   if (newLength <= (1 << 18)) {
    tmp=new FastMap(new Entry[1 << 18][]);
  }
 else   if (newLength <= (1 << 21)) {
    tmp=new FastMap(new Entry[1 << 21][]);
  }
 else   if (newLength <= (1 << 24)) {
    tmp=new FastMap(new Entry[1 << 24][]);
  }
 else   if (newLength <= (1 << 27)) {
    tmp=new FastMap(new Entry[1 << 27][]);
  }
 else {
    return;
  }
  for (int i=0; i < tmp._entries.length; ) {
    tmp._entries[i++]=FastMap.NULL_BLOCK;
  }
  final Entry[][] newEntries=tmp._entries;
  tmp._entries=this._entries;
  tmp._oldEntries=this._oldEntries;
  tmp._keyComp=this._keyComp;
  tmp._head=null;
  tmp._tail=null;
  tmp._size=-1;
  this._oldEntries=tmp;
  checkpoint();
  this._entries=newEntries;
}
