{
  int maxOccupancy=0;
  int totalCollisions=0;
  int size=0;
  for (int i=0; i < this._entries.length; i++) {
    for (int j=0; j < this._entries[i].length; j++) {
      Entry entry=this._entries[i][j];
      int occupancy=0;
      while (entry != null) {
        occupancy++;
        if (occupancy > maxOccupancy) {
          maxOccupancy=occupancy;
        }
        if (occupancy > 1) {
          totalCollisions++;
        }
        entry=entry._beside;
        size++;
      }
    }
  }
  final StringBuffer percentCollisions=new StringBuffer();
  if (size != 0) {
    percentCollisions.append((100 * totalCollisions) / size);
    percentCollisions.append('%');
  }
 else {
    percentCollisions.append("N/A");
  }
synchronized (out) {
    out.print("SIZE: " + size);
    out.print(", TABLE LENGTH: " + this._entries.length * this._entries[0].length);
    out.print(", AVG COLLISIONS: " + percentCollisions);
    out.print(", MAX SLOT OCCUPANCY: " + maxOccupancy);
    out.print(", KEY COMPARATOR: " + ((this._keyComp == null) ? FastComparator.DIRECT : this._keyComp));
    out.print(", SHARED: " + this._isShared);
    out.println();
    if (this._oldEntries != null) {
      out.print(" + ");
      this._oldEntries.printStatistics(out);
    }
  }
}
