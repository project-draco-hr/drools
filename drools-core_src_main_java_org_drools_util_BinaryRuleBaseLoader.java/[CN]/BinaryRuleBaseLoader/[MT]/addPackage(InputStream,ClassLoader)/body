{
  if (classLoader == null) {
    classLoader=this.classLoader;
  }
  try {
    ObjectInputStream oin=new DroolsObjectInputStream(in);
    Object opkg=oin.readObject();
    if (!(opkg instanceof Package)) {
      throw new IllegalArgumentException("Can only add instances of org.drools.rule.Package to a rulebase instance.");
    }
    Package binPkg=(Package)opkg;
    if (!binPkg.isValid()) {
      throw new IllegalArgumentException("Can't add a non valid package to a rulebase.");
    }
    try {
      this.ruleBase.addPackage(binPkg);
    }
 catch (    Exception e) {
      throw new RuntimeDroolsException("Unable to add package to the rulebase.",e);
    }
  }
 catch (  IOException e) {
    throw new RuntimeDroolsException(e);
  }
catch (  ClassNotFoundException e) {
    throw new RuntimeDroolsException(e);
  }
 finally {
    try {
      in.close();
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
}
