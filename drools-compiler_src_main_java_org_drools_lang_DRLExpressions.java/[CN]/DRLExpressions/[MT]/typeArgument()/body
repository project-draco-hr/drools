{
  try {
    int alt15=2;
    int LA15_0=input.LA(1);
    if ((LA15_0 == ID)) {
      alt15=1;
    }
 else     if ((LA15_0 == QUESTION)) {
      alt15=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",15,0,input);
      throw nvae;
    }
switch (alt15) {
case 1:
{
        pushFollow(FOLLOW_type_in_typeArgument659);
        type();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    match(input,QUESTION,FOLLOW_QUESTION_in_typeArgument667);
    if (state.failed)     return;
    int alt14=2;
    int LA14_0=input.LA(1);
    if ((LA14_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.SUPER))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
      alt14=1;
    }
switch (alt14) {
case 1:
{
        int alt13=2;
        int LA13_0=input.LA(1);
        if ((LA13_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.SUPER))) || ((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS)))))) {
          int LA13_1=input.LA(2);
          if ((((helper.validateIdentifierKey(DroolsSoftKeywords.EXTENDS))))) {
            alt13=1;
          }
 else           if ((((helper.validateIdentifierKey(DroolsSoftKeywords.SUPER))))) {
            alt13=2;
          }
 else {
            if (state.backtracking > 0) {
              state.failed=true;
              return;
            }
            NoViableAltException nvae=new NoViableAltException("",13,1,input);
            throw nvae;
          }
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          NoViableAltException nvae=new NoViableAltException("",13,0,input);
          throw nvae;
        }
switch (alt13) {
case 1:
{
            pushFollow(FOLLOW_extends_key_in_typeArgument671);
            extends_key();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
case 2:
{
        pushFollow(FOLLOW_super_key_in_typeArgument675);
        super_key();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
}
pushFollow(FOLLOW_type_in_typeArgument678);
type();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
