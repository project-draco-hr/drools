{
  BaseDescr result=null;
  Token i1=null;
  Token i2=null;
  Token DOT9=null;
  BaseDescr expr=null;
  DRLExpressions.literal_return literal8=null;
  try {
    int alt49=9;
    alt49=dfa49.predict(input);
switch (alt49) {
case 1:
{
        pushFollow(FOLLOW_parExpression_in_primary2222);
        expr=parExpression();
        state._fsp--;
        if (state.failed)         return result;
        if (state.backtracking == 0) {
          if (buildDescr) {
            result=expr;
          }
        }
      }
    break;
case 2:
{
    pushFollow(FOLLOW_nonWildcardTypeArguments_in_primary2239);
    nonWildcardTypeArguments();
    state._fsp--;
    if (state.failed)     return result;
    int alt45=2;
    int LA45_0=input.LA(1);
    if ((LA45_0 == ID)) {
      int LA45_1=input.LA(2);
      if ((!((((helper.validateIdentifierKey(DroolsSoftKeywords.THIS))))))) {
        alt45=1;
      }
 else       if ((((helper.validateIdentifierKey(DroolsSoftKeywords.THIS))))) {
        alt45=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return result;
        }
        NoViableAltException nvae=new NoViableAltException("",45,1,input);
        throw nvae;
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return result;
      }
      NoViableAltException nvae=new NoViableAltException("",45,0,input);
      throw nvae;
    }
switch (alt45) {
case 1:
{
        pushFollow(FOLLOW_explicitGenericInvocationSuffix_in_primary2242);
        explicitGenericInvocationSuffix();
        state._fsp--;
        if (state.failed)         return result;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_this_key_in_primary2246);
    this_key();
    state._fsp--;
    if (state.failed)     return result;
    pushFollow(FOLLOW_arguments_in_primary2248);
    arguments();
    state._fsp--;
    if (state.failed)     return result;
  }
break;
}
}
break;
case 3:
{
pushFollow(FOLLOW_literal_in_primary2264);
literal8=literal();
state._fsp--;
if (state.failed) return result;
if (state.backtracking == 0) {
if (buildDescr) {
result=new AtomicExprDescr((literal8 != null ? input.toString(literal8.start,literal8.stop) : null),true);
}
}
}
break;
case 4:
{
pushFollow(FOLLOW_super_key_in_primary2286);
super_key();
state._fsp--;
if (state.failed) return result;
pushFollow(FOLLOW_superSuffix_in_primary2288);
superSuffix();
state._fsp--;
if (state.failed) return result;
}
break;
case 5:
{
pushFollow(FOLLOW_new_key_in_primary2304);
new_key();
state._fsp--;
if (state.failed) return result;
pushFollow(FOLLOW_creator_in_primary2306);
creator();
state._fsp--;
if (state.failed) return result;
}
break;
case 6:
{
pushFollow(FOLLOW_primitiveType_in_primary2322);
primitiveType();
state._fsp--;
if (state.failed) return result;
loop46: do {
int alt46=2;
int LA46_0=input.LA(1);
if ((LA46_0 == LEFT_SQUARE)) {
alt46=1;
}
switch (alt46) {
case 1:
{
match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_primary2325);
if (state.failed) return result;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_primary2327);
if (state.failed) return result;
}
break;
default :
break loop46;
}
}
 while (true);
match(input,DOT,FOLLOW_DOT_in_primary2331);
if (state.failed) return result;
pushFollow(FOLLOW_class_key_in_primary2333);
class_key();
state._fsp--;
if (state.failed) return result;
}
break;
case 7:
{
pushFollow(FOLLOW_inlineMapExpression_in_primary2354);
inlineMapExpression();
state._fsp--;
if (state.failed) return result;
}
break;
case 8:
{
pushFollow(FOLLOW_inlineListExpression_in_primary2370);
inlineListExpression();
state._fsp--;
if (state.failed) return result;
}
break;
case 9:
{
i1=(Token)match(input,ID,FOLLOW_ID_in_primary2386);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(i1,DroolsEditorType.IDENTIFIER);
}
loop47: do {
int alt47=2;
int LA47_0=input.LA(1);
if ((LA47_0 == DOT)) {
int LA47_2=input.LA(2);
if ((LA47_2 == ID)) {
int LA47_3=input.LA(3);
if ((synpred28_DRLExpressions())) {
alt47=1;
}
}
}
switch (alt47) {
case 1:
{
DOT9=(Token)match(input,DOT,FOLLOW_DOT_in_primary2405);
if (state.failed) return result;
i2=(Token)match(input,ID,FOLLOW_ID_in_primary2409);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(DOT9,DroolsEditorType.SYMBOL);
helper.emit(i2,DroolsEditorType.IDENTIFIER);
}
}
break;
default :
break loop47;
}
}
 while (true);
int alt48=2;
alt48=dfa48.predict(input);
switch (alt48) {
case 1:
{
pushFollow(FOLLOW_identifierSuffix_in_primary2429);
identifierSuffix();
state._fsp--;
if (state.failed) return result;
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return result;
}
