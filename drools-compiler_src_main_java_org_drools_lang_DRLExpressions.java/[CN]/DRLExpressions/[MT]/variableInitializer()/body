{
  try {
    int alt62=2;
    int LA62_0=input.LA(1);
    if ((LA62_0 == LEFT_CURLY)) {
      alt62=1;
    }
 else     if ((LA62_0 == FLOAT || (LA62_0 >= HEX && LA62_0 <= DECIMAL) || LA62_0 == STRING || (LA62_0 >= BOOL && LA62_0 <= NULL) || (LA62_0 >= DECR && LA62_0 <= INCR) || LA62_0 == LESS || LA62_0 == LEFT_PAREN || LA62_0 == LEFT_SQUARE || (LA62_0 >= NEGATION && LA62_0 <= TILDE) || (LA62_0 >= MINUS && LA62_0 <= PLUS) || LA62_0 == ID)) {
      alt62=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",62,0,input);
      throw nvae;
    }
switch (alt62) {
case 1:
{
        pushFollow(FOLLOW_arrayInitializer_in_variableInitializer1884);
        arrayInitializer();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_expression_in_variableInitializer1898);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
