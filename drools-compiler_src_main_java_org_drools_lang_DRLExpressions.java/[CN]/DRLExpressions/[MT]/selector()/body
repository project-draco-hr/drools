{
  Token DOT18=null;
  Token DOT19=null;
  Token DOT20=null;
  Token ID21=null;
  Token LEFT_SQUARE22=null;
  Token RIGHT_SQUARE23=null;
  try {
    int alt81=4;
    int LA81_0=input.LA(1);
    if ((LA81_0 == DOT)) {
      int LA81_1=input.LA(2);
      if ((synpred33_DRLExpressions())) {
        alt81=1;
      }
 else       if ((synpred34_DRLExpressions())) {
        alt81=2;
      }
 else       if ((synpred35_DRLExpressions())) {
        alt81=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",81,1,input);
        throw nvae;
      }
    }
 else     if ((LA81_0 == LEFT_SQUARE) && (synpred37_DRLExpressions())) {
      alt81=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",81,0,input);
      throw nvae;
    }
switch (alt81) {
case 1:
{
        DOT18=(Token)match(input,DOT,FOLLOW_DOT_in_selector3614);
        if (state.failed)         return;
        if (state.backtracking == 0) {
          helper.emit(DOT18,DroolsEditorType.SYMBOL);
        }
        pushFollow(FOLLOW_super_key_in_selector3618);
        super_key();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_superSuffix_in_selector3620);
        superSuffix();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    DOT19=(Token)match(input,DOT,FOLLOW_DOT_in_selector3636);
    if (state.failed)     return;
    if (state.backtracking == 0) {
      helper.emit(DOT19,DroolsEditorType.SYMBOL);
    }
    pushFollow(FOLLOW_new_key_in_selector3640);
    new_key();
    state._fsp--;
    if (state.failed)     return;
    int alt79=2;
    int LA79_0=input.LA(1);
    if ((LA79_0 == LESS)) {
      alt79=1;
    }
switch (alt79) {
case 1:
{
        pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector3643);
        nonWildcardTypeArguments();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
}
pushFollow(FOLLOW_innerCreator_in_selector3647);
innerCreator();
state._fsp--;
if (state.failed) return;
}
break;
case 3:
{
DOT20=(Token)match(input,DOT,FOLLOW_DOT_in_selector3663);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT20,DroolsEditorType.SYMBOL);
}
ID21=(Token)match(input,ID,FOLLOW_ID_in_selector3685);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(ID21,DroolsEditorType.IDENTIFIER);
}
int alt80=2;
alt80=dfa80.predict(input);
switch (alt80) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector3714);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
case 4:
{
LEFT_SQUARE22=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector3735);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE22,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_selector3762);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE23=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector3787);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE23,DroolsEditorType.SYMBOL);
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
