{
  DRLExpressions.selector_return retval=new DRLExpressions.selector_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token DOT220=null;
  Token DOT223=null;
  Token DOT227=null;
  Token ID228=null;
  Token LEFT_SQUARE230=null;
  Token RIGHT_SQUARE232=null;
  DRLExpressions.super_key_return super_key221=null;
  DRLExpressions.superSuffix_return superSuffix222=null;
  DRLExpressions.new_key_return new_key224=null;
  DRLExpressions.nonWildcardTypeArguments_return nonWildcardTypeArguments225=null;
  DRLExpressions.innerCreator_return innerCreator226=null;
  DRLExpressions.arguments_return arguments229=null;
  DRLExpressions.expression_return expression231=null;
  Object DOT220_tree=null;
  Object DOT223_tree=null;
  Object DOT227_tree=null;
  Object ID228_tree=null;
  Object LEFT_SQUARE230_tree=null;
  Object RIGHT_SQUARE232_tree=null;
  try {
    int alt71=4;
    int LA71_0=input.LA(1);
    if ((LA71_0 == DOT)) {
      int LA71_1=input.LA(2);
      if ((synpred32_DRLExpressions())) {
        alt71=1;
      }
 else       if ((synpred33_DRLExpressions())) {
        alt71=2;
      }
 else       if ((synpred34_DRLExpressions())) {
        alt71=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",71,1,input);
        throw nvae;
      }
    }
 else     if ((LA71_0 == LEFT_SQUARE) && (synpred36_DRLExpressions())) {
      alt71=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",71,0,input);
      throw nvae;
    }
switch (alt71) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT220=(Token)match(input,DOT,FOLLOW_DOT_in_selector2260);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT220_tree=(Object)adaptor.create(DOT220);
          adaptor.addChild(root_0,DOT220_tree);
        }
        pushFollow(FOLLOW_super_key_in_selector2262);
        super_key221=super_key();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,super_key221.getTree());
        pushFollow(FOLLOW_superSuffix_in_selector2264);
        superSuffix222=superSuffix();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,superSuffix222.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    DOT223=(Token)match(input,DOT,FOLLOW_DOT_in_selector2280);
    if (state.failed)     return retval;
    if (state.backtracking == 0) {
      DOT223_tree=(Object)adaptor.create(DOT223);
      adaptor.addChild(root_0,DOT223_tree);
    }
    pushFollow(FOLLOW_new_key_in_selector2282);
    new_key224=new_key();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,new_key224.getTree());
    int alt69=2;
    int LA69_0=input.LA(1);
    if ((LA69_0 == LESS)) {
      alt69=1;
    }
switch (alt69) {
case 1:
{
        pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector2285);
        nonWildcardTypeArguments225=nonWildcardTypeArguments();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,nonWildcardTypeArguments225.getTree());
      }
    break;
}
pushFollow(FOLLOW_innerCreator_in_selector2289);
innerCreator226=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator226.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT227=(Token)match(input,DOT,FOLLOW_DOT_in_selector2305);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT227_tree=(Object)adaptor.create(DOT227);
adaptor.addChild(root_0,DOT227_tree);
}
ID228=(Token)match(input,ID,FOLLOW_ID_in_selector2307);
if (state.failed) return retval;
if (state.backtracking == 0) {
ID228_tree=(Object)adaptor.create(ID228);
adaptor.addChild(root_0,ID228_tree);
}
int alt70=2;
alt70=dfa70.predict(input);
switch (alt70) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector2316);
arguments229=arguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,arguments229.getTree());
}
break;
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE230=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector2337);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE230_tree=(Object)adaptor.create(LEFT_SQUARE230);
adaptor.addChild(root_0,LEFT_SQUARE230_tree);
}
pushFollow(FOLLOW_expression_in_selector2339);
expression231=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression231.getTree());
RIGHT_SQUARE232=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector2341);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE232_tree=(Object)adaptor.create(RIGHT_SQUARE232);
adaptor.addChild(root_0,RIGHT_SQUARE232_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return retval;
}
