{
  DRLExpressions.selector_return retval=new DRLExpressions.selector_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token DOT217=null;
  Token DOT220=null;
  Token DOT224=null;
  Token ID225=null;
  Token LEFT_SQUARE227=null;
  Token RIGHT_SQUARE229=null;
  DRLExpressions.super_key_return super_key218=null;
  DRLExpressions.superSuffix_return superSuffix219=null;
  DRLExpressions.new_key_return new_key221=null;
  DRLExpressions.nonWildcardTypeArguments_return nonWildcardTypeArguments222=null;
  DRLExpressions.innerCreator_return innerCreator223=null;
  DRLExpressions.arguments_return arguments226=null;
  DRLExpressions.expression_return expression228=null;
  Object DOT217_tree=null;
  Object DOT220_tree=null;
  Object DOT224_tree=null;
  Object ID225_tree=null;
  Object LEFT_SQUARE227_tree=null;
  Object RIGHT_SQUARE229_tree=null;
  try {
    int alt71=4;
    int LA71_0=input.LA(1);
    if ((LA71_0 == DOT)) {
      int LA71_1=input.LA(2);
      if ((synpred32_DRLExpressions())) {
        alt71=1;
      }
 else       if ((synpred33_DRLExpressions())) {
        alt71=2;
      }
 else       if ((synpred34_DRLExpressions())) {
        alt71=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",71,1,input);
        throw nvae;
      }
    }
 else     if ((LA71_0 == LEFT_SQUARE) && (synpred36_DRLExpressions())) {
      alt71=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",71,0,input);
      throw nvae;
    }
switch (alt71) {
case 1:
{
        root_0=(Object)adaptor.nil();
        DOT217=(Token)match(input,DOT,FOLLOW_DOT_in_selector2261);
        if (state.failed)         return retval;
        if (state.backtracking == 0) {
          DOT217_tree=(Object)adaptor.create(DOT217);
          adaptor.addChild(root_0,DOT217_tree);
        }
        pushFollow(FOLLOW_super_key_in_selector2263);
        super_key218=super_key();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,super_key218.getTree());
        pushFollow(FOLLOW_superSuffix_in_selector2265);
        superSuffix219=superSuffix();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,superSuffix219.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    DOT220=(Token)match(input,DOT,FOLLOW_DOT_in_selector2281);
    if (state.failed)     return retval;
    if (state.backtracking == 0) {
      DOT220_tree=(Object)adaptor.create(DOT220);
      adaptor.addChild(root_0,DOT220_tree);
    }
    pushFollow(FOLLOW_new_key_in_selector2283);
    new_key221=new_key();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,new_key221.getTree());
    int alt69=2;
    int LA69_0=input.LA(1);
    if ((LA69_0 == LESS)) {
      alt69=1;
    }
switch (alt69) {
case 1:
{
        pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector2286);
        nonWildcardTypeArguments222=nonWildcardTypeArguments();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,nonWildcardTypeArguments222.getTree());
      }
    break;
}
pushFollow(FOLLOW_innerCreator_in_selector2290);
innerCreator223=innerCreator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,innerCreator223.getTree());
}
break;
case 3:
{
root_0=(Object)adaptor.nil();
DOT224=(Token)match(input,DOT,FOLLOW_DOT_in_selector2306);
if (state.failed) return retval;
if (state.backtracking == 0) {
DOT224_tree=(Object)adaptor.create(DOT224);
adaptor.addChild(root_0,DOT224_tree);
}
ID225=(Token)match(input,ID,FOLLOW_ID_in_selector2308);
if (state.failed) return retval;
if (state.backtracking == 0) {
ID225_tree=(Object)adaptor.create(ID225);
adaptor.addChild(root_0,ID225_tree);
}
int alt70=2;
alt70=dfa70.predict(input);
switch (alt70) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector2317);
arguments226=arguments();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,arguments226.getTree());
}
break;
}
}
break;
case 4:
{
root_0=(Object)adaptor.nil();
LEFT_SQUARE227=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector2338);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE227_tree=(Object)adaptor.create(LEFT_SQUARE227);
adaptor.addChild(root_0,LEFT_SQUARE227_tree);
}
pushFollow(FOLLOW_expression_in_selector2340);
expression228=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,expression228.getTree());
RIGHT_SQUARE229=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector2342);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE229_tree=(Object)adaptor.create(RIGHT_SQUARE229);
adaptor.addChild(root_0,RIGHT_SQUARE229_tree);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return retval;
}
