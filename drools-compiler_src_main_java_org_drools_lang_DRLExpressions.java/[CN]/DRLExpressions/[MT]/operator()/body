{
  try {
{
      int alt28=3;
      int LA28_0=input.LA(1);
      if ((LA28_0 == EQUALS)) {
        alt28=1;
      }
 else       if ((LA28_0 == NOT_EQUALS)) {
        alt28=2;
      }
 else       if (((LA28_0 >= GREATER_EQUALS && LA28_0 <= LESS))) {
        alt28=3;
      }
 else       if ((LA28_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.NOT))) || ((helper.isPluggableEvaluator(false)))))) {
        alt28=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",28,0,input);
        throw nvae;
      }
switch (alt28) {
case 1:
{
          match(input,EQUALS,FOLLOW_EQUALS_in_operator712);
          if (state.failed)           return;
        }
      break;
case 2:
{
      match(input,NOT_EQUALS,FOLLOW_NOT_EQUALS_in_operator720);
      if (state.failed)       return;
    }
  break;
case 3:
{
  pushFollow(FOLLOW_relationalOp_in_operator728);
  relationalOp();
  state._fsp--;
  if (state.failed)   return;
}
break;
}
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
