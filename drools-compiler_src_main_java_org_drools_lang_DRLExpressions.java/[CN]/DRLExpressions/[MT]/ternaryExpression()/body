{
  DRLExpressions.expression_return ts=null;
  DRLExpressions.expression_return fs=null;
  ternOp++;
  try {
{
      match(input,QUESTION,FOLLOW_QUESTION_in_ternaryExpression845);
      if (state.failed)       return;
      pushFollow(FOLLOW_expression_in_ternaryExpression849);
      ts=expression();
      state._fsp--;
      if (state.failed)       return;
      match(input,COLON,FOLLOW_COLON_in_ternaryExpression851);
      if (state.failed)       return;
      pushFollow(FOLLOW_expression_in_ternaryExpression855);
      fs=expression();
      state._fsp--;
      if (state.failed)       return;
    }
  }
 catch (  RecognitionException re) {
    throw re;
  }
 finally {
    ternOp--;
  }
  return;
}
