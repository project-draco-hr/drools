{
  DRLExpressions.type_return retval=new DRLExpressions.type_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token LEFT_SQUARE11=null;
  Token RIGHT_SQUARE12=null;
  Token ID13=null;
  Token DOT15=null;
  Token ID16=null;
  Token LEFT_SQUARE18=null;
  Token RIGHT_SQUARE19=null;
  DRLExpressions.primitiveType_return primitiveType10=null;
  DRLExpressions.typeArguments_return typeArguments14=null;
  DRLExpressions.typeArguments_return typeArguments17=null;
  Object LEFT_SQUARE11_tree=null;
  Object RIGHT_SQUARE12_tree=null;
  Object ID13_tree=null;
  Object DOT15_tree=null;
  Object ID16_tree=null;
  Object LEFT_SQUARE18_tree=null;
  Object RIGHT_SQUARE19_tree=null;
  try {
    int alt8=2;
    int LA8_0=input.LA(1);
    if ((LA8_0 == ID)) {
      int LA8_1=input.LA(2);
      if ((((synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.CHAR)))) || (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.LONG)))) || (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.FLOAT))))|| (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.BYTE))))|| (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.DOUBLE))))|| (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.SHORT))))|| (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.INSTANCEOF))))|| (synpred1_DRLExpressions() && ((helper.validateIdentifierKey(DroolsSoftKeywords.INT))))))) {
        alt8=1;
      }
 else       if ((true)) {
        alt8=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",8,1,input);
        throw nvae;
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",8,0,input);
      throw nvae;
    }
switch (alt8) {
case 1:
{
        root_0=(Object)adaptor.nil();
{
          pushFollow(FOLLOW_primitiveType_in_type227);
          primitiveType10=primitiveType();
          state._fsp--;
          if (state.failed)           return retval;
          if (state.backtracking == 0)           adaptor.addChild(root_0,primitiveType10.getTree());
          loop3:           do {
            int alt3=2;
            int LA3_0=input.LA(1);
            if ((LA3_0 == LEFT_SQUARE)) {
              int LA3_2=input.LA(2);
              if ((LA3_2 == RIGHT_SQUARE)) {
                int LA3_3=input.LA(3);
                if ((synpred2_DRLExpressions())) {
                  alt3=1;
                }
              }
            }
switch (alt3) {
case 1:
{
                LEFT_SQUARE11=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_type237);
                if (state.failed)                 return retval;
                if (state.backtracking == 0) {
                  LEFT_SQUARE11_tree=(Object)adaptor.create(LEFT_SQUARE11);
                  adaptor.addChild(root_0,LEFT_SQUARE11_tree);
                }
                RIGHT_SQUARE12=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_type239);
                if (state.failed)                 return retval;
                if (state.backtracking == 0) {
                  RIGHT_SQUARE12_tree=(Object)adaptor.create(RIGHT_SQUARE12);
                  adaptor.addChild(root_0,RIGHT_SQUARE12_tree);
                }
              }
            break;
default :
          break loop3;
      }
    }
 while (true);
  }
}
break;
case 2:
{
root_0=(Object)adaptor.nil();
{
ID13=(Token)match(input,ID,FOLLOW_ID_in_type253);
if (state.failed) return retval;
if (state.backtracking == 0) {
  ID13_tree=(Object)adaptor.create(ID13);
  adaptor.addChild(root_0,ID13_tree);
}
int alt4=2;
alt4=dfa4.predict(input);
switch (alt4) {
case 1:
{
    pushFollow(FOLLOW_typeArguments_in_type260);
    typeArguments14=typeArguments();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,typeArguments14.getTree());
  }
break;
}
loop6: do {
int alt6=2;
int LA6_0=input.LA(1);
if ((LA6_0 == DOT)) {
alt6=1;
}
switch (alt6) {
case 1:
{
  DOT15=(Token)match(input,DOT,FOLLOW_DOT_in_type265);
  if (state.failed)   return retval;
  if (state.backtracking == 0) {
    DOT15_tree=(Object)adaptor.create(DOT15);
    adaptor.addChild(root_0,DOT15_tree);
  }
  ID16=(Token)match(input,ID,FOLLOW_ID_in_type267);
  if (state.failed)   return retval;
  if (state.backtracking == 0) {
    ID16_tree=(Object)adaptor.create(ID16);
    adaptor.addChild(root_0,ID16_tree);
  }
  int alt5=2;
  alt5=dfa5.predict(input);
switch (alt5) {
case 1:
{
      pushFollow(FOLLOW_typeArguments_in_type274);
      typeArguments17=typeArguments();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,typeArguments17.getTree());
    }
  break;
}
}
break;
default :
break loop6;
}
}
 while (true);
loop7: do {
int alt7=2;
int LA7_0=input.LA(1);
if ((LA7_0 == LEFT_SQUARE)) {
int LA7_2=input.LA(2);
if ((LA7_2 == RIGHT_SQUARE)) {
int LA7_3=input.LA(3);
if ((synpred5_DRLExpressions())) {
alt7=1;
}
}
}
switch (alt7) {
case 1:
{
LEFT_SQUARE18=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_type289);
if (state.failed) return retval;
if (state.backtracking == 0) {
LEFT_SQUARE18_tree=(Object)adaptor.create(LEFT_SQUARE18);
adaptor.addChild(root_0,LEFT_SQUARE18_tree);
}
RIGHT_SQUARE19=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_type291);
if (state.failed) return retval;
if (state.backtracking == 0) {
RIGHT_SQUARE19_tree=(Object)adaptor.create(RIGHT_SQUARE19);
adaptor.addChild(root_0,RIGHT_SQUARE19_tree);
}
}
break;
default :
break loop7;
}
}
 while (true);
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return retval;
}
