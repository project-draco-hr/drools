{
  DRLExpressions.explicitGenericInvocation_return retval=new DRLExpressions.explicitGenericInvocation_return();
  retval.start=input.LT(1);
  Object root_0=null;
  DRLExpressions.nonWildcardTypeArguments_return nonWildcardTypeArguments211=null;
  DRLExpressions.arguments_return arguments212=null;
  try {
{
      root_0=(Object)adaptor.nil();
      pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitGenericInvocation2183);
      nonWildcardTypeArguments211=nonWildcardTypeArguments();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,nonWildcardTypeArguments211.getTree());
      pushFollow(FOLLOW_arguments_in_explicitGenericInvocation2185);
      arguments212=arguments();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       adaptor.addChild(root_0,arguments212.getTree());
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(Object)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    throw re;
  }
 finally {
  }
  return retval;
}
