{
  try {
{
      pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression432);
      inclusiveOrExpression();
      state._fsp--;
      if (state.failed)       return;
      loop16:       do {
        int alt16=2;
        int LA16_0=input.LA(1);
        if ((LA16_0 == DOUBLE_AMPER)) {
          alt16=1;
        }
switch (alt16) {
case 1:
{
            match(input,DOUBLE_AMPER,FOLLOW_DOUBLE_AMPER_in_conditionalAndExpression436);
            if (state.failed)             return;
            pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression438);
            inclusiveOrExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop16;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
