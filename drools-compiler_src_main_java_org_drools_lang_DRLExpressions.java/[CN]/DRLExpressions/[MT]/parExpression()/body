{
  BaseDescr result=null;
  BaseDescr expr=null;
  try {
{
      match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_parExpression2110);
      if (state.failed)       return result;
      pushFollow(FOLLOW_expression_in_parExpression2114);
      expr=expression();
      state._fsp--;
      if (state.failed)       return result;
      match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_parExpression2116);
      if (state.failed)       return result;
      if (state.backtracking == 0) {
        if (buildDescr && state.backtracking == 0) {
          result=expr;
        }
      }
    }
  }
 catch (  RecognitionException re) {
    throw re;
  }
 finally {
  }
  return result;
}
