{
  try {
    int alt53=8;
    alt53=dfa53.predict(input);
switch (alt53) {
case 1:
{
        pushFollow(FOLLOW_boolean_key_in_primitiveType2602);
        boolean_key();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_char_key_in_primitiveType2610);
    char_key();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 3:
{
pushFollow(FOLLOW_byte_key_in_primitiveType2618);
byte_key();
state._fsp--;
if (state.failed) return;
}
break;
case 4:
{
pushFollow(FOLLOW_short_key_in_primitiveType2626);
short_key();
state._fsp--;
if (state.failed) return;
}
break;
case 5:
{
pushFollow(FOLLOW_int_key_in_primitiveType2634);
int_key();
state._fsp--;
if (state.failed) return;
}
break;
case 6:
{
pushFollow(FOLLOW_long_key_in_primitiveType2642);
long_key();
state._fsp--;
if (state.failed) return;
}
break;
case 7:
{
pushFollow(FOLLOW_float_key_in_primitiveType2650);
float_key();
state._fsp--;
if (state.failed) return;
}
break;
case 8:
{
pushFollow(FOLLOW_double_key_in_primitiveType2658);
double_key();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
