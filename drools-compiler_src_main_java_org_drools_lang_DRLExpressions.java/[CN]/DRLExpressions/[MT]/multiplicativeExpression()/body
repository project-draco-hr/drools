{
  try {
{
      pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression749);
      unaryExpression();
      state._fsp--;
      if (state.failed)       return;
      loop27:       do {
        int alt27=2;
        int LA27_0=input.LA(1);
        if (((LA27_0 >= MOD && LA27_0 <= STAR) || LA27_0 == DIV)) {
          alt27=1;
        }
switch (alt27) {
case 1:
{
            if ((input.LA(1) >= MOD && input.LA(1) <= STAR) || input.LA(1) == DIV) {
              input.consume();
              state.errorRecovery=false;
              state.failed=false;
            }
 else {
              if (state.backtracking > 0) {
                state.failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              throw mse;
            }
            pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression767);
            unaryExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop27;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
