{
  try {
{
      pushFollow(FOLLOW_additiveExpression_in_shiftExpression856);
      additiveExpression();
      state._fsp--;
      if (state.failed)       return;
      loop33:       do {
        int alt33=2;
        alt33=dfa33.predict(input);
switch (alt33) {
case 1:
{
            pushFollow(FOLLOW_shiftOp_in_shiftExpression864);
            shiftOp();
            state._fsp--;
            if (state.failed)             return;
            pushFollow(FOLLOW_additiveExpression_in_shiftExpression866);
            additiveExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop33;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
