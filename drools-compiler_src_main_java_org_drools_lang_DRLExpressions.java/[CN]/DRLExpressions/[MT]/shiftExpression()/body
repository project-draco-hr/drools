{
  try {
{
      pushFollow(FOLLOW_additiveExpression_in_shiftExpression650);
      additiveExpression();
      state._fsp--;
      if (state.failed)       return;
      loop23:       do {
        int alt23=2;
        alt23=dfa23.predict(input);
switch (alt23) {
case 1:
{
            pushFollow(FOLLOW_shiftOp_in_shiftExpression658);
            shiftOp();
            state._fsp--;
            if (state.failed)             return;
            pushFollow(FOLLOW_additiveExpression_in_shiftExpression660);
            additiveExpression();
            state._fsp--;
            if (state.failed)             return;
          }
        break;
default :
      break loop23;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
