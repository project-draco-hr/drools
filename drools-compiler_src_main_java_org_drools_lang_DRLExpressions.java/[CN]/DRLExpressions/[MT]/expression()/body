{
  BaseDescr result=null;
  BaseDescr left=null;
  try {
{
      pushFollow(FOLLOW_conditionalExpression_in_expression449);
      left=conditionalExpression();
      state._fsp--;
      if (state.failed)       return result;
      if (state.backtracking == 0) {
        if (buildDescr && state.backtracking == 0) {
          result=left;
        }
      }
      int alt13=2;
      alt13=dfa13.predict(input);
switch (alt13) {
case 1:
{
          pushFollow(FOLLOW_assignmentOperator_in_expression470);
          assignmentOperator();
          state._fsp--;
          if (state.failed)           return result;
          pushFollow(FOLLOW_expression_in_expression474);
          left=expression();
          state._fsp--;
          if (state.failed)           return result;
        }
      break;
  }
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return result;
}
