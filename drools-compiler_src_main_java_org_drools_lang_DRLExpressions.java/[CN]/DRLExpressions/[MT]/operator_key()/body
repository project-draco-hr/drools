{
  DRLExpressions.operator_key_return retval=new DRLExpressions.operator_key_return();
  retval.start=input.LT(1);
  Token id=null;
  try {
{
      if (!(((helper.isPluggableEvaluator(false))))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        throw new FailedPredicateException(input,"operator_key","(helper.isPluggableEvaluator(false))");
      }
      id=(Token)match(input,ID,FOLLOW_ID_in_operator_key4307);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        helper.emit(id,DroolsEditorType.KEYWORD);
      }
    }
    retval.stop=input.LT(-1);
  }
 catch (  RecognitionException re) {
    throw re;
  }
 finally {
  }
  return retval;
}
