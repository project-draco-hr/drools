{
  Token LEFT_SQUARE10=null;
  Token RIGHT_SQUARE11=null;
  Token DOT12=null;
  Token LEFT_SQUARE13=null;
  Token RIGHT_SQUARE14=null;
  try {
    int alt55=3;
    int LA55_0=input.LA(1);
    if ((LA55_0 == LEFT_SQUARE)) {
      int LA55_1=input.LA(2);
      if ((LA55_1 == RIGHT_SQUARE) && (synpred31_DRLExpressions())) {
        alt55=1;
      }
 else       if ((LA55_1 == FLOAT || (LA55_1 >= HEX && LA55_1 <= DECIMAL) || (LA55_1 >= STRING && LA55_1 <= TIME_INTERVAL) || (LA55_1 >= BOOL && LA55_1 <= NULL) || (LA55_1 >= DECR && LA55_1 <= INCR) || LA55_1 == LESS || LA55_1 == LEFT_PAREN || LA55_1 == LEFT_SQUARE || (LA55_1 >= NEGATION && LA55_1 <= TILDE) || (LA55_1 >= MINUS && LA55_1 <= PLUS) || LA55_1 == ID)) {
        alt55=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",55,1,input);
        throw nvae;
      }
    }
 else     if ((LA55_0 == LEFT_PAREN)) {
      alt55=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",55,0,input);
      throw nvae;
    }
switch (alt55) {
case 1:
{
        int cnt53=0;
        loop53:         do {
          int alt53=2;
          int LA53_0=input.LA(1);
          if ((LA53_0 == LEFT_SQUARE)) {
            alt53=1;
          }
switch (alt53) {
case 1:
{
              LEFT_SQUARE10=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix2724);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(LEFT_SQUARE10,DroolsEditorType.SYMBOL);
              }
              RIGHT_SQUARE11=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix2765);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(RIGHT_SQUARE11,DroolsEditorType.SYMBOL);
              }
            }
          break;
default :
        if (cnt53 >= 1)         break loop53;
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
    EarlyExitException eee=new EarlyExitException(53,input);
  throw eee;
}
cnt53++;
}
 while (true);
DOT12=(Token)match(input,DOT,FOLLOW_DOT_in_identifierSuffix2810);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT12,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_class_key_in_identifierSuffix2814);
class_key();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
int cnt54=0;
loop54: do {
int alt54=2;
alt54=dfa54.predict(input);
switch (alt54) {
case 1:
{
LEFT_SQUARE13=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix2830);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE13,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_identifierSuffix2861);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE14=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix2890);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE14,DroolsEditorType.SYMBOL);
}
}
break;
default :
if (cnt54 >= 1) break loop54;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(54,input);
throw eee;
}
cnt54++;
}
 while (true);
}
break;
case 3:
{
pushFollow(FOLLOW_arguments_in_identifierSuffix2906);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
