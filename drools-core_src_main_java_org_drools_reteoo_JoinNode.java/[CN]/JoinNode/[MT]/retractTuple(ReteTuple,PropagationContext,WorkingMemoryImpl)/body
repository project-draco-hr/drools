{
  BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.remove(leftTuple);
  Map matches=leftTuple.getTupleMatches();
  if (!matches.isEmpty()) {
    for (Iterator it=matches.values().iterator(); it.hasNext(); ) {
      TupleMatch tupleMatch=(TupleMatch)it.next();
      tupleMatch.getObjectMatches().remove(tupleMatch);
      propagateRetractTuple(tupleMatch,context,workingMemory);
    }
  }
}
