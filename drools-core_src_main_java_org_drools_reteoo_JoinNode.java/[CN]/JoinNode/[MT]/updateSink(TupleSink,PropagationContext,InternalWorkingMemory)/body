{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  Iterator tupleIter=memory.getTupleMemory().iterator();
  for (ReteTuple tuple=(ReteTuple)tupleIter.next(); tuple != null; tuple=(ReteTuple)tupleIter.next()) {
    Iterator objectIter=memory.getObjectMemory().iterator(tuple);
    this.constraints.updateFromTuple(tuple);
    for (FactEntry entry=(FactEntry)objectIter.next(); entry != null; entry=(FactEntry)objectIter.next()) {
      InternalFactHandle handle=entry.getFactHandle();
      this.constraints.updateFromFactHandle(handle);
      if (this.constraints.isAllowed()) {
        sink.assertTuple(new ReteTuple(tuple,handle),context,workingMemory);
      }
    }
  }
}
