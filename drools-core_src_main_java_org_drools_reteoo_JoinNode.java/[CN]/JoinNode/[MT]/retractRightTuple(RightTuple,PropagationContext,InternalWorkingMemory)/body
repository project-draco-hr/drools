{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  if (rightTuple.getMemory().isStagingMemory()) {
    rightTuple.getMemory().remove(rightTuple);
  }
 else {
    memory.getRightTupleMemory().remove(rightTuple);
  }
  if (rightTuple.firstChild != null) {
    if (isUnlinkingEnabled()) {
      memory.addStagedRetractRightTuple(rightTuple,workingMemory);
    }
 else {
      this.sink.propagateRetractRightTuple(rightTuple,context,workingMemory);
    }
  }
  if (isUnlinkingEnabled() && memory.getAndDecCounter() == 0 && !isRightInputIsRiaNode()) {
    memory.unlinkNode(workingMemory);
  }
}
