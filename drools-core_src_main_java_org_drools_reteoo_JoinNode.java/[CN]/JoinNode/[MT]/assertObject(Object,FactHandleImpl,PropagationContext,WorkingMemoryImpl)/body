{
  BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  if (!memory.contains(handle)) {
    memory.add(handle);
    ReteTuple leftTuple=null;
    TupleMatches tupleMatches=null;
    ReteTuple merged=null;
    ReteTuple rightTuple=new ReteTuple(getColumn(),handle,workingMemory);
    TupleSet tupleSet=new TupleSet();
    BetaNodeBinder binder=getJoinNodeBinder();
    Iterator it=memory.getLeftMemory().values().iterator();
    while (it.hasNext()) {
      tupleMatches=(TupleMatches)it.next();
      leftTuple=tupleMatches.getTuple();
      if (binder.isAllowed(object,handle,leftTuple,workingMemory)) {
        tupleMatches.addMatch(handle);
        merged=new ReteTuple(leftTuple,rightTuple);
        tupleSet.addTuple(merged);
      }
    }
    propagateAssertTuples(tupleSet,context,workingMemory);
  }
}
