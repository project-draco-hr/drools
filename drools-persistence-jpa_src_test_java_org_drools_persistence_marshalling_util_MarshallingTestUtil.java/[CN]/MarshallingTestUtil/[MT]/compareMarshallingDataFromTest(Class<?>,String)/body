{
  Object makeBaseDb=getDatasourceProperties().getProperty("makeBaseDb");
  boolean baseDBCreationOngoing=false;
  if ("true".equals(makeBaseDb)) {
    baseDBCreationOngoing=true;
  }
  HashMap<String,Object> testContext=initializeMarshalledDataEMF(persistenceUnitName,testClass,baseDBCreationOngoing);
  if (baseDBCreationOngoing) {
    checkMarshalledSnapshots(testContext);
    return;
  }
  List<MarshalledData> testDataList=null;
  try {
    EntityManagerFactory testEMF=(EntityManagerFactory)testContext.get(ENTITY_MANAGER_FACTORY);
    testDataList=retrieveMarshallingData(testEMF);
  }
  finally {
    cleanUp(testContext);
  }
  assertNotNull("Not marshalled data found for " + testClass.getSimpleName(),testDataList != null && !testDataList.isEmpty());
  String[] baseDbVersions=getListOfBaseDbVers(testClass);
  for (int v=0; v < baseDbVersions.length; ++v) {
    logger.trace("Loading marshalled data from base DB version: [" + baseDbVersions[v] + "]");
    HashMap<String,Object> baseContext=initializeMarshalledDataEMF(persistenceUnitName,testClass,true,baseDbVersions[v]);
    List<MarshalledData> baseDataList=null;
    try {
      EntityManagerFactory baseEMF=(EntityManagerFactory)baseContext.get(ENTITY_MANAGER_FACTORY);
      baseDataList=retrieveMarshallingData(baseEMF);
    }
  finally {
      cleanUp(baseContext);
    }
    assertTrue("No base marshalled data found",baseDataList != null && !baseDataList.isEmpty());
    compareTestAndBaseMarshallingData(testClass,testDataList,baseDataList,baseDbVersions[v]);
  }
}
