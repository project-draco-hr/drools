{
  LeftTuple previousParent=this.leftParentPrevious;
  LeftTuple nextParent=this.leftParentNext;
  if (previousParent != null && nextParent != null) {
    this.leftParentPrevious.leftParentNext=nextParent;
    this.leftParentNext.leftParentPrevious=previousParent;
  }
 else   if (nextParent != null) {
    if (this.leftParent != null) {
      this.leftParent.firstChild=nextParent;
    }
 else {
      this.handle.setFirstLeftTuple(nextParent);
    }
    nextParent.leftParentPrevious=null;
  }
 else   if (previousParent != null) {
    if (this.leftParent != null) {
      this.leftParent.lastChild=previousParent;
    }
 else {
      this.handle.setLastLeftTuple(previousParent);
    }
    previousParent.leftParentNext=null;
  }
 else {
    if (leftParent != null) {
      this.leftParent.firstChild=null;
      this.leftParent.lastChild=null;
    }
 else {
      this.handle.setFirstLeftTuple(null);
      this.handle.setLastLeftTuple(null);
    }
  }
  this.leftParent=null;
  this.leftParentPrevious=null;
  this.leftParentNext=null;
  this.blocker=null;
}
