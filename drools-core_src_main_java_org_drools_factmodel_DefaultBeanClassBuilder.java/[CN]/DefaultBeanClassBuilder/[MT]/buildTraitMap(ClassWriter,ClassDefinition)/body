{
  FieldVisitor fv=cw.visitField(ACC_PRIVATE,TraitableBean.TRAITSET_FIELD_NAME,"Ljava/util/Map;","Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;",null);
  fv.visitEnd();
  MethodVisitor mv;
  mv=cw.visitMethod(ACC_PUBLIC,"getTraitMap","()Ljava/util/Map;","()Ljava/util/Map<Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;>;",null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(classDef.getName()),TraitableBean.TRAITSET_FIELD_NAME,"Ljava/util/Map;");
  mv.visitInsn(ARETURN);
  mv.visitMaxs(3,1);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"setTraitMap","(Ljava/util/Map;)V",null,null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitVarInsn(ALOAD,1);
  mv.visitFieldInsn(PUTFIELD,BuildUtils.getInternalType(classDef.getName()),TraitableBean.TRAITSET_FIELD_NAME,"Ljava/util/Map;");
  mv.visitInsn(RETURN);
  mv.visitMaxs(2,2);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"addTrait","(Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;)V","(Ljava/lang/String;Lorg/drools/factmodel/traits/Thing;)V",null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  mv.visitVarInsn(ALOAD,1);
  mv.visitVarInsn(ALOAD,2);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","put","(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
  mv.visitInsn(POP);
  mv.visitInsn(RETURN);
  mv.visitMaxs(3,3);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"getTrait","(Ljava/lang/String;)Lorg/drools/factmodel/traits/Thing;","(Ljava/lang/String;)Lorg/drools/factmodel/traits/Thing;",null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  mv.visitVarInsn(ALOAD,1);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","get","(Ljava/lang/Object;)Ljava/lang/Object;");
  mv.visitTypeInsn(CHECKCAST,"org/drools/factmodel/traits/Thing");
  mv.visitInsn(ARETURN);
  mv.visitMaxs(2,2);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"hasTrait","(Ljava/lang/String;)Z",null,null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  Label l0=new Label();
  mv.visitJumpInsn(IFNONNULL,l0);
  mv.visitInsn(ICONST_0);
  mv.visitInsn(IRETURN);
  mv.visitLabel(l0);
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  mv.visitVarInsn(ALOAD,1);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","containsKey","(Ljava/lang/Object;)Z");
  mv.visitInsn(IRETURN);
  mv.visitMaxs(2,2);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"removeTrait","(Ljava/lang/String;)Lorg/drools/factmodel/traits/Thing;","(Ljava/lang/String;)Lorg/drools/factmodel/traits/Thing;",null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  mv.visitVarInsn(ALOAD,1);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","remove","(Ljava/lang/Object;)Ljava/lang/Object;");
  mv.visitTypeInsn(CHECKCAST,"org/drools/factmodel/traits/Thing");
  mv.visitInsn(ARETURN);
  mv.visitMaxs(2,2);
  mv.visitEnd();
  mv=cw.visitMethod(ACC_PUBLIC,"getTraits","()Ljava/util/Collection;","()Ljava/util/Collection<Ljava/lang/String;>;",null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(classDef.getName()),"getTraitMap","()Ljava/util/Map;");
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","keySet","()Ljava/util/Set;");
  mv.visitInsn(ARETURN);
  mv.visitMaxs(1,1);
  mv.visitEnd();
}
