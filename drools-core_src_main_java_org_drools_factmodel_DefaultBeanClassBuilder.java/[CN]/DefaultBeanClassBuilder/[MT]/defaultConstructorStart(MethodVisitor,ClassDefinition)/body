{
  mv.visitVarInsn(Opcodes.ALOAD,0);
  String sup="";
  try {
    sup=Type.getInternalName(Class.forName(classDef.getSuperClass()));
  }
 catch (  ClassNotFoundException e) {
    sup=BuildUtils.getInternalType(classDef.getSuperClass());
  }
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL,sup,"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{}));
  boolean hasObjects=false;
  for (  FieldDefinition field : classDef.getFieldsDefinitions()) {
    hasObjects=hasObjects || initFieldWithDefaultValue(mv,classDef,field);
  }
  if (classDef.isTraitable()) {
    initializeDynamicTypeStructures(mv,classDef);
  }
  return hasObjects;
}
