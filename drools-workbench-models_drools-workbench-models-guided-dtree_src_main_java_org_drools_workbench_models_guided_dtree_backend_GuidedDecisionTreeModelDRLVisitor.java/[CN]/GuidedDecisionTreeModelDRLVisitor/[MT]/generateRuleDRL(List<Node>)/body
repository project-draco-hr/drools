{
  Node context=null;
  final StringBuilder drl=new StringBuilder();
  final boolean hasDateFieldValue=hasDateFieldValue(path);
  this.varCounter=0;
  drl.append(generateRuleHeaderDRL());
  drl.append(INDENTATION).append("when \n");
  for (  Node node : path) {
    if (node instanceof TypeNode) {
      generateTypeNodeDRL((TypeNode)node,context,drl);
    }
 else     if (node instanceof ConstraintNode) {
      generateConstraintNodeDRL((ConstraintNode)node,context,drl);
    }
 else     if (node instanceof ActionRetractNode) {
      generateActionRetractNodeDRL((ActionRetractNode)node,context,hasDateFieldValue,drl);
    }
 else     if (node instanceof ActionUpdateNode) {
      generateActionUpdateNodeDRL((ActionUpdateNode)node,context,hasDateFieldValue,drl);
    }
 else     if (node instanceof ActionInsertNode) {
      generateActionInsertNodeDRL((ActionInsertNode)node,context,hasDateFieldValue,drl);
    }
    context=node;
  }
  if (context == null) {
  }
 else   if (context instanceof ConstraintNode) {
    drl.append(")\n").append("then \n").append("end\n");
  }
 else   if (context instanceof TypeNode) {
    drl.append(")\n").append("then \n").append("end\n");
  }
 else   if (context instanceof ActionRetractNode) {
    drl.append("end\n");
  }
 else   if (context instanceof ActionUpdateNode) {
    drl.append("end\n");
  }
 else   if (context instanceof ActionInsertNode) {
    drl.append("end\n");
  }
  ruleCount++;
  rules.append(drl);
}
