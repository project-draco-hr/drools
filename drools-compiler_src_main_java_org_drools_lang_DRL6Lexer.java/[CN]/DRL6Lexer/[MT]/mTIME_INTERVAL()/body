{
  try {
    int _type=TIME_INTERVAL;
    int _channel=DEFAULT_TOKEN_CHANNEL;
    int alt53=5;
    alt53=dfa53.predict(input);
switch (alt53) {
case 1:
{
{
          int cnt23=0;
          loop23:           do {
            int alt23=2;
            int LA23_0=input.LA(1);
            if (((LA23_0 >= '0' && LA23_0 <= '9'))) {
              alt23=1;
            }
switch (alt23) {
case 1:
{
                matchRange('0','9');
                if (state.failed)                 return;
              }
            break;
default :
          if (cnt23 >= 1)           break loop23;
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
      EarlyExitException eee=new EarlyExitException(23,input);
    throw eee;
}
cnt23++;
}
 while (true);
match('d');
if (state.failed) return;
}
int alt25=2;
alt25=dfa25.predict(input);
switch (alt25) {
case 1:
{
int cnt24=0;
loop24: do {
  int alt24=2;
  int LA24_0=input.LA(1);
  if (((LA24_0 >= '0' && LA24_0 <= '9'))) {
    alt24=1;
  }
switch (alt24) {
case 1:
{
      matchRange('0','9');
      if (state.failed)       return;
    }
  break;
default :
if (cnt24 >= 1) break loop24;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(24,input);
throw eee;
}
cnt24++;
}
 while (true);
match('h');
if (state.failed) return;
}
break;
}
int alt27=2;
alt27=dfa27.predict(input);
switch (alt27) {
case 1:
{
int cnt26=0;
loop26: do {
int alt26=2;
int LA26_0=input.LA(1);
if (((LA26_0 >= '0' && LA26_0 <= '9'))) {
alt26=1;
}
switch (alt26) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt26 >= 1) break loop26;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(26,input);
throw eee;
}
cnt26++;
}
 while (true);
match('m');
if (state.failed) return;
}
break;
}
int alt29=2;
alt29=dfa29.predict(input);
switch (alt29) {
case 1:
{
int cnt28=0;
loop28: do {
int alt28=2;
int LA28_0=input.LA(1);
if (((LA28_0 >= '0' && LA28_0 <= '9'))) {
alt28=1;
}
switch (alt28) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt28 >= 1) break loop28;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(28,input);
throw eee;
}
cnt28++;
}
 while (true);
match('s');
if (state.failed) return;
}
break;
}
int alt32=2;
int LA32_0=input.LA(1);
if (((LA32_0 >= '0' && LA32_0 <= '9'))) {
alt32=1;
}
switch (alt32) {
case 1:
{
int cnt30=0;
loop30: do {
int alt30=2;
int LA30_0=input.LA(1);
if (((LA30_0 >= '0' && LA30_0 <= '9'))) {
alt30=1;
}
switch (alt30) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt30 >= 1) break loop30;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(30,input);
throw eee;
}
cnt30++;
}
 while (true);
int alt31=2;
int LA31_0=input.LA(1);
if ((LA31_0 == 'm')) {
alt31=1;
}
switch (alt31) {
case 1:
{
match("ms");
if (state.failed) return;
}
break;
}
}
break;
}
}
break;
case 2:
{
{
int cnt33=0;
loop33: do {
int alt33=2;
int LA33_0=input.LA(1);
if (((LA33_0 >= '0' && LA33_0 <= '9'))) {
alt33=1;
}
switch (alt33) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt33 >= 1) break loop33;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(33,input);
throw eee;
}
cnt33++;
}
 while (true);
match('h');
if (state.failed) return;
}
int alt35=2;
alt35=dfa35.predict(input);
switch (alt35) {
case 1:
{
int cnt34=0;
loop34: do {
int alt34=2;
int LA34_0=input.LA(1);
if (((LA34_0 >= '0' && LA34_0 <= '9'))) {
alt34=1;
}
switch (alt34) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt34 >= 1) break loop34;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(34,input);
throw eee;
}
cnt34++;
}
 while (true);
match('m');
if (state.failed) return;
}
break;
}
int alt37=2;
alt37=dfa37.predict(input);
switch (alt37) {
case 1:
{
int cnt36=0;
loop36: do {
int alt36=2;
int LA36_0=input.LA(1);
if (((LA36_0 >= '0' && LA36_0 <= '9'))) {
alt36=1;
}
switch (alt36) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt36 >= 1) break loop36;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(36,input);
throw eee;
}
cnt36++;
}
 while (true);
match('s');
if (state.failed) return;
}
break;
}
int alt40=2;
int LA40_0=input.LA(1);
if (((LA40_0 >= '0' && LA40_0 <= '9'))) {
alt40=1;
}
switch (alt40) {
case 1:
{
int cnt38=0;
loop38: do {
int alt38=2;
int LA38_0=input.LA(1);
if (((LA38_0 >= '0' && LA38_0 <= '9'))) {
alt38=1;
}
switch (alt38) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt38 >= 1) break loop38;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(38,input);
throw eee;
}
cnt38++;
}
 while (true);
int alt39=2;
int LA39_0=input.LA(1);
if ((LA39_0 == 'm')) {
alt39=1;
}
switch (alt39) {
case 1:
{
match("ms");
if (state.failed) return;
}
break;
}
}
break;
}
}
break;
case 3:
{
{
int cnt41=0;
loop41: do {
int alt41=2;
int LA41_0=input.LA(1);
if (((LA41_0 >= '0' && LA41_0 <= '9'))) {
alt41=1;
}
switch (alt41) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt41 >= 1) break loop41;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(41,input);
throw eee;
}
cnt41++;
}
 while (true);
match('m');
if (state.failed) return;
}
int alt43=2;
alt43=dfa43.predict(input);
switch (alt43) {
case 1:
{
int cnt42=0;
loop42: do {
int alt42=2;
int LA42_0=input.LA(1);
if (((LA42_0 >= '0' && LA42_0 <= '9'))) {
alt42=1;
}
switch (alt42) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt42 >= 1) break loop42;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(42,input);
throw eee;
}
cnt42++;
}
 while (true);
match('s');
if (state.failed) return;
}
break;
}
int alt46=2;
int LA46_0=input.LA(1);
if (((LA46_0 >= '0' && LA46_0 <= '9'))) {
alt46=1;
}
switch (alt46) {
case 1:
{
int cnt44=0;
loop44: do {
int alt44=2;
int LA44_0=input.LA(1);
if (((LA44_0 >= '0' && LA44_0 <= '9'))) {
alt44=1;
}
switch (alt44) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt44 >= 1) break loop44;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(44,input);
throw eee;
}
cnt44++;
}
 while (true);
int alt45=2;
int LA45_0=input.LA(1);
if ((LA45_0 == 'm')) {
alt45=1;
}
switch (alt45) {
case 1:
{
match("ms");
if (state.failed) return;
}
break;
}
}
break;
}
}
break;
case 4:
{
{
int cnt47=0;
loop47: do {
int alt47=2;
int LA47_0=input.LA(1);
if (((LA47_0 >= '0' && LA47_0 <= '9'))) {
alt47=1;
}
switch (alt47) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt47 >= 1) break loop47;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(47,input);
throw eee;
}
cnt47++;
}
 while (true);
match('s');
if (state.failed) return;
}
int alt50=2;
int LA50_0=input.LA(1);
if (((LA50_0 >= '0' && LA50_0 <= '9'))) {
alt50=1;
}
switch (alt50) {
case 1:
{
int cnt48=0;
loop48: do {
int alt48=2;
int LA48_0=input.LA(1);
if (((LA48_0 >= '0' && LA48_0 <= '9'))) {
alt48=1;
}
switch (alt48) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt48 >= 1) break loop48;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(48,input);
throw eee;
}
cnt48++;
}
 while (true);
int alt49=2;
int LA49_0=input.LA(1);
if ((LA49_0 == 'm')) {
alt49=1;
}
switch (alt49) {
case 1:
{
match("ms");
if (state.failed) return;
}
break;
}
}
break;
}
}
break;
case 5:
{
{
int cnt51=0;
loop51: do {
int alt51=2;
int LA51_0=input.LA(1);
if (((LA51_0 >= '0' && LA51_0 <= '9'))) {
alt51=1;
}
switch (alt51) {
case 1:
{
matchRange('0','9');
if (state.failed) return;
}
break;
default :
if (cnt51 >= 1) break loop51;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(51,input);
throw eee;
}
cnt51++;
}
 while (true);
int alt52=2;
int LA52_0=input.LA(1);
if ((LA52_0 == 'm')) {
alt52=1;
}
switch (alt52) {
case 1:
{
match("ms");
if (state.failed) return;
}
break;
}
}
}
break;
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
