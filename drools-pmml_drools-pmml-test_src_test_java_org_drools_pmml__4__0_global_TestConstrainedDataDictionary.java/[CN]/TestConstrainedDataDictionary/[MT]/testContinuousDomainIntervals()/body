{
  FactType ivals=getKbase().getFactType(packageName,"Intervalled");
  Assert.assertNotNull(ivals);
  Object data1=ivals.newInstance();
  ivals.set(data1,"value",-0.4);
  Object data2=ivals.newInstance();
  ivals.set(data2,"value",0.3);
  Object data3=ivals.newInstance();
  ivals.set(data3,"value",1.6);
  Object data4=ivals.newInstance();
  ivals.set(data4,"value",2.0);
  Object data5=ivals.newInstance();
  ivals.set(data5,"value",3.0);
  Object data6=ivals.newInstance();
  ivals.set(data6,"value",8.2);
  Object data7=ivals.newInstance();
  ivals.set(data7,"value",12.4);
  Object data8=ivals.newInstance();
  ivals.set(data8,"value",999.9);
  getKSession().insert(data1);
  getKSession().insert(data2);
  getKSession().insert(data3);
  getKSession().insert(data4);
  getKSession().insert(data5);
  getKSession().insert(data6);
  getKSession().insert(data7);
  getKSession().insert(data8);
  getKSession().fireAllRules();
  Assert.assertEquals(false,ivals.get(data1,"valid"));
  Assert.assertEquals(true,ivals.get(data2,"valid"));
  Assert.assertEquals(false,ivals.get(data3,"valid"));
  Assert.assertEquals(true,ivals.get(data4,"valid"));
  Assert.assertEquals(false,ivals.get(data5,"valid"));
  Assert.assertEquals(false,ivals.get(data6,"valid"));
  Assert.assertEquals(true,ivals.get(data7,"valid"));
  Assert.assertEquals(false,ivals.get(data8,"valid"));
}
