{
  Table ret=null;
  Map currentMap=this.buckets;
  if (this.constraints.isAllowedAlpha(factHandle,null,null)) {
    if (this.numberOfVariableConstraints > 0) {
      for (int i=0; (i < this.numberOfVariableConstraints) && (currentMap != null); i++) {
        Integer hash=DEFAULT_HASH;
        if (this.constraints.getBetaContraints()[i] instanceof VariableConstraint && ((VariableConstraint)this.constraints.getBetaContraints()[i]).getEvaluator().getOperator() == Operator.EQUAL) {
          final Object select=((VariableConstraint)this.constraints.getBetaContraints()[i]).getFieldExtractor().getValue(factHandle.getObject());
          if (select != null) {
            hash=new Integer(select.hashCode());
          }
        }
        if (i != (this.numberOfVariableConstraints - 1)) {
          Map map=(Map)currentMap.get(hash);
          if (map == null && createIfNotThere) {
            map=new HashMap();
            currentMap.put(hash,map);
          }
          currentMap=map;
        }
 else {
          Table table=(Table)currentMap.get(hash);
          if (table == null && createIfNotThere) {
            table=new Table(this.comparator);
            currentMap.put(hash,table);
          }
          ret=table;
        }
      }
    }
 else {
      return this.noConstraintsTable;
    }
  }
  return ret;
}
