{
  int firstUnification=-1;
  int firstNonUnification=-1;
  for (int i=0, length=constraints.length; i < length; i++) {
    if (isIndexable(constraints[i],betaNodeType)) {
      final boolean isUnification=((IndexableConstraint)constraints[i]).isUnification();
      if (isUnification && firstUnification == -1) {
        firstUnification=i;
      }
 else       if (!isUnification && firstNonUnification == -1) {
        firstNonUnification=i;
      }
    }
    if (firstUnification != -1 && firstNonUnification != -1) {
      break;
    }
  }
  if (firstNonUnification != -1 && firstNonUnification > 0) {
    swap(constraints,0,firstNonUnification);
  }
  return (firstUnification == -1);
}
