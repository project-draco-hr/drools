{
  int[] declarationsParamsPos=new int[declarations.length];
  for (int i=0; i < declarations.length; i++) {
    declarationsParamsPos[i]=objAstorePos;
    mv.visitVarInsn(ALOAD,declarReg);
    push(i);
    mv.visitInsn(AALOAD);
    mv.visitVarInsn(ALOAD,wmReg);
    cast(InternalWorkingMemory.class);
    if (readLocalsFromTuple) {
      mv.visitVarInsn(ALOAD,tupleReg);
      mv.visitVarInsn(ALOAD,declarReg);
      push(i);
      mv.visitInsn(AALOAD);
      invokeInterface(Tuple.class,"get",InternalFactHandle.class,Declaration.class);
      invokeInterface(InternalFactHandle.class,"getObject",Object.class);
    }
 else {
      mv.visitVarInsn(ALOAD,1);
    }
    String readMethod=declarations[i].getNativeReadMethodName();
    boolean isObject=readMethod.equals("getValue");
    String declarationType=declarations[i].getTypeName();
    String returnedType=isObject ? "Ljava/lang/Object;" : typeDescr(declarationType);
    mv.visitMethodInsn(INVOKEVIRTUAL,"org/drools/rule/Declaration",readMethod,"(Lorg/drools/common/InternalWorkingMemory;Ljava/lang/Object;)" + returnedType);
    if (isObject) {
      mv.visitTypeInsn(CHECKCAST,internalName(declarationType));
    }
    objAstorePos+=store(objAstorePos,declarationType);
  }
  return declarationsParamsPos;
}
