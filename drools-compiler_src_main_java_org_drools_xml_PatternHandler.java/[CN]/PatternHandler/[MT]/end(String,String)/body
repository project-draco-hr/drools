{
  final Configuration config=this.xmlPackageReader.endConfiguration();
  final PatternDescr patternDescr=(PatternDescr)this.xmlPackageReader.getCurrent();
  final LinkedList parents=this.xmlPackageReader.getParents();
  final ListIterator ite=parents.listIterator(parents.size());
  ite.previous();
  final Object parent=ite.previous();
  if (parent instanceof PatternProcessorCeDescr) {
    final PatternProcessorCeDescr parentDescr=(PatternProcessorCeDescr)parent;
    parentDescr.setSourcePattern(patternDescr);
  }
 else {
    final ConditionalElementDescr parentDescr=(ConditionalElementDescr)parent;
    final List conditionalDescriptors=parentDescr.getDescrs();
    for (final Iterator iterator=conditionalDescriptors.iterator(); iterator.hasNext(); ) {
      final Object obj=iterator.next();
      if (obj instanceof PatternProcessorCeDescr || FromDescr.class.getName().equals(obj.getClass().getName()))       return null;
    }
    parentDescr.addDescr(patternDescr);
  }
  return null;
}
