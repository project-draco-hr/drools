{
  final Configuration config=this.xmlPackageReader.endConfiguration();
  final PatternDescr patternDescr=(PatternDescr)this.xmlPackageReader.getCurrent();
  final LinkedList parents=this.xmlPackageReader.getParents();
  final ListIterator ite=parents.listIterator(parents.size());
  ite.previous();
  final Object parent=ite.previous();
  if (parent.getClass().getName().equals(CollectDescr.class.getName())) {
    final CollectDescr parentDescr=(CollectDescr)parent;
    parentDescr.setResultPattern(patternDescr);
  }
 else   if (parent instanceof ConditionalElementDescr) {
    final ConditionalElementDescr parentDescr=(ConditionalElementDescr)parent;
    List conditionalDescriptors=parentDescr.getDescrs();
    if (!conditionalDescriptors.isEmpty()) {
      for (Iterator iterator=conditionalDescriptors.iterator(); iterator.hasNext(); ) {
        Object obj=iterator.next();
        if (obj.getClass().getName().intern().equals(CollectDescr.class.getName().intern())) {
          return null;
        }
      }
    }
    parentDescr.addDescr(patternDescr);
  }
  return null;
}
