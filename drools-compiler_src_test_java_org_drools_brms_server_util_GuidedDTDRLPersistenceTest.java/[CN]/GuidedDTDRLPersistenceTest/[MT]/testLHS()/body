{
  GuidedDTDRLPersistence p=new GuidedDTDRLPersistence();
  String[] row=new String[]{"1","desc","a","mike","33 + 1","age > 6","stilton"};
  List<ConditionCol> cols=new ArrayList<ConditionCol>();
  ConditionCol col=new ConditionCol();
  col.boundName="p1";
  col.factType="Person";
  col.factField="name";
  col.constraintValueType=ISingleFieldConstraint.TYPE_LITERAL;
  col.operator="==";
  cols.add(col);
  ConditionCol col2=new ConditionCol();
  col2.boundName="p1";
  col2.factType="Person";
  col2.factField="age";
  col2.constraintValueType=ISingleFieldConstraint.TYPE_RET_VALUE;
  col2.operator="<";
  cols.add(col2);
  ConditionCol col3=new ConditionCol();
  col3.boundName="p1";
  col3.factType="Person";
  col3.constraintValueType=ISingleFieldConstraint.TYPE_PREDICATE;
  cols.add(col3);
  ConditionCol col4=new ConditionCol();
  col4.boundName="c";
  col4.factType="Cheese";
  col4.factField="type";
  col4.operator="==";
  col4.constraintValueType=ISingleFieldConstraint.TYPE_LITERAL;
  cols.add(col4);
  RuleModel rm=new RuleModel();
  p.doConditions(1,cols,row,rm);
  assertEquals(2,rm.lhs.length);
  assertEquals("Person",((FactPattern)rm.lhs[0]).factType);
  assertEquals("p1",((FactPattern)rm.lhs[0]).boundName);
  assertEquals("Cheese",((FactPattern)rm.lhs[1]).factType);
  assertEquals("c",((FactPattern)rm.lhs[1]).boundName);
  FactPattern person=(FactPattern)rm.lhs[0];
  assertEquals(3,person.constraintList.constraints.length);
  SingleFieldConstraint cons=(SingleFieldConstraint)person.constraintList.constraints[0];
  assertEquals(ISingleFieldConstraint.TYPE_LITERAL,cons.constraintValueType);
  assertEquals("name",cons.fieldName);
  assertEquals("==",cons.operator);
  assertEquals("mike",cons.value);
  cons=(SingleFieldConstraint)person.constraintList.constraints[1];
  assertEquals(ISingleFieldConstraint.TYPE_RET_VALUE,cons.constraintValueType);
  assertEquals("age",cons.fieldName);
  assertEquals("<",cons.operator);
  assertEquals("33 + 1",cons.value);
  cons=(SingleFieldConstraint)person.constraintList.constraints[2];
  assertEquals(ISingleFieldConstraint.TYPE_PREDICATE,cons.constraintValueType);
  assertEquals("age > 6",cons.value);
  FactPattern cheese=(FactPattern)rm.lhs[1];
  assertEquals(1,cheese.constraintList.constraints.length);
  cons=(SingleFieldConstraint)cheese.constraintList.constraints[0];
  assertEquals("type",cons.fieldName);
  assertEquals("==",cons.operator);
  assertEquals("stilton",cons.value);
  assertEquals(ISingleFieldConstraint.TYPE_LITERAL,cons.constraintValueType);
}
