{
  KieSession session=getStatelessKieSession(this.getClass().getResourceAsStream("RestrictionOrder.drl"));
  VerifierReport result=VerifierReportFactory.newVerifierReport();
  Collection<? extends Object> testData=getTestData(this.getClass().getResourceAsStream("OptimisationRestrictionOrderTest.drl"),result.getVerifierData());
  session.setGlobal("result",result);
  for (  Object o : testData) {
    session.insert(o);
  }
  session.fireAllRules(new RuleNameMatchesAgendaFilter("Optimise restrictions inside operator"));
  Iterator<VerifierMessageBase> iter=result.getBySeverity(Severity.NOTE).iterator();
  Collection<String> ruleNames=new ArrayList<String>();
  while (iter.hasNext()) {
    Object o=(Object)iter.next();
    if (o instanceof VerifierMessage) {
      String name=((VerifierMessage)o).getCauses().toArray(new Restriction[2])[0].getRuleName();
      ruleNames.add(name);
    }
  }
  assertTrue(ruleNames.remove("Wrong descr order 1"));
  if (!ruleNames.isEmpty()) {
    for (    String string : ruleNames) {
      fail("Rule " + string + " caused an error.");
    }
  }
}
