{
  parent.add(createLabel("Actions"),"wrap, spanx 3");
  JPanel actionsPanel=new JPanel();
  actionsPanel.setBorder(null);
  actionsPanel.setLayout(new BoxLayout(actionsPanel,BoxLayout.Y_AXIS));
  JButton moveBtn=new JButton("Move");
  actionsPanel.add(moveBtn);
  moveBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cmdTextField.setText("Move ");
      cmd=new ArrayList();
      cmd.add(Action.MOVE);
      cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    }
  }
);
  JButton pickupBtn=new JButton("Pick Up");
  actionsPanel.add(pickupBtn);
  pickupBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cmdTextField.setText("Pickup ");
      cmd=new ArrayList();
      cmd.add(Action.PICKUP);
      cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    }
  }
);
  JButton dropBtn=new JButton("Drop");
  actionsPanel.add(dropBtn);
  dropBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cmdTextField.setText("Drop ");
      cmd=new ArrayList();
      cmd.add(Action.DROP);
      cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    }
  }
);
  JButton giveBtn=new JButton("Give");
  actionsPanel.add(giveBtn);
  giveBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cmdTextField.setText("Request Give ");
      cmd=new ArrayList();
      cmd.add(Action.GIVE);
      cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    }
  }
);
  JButton lookBtn=new JButton("Look");
  actionsPanel.add(lookBtn);
  lookBtn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      cmdTextField.setText("Look ");
      cmd=new ArrayList();
      cmd.add(Action.LOOK);
      cmd.add(characterSelectCombo.getSelectedObjects()[0]);
    }
  }
);
  parent.add(actionsPanel,"top, left");
  thingsTable=new JTable();
  thingsTable.setPreferredScrollableViewportSize(new Dimension(245,250));
  thingsTable.setBorder(null);
  thingsTable.setModel(new DefaultTableModel(new Object[][]{},new String[]{"Items"}));
  thingsTable.addMouseListener(new MouseListener(){
    public void mouseReleased(    MouseEvent e){
    }
    public void mousePressed(    MouseEvent e){
    }
    public void mouseExited(    MouseEvent e){
    }
    public void mouseEntered(    MouseEvent e){
    }
    public void mouseClicked(    MouseEvent e){
      if (cmd == null) {
        return;
      }
      int row=thingsTable.rowAtPoint(e.getPoint());
      int col=thingsTable.columnAtPoint(e.getPoint());
      Object o=thingsTable.getModel().getValueAt(row,col);
      cmdTextField.setText(cmdTextField.getText() + o.toString() + " ");
      cmd.add(o);
    }
  }
);
  JScrollPane itemsPanel=new JScrollPane(thingsTable);
  parent.add(itemsPanel,"top, left");
  exitsTable=new JTable();
  exitsTable.setPreferredScrollableViewportSize(new Dimension(245,250));
  exitsTable.setBorder(null);
  exitsTable.setModel(new DefaultTableModel(new Object[][]{},new String[]{"Exits"}));
  exitsTable.addMouseListener(new MouseListener(){
    public void mouseReleased(    MouseEvent e){
    }
    public void mousePressed(    MouseEvent e){
    }
    public void mouseExited(    MouseEvent e){
    }
    public void mouseEntered(    MouseEvent e){
    }
    public void mouseClicked(    MouseEvent e){
      if (cmd == null) {
        return;
      }
      int row=exitsTable.rowAtPoint(e.getPoint());
      int col=exitsTable.columnAtPoint(e.getPoint());
      Object o=exitsTable.getModel().getValueAt(row,col);
      cmdTextField.setText(cmdTextField.getText() + o.toString() + " ");
      cmd.add(o);
    }
  }
);
  JScrollPane exitsPanel=new JScrollPane(exitsTable);
  parent.add(exitsPanel,"top, left, wrap");
}
