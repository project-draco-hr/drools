{
  SegmentMemory smem=new SegmentMemory(rootNode);
  smem.tipNode=tipNode;
  smem.linkedNodeMask=new AtomicBitwiseLong(linkedNodeMask);
  smem.allLinkedMaskTest=allLinkedMaskTest;
  smem.segmentPosMaskBit=segmentPosMaskBit;
  smem.pos=pos;
  int i=0;
  for (  NetworkNode node : smem.getNodesInSegment()) {
    Memory mem=wm.getNodeMemory((MemoryFactory)node);
    mem.setSegmentMemory(smem);
    smem.getNodeMemories().add(mem);
    MemoryPrototype proto=memories.get(i++);
    if (proto != null) {
      proto.populateMemory(wm,mem);
    }
  }
  if (hasQueue && smem.getTupleQueue() == null) {
    Queue<TupleEntry> queue=SegmentUtilities.initAndGetTupleQueue(smem.getTipNode(),wm);
    smem.setTupleQueue(queue);
  }
  if (hasSyncStagedLeftTuple) {
    smem.setStagedTuples(new SynchronizedLeftTupleSets());
  }
  return smem;
}
