{
  QueryTerminalNode node=(QueryTerminalNode)resultLeftTuple.getLeftTupleSink();
  Declaration[] decls=node.getDeclarations();
  DroolsQuery dquery=(DroolsQuery)this.factHandle.getObject();
  Object[] objects=new Object[dquery.getElements().length];
  Declaration decl;
  for (  int variable : this.variables) {
    decl=decls[variable];
    objects[variable]=decl.getValue(workingMemory,resultLeftTuple.get(decl).getObject());
  }
  QueryElementFactHandle resultHandle=createQueryResultHandle(context,workingMemory,objects);
  RightTuple rightTuple=createResultRightTuple(resultHandle,resultLeftTuple,dquery.isOpen());
  this.node.getSinkPropagator().createChildLeftTuplesforQuery(this.leftTuple,rightTuple,true,dquery.isOpen());
  RightTupleList rightTuples=dquery.getResultInsertRightTupleList();
  if (rightTuples == null) {
    rightTuples=new RightTupleList();
    dquery.setResultInsertRightTupleList(rightTuples);
    QueryResultInsertAction evalAction=new QueryResultInsertAction(context,this.factHandle,leftTuple,this.node);
    context.getQueue2().addFirst(evalAction);
  }
  rightTuples.add(rightTuple);
}
