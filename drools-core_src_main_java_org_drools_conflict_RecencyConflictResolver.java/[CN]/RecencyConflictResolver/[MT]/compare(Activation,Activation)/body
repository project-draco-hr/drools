{
  FactHandle[] lFacts=lhs.getTuple().getFactHandles();
  FactHandle[] rFacts=rhs.getTuple().getFactHandles();
  FactHandle leftMostRecent=getMostRecentFact(lFacts);
  FactHandle rightMostRecent=getMostRecentFact(rFacts);
  int lastIndex=(lFacts.length < rFacts.length) ? lFacts.length : rFacts.length;
  if (leftMostRecent.getRecency() == rightMostRecent.getRecency() && lastIndex > 1) {
    for (int i=0; i < lastIndex; i++) {
      leftMostRecent=getMostRecentFact(lFacts,leftMostRecent);
      rightMostRecent=getMostRecentFact(rFacts,rightMostRecent);
      if (leftMostRecent.getRecency() != rightMostRecent.getRecency()) {
        return (int)(rightMostRecent.getRecency() - leftMostRecent.getRecency());
      }
    }
  }
 else {
    return (int)(rightMostRecent.getRecency() - leftMostRecent.getRecency());
  }
  return rFacts.length - lFacts.length;
}
