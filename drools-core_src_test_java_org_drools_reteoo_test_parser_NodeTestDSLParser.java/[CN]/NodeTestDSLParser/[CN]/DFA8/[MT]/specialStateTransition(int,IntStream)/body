{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA8_4=input.LA(1);
  int index8_4=input.index();
input.rewind();
s=-1;
if ((LA8_4 == COLON) && (((validateIdentifierKey("TearDown"))))) {
s=5;
}
 else if ((LA8_4 == STRING)) {
s=7;
}
 else if (((LA8_4 >= SEMI_COLON && LA8_4 <= ID) || (LA8_4 >= COMMA && LA8_4 <= LEFT_SQUARE) || LA8_4 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_4);
if (s >= 0) return s;
break;
case 1:
int LA8_8=input.LA(1);
int index8_8=input.index();
input.rewind();
s=-1;
if ((LA8_8 == COLON) && (((validateIdentifierKey("Test"))))) {
s=9;
}
 else if ((LA8_8 == STRING)) {
s=6;
}
 else if (((LA8_8 >= SEMI_COLON && LA8_8 <= ID) || (LA8_8 >= COMMA && LA8_8 <= LEFT_SQUARE) || LA8_8 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_8);
if (s >= 0) return s;
break;
case 2:
int LA8_10=input.LA(1);
int index8_10=input.index();
input.rewind();
s=-1;
if ((LA8_10 == COLON) && (((validateIdentifierKey("TearDown"))))) {
s=11;
}
 else if ((LA8_10 == STRING)) {
s=7;
}
 else if (((LA8_10 >= SEMI_COLON && LA8_10 <= ID) || (LA8_10 >= COMMA && LA8_10 <= LEFT_SQUARE) || LA8_10 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_10);
if (s >= 0) return s;
break;
case 3:
int LA8_1=input.LA(1);
int index8_1=input.index();
input.rewind();
s=-1;
if ((LA8_1 == COLON)) {
s=2;
}
 else if ((LA8_1 == ID)) {
s=4;
}
 else if ((LA8_1 == EOF) && (((validateIdentifierKey("TearDown"))))) {
s=5;
}
 else if ((LA8_1 == STRING)) {
s=6;
}
 else if ((LA8_1 == SEMI_COLON || (LA8_1 >= COMMA && LA8_1 <= LEFT_SQUARE) || LA8_1 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_1);
if (s >= 0) return s;
break;
case 4:
int LA8_6=input.LA(1);
int index8_6=input.index();
input.rewind();
s=-1;
if ((LA8_6 == ID)) {
s=8;
}
 else if ((LA8_6 == EOF) && (((validateIdentifierKey("Test"))))) {
s=9;
}
 else if (((LA8_6 >= STRING && LA8_6 <= SEMI_COLON) || (LA8_6 >= COMMA && LA8_6 <= LEFT_SQUARE) || LA8_6 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_6);
if (s >= 0) return s;
break;
case 5:
int LA8_7=input.LA(1);
int index8_7=input.index();
input.rewind();
s=-1;
if ((LA8_7 == ID)) {
s=10;
}
 else if ((LA8_7 == EOF) && (((validateIdentifierKey("TearDown"))))) {
s=5;
}
 else if (((LA8_7 >= STRING && LA8_7 <= SEMI_COLON) || (LA8_7 >= COMMA && LA8_7 <= LEFT_SQUARE) || LA8_7 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_7);
if (s >= 0) return s;
break;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),8,_s,input);
error(nvae);
throw nvae;
}
