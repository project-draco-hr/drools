{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA8_12=input.LA(1);
  int index8_12=input.index();
input.rewind();
s=-1;
if ((LA8_12 == COLON) && (((validateIdentifierKey("TearDown"))))) {
s=13;
}
 else if ((LA8_12 == STRING)) {
s=10;
}
 else if (((LA8_12 >= SEMI_COLON && LA8_12 <= ID) || (LA8_12 >= COMMA && LA8_12 <= LEFT_SQUARE) || LA8_12 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_12);
if (s >= 0) return s;
break;
case 1:
int LA8_5=input.LA(1);
int index8_5=input.index();
input.rewind();
s=-1;
if ((LA8_5 == COLON) && (((validateIdentifierKey("TearDown"))))) {
s=9;
}
 else if ((LA8_5 == STRING)) {
s=10;
}
 else if (((LA8_5 >= SEMI_COLON && LA8_5 <= ID) || (LA8_5 >= COMMA && LA8_5 <= LEFT_SQUARE) || LA8_5 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_5);
if (s >= 0) return s;
break;
case 2:
int LA8_7=input.LA(1);
int index8_7=input.index();
input.rewind();
s=-1;
if ((LA8_7 == COLON) && (((validateIdentifierKey("Test"))))) {
s=11;
}
 else if ((LA8_7 == STRING)) {
s=4;
}
 else if (((LA8_7 >= SEMI_COLON && LA8_7 <= ID) || (LA8_7 >= COMMA && LA8_7 <= LEFT_SQUARE) || LA8_7 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_7);
if (s >= 0) return s;
break;
case 3:
int LA8_4=input.LA(1);
int index8_4=input.index();
input.rewind();
s=-1;
if ((LA8_4 == ID)) {
s=7;
}
 else if ((LA8_4 == EOF) && (((validateIdentifierKey("Test"))))) {
s=8;
}
 else if (((LA8_4 >= STRING && LA8_4 <= SEMI_COLON) || (LA8_4 >= COMMA && LA8_4 <= LEFT_SQUARE) || LA8_4 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_4);
if (s >= 0) return s;
break;
case 4:
int LA8_10=input.LA(1);
int index8_10=input.index();
input.rewind();
s=-1;
if ((LA8_10 == ID)) {
s=12;
}
 else if ((LA8_10 == EOF) && (((validateIdentifierKey("TearDown"))))) {
s=6;
}
 else if (((LA8_10 >= STRING && LA8_10 <= SEMI_COLON) || (LA8_10 >= COMMA && LA8_10 <= LEFT_SQUARE) || LA8_10 == LEFT_PAREN)) {
s=3;
}
input.seek(index8_10);
if (s >= 0) return s;
break;
case 5:
int LA8_1=input.LA(1);
int index8_1=input.index();
input.rewind();
s=-1;
if ((LA8_1 == COLON)) {
s=2;
}
 else if ((LA8_1 == STRING)) {
s=4;
}
 else if ((LA8_1 == SEMI_COLON || (LA8_1 >= COMMA && LA8_1 <= LEFT_SQUARE) || LA8_1 == LEFT_PAREN)) {
s=3;
}
 else if ((LA8_1 == ID)) {
s=5;
}
 else if ((LA8_1 == EOF) && (((validateIdentifierKey("TearDown"))))) {
s=6;
}
input.seek(index8_1);
if (s >= 0) return s;
break;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),8,_s,input);
error(nvae);
throw nvae;
}
