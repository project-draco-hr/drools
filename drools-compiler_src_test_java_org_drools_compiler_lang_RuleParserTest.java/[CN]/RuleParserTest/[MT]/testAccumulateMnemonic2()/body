{
  String drl="package org.drools.compiler\n" + "rule \"Accumulate 1\"\n" + "when\n"+ "     Number() from acc( Cheese( $price : price ),\n"+ "                        average( $price ) )\n"+ "then\n"+ "end\n";
  final PackageDescr pkg=(PackageDescr)parse("compilationUnit",drl);
  assertEquals(1,pkg.getRules().size());
  RuleDescr rule=(RuleDescr)pkg.getRules().get(0);
  assertEquals(1,rule.getLhs().getDescrs().size());
  PatternDescr out=(PatternDescr)rule.getLhs().getDescrs().get(0);
  assertEquals("Number",out.getObjectType());
  AccumulateDescr accum=(AccumulateDescr)out.getSource();
  assertTrue(accum.isExternalFunction());
  List<AccumulateFunctionCallDescr> functions=accum.getFunctions();
  assertEquals(1,functions.size());
  assertEquals("average",functions.get(0).getFunction());
  assertEquals("$price",functions.get(0).getParams()[0]);
  final PatternDescr pattern=(PatternDescr)accum.getInputPattern();
  assertEquals("Cheese",pattern.getObjectType());
}
