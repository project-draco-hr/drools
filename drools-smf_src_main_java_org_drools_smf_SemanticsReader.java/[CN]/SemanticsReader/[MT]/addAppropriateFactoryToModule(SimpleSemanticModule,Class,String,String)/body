{
  if (RULE.equals(type)) {
    RuleFactory factory=(RuleFactory)factoryClass.newInstance();
    module.addRuleFactory(componentName,factory);
  }
 else   if (OBJECT_TYPE.equals(type)) {
    ObjectTypeFactory factory=(ObjectTypeFactory)factoryClass.newInstance();
    module.addObjectTypeFactory(componentName,factory);
  }
 else   if (CONDITION.equals(type)) {
    ConditionFactory factory=(ConditionFactory)factoryClass.newInstance();
    module.addConditionFactory(componentName,factory);
  }
 else   if (CONSEQUENCE.equals(type)) {
    ConsequenceFactory factory=(ConsequenceFactory)factoryClass.newInstance();
    module.addConsequenceFactory(componentName,factory);
  }
 else   if (DURATION.equals(type)) {
    DurationFactory factory=(DurationFactory)factoryClass.newInstance();
    module.addDurationFactory(componentName,factory);
  }
 else   if (IMPORT_ENTRY.equals(type)) {
    ImportEntryFactory factory=(ImportEntryFactory)factoryClass.newInstance();
    module.addImportEntryFactory(componentName,factory);
  }
 else   if (APPLICATION_DATA.equals(type)) {
    ApplicationDataFactory factory=(ApplicationDataFactory)factoryClass.newInstance();
    module.addApplicationDataFactory(componentName,factory);
  }
 else   if (FUNCTIONS.equals(type)) {
    FunctionsFactory factory=(FunctionsFactory)factoryClass.newInstance();
    module.addFunctionsFactory(componentName,factory);
  }
 else   if (PREDICATE.equals(type)) {
    PredicateEvaluatorFactory factory=(PredicateEvaluatorFactory)factoryClass.newInstance();
    module.addPredicateEvaluatorFactory(componentName,factory);
  }
 else   if (RETURN_VALUE.equals(type)) {
    ReturnValueEvaluatorFactory factory=(ReturnValueEvaluatorFactory)factoryClass.newInstance();
    module.addReturnValueEvaluatorFactory(componentName,factory);
  }
 else {
    throw new SemanticsReaderException("unknown type '" + type + "'");
  }
}
