{
  Properties props=new Properties();
  props.load(in);
  String uri=props.getProperty("module.uri");
  if (uri == null || uri.trim().equals("")) {
    throw new SemanticsReaderException("module.uri must be specified");
  }
  SimpleSemanticModule module=new SimpleSemanticModule(uri.trim());
  for (Enumeration propNames=props.propertyNames(); propNames.hasMoreElements(); ) {
    String key=(String)propNames.nextElement();
    if (key.equals("module.uri")) {
      continue;
    }
    String className=props.getProperty(key);
    Class factoryClass;
    try {
      factoryClass=cl.loadClass(className);
    }
 catch (    ClassNotFoundException e) {
      throw new SemanticsReaderException(e);
    }
    if (key.indexOf("(") < 0 || key.indexOf(")") < 0) {
      throw new SemanticsReaderException("invalid key: " + key);
    }
    String type=parseType(key);
    if (type == null || type.equals("")) {
      throw new SemanticsReaderException("no type specified");
    }
    String componentName=parseName(key);
    if (componentName == null || componentName.equals("")) {
      throw new SemanticsReaderException("no component name specified");
    }
    try {
      addAppropriateFactoryToModule(module,factoryClass,type,componentName);
    }
 catch (    InstantiationException e) {
      throw new SemanticsReaderException(e);
    }
catch (    IllegalAccessException e) {
      throw new SemanticsReaderException(e);
    }
  }
  return module;
}
