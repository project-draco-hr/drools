{
  String drl="";
  drl+="package org.drools.compiler.test\n";
  drl+="import " + Person.class.getCanonicalName() + "\n";
  drl+="rule r1\n";
  drl+="when\n";
  drl+="   Person(name == \"Mark\")\n";
  drl+="then\n";
  drl+="end\n";
  drl+="rule r2\n";
  drl+="when\n";
  drl+="   Person(name == \"Mark\", age == 40)\n";
  drl+="then\n";
  drl+="end\n";
  drl+="rule r3\n";
  drl+="when\n";
  drl+="   Person(name == \"Mark\", age == 50)\n";
  drl+="then\n";
  drl+="end\n";
  drl+="rule r4\n";
  drl+="when\n";
  drl+="   Person(name == \"John\", age == 60)\n";
  drl+="then\n";
  drl+="end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(drl);
  Map<String,Rule> rules=rulestoMap(kbase);
  ObjectTypeNode otn=getObjectTypeNode(kbase,Person.class);
  InternalWorkingMemory wm=((StatefulKnowledgeSessionImpl)kbase.newStatefulKnowledgeSession());
  assertEquals(2,otn.getObjectSinkPropagator().size());
  AlphaNode a1=(AlphaNode)otn.getObjectSinkPropagator().getSinks()[0];
  assertEquals(3,a1.getObjectSinkPropagator().size());
  assertEquals(3,a1.getAssociationsSize());
  assertTrue(a1.isAssociatedWith(rules.get("r1")));
  assertTrue(a1.isAssociatedWith(rules.get("r2")));
  assertTrue(a1.isAssociatedWith(rules.get("r3")));
  AlphaNode a2=(AlphaNode)otn.getObjectSinkPropagator().getSinks()[1];
  assertEquals(1,a2.getAssociationsSize());
  assertEquals(1,a2.getObjectSinkPropagator().size());
  assertTrue(a2.isAssociatedWith(rules.get("r4")));
}
