{
  String drl="";
  drl+="package org.drools.compiler.test\n";
  drl+="import org.drools.compiler.Person\n";
  drl+="rule test1\n";
  drl+="when\n";
  drl+="   Person(name == \"Mark\", age == 37)\n";
  drl+="   Person(name == \"Mark\", happy == true)\n";
  drl+="then\n";
  drl+="end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(drl);
  ObjectTypeNode otn=getObjectTypeNode(kbase,Person.class);
  ReteooWorkingMemoryInterface wm=((StatefulKnowledgeSessionImpl)kbase.newStatefulKnowledgeSession());
  AlphaNode alphaNode1=(AlphaNode)otn.getSinkPropagator().getSinks()[0];
  CompositeObjectSinkAdapter sinkAdapter=(CompositeObjectSinkAdapter)alphaNode1.getSinkPropagator();
  ObjectSinkNodeList hashableSinks=sinkAdapter.getHashableSinks();
  assertNotNull(hashableSinks);
  assertEquals(2,hashableSinks.size());
  AlphaNode alphaNode2=(AlphaNode)alphaNode1.getSinkPropagator().getSinks()[0];
  assertSame(hashableSinks.getFirst(),alphaNode2);
  AlphaNode alphaNode3=(AlphaNode)alphaNode1.getSinkPropagator().getSinks()[1];
  assertSame(hashableSinks.getLast(),alphaNode3);
}
