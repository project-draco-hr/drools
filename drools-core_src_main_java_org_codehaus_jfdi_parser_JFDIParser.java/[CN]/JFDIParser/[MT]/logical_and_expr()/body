{
  Expr e=null;
  Expr lhs=null;
  Expr rhs=null;
  e=null;
  try {
{
      pushFollow(FOLLOW_additive_expr_in_logical_and_expr255);
      lhs=additive_expr();
      _fsp--;
      if (failed)       return e;
      if (backtracking == 0) {
        e=lhs;
      }
      loop4:       do {
        int alt4=2;
        int LA4_0=input.LA(1);
        if ((LA4_0 == 15)) {
          alt4=1;
        }
switch (alt4) {
case 1:
{
            match(input,15,FOLLOW_15_in_logical_and_expr263);
            if (failed)             return e;
            pushFollow(FOLLOW_additive_expr_in_logical_and_expr267);
            rhs=additive_expr();
            _fsp--;
            if (failed)             return e;
            if (backtracking == 0) {
              e=new LogicalAndExpr(e,rhs);
            }
          }
        break;
default :
      break loop4;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return e;
}
