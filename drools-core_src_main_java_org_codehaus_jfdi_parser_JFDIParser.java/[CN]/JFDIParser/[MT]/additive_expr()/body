{
  Expr e=null;
  Expr lhs=null;
  Expr rhs=null;
  e=null;
  AdditiveExpr.Operator op=null;
  try {
{
      pushFollow(FOLLOW_multiplicative_expr_in_additive_expr305);
      lhs=multiplicative_expr();
      _fsp--;
      if (failed)       return e;
      if (backtracking == 0) {
        e=lhs;
      }
      loop6:       do {
        int alt6=2;
        int LA6_0=input.LA(1);
        if (((LA6_0 >= 16 && LA6_0 <= 17))) {
          alt6=1;
        }
switch (alt6) {
case 1:
{
            int alt5=2;
            int LA5_0=input.LA(1);
            if ((LA5_0 == 16)) {
              alt5=1;
            }
 else             if ((LA5_0 == 17)) {
              alt5=2;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return e;
              }
              NoViableAltException nvae=new NoViableAltException("116:4: ( '+' | '-' )",5,0,input);
              throw nvae;
            }
switch (alt5) {
case 1:
{
                match(input,16,FOLLOW_16_in_additive_expr319);
                if (failed)                 return e;
                if (backtracking == 0) {
                  op=AdditiveExpr.PLUS;
                }
              }
            break;
case 2:
{
            match(input,17,FOLLOW_17_in_additive_expr328);
            if (failed)             return e;
            if (backtracking == 0) {
              op=AdditiveExpr.MINUS;
            }
          }
        break;
    }
    pushFollow(FOLLOW_multiplicative_expr_in_additive_expr343);
    rhs=multiplicative_expr();
    _fsp--;
    if (failed)     return e;
    if (backtracking == 0) {
      e=new AdditiveExpr(e,rhs,op);
    }
  }
break;
default :
break loop6;
}
}
 while (true);
if (backtracking == 0) {
System.err.println("add_expr returns " + e);
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return e;
}
