{
  Expr e=null;
  Token i=null;
  Token n=null;
  List a=null;
  e=null;
  boolean isMethod=false;
  Expr[] paramExprs=new Expr[0];
  try {
{
      i=(Token)input.LT(1);
      match(input,IDENT,FOLLOW_IDENT_in_object_expr640);
      if (failed)       return e;
      if (backtracking == 0) {
        e=factory.createExternalVariable(i.getText());
      }
      loop13:       do {
        int alt13=3;
        int LA13_0=input.LA(1);
        if ((LA13_0 == 25)) {
          alt13=1;
        }
 else         if ((LA13_0 == 27)) {
          alt13=2;
        }
switch (alt13) {
case 1:
{
            match(input,25,FOLLOW_25_in_object_expr658);
            if (failed)             return e;
            pushFollow(FOLLOW_expr_in_object_expr660);
            expr();
            _fsp--;
            if (failed)             return e;
            match(input,26,FOLLOW_26_in_object_expr662);
            if (failed)             return e;
          }
        break;
case 2:
{
        match(input,27,FOLLOW_27_in_object_expr668);
        if (failed)         return e;
        n=(Token)input.LT(1);
        match(input,IDENT,FOLLOW_IDENT_in_object_expr672);
        if (failed)         return e;
        int alt12=2;
        int LA12_0=input.LA(1);
        if ((LA12_0 == 22)) {
          alt12=1;
        }
switch (alt12) {
case 1:
{
            match(input,22,FOLLOW_22_in_object_expr680);
            if (failed)             return e;
            int alt11=2;
            int LA11_0=input.LA(1);
            if (((LA11_0 >= IDENT && LA11_0 <= FLOAT) || LA11_0 == 9 || (LA11_0 >= 20 && LA11_0 <= 22) || LA11_0 == 25)) {
              alt11=1;
            }
switch (alt11) {
case 1:
{
                pushFollow(FOLLOW_arg_list_in_object_expr691);
                a=arg_list();
                _fsp--;
                if (failed)                 return e;
                if (backtracking == 0) {
                  paramExprs=new Expr[a.size()];
                  for (int j=0; j < paramExprs.length; ++j) {
                    paramExprs[j]=(Expr)a.get(j);
                  }
                }
              }
            break;
        }
        match(input,23,FOLLOW_23_in_object_expr714);
        if (failed)         return e;
        if (backtracking == 0) {
          isMethod=true;
        }
      }
    break;
}
if (backtracking == 0) {
  String name=n.getText();
  if (!isMethod) {
    name="get" + name.substring(0,1).toUpperCase() + name.substring(1);
  }
  e=new MethodCall(e,name,paramExprs);
  paramExprs=new Expr[0];
  isMethod=false;
}
}
break;
default :
break loop13;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return e;
}
