{
  if ((objectSink instanceof AlphaNode) && (((AlphaNode)objectSink).getConstraint() instanceof LiteralConstraint) && (((LiteralConstraint)((AlphaNode)objectSink).getConstraint()).getEvaluator().getOperator() == Evaluator.EQUAL)) {
    final FieldConstraint constraint=((AlphaNode)objectSink).getConstraint();
    AlphaNodeSwitch wrapper=new AlphaNodeSwitch((LiteralConstraint)constraint);
    wrapper=(AlphaNodeSwitch)this.alphaSwitch.get(wrapper);
    wrapper.removeAlphaNode((AlphaNode)objectSink);
    this.hashedSinks.remove(objectSink);
    if (wrapper.getSwitchCount() == 0) {
      this.alphaSwitch.remove(wrapper);
    }
  }
 else {
    this.otherSinks.remove(objectSink);
  }
  if (this.lastObjectSink == objectSink) {
    this.lastObjectSink=null;
  }
  return true;
}
