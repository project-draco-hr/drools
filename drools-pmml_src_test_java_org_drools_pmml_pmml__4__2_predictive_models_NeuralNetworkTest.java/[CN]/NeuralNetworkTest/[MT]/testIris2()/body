{
  setKSession(getModelSession(source22,VERBOSE));
  setKbase(getKSession().getKieBase());
  getKSession().fireAllRules();
  Assert.assertEquals(12,getNumAssertedSynapses());
  getKSession().getEntryPoint("in_PetalLen").insert(101);
  getKSession().getEntryPoint("in_PetalWid").insert(1);
  getKSession().getEntryPoint("in_SepalLen").insert(151);
  getKSession().getEntryPoint("in_SepalWid").insert(30);
  getKSession().fireAllRules();
  FactType t4=getKbase().getFactType(packageName,"Test_MLP_0");
  FactType t5=getKbase().getFactType(packageName,"Test_MLP_1");
  FactType t6=getKbase().getFactType(packageName,"Test_MLP_2");
  Assert.assertEquals(1.542,truncN(getDoubleFieldValue(t4),3),0.0);
  Assert.assertEquals(0.0,truncN(getDoubleFieldValue(t5),3),0.0);
  Assert.assertEquals(3.0,truncN(getDoubleFieldValue(t6),3),0.0);
  checkFirstDataFieldOfTypeStatus(getKbase().getFactType(packageName,"OutSpecies"),true,false,"Test_MLP","versicolor");
  checkFirstDataFieldOfTypeStatus(getKbase().getFactType(packageName,"OutProb"),true,false,"Test_MLP",0.999999);
  checkGeneratedRules();
}
