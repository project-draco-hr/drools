{
  if (a1 == a2)   return true;
  if (a1 == null || a2 == null)   return false;
  int len=a1.length;
  if (len != a2.length)   return false;
  for (int i=0; i < len; i++) {
    Object e1=a1[i];
    Object e2=a2[i];
    if (e1 == e2)     continue;
    if (e1 == null)     return false;
    boolean eq=(e1.getClass() != e2.getClass() || !e1.getClass().isArray() || !e2.getClass().isArray()) ? e1.equals(e2) : (e1 instanceof Object[] && e2 instanceof Object[]) ? deepEquals((Object[])e1,(Object[])e2) : (e1 instanceof byte[] && e2 instanceof byte[]) ? equals((byte[])e1,(byte[])e2) : (e1 instanceof short[] && e2 instanceof short[]) ? equals((short[])e1,(short[])e2) : (e1 instanceof int[] && e2 instanceof int[]) ? equals((int[])e1,(int[])e2) : (e1 instanceof long[] && e2 instanceof long[]) ? equals((long[])e1,(long[])e2) : (e1 instanceof char[] && e2 instanceof char[]) ? equals((char[])e1,(char[])e2) : (e1 instanceof boolean[] && e2 instanceof boolean[]) ? equals((boolean[])e1,(boolean[])e2) : (e1 instanceof float[] && e2 instanceof float[]) ? equals((float[])e1,(float[])e2) : (e1 instanceof double[] && e2 instanceof double[]) ? equals((double[])e1,(double[])e2) : e1.equals(e2);
    if (!eq)     return false;
  }
  return true;
}
