{
  if (parameters == null || parameters.trim().length() == 0) {
    this.startMinDev=1;
    this.startMaxDev=Long.MAX_VALUE;
    this.endMinDev=1;
    this.endMaxDev=Long.MAX_VALUE;
    return;
  }
  try {
    String[] ranges=parameters.split(",");
    if (ranges.length == 1) {
      this.startMinDev=Long.parseLong(ranges[0]);
      this.startMaxDev=this.startMinDev;
      this.endMinDev=this.startMinDev;
      this.endMaxDev=this.startMinDev;
    }
 else     if (ranges.length == 2) {
      this.startMinDev=Long.parseLong(ranges[0]);
      this.startMaxDev=this.startMinDev;
      this.endMinDev=Long.parseLong(ranges[1]);
      this.endMaxDev=this.endMinDev;
    }
 else     if (ranges.length == 4) {
      this.startMinDev=Long.parseLong(ranges[0]);
      this.startMaxDev=Long.parseLong(ranges[1]);
      this.endMinDev=Long.parseLong(ranges[2]);
      this.endMaxDev=Long.parseLong(ranges[3]);
    }
 else {
      throw new RuntimeDroolsException("[Overlaps Evaluator]: Not possible to parse parameters: '" + parameters + "'");
    }
  }
 catch (  NumberFormatException e) {
    throw new RuntimeDroolsException("[Overlaps Evaluator]: Not possible to parse parameters: '" + parameters + "'",e);
  }
}
