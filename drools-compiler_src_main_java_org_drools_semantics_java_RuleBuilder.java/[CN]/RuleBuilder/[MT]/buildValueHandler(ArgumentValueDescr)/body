{
  ValueHandler valueHandler=null;
  if (descr.getType() == ArgumentValueDescr.VARIABLE) {
    if (this.declarations.containsKey(descr.getValue())) {
      valueHandler=new DeclarationVariable((Declaration)this.declarations.get(descr.getValue()));
    }
 else     if (this.pkg.getGlobals().containsKey(descr.getValue())) {
      valueHandler=new GlobalVariable((String)descr.getValue(),(Class)this.pkg.getGlobals().get(descr.getValue()));
    }
 else {
      throw new IllegalArgumentException("Uknown variable: " + descr.getValue());
    }
  }
 else   if (descr.getType() == ArgumentValueDescr.MAP) {
    final ArgumentValueDescr.KeyValuePairDescr[] pairs=(ArgumentValueDescr.KeyValuePairDescr[])descr.getValue();
    final List list=new ArrayList(pairs.length);
    for (int i=0, length=pairs.length; i < length; i++) {
      list.add(new MapValue.KeyValuePair(buildValueHandler(pairs[i].getKey()),buildValueHandler(pairs[i].getValue())));
    }
    valueHandler=new MapValue((MapValue.KeyValuePair[])list.toArray(new MapValue.KeyValuePair[pairs.length]));
  }
 else   if (descr.getType() == ArgumentValueDescr.LIST) {
    final List args=(List)descr.getValue();
    final List handlers=new ArrayList(args.size());
    for (final Iterator iter=args.iterator(); iter.hasNext(); ) {
      final ArgumentValueDescr arg=(ArgumentValueDescr)iter.next();
      handlers.add(buildValueHandler(arg));
    }
    valueHandler=new ListValue(handlers);
  }
 else {
    valueHandler=new LiteralValue((String)descr.getValue(),Object.class);
  }
  return valueHandler;
}
