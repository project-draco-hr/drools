{
  String internalWrapper=BuildUtils.getInternalType(wrapperName);
  String internalCore=BuildUtils.getInternalType(coreName);
  String descrCore=BuildUtils.getTypeDescriptor(coreName);
  boolean hasPrimitiveFields=false;
  boolean hasObjectFields=false;
  MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"clear","()V",null,null);
  mv.visitCode();
  for (  FieldDefinition field : core.getFieldsDefinitions()) {
    if (field.isKey())     continue;
    if (BuildUtils.isPrimitive(field.getTypeName())) {
      hasPrimitiveFields=true;
    }
 else {
      hasObjectFields=true;
    }
    TraitFactory.invokeInjector(mv,wrapperName,trait,core,field,true,1);
  }
  int stack=2;
  if (hasPrimitiveFields) {
    stack++;
  }
  if (hasObjectFields) {
    stack++;
  }
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKESPECIAL,"org/drools/factmodel/traits/TripleBasedStruct","clear","()V");
  int num=initSoftFields(mv,internalWrapper,trait,mask);
  stack+=num;
  mv.visitInsn(RETURN);
  mv.visitMaxs(stack,1);
  mv.visitEnd();
}
