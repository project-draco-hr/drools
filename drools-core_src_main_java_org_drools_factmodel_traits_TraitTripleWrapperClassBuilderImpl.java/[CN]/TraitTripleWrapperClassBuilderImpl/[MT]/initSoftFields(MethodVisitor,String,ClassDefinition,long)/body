{
  int j=0;
  int nonPrimitiveFields=0;
  int stackSize=0;
  for (  FieldDefinition field : trait.getFieldsDefinitions()) {
    boolean isSoftField=(mask & (1 << j++)) == 0;
    if (isSoftField) {
      mv.visitVarInsn(ALOAD,0);
      mv.visitFieldInsn(GETFIELD,wrapperName,"store","Lorg/drools/core/util/TripleStore;");
      mv.visitVarInsn(ALOAD,0);
      mv.visitLdcInsn(field.getName());
      mv.visitInsn(BuildUtils.zero(field.getTypeName()));
      if (BuildUtils.isPrimitive(field.getTypeName())) {
        TraitFactory.valueOf(mv,field.getTypeName());
        int size=BuildUtils.sizeOf(field.getTypeName());
        stackSize=Math.max(stackSize,size);
      }
 else {
        stackSize=Math.max(stackSize,2);
      }
      mv.visitMethodInsn(INVOKEVIRTUAL,wrapperName,"property","(Ljava/lang/String;Ljava/lang/Object;)Lorg/drools/core/util/TripleImpl;");
      mv.visitMethodInsn(INVOKEVIRTUAL,"org/drools/core/util/TripleStore","put","(Lorg/drools/core/util/Triple;)Z");
      mv.visitInsn(POP);
    }
  }
  return stackSize;
}
