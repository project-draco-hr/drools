{
  try {
    if (cache.containsKey(name)) {
      this.cacheHits++;
      Object result=cache.get(name);
      if (result instanceof ClassNotFoundException) {
        throw (ClassNotFoundException)result;
      }
 else {
        return (Class<?>)result;
      }
    }
    Class<?> cls=fastFindClass(name);
    if (cls == null) {
      final ClassLoader parent=getParent();
      if (parent != null) {
        cls=Class.forName(name,true,parent);
      }
    }
    if (resolve && cls != null) {
      resolveClass(cls);
    }
    if (cls != null) {
      this.successfulCalls++;
    }
 else {
      this.failedCalls++;
    }
    cache.put(name,cls);
    return cls;
  }
 catch (  ClassNotFoundException e) {
    this.failedCalls++;
    cache.put(name,e);
    throw e;
  }
}
