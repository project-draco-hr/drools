{
  final KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newInputStreamResource(getClass().getResourceAsStream("test_ForallSlidingWindow.drl")),ResourceType.DRL);
  assertFalse(kbuilder.getErrors().toString(),kbuilder.hasErrors());
  final KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  final KnowledgeSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  conf.setOption(ClockTypeOption.get(ClockType.PSEUDO_CLOCK.getId()));
  final StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession(conf,null);
  final SessionPseudoClock clock=ksession.getSessionClock();
  List<String> results=new ArrayList<String>();
  ksession.setGlobal("results",results);
  clock.advanceTime(60,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  int seq=1;
  ksession.insert(new StockTick(seq++,"RHT",10,clock.getCurrentTime()));
  clock.advanceTime(5,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  ksession.insert(new StockTick(seq++,"RHT",10,clock.getCurrentTime()));
  clock.advanceTime(5,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  ksession.insert(new StockTick(seq++,"IBM",10,clock.getCurrentTime()));
  clock.advanceTime(10,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  ksession.insert(new StockTick(seq++,"RHT",10,clock.getCurrentTime()));
  clock.advanceTime(10,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  ksession.insert(new StockTick(seq++,"RHT",10,clock.getCurrentTime()));
  clock.advanceTime(10,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,results.size());
  ksession.insert(new StockTick(seq++,"RHT",10,clock.getCurrentTime()));
  clock.advanceTime(10,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,results.size());
  clock.advanceTime(60,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,results.size());
}
