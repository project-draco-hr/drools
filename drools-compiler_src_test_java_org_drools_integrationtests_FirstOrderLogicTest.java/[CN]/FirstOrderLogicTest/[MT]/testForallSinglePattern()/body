{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_ForallSinglePattern.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  final List list=new ArrayList();
  workingMemory.setGlobal("results",list);
  int fired=0;
  workingMemory.fireAllRules();
  assertEquals(++fired,list.size());
  FactHandle stilton1=workingMemory.insert(new Cheese("stilton",10));
  workingMemory.fireAllRules();
  assertEquals(fired,list.size());
  FactHandle stilton2=workingMemory.insert(new Cheese("stilton",11));
  workingMemory.fireAllRules();
  assertEquals(fired,list.size());
  workingMemory.retract(stilton1);
  workingMemory.fireAllRules();
  assertEquals(++fired,list.size());
  FactHandle brie=workingMemory.insert(new Cheese("brie",10));
  workingMemory.fireAllRules();
  assertEquals(fired,list.size());
  workingMemory.retract(brie);
  workingMemory.fireAllRules();
  assertEquals(++fired,list.size());
  workingMemory.retract(stilton2);
  workingMemory.fireAllRules();
  assertEquals(fired,list.size());
}
