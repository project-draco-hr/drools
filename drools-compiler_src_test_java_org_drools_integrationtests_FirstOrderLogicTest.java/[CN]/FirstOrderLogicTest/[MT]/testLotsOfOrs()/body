{
  String str="package org.drools.test\n" + "\n" + "import " + FirstOrderLogicTest.class.getCanonicalName() + ".Field;\n"+ " \n"+ "rule \"test\"\n"+ "    when\n"+ "           (\n"+ "                c : Field( name == \"c\" ) and\n"+ "                eval( c.getValue().equals(\"c\") ) and\n"+ "                d : Field( name == \"d\" ) and\n"+ "                eval( d.intValue()<20 )\n"+ "           ) \n"+ "           or \n"+ "           ( \n"+ "                c : Field( name == \"c\") and\n"+ "                eval( c.getValue().equals(\"d\") ) and\n"+ "                d : Field( name == \"d\" ) and\n"+ "                eval( d.intValue()<20 )\n"+ "           )\n"+ "    then\n"+ "        System.out.println( \"Worked!\" ); \n"+ "end";
  System.out.println(str);
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.insert(new Field("t","Y"));
  ksession.insert(new Field("a","b"));
  ksession.insert(new Field("b","15"));
  ksession.insert(new Field("c","d"));
  ksession.insert(new Field("d","15"));
  ksession.fireAllRules();
  ksession.dispose();
}
