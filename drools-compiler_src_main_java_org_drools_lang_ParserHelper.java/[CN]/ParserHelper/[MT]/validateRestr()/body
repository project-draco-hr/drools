{
  int lookahead=2;
  int countParen=1;
  while (true) {
    if (input.LA(lookahead) == COMMA) {
      break;
    }
 else     if (input.LA(lookahead) == LEFT_PAREN) {
      countParen++;
    }
 else     if (input.LA(lookahead) == RIGHT_PAREN) {
      countParen--;
    }
 else     if (input.LA(lookahead) == EOF) {
      break;
    }
    if (countParen == 0) {
      break;
    }
    lookahead++;
  }
  boolean returnValue=false;
  int activeIndex=input.index();
  lookaheadTest=true;
  try {
    input.seek(input.LT(2).getTokenIndex());
    parser.constraint_expression();
    returnValue=true;
  }
 catch (  RecognitionException e) {
  }
 finally {
    input.seek(activeIndex);
  }
  lookaheadTest=false;
  return returnValue;
}
