{
  Class cls=null;
  try {
    cls=runtimeData.getRootClassLoader().loadClass(this.className);
  }
 catch (  ClassNotFoundException e) {
    throw new IllegalStateException("Unable to compile as Class could not b e found '" + className + "'");
  }
  ParserContext context=new ParserContext(runtimeData.getParserConfiguration());
  context.addInput("this",cls);
  context.setStrongTyping(typesafe);
  MVEL.COMPILER_OPT_ALLOW_NAKED_METH_CALL=true;
  this.mvelExpression=(ExecutableStatement)MVEL.compileExpression(expr,context);
  Class returnType=this.mvelExpression.getKnownEgressType();
  setFieldType(returnType);
  setValueType(ValueType.determineValueType(returnType));
}
