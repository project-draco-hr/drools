{
  InternalWorkingMemory wm=context.wm;
  DefaultAgenda agenda=(DefaultAgenda)wm.getAgenda();
  org.drools.marshalling.impl.ProtobufMessages.Agenda.Builder _ab=ProtobufMessages.Agenda.newBuilder();
  AgendaGroup[] agendaGroups=(AgendaGroup[])agenda.getAgendaGroupsMap().values().toArray(new AgendaGroup[agenda.getAgendaGroupsMap().size()]);
  Arrays.sort(agendaGroups,AgendaGroupSorter.instance);
  for (  AgendaGroup group : agendaGroups) {
    org.drools.marshalling.impl.ProtobufMessages.Agenda.AgendaGroup.Builder _agb=ProtobufMessages.Agenda.AgendaGroup.newBuilder();
    _agb.setName(group.getName());
    _agb.setIsActive(group.isActive());
    _ab.addAgendaGroup(_agb.build());
    org.drools.spi.Activation[] activations=(org.drools.spi.Activation[])group.getActivations();
    Arrays.sort(activations,ActivationsSorter.INSTANCE);
    for (    Activation activation : activations) {
      _ab.addActivation(writeActivation(context,(AgendaItem)activation));
    }
  }
  org.drools.marshalling.impl.ProtobufMessages.Agenda.FocusStack.Builder _fsb=ProtobufMessages.Agenda.FocusStack.newBuilder();
  LinkedList<AgendaGroup> focusStack=agenda.getStackList();
  for (Iterator<AgendaGroup> it=focusStack.iterator(); it.hasNext(); ) {
    AgendaGroup group=it.next();
    _fsb.addGroupName(group.getName());
  }
  _ab.setFocusStack(_fsb.build());
  RuleFlowGroupImpl[] ruleFlowGroups=(RuleFlowGroupImpl[])agenda.getRuleFlowGroupsMap().values().toArray(new RuleFlowGroupImpl[agenda.getRuleFlowGroupsMap().size()]);
  Arrays.sort(ruleFlowGroups,RuleFlowGroupSorter.instance);
  for (  RuleFlowGroupImpl group : ruleFlowGroups) {
    org.drools.marshalling.impl.ProtobufMessages.Agenda.RuleFlowGroup.Builder _rfgb=ProtobufMessages.Agenda.RuleFlowGroup.newBuilder();
    _rfgb.setName(group.getName());
    _rfgb.setIsActive(group.isActive());
    _rfgb.setIsAutoDeactivate(group.isAutoDeactivate());
    for (    ActivationNode node : group) {
      final Activation activation=node.getActivation();
      _rfgb.addActivation(writeActivation(context,(AgendaItem)activation));
    }
    Map<Long,String> nodeInstances=group.getNodeInstances();
    for (    Map.Entry<Long,String> entry : nodeInstances.entrySet()) {
      org.drools.marshalling.impl.ProtobufMessages.Agenda.RuleFlowGroup.NodeInstance.Builder _nib=ProtobufMessages.Agenda.RuleFlowGroup.NodeInstance.newBuilder();
      _nib.setProcessInstanceId(entry.getKey());
      _nib.setNodeInstanceId(entry.getValue());
      _rfgb.addNodeInstance(_nib.build());
    }
    _ab.addRuleFlowGroup(_rfgb.build());
  }
  _ksb.setAgenda(_ab.build());
}
