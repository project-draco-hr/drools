{
  this.indexed=-1;
  this.constraints=new LinkedList();
  final int depth=conf.getCompositeKeyDepth();
  for (int i=0, length=constraints.length; i < length; i++) {
    if ((!disableIndexing) && conf.isIndexLeftBetaMemory() && conf.isIndexRightBetaMemory()&& isIndexable(constraints[i])&& (this.indexed < depth - 1)) {
      if (depth >= 1 && this.indexed == -1) {
        this.constraints.insertAfter(null,new LinkedListEntry(constraints[i]));
        this.indexed++;
      }
 else {
        this.constraints.insertAfter(findNode(this.indexed++),new LinkedListEntry(constraints[i]));
      }
    }
 else {
      this.constraints.add(new LinkedListEntry(constraints[i]));
    }
  }
}
