{
  List<BaseNode> nodes=context.getRemovedNodes();
  Set<BaseNode> leafSet=new HashSet<BaseNode>();
  for (  BaseNode node : nodes) {
    if (node.isInUse()) {
      if (node instanceof AlphaNode) {
        updateLeafSet(node,leafSet);
      }
 else       if (node instanceof BetaNode) {
        BetaNode betaNode=(BetaNode)node;
        if (betaNode.isInUse()) {
          leafSet.add(betaNode);
        }
      }
 else       if (node instanceof RuleTerminalNode) {
        RuleTerminalNode rtNode=(RuleTerminalNode)node;
        if (rtNode.isInUse()) {
          leafSet.add(rtNode);
        }
      }
    }
  }
  for (  BaseNode node : leafSet) {
    if (node instanceof RuleTerminalNode) {
      ((TerminalNode)node).initInferredMask();
    }
 else {
      ((BetaNode)node).initInferredMask();
    }
  }
}
