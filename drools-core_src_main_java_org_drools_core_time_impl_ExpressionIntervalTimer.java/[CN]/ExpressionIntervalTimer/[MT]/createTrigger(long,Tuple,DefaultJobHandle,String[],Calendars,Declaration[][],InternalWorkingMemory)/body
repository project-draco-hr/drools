{
  long timeSinceLastFire=0;
  Declaration[] delayDeclarations=declrs[0];
  Declaration[] periodDeclarations=declrs[1];
  Declaration[] startDeclarations=declrs[2];
  Declaration[] endDeclarations=declrs[3];
  Date lastFireTime=null;
  Date createdTime=null;
  long newDelay=0;
  if (jh != null) {
    IntervalTrigger preTrig=(IntervalTrigger)jh.getTimerJobInstance().getTrigger();
    lastFireTime=preTrig.getLastFireTime();
    createdTime=preTrig.getCreatedTime();
    if (lastFireTime != null) {
      newDelay=evalTimeExpression(this.period,leftTuple,delayDeclarations,wm) - timestamp + lastFireTime.getTime();
    }
 else {
      newDelay=evalTimeExpression(this.delay,leftTuple,delayDeclarations,wm) - timestamp + createdTime.getTime();
    }
  }
 else {
    newDelay=evalTimeExpression(this.delay,leftTuple,delayDeclarations,wm);
  }
  if (newDelay < 0) {
    newDelay=0;
  }
  return new IntervalTrigger(timestamp,evalDateExpression(this.startTime,leftTuple,startDeclarations,wm),evalDateExpression(this.endTime,leftTuple,startDeclarations,wm),this.repeatLimit,newDelay,period != null ? evalTimeExpression(this.period,leftTuple,periodDeclarations,wm) : 0,calendarNames,calendars,createdTime,lastFireTime);
}
