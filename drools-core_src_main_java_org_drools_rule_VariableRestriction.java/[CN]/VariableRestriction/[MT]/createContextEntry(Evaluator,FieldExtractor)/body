{
  if (Operator.MEMBEROF.equals(eval.getOperator()) || Operator.NOTMEMBEROF.equals(eval.getOperator())) {
    return new ObjectVariableContextEntry(fieldExtractor,this.declaration);
  }
 else {
    if (fieldExtractor.getValueType().isBoolean()) {
      return new BooleanVariableContextEntry(fieldExtractor,this.declaration);
    }
 else     if (fieldExtractor.getValueType().isFloatNumber()) {
      return new DoubleVariableContextEntry(fieldExtractor,this.declaration);
    }
 else     if (fieldExtractor.getValueType().isIntegerNumber()) {
      return new LongVariableContextEntry(fieldExtractor,this.declaration);
    }
 else     if (fieldExtractor.getValueType().isChar()) {
      return new CharVariableContextEntry(fieldExtractor,this.declaration);
    }
 else {
      return new ObjectVariableContextEntry(fieldExtractor,this.declaration);
    }
  }
}
