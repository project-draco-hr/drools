{
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  final ReteooWorkingMemory workingMemory=(ReteooWorkingMemory)ruleBase.newStatefulSession();
  final DefaultAgenda agenda=(DefaultAgenda)workingMemory.getAgenda();
  final RuleFlowGroupImpl ruleFlowGroup=(RuleFlowGroupImpl)agenda.getRuleFlowGroup("rule-flow-group-0");
  final LeftTupleImpl tuple=new LeftTupleImpl(new DefaultFactHandle(1,"cheese"),null,true);
  final Rule rule=new Rule("test-rule");
  rule.setRuleFlowGroup("rule-flow-group-0");
  final RuleTerminalNode node=new RuleTerminalNode(2,new MockTupleSource(2),rule,rule.getLhs(),0,buildContext);
  final PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,rule,null,null);
  rule.setLockOnActive(true);
  ruleFlowGroup.setAutoDeactivate(false);
  ruleFlowGroup.setActive(true);
  node.assertLeftTuple(tuple,context,workingMemory);
  assertEquals(0,ruleFlowGroup.size());
  rule.setLockOnActive(false);
  node.assertLeftTuple(tuple,context,workingMemory);
  assertEquals(1,ruleFlowGroup.size());
  rule.setLockOnActive(true);
  ruleFlowGroup.setActive(false);
  node.assertLeftTuple(tuple,context,workingMemory);
  assertEquals(2,ruleFlowGroup.size());
}
