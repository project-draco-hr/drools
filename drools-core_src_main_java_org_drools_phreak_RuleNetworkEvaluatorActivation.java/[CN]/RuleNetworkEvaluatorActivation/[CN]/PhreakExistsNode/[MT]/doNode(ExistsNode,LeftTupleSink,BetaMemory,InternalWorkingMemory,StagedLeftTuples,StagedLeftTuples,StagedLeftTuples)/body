{
  StagedRightTuples srcRightTuples=bm.getStagedRightTuples();
  if (srcRightTuples.getDeleteFirst() != null) {
    doRightDeletes(existsNode,bm,wm,srcRightTuples,trgLeftTuples,stagedLeftTuples);
  }
  if (srcLeftTuples.getDeleteFirst() != null) {
    doLeftDeletes(existsNode,bm,wm,srcLeftTuples,trgLeftTuples,stagedLeftTuples);
  }
  if (srcLeftTuples.getUpdateFirst() != null || srcRightTuples.getUpdateFirst() != null) {
    dpUpdatesReorderMemory(bm,wm,srcRightTuples,srcLeftTuples);
  }
  if (srcRightTuples.getUpdateFirst() != null) {
    doRightUpdates(existsNode,sink,bm,wm,srcRightTuples,trgLeftTuples,stagedLeftTuples);
  }
  if (srcLeftTuples.getUpdateFirst() != null) {
    doLeftUpdates(existsNode,sink,bm,wm,srcLeftTuples,trgLeftTuples,stagedLeftTuples);
  }
  if (srcRightTuples.getInsertFirst() != null) {
    doRightInserts(existsNode,sink,bm,wm,srcRightTuples,trgLeftTuples);
  }
  if (srcLeftTuples.getInsertFirst() != null) {
    doLeftInserts(existsNode,sink,bm,wm,srcLeftTuples,trgLeftTuples);
  }
  srcRightTuples.setInsert(null,0);
  srcRightTuples.setDelete(null);
  srcRightTuples.setUpdate(null);
  srcLeftTuples.setInsert(null,0);
  srcLeftTuples.setDelete(null);
  srcLeftTuples.setUpdate(null);
}
