{
  this.rule=new Rule("test-rule");
  this.context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null,null);
  this.workingMemory=new ReteooWorkingMemory(1,(ReteooRuleBase)RuleBaseFactory.newRuleBase());
  this.tupleSource=new MockTupleSource(4);
  this.objectSource=new MockObjectSource(4);
  this.sink=new MockLeftTupleSink();
  final RuleBaseConfiguration configuration=new RuleBaseConfiguration();
  ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  BuildContext buildContext=new BuildContext(ruleBase,ruleBase.getReteooBuilder().getIdGenerator());
  this.node=new JoinNode(15,this.tupleSource,this.objectSource,new DefaultBetaConstraints(new BetaNodeFieldConstraint[]{this.constraint},configuration),Behavior.EMPTY_BEHAVIOR_LIST,buildContext);
  this.node.addTupleSink(this.sink);
  this.memory=(BetaMemory)this.workingMemory.getNodeMemory(this.node);
  assertEquals(0,this.memory.getLeftTupleMemory().size());
  assertEquals(0,this.memory.getRightTupleMemory().size());
}
