{
  when(constraint.isAllowedCachedLeft(any(ContextEntry.class),any(InternalFactHandle.class))).thenReturn(true);
  when(constraint.isAllowedCachedRight(any(LeftTupleImpl.class),any(ContextEntry.class))).thenReturn(true);
  final ReteooWorkingMemory workingMemory=new ReteooWorkingMemory(1,(ReteooRuleBase)RuleBaseFactory.newRuleBase());
  final MockObjectSource objectSource=new MockObjectSource(1);
  final MockTupleSource tupleSource=new MockTupleSource(1);
  ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  BuildContext buildContext=new BuildContext(ruleBase,ruleBase.getReteooBuilder().getIdGenerator());
  final JoinNode joinNode=new JoinNode(2,tupleSource,objectSource,EmptyBetaConstraints.getInstance(),buildContext);
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(joinNode);
  assertNotNull(memory);
}
