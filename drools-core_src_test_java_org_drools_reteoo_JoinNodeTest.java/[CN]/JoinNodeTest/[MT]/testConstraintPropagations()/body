{
  mockery.checking(new Expectations(){
{
      allowing(constraint).isAllowedCachedLeft(with(any(ContextEntry.class)),with(any(InternalFactHandle.class)));
      will(returnValue(false));
      allowing(constraint).isAllowedCachedRight(with(any(LeftTuple.class)),with(any(ContextEntry.class)));
      will(returnValue(false));
    }
  }
);
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.insert("test0");
  this.node.assertObject(f0,this.context,this.workingMemory);
  final DefaultFactHandle f1=new DefaultFactHandle(1,"cheese");
  final LeftTuple tuple1=new LeftTuple(f1,this.node,true);
  this.node.assertLeftTuple(tuple1,this.context,this.workingMemory);
  assertLength(0,this.sink.getAsserted());
  this.node.retractRightTuple(f0.getRightTuple(),this.context,this.workingMemory);
  assertLength(0,this.sink.getRetracted());
}
