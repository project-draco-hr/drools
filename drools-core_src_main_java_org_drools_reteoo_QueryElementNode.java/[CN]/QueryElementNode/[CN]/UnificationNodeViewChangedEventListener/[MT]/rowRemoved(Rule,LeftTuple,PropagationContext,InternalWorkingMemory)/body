{
  RightTuple rightTuple=(RightTuple)resultLeftTuple.getObject();
  rightTuple.setLeftTuple(null);
  resultLeftTuple.setObject(null);
  DroolsQuery query=(DroolsQuery)this.factHandle.getObject();
  if (unlinkedEnabled) {
    LeftTupleSets leftTuples=query.getResultLeftTupleSets();
    LeftTuple childLeftTuple=rightTuple.getFirstChild();
switch (childLeftTuple.getStagedType()) {
case LeftTuple.INSERT:
      leftTuples.removeInsert(childLeftTuple);
    break;
case LeftTuple.UPDATE:
  leftTuples.removeUpdate(childLeftTuple);
break;
}
leftTuples.addDelete(childLeftTuple);
return;
}
RightTupleList rightTuples=query.getResultRetractRightTupleList();
if (rightTuples == null) {
rightTuples=new RightTupleList();
query.setResultRetractRightTupleList(rightTuples);
QueryResultRetractAction retractAction=new QueryResultRetractAction(context,this.factHandle,leftTuple,this.node);
context.getQueue2().addFirst(retractAction);
}
if (rightTuple.getMemory() != null) {
throw new RuntimeException();
}
rightTuples.add(rightTuple);
}
