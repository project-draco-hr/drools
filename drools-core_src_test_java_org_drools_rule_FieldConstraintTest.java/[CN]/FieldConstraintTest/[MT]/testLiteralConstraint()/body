{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  final ClassFieldExtractor extractor=new ClassFieldExtractor(Cheese.class,"type");
  final FieldValue field=new MockField("cheddar");
  Evaluator evaluator=ValueType.STRING_TYPE.getEvaluator(Operator.EQUAL);
  final LiteralConstraint constraint=new LiteralConstraint(extractor,evaluator,field);
  final Cheese cheddar=new Cheese("cheddar",5);
  final InternalFactHandle cheddarHandle=(InternalFactHandle)workingMemory.assertObject(cheddar);
  assertTrue(constraint.isAllowed(cheddarHandle.getObject(),null,workingMemory));
  final Cheese stilton=new Cheese("stilton",5);
  final InternalFactHandle stiltonHandle=(InternalFactHandle)workingMemory.assertObject(stilton);
  assertFalse(constraint.isAllowed(stiltonHandle.getObject(),null,workingMemory));
}
