{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final InternalWorkingMemory workingMemory=(InternalWorkingMemory)ruleBase.newStatefulSession();
  final ClassFieldReader extractor=store.getReader(Cheese.class,"type",getClass().getClassLoader());
  final FieldValue field=FieldFactory.getFieldValue("cheddar");
  final Evaluator evaluator=equals.getEvaluator(ValueType.STRING_TYPE,Operator.EQUAL);
  final LiteralConstraint constraint=new LiteralConstraint(extractor,evaluator,field);
  final ContextEntry context=constraint.createContextEntry();
  final Cheese cheddar=new Cheese("cheddar",5);
  final InternalFactHandle cheddarHandle=(InternalFactHandle)workingMemory.insert(cheddar);
  assertTrue(constraint.isAllowed(cheddarHandle,workingMemory,context));
  final Cheese stilton=new Cheese("stilton",5);
  final InternalFactHandle stiltonHandle=(InternalFactHandle)workingMemory.insert(stilton);
  assertFalse(constraint.isAllowed(stiltonHandle,workingMemory,context));
}
