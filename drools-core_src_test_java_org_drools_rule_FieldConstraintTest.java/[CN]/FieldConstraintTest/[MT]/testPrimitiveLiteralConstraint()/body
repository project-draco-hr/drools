{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final InternalWorkingMemory workingMemory=(InternalWorkingMemory)ruleBase.newStatefulSession();
  final ClassFieldExtractor extractor=new ClassFieldExtractor(Cheese.class,"price");
  final FieldValue field=FieldFactory.getFieldValue(5);
  final Evaluator evaluator=ValueType.PINTEGER_TYPE.getEvaluator(Operator.EQUAL);
  final LiteralConstraint constraint=new LiteralConstraint(extractor,evaluator,field);
  final Cheese cheddar=new Cheese("cheddar",5);
  final InternalFactHandle cheddarHandle=(InternalFactHandle)workingMemory.assertObject(cheddar);
  assertTrue(constraint.isAllowed(cheddarHandle.getObject(),workingMemory));
  final Cheese stilton=new Cheese("stilton",10);
  final InternalFactHandle stiltonHandle=(InternalFactHandle)workingMemory.assertObject(stilton);
  assertFalse(constraint.isAllowed(stiltonHandle.getObject(),workingMemory));
}
