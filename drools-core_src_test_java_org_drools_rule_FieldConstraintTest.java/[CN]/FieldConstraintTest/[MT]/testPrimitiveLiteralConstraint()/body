{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final InternalWorkingMemory workingMemory=(InternalWorkingMemory)ruleBase.newStatefulSession();
  final ClassFieldExtractor extractor=cache.getExtractor(Cheese.class,"price",getClass().getClassLoader());
  final FieldValue field=FieldFactory.getFieldValue(5);
  final Evaluator evaluator=equals.getEvaluator(ValueType.PINTEGER_TYPE,Operator.EQUAL);
  final LiteralConstraint constraint=new LiteralConstraint(extractor,evaluator,field);
  final Cheese cheddar=new Cheese("cheddar",5);
  final InternalFactHandle cheddarHandle=(InternalFactHandle)workingMemory.insert(cheddar);
  assertTrue(constraint.isAllowed(cheddarHandle,workingMemory));
  final Cheese stilton=new Cheese("stilton",10);
  final InternalFactHandle stiltonHandle=(InternalFactHandle)workingMemory.insert(stilton);
  assertFalse(constraint.isAllowed(stiltonHandle,workingMemory));
}
