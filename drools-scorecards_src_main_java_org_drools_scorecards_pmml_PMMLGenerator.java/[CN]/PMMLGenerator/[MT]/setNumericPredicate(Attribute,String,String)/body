{
  if (predicateAsString.indexOf("-") > 0) {
    CompoundPredicate compoundPredicate=new CompoundPredicate();
    compoundPredicate.setBooleanOperator("and");
    String left=predicateAsString.substring(0,predicateAsString.indexOf("-")).trim();
    String right=predicateAsString.substring(predicateAsString.indexOf("-") + 1).trim();
    SimplePredicate simplePredicate=new SimplePredicate();
    simplePredicate.setField(field);
    simplePredicate.setOperator(PMMLOperators.GREATER_OR_EQUAL);
    simplePredicate.setValue(left);
    compoundPredicate.getSimplePredicatesAndCompoundPredicatesAndSimpleSetPredicates().add(simplePredicate);
    simplePredicate=new SimplePredicate();
    simplePredicate.setField(field);
    simplePredicate.setOperator(PMMLOperators.LESS_THAN);
    simplePredicate.setValue(right);
    compoundPredicate.getSimplePredicatesAndCompoundPredicatesAndSimpleSetPredicates().add(simplePredicate);
    pmmlAttribute.setCompoundPredicate(compoundPredicate);
  }
 else {
    SimplePredicate simplePredicate=new SimplePredicate();
    simplePredicate.setField(field);
    if (predicateAsString.startsWith("<=")) {
      simplePredicate.setOperator(PMMLOperators.LESS_OR_EQUAL);
      simplePredicate.setValue(predicateAsString.substring(3).trim());
    }
 else     if (predicateAsString.startsWith(">=")) {
      simplePredicate.setOperator(PMMLOperators.GREATER_OR_EQUAL);
      simplePredicate.setValue(predicateAsString.substring(3).trim());
    }
 else     if (predicateAsString.startsWith("=")) {
      simplePredicate.setOperator(PMMLOperators.EQUAL);
      simplePredicate.setValue(predicateAsString.substring(2).trim());
    }
 else     if (predicateAsString.startsWith("!=")) {
      simplePredicate.setOperator(PMMLOperators.NOT_EQUAL);
      simplePredicate.setValue(predicateAsString.substring(3).trim());
    }
 else     if (predicateAsString.startsWith("<")) {
      simplePredicate.setOperator(PMMLOperators.LESS_THAN);
      simplePredicate.setValue(predicateAsString.substring(2).trim());
    }
 else     if (predicateAsString.startsWith(">")) {
      simplePredicate.setOperator(PMMLOperators.GREATER_THAN);
      simplePredicate.setValue(predicateAsString.substring(2).trim());
    }
    pmmlAttribute.setSimplePredicate(simplePredicate);
  }
}
