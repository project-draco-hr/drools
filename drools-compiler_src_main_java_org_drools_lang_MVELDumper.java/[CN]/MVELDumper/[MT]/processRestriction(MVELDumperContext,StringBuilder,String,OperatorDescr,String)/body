{
  Operator op=Operator.determineOperator(operator.getOperator(),operator.isNegated());
  if (op == Operator.determineOperator("memberOf",operator.isNegated())) {
    sbuilder.append(evaluatorPrefix(operator.isNegated())).append(right).append(" contains ").append(left).append(evaluatorSufix(operator.isNegated()));
  }
 else   if (op == Operator.determineOperator("contains",operator.isNegated())) {
    sbuilder.append(evaluatorPrefix(operator.isNegated())).append(left).append(" contains ").append(right).append(evaluatorSufix(operator.isNegated()));
  }
 else   if (op == Operator.determineOperator("excludes",operator.isNegated())) {
    sbuilder.append(evaluatorPrefix(!operator.isNegated())).append(left).append(" contains ").append(right).append(evaluatorSufix(!operator.isNegated()));
  }
 else   if (op == Operator.determineOperator("matches",operator.isNegated())) {
    sbuilder.append(evaluatorPrefix(operator.isNegated())).append(left).append(" ~= ").append(right).append(evaluatorSufix(operator.isNegated()));
  }
 else   if (lookupBasicOperator(operator.getOperator())) {
    if (operator.getOperator().equals("instanceof")) {
      context.addInferredCast(left,right);
    }
    rewriteBasicOperator(context,sbuilder,left,operator,right);
  }
 else {
    rewriteOperator(context,sbuilder,left,operator,right);
  }
}
