{
  int i;
switch (readByte(v++)) {
case 'I':
case 'J':
case 'F':
case 'D':
    av.visit(name,readConst(readUnsignedShort(v),buf));
  v+=2;
break;
case 'B':
av.visit(name,new Byte((byte)readInt(items[readUnsignedShort(v)])));
v+=2;
break;
case 'Z':
boolean b=readInt(items[readUnsignedShort(v)]) == 0;
av.visit(name,b ? Boolean.FALSE : Boolean.TRUE);
v+=2;
break;
case 'S':
av.visit(name,new Short((short)readInt(items[readUnsignedShort(v)])));
v+=2;
break;
case 'C':
av.visit(name,new Character((char)readInt(items[readUnsignedShort(v)])));
v+=2;
break;
case 's':
av.visit(name,readUTF8(v,buf));
v+=2;
break;
case 'e':
av.visitEnum(name,readUTF8(v,buf),readUTF8(v + 2,buf));
v+=4;
break;
case 'c':
av.visit(name,Type.getType(readUTF8(v,buf)));
v+=2;
break;
case '@':
String desc=readUTF8(v,buf);
v+=2;
v=readAnnotationValues(v,buf,av.visitAnnotation(name,desc));
break;
case '[':
int size=readUnsignedShort(v);
v+=2;
if (size == 0) {
av.visitArray(name).visitEnd();
return v;
}
switch (readByte(v++)) {
case 'B':
byte[] bv=new byte[size];
for (i=0; i < size; i++) {
bv[i]=(byte)readInt(items[readUnsignedShort(v)]);
v+=3;
}
av.visit(name,bv);
--v;
break;
case 'Z':
boolean[] zv=new boolean[size];
for (i=0; i < size; i++) {
zv[i]=readInt(items[readUnsignedShort(v)]) != 0;
v+=3;
}
av.visit(name,zv);
--v;
break;
case 'S':
short[] sv=new short[size];
for (i=0; i < size; i++) {
sv[i]=(short)readInt(items[readUnsignedShort(v)]);
v+=3;
}
av.visit(name,sv);
--v;
break;
case 'C':
char[] cv=new char[size];
for (i=0; i < size; i++) {
cv[i]=(char)readInt(items[readUnsignedShort(v)]);
v+=3;
}
av.visit(name,cv);
--v;
break;
case 'I':
int[] iv=new int[size];
for (i=0; i < size; i++) {
iv[i]=readInt(items[readUnsignedShort(v)]);
v+=3;
}
av.visit(name,iv);
--v;
break;
case 'J':
long[] lv=new long[size];
for (i=0; i < size; i++) {
lv[i]=readLong(items[readUnsignedShort(v)]);
v+=3;
}
av.visit(name,lv);
--v;
break;
case 'F':
float[] fv=new float[size];
for (i=0; i < size; i++) {
fv[i]=Float.intBitsToFloat(readInt(items[readUnsignedShort(v)]));
v+=3;
}
av.visit(name,fv);
--v;
break;
case 'D':
double[] dv=new double[size];
for (i=0; i < size; i++) {
dv[i]=Double.longBitsToDouble(readLong(items[readUnsignedShort(v)]));
v+=3;
}
av.visit(name,dv);
--v;
break;
default :
v--;
AnnotationVisitor aav=av.visitArray(name);
for (i=size; i > 0; --i) {
v=readAnnotationValue(v,buf,null,aav);
}
aav.visitEnd();
}
}
return v;
}
