{
  try {
    final String originalType="stilton";
    final int originalPrice=15;
    final Cheese cheese=new Cheese(originalType,originalPrice);
    final Class proxy=ShadowProxyFactory.getProxy(Cheese.class);
    final Cheese cheeseProxy=(Cheese)proxy.getConstructor(new Class[]{Cheese.class}).newInstance(new Object[]{cheese});
    Assert.assertEquals(originalType,cheeseProxy.getType());
    Assert.assertEquals(originalPrice,cheeseProxy.getPrice());
    Assert.assertSame(cheese,((ShadowProxy)cheeseProxy).getShadowedObject());
    final String actualType="rotten stilton";
    final int actualPrice=1;
    cheese.setType(actualType);
    cheese.setPrice(actualPrice);
    Assert.assertEquals(actualType,cheese.getType());
    Assert.assertFalse(actualType.equals(cheeseProxy.getType()));
    Assert.assertEquals(originalType,cheeseProxy.getType());
    Assert.assertEquals(actualPrice,cheese.getPrice());
    Assert.assertFalse(actualPrice == cheeseProxy.getPrice());
    Assert.assertEquals(originalPrice,cheeseProxy.getPrice());
    ((ShadowProxy)cheeseProxy).updateProxy();
    Assert.assertEquals(actualType,cheese.getType());
    Assert.assertEquals(actualType,cheeseProxy.getType());
    Assert.assertFalse(originalType.equals(cheeseProxy.getType()));
    Assert.assertEquals(actualPrice,cheese.getPrice());
    Assert.assertEquals(actualPrice,cheeseProxy.getPrice());
    Assert.assertFalse(originalPrice == cheeseProxy.getPrice());
  }
 catch (  final Exception e) {
    fail("Error: " + e.getMessage());
  }
}
