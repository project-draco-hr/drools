{
  try {
    final String originalType="stilton";
    final int originalPrice=15;
    final Cheese cheese=new Cheese(originalType,originalPrice);
    final Class proxy=ShadowProxyFactory.getProxy(Cheese.class);
    final Cheese cheeseProxy1=(Cheese)proxy.getConstructor(new Class[]{Cheese.class}).newInstance(new Object[]{cheese});
    final Cheese cheeseProxy2=(Cheese)proxy.getConstructor(new Class[]{Cheese.class}).newInstance(new Object[]{cheese});
    int cheeseHash=cheese.hashCode();
    Assert.assertEquals(cheeseProxy1,cheeseProxy2);
    Assert.assertEquals(cheeseProxy2,cheeseProxy1);
    Assert.assertEquals(cheeseHash,cheeseProxy1.hashCode());
    final String actualType="rotten stilton";
    final int actualPrice=1;
    cheese.setType(actualType);
    cheese.setPrice(actualPrice);
    Assert.assertEquals(cheeseHash,cheeseProxy1.hashCode());
    ((ShadowProxy)cheeseProxy1).updateProxy();
    cheeseHash=cheese.hashCode();
    Assert.assertEquals(cheeseHash,cheeseProxy1.hashCode());
    Assert.assertTrue(cheeseProxy1.equals(cheeseProxy2));
    Assert.assertTrue(cheeseProxy2.equals(cheeseProxy1));
    ((ShadowProxy)cheeseProxy2).updateProxy();
    Assert.assertEquals(cheeseProxy1,cheeseProxy2);
    Assert.assertEquals(cheeseProxy2,cheeseProxy1);
  }
 catch (  final Exception e) {
    fail("Error: " + e.getMessage());
  }
}
