{
  Token DOT21=null;
  Token DOT22=null;
  Token DOT23=null;
  Token ID24=null;
  Token LEFT_SQUARE25=null;
  Token RIGHT_SQUARE26=null;
  try {
    int alt81=4;
    int LA81_0=input.LA(1);
    if ((LA81_0 == DOT)) {
      int LA81_1=input.LA(2);
      if ((synpred36_DRL5Expressions())) {
        alt81=1;
      }
 else       if ((synpred37_DRL5Expressions())) {
        alt81=2;
      }
 else       if ((synpred38_DRL5Expressions())) {
        alt81=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",81,1,input);
        throw nvae;
      }
    }
 else     if ((LA81_0 == LEFT_SQUARE) && (synpred40_DRL5Expressions())) {
      alt81=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",81,0,input);
      throw nvae;
    }
switch (alt81) {
case 1:
{
        DOT21=(Token)match(input,DOT,FOLLOW_DOT_in_selector3772);
        if (state.failed)         return;
        if (state.backtracking == 0) {
          helper.emit(DOT21,DroolsEditorType.SYMBOL);
        }
        pushFollow(FOLLOW_super_key_in_selector3776);
        super_key();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_superSuffix_in_selector3778);
        superSuffix();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    DOT22=(Token)match(input,DOT,FOLLOW_DOT_in_selector3794);
    if (state.failed)     return;
    if (state.backtracking == 0) {
      helper.emit(DOT22,DroolsEditorType.SYMBOL);
    }
    pushFollow(FOLLOW_new_key_in_selector3798);
    new_key();
    state._fsp--;
    if (state.failed)     return;
    int alt79=2;
    int LA79_0=input.LA(1);
    if ((LA79_0 == LESS)) {
      alt79=1;
    }
switch (alt79) {
case 1:
{
        pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector3801);
        nonWildcardTypeArguments();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
}
pushFollow(FOLLOW_innerCreator_in_selector3805);
innerCreator();
state._fsp--;
if (state.failed) return;
}
break;
case 3:
{
DOT23=(Token)match(input,DOT,FOLLOW_DOT_in_selector3821);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT23,DroolsEditorType.SYMBOL);
}
ID24=(Token)match(input,ID,FOLLOW_ID_in_selector3843);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(ID24,DroolsEditorType.IDENTIFIER);
}
int alt80=2;
alt80=dfa80.predict(input);
switch (alt80) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector3872);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
case 4:
{
LEFT_SQUARE25=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector3893);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE25,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_selector3920);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE26=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector3945);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE26,DroolsEditorType.SYMBOL);
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
