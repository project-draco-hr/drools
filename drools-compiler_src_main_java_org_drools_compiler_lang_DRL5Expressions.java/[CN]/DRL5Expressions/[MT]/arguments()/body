{
  Token LEFT_PAREN27=null;
  Token RIGHT_PAREN28=null;
  try {
{
      LEFT_PAREN27=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_arguments4069);
      if (state.failed)       return;
      if (state.backtracking == 0) {
        helper.emit(LEFT_PAREN27,DroolsEditorType.SYMBOL);
      }
      int alt87=2;
      int LA87_0=input.LA(1);
      if ((LA87_0 == BOOL || (LA87_0 >= DECIMAL && LA87_0 <= DECR) || LA87_0 == FLOAT || LA87_0 == HEX || (LA87_0 >= ID && LA87_0 <= INCR) || (LA87_0 >= LEFT_PAREN && LA87_0 <= LESS) || LA87_0 == MINUS || LA87_0 == NEGATION || LA87_0 == NULL || LA87_0 == PLUS || (LA87_0 >= STAR && LA87_0 <= TIME_INTERVAL))) {
        alt87=1;
      }
switch (alt87) {
case 1:
{
          pushFollow(FOLLOW_expressionList_in_arguments4081);
          expressionList();
          state._fsp--;
          if (state.failed)           return;
        }
      break;
  }
  RIGHT_PAREN28=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_arguments4092);
  if (state.failed)   return;
  if (state.backtracking == 0) {
    helper.emit(RIGHT_PAREN28,DroolsEditorType.SYMBOL);
  }
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
