{
  Token LEFT_SQUARE16=null;
  Token RIGHT_SQUARE17=null;
  Token DOT18=null;
  Token LEFT_SQUARE19=null;
  Token RIGHT_SQUARE20=null;
  try {
    int alt63=3;
    int LA63_0=input.LA(1);
    if ((LA63_0 == LEFT_SQUARE)) {
      int LA63_1=input.LA(2);
      if ((LA63_1 == RIGHT_SQUARE) && (synpred33_DRL5Expressions())) {
        alt63=1;
      }
 else       if ((LA63_1 == BOOL || (LA63_1 >= DECIMAL && LA63_1 <= DECR) || LA63_1 == FLOAT || LA63_1 == HEX || (LA63_1 >= ID && LA63_1 <= INCR) || (LA63_1 >= LEFT_PAREN && LA63_1 <= LESS) || LA63_1 == MINUS || LA63_1 == NEGATION || LA63_1 == NULL || LA63_1 == PLUS || (LA63_1 >= STAR && LA63_1 <= TIME_INTERVAL))) {
        alt63=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        int nvaeMark=input.mark();
        try {
          input.consume();
          NoViableAltException nvae=new NoViableAltException("",63,1,input);
          throw nvae;
        }
  finally {
          input.rewind(nvaeMark);
        }
      }
    }
 else     if ((LA63_0 == LEFT_PAREN)) {
      alt63=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",63,0,input);
      throw nvae;
    }
switch (alt63) {
case 1:
{
        int cnt61=0;
        loop61:         while (true) {
          int alt61=2;
          int LA61_0=input.LA(1);
          if ((LA61_0 == LEFT_SQUARE)) {
            alt61=1;
          }
switch (alt61) {
case 1:
{
              LEFT_SQUARE16=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix3208);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(LEFT_SQUARE16,DroolsEditorType.SYMBOL);
              }
              RIGHT_SQUARE17=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix3249);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(RIGHT_SQUARE17,DroolsEditorType.SYMBOL);
              }
            }
          break;
default :
        if (cnt61 >= 1)         break loop61;
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
    EarlyExitException eee=new EarlyExitException(61,input);
  throw eee;
}
cnt61++;
}
DOT18=(Token)match(input,DOT,FOLLOW_DOT_in_identifierSuffix3293);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT18,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_class_key_in_identifierSuffix3297);
class_key();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
int cnt62=0;
loop62: while (true) {
int alt62=2;
int LA62_0=input.LA(1);
if ((LA62_0 == LEFT_SQUARE)) {
int LA62_36=input.LA(2);
if ((synpred34_DRL5Expressions())) {
alt62=1;
}
}
switch (alt62) {
case 1:
{
LEFT_SQUARE19=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix3312);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE19,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_identifierSuffix3342);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE20=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix3370);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE20,DroolsEditorType.SYMBOL);
}
}
break;
default :
if (cnt62 >= 1) break loop62;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(62,input);
throw eee;
}
cnt62++;
}
}
break;
case 3:
{
pushFollow(FOLLOW_arguments_in_identifierSuffix3386);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
