{
  Options xjcOpts=new Options();
  xjcOpts.setSchemaLanguage(Language.XMLSCHEMA);
  PackageBuilder pkgBuilder=new PackageBuilder();
  InputStream stream=getClass().getResourceAsStream("order.xsd");
  String[] classNames=DroolsJaxbHelper.addModel(new InputStreamReader(stream),pkgBuilder,xjcOpts,"xsd");
  assertFalse(pkgBuilder.hasErrors());
  pkgBuilder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Jaxb.drl")));
  RuleBase rb=RuleBaseFactory.newRuleBase();
  rb.addPackages(pkgBuilder.getPackages());
  JAXBContext jaxbCtx=DroolsJaxbHelper.newInstance(classNames,rb);
  Unmarshaller unmarshaller=jaxbCtx.createUnmarshaller();
  StatefulSession session=rb.newStatefulSession();
  List list1=new ArrayList();
  session.setGlobal("list1",list1);
  DroolsJaxbStatefulSession dataLoader=new DroolsJaxbStatefulSession(session,unmarshaller);
  Map<FactHandle,Object> handles=dataLoader.insertUnmarshalled(new InputStreamReader(getClass().getResourceAsStream("order.xml")));
  session.fireAllRules();
  assertEquals(1,handles.size());
  assertEquals(1,list1.size());
  assertEquals("org.drools.model.order.Order",list1.get(0).getClass().getName());
}
