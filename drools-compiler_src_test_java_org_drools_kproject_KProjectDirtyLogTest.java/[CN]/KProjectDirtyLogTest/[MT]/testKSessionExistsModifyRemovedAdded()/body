{
  KProject kproj=new KProjectImpl();
  KProjectChangeLog dirtyLog=new KProjectChangeLog();
  kproj.setListener(dirtyLog);
  KBase kbase1=kproj.newKBase("org.test1","KBase1");
  KSession kSession=kbase1.newKSession("org.test1","KSession1");
  dirtyLog.reset();
  kSession.setNamespace("org.test2");
  assertTrue(dirtyLog.getRemovedKSessions().contains("org.test1.KSession1"));
  assertTrue(dirtyLog.getAddedKSessions().contains("org.test2.KSession1"));
  kbase1.removeKSession(kSession.getQName());
  assertEquals(2,dirtyLog.getRemovedKSessions().size());
  assertEquals(0,dirtyLog.getAddedKSessions().size());
  assertTrue(dirtyLog.getRemovedKSessions().contains("org.test2.KSession1"));
  kbase1.newKSession(kSession.getNamespace(),kSession.getName());
  assertEquals(1,dirtyLog.getRemovedKSessions().size());
  assertEquals(1,dirtyLog.getAddedKSessions().size());
  assertTrue(dirtyLog.getRemovedKSessions().contains("org.test1.KSession1"));
  assertTrue(dirtyLog.getAddedKSessions().contains("org.test2.KSession1"));
}
