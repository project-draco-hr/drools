{
  KProject kproj=new KProject();
  KProjectChangeLog dirtyLog=new KProjectChangeLog();
  kproj.setListener(dirtyLog);
  KBase kbase1=new KBase("org.test1","KBase1");
  kproj.addKBase(kbase1);
  KSession kSession1=new KSession("org.test1","KSession1");
  kbase1.addKSession(kSession1);
  KSession kSession2=new KSession("org.test1","KSession2");
  kbase1.addKSession(kSession2);
  dirtyLog.reset();
  kbase1.removeKSession(kSession1);
  kSession1.setNamespace("org.test2");
  kbase1.addKSession(kSession1);
  kbase1.removeKSession(kSession2);
  kSession2.setName("KSession1");
  kbase1.addKSession(kSession2);
  assertEquals("org.test1.KSession1",dirtyLog.getModifiedKSessions().get(kSession1.getQName()));
  assertEquals("org.test1.KSession2",dirtyLog.getModifiedKSessions().get(kSession2.getQName()));
  assertFalse(dirtyLog.getRemovedKSessions().containsKey(kSession1.getQName()));
  assertFalse(dirtyLog.getAddedKSessions().containsKey(kSession1.getQName()));
  assertFalse(dirtyLog.getRemovedKSessions().containsKey(kSession2.getQName()));
  assertFalse(dirtyLog.getAddedKSessions().containsKey(kSession2.getQName()));
  kbase1.removeKSession(kSession1);
  assertEquals(kSession1,dirtyLog.getRemovedKSessions().get(kSession1.getQName()));
  assertEquals("org.test1.KSession1",dirtyLog.getModifiedKSessions().get(kSession1.getQName()));
  kbase1.removeKSession(kSession2);
  assertEquals(kSession2,dirtyLog.getRemovedKSessions().get(kSession2.getQName()));
  assertEquals("org.test1.KSession2",dirtyLog.getModifiedKSessions().get(kSession2.getQName()));
  kbase1.addKSession(kSession1);
  assertFalse(dirtyLog.getRemovedKSessions().containsKey(kSession1.getQName()));
  assertFalse(dirtyLog.getAddedKSessions().containsKey(kSession1.getQName()));
  kbase1.addKSession(kSession2);
  assertFalse(dirtyLog.getRemovedKSessions().containsKey(kSession2.getQName()));
  assertFalse(dirtyLog.getAddedKSessions().containsKey(kSession2.getQName()));
}
