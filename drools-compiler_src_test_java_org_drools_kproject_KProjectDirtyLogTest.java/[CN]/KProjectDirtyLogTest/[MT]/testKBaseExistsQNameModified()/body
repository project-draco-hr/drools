{
  KProject kproj=new KProject();
  KProjectChangeLog dirtyLog=new KProjectChangeLog();
  kproj.setListener(dirtyLog);
  KBase kbase1=new KBase("org.test1","KBase1");
  kproj.addKBase(kbase1);
  dirtyLog.reset();
  kproj.removeKBase(kbase1);
  kbase1.setNamespace("org.test2");
  kproj.addKBase(kbase1);
  assertFalse(dirtyLog.getAddedKBases().containsKey(kbase1.getQName()));
  assertFalse(dirtyLog.getRemovedKBases().containsKey(kbase1.getQName()));
  assertEquals("org.test1.KBase1",dirtyLog.getModifiedKBases().get(kbase1.getQName()));
  kproj.removeKBase(kbase1);
  kbase1.setName("KBase2");
  kproj.addKBase(kbase1);
  assertFalse(dirtyLog.getAddedKBases().containsKey(kbase1.getQName()));
  assertFalse(dirtyLog.getRemovedKBases().containsKey(kbase1.getQName()));
  assertEquals("org.test1.KBase1",dirtyLog.getModifiedKBases().get(kbase1.getQName()));
}
