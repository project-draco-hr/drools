{
  KProject kproj=new KProjectImpl();
  KProjectChangeLog dirtyLog=new KProjectChangeLog();
  kproj.setListener(dirtyLog);
  assertFalse(dirtyLog.isKProjectDirty());
  KBase kbase1=kproj.newKBase("org.test1","KBase1");
  KSession kSession=kbase1.newKSession("org.test1","KSession1");
  kSession.setClockType(ClockTypeOption.get("pseudo"));
  kSession.setType("stateless");
  kSession.setClockType(ClockTypeOption.get("realtime"));
  assertTrue(dirtyLog.getAddedKSessions().contains("org.test1.KSession1"));
  dirtyLog.reset();
  kSession.setType("stateful");
  assertTrue(dirtyLog.getAddedKSessions().contains("org.test1.KSession1"));
  kbase1.removeKSession(kSession.getQName());
  assertFalse(dirtyLog.getAddedKSessions().contains("org.test1.KSession1"));
  assertTrue(dirtyLog.getRemovedKSessions().contains("org.test1.KSession1"));
}
