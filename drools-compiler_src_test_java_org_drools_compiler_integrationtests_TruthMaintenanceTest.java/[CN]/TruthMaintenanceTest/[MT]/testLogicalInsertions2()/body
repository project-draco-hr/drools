{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_LogicalInsertions2.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  StatefulSession workingMemory=ruleBase.newStatefulSession();
  final List events=new ArrayList();
  workingMemory.setGlobal("events",events);
  final Sensor sensor=new Sensor(80,80);
  FactHandle handle=workingMemory.insert(sensor);
  workingMemory=getSerialisedStatefulSession(workingMemory);
  workingMemory.fireAllRules();
  final List list=IteratorToList.convert(workingMemory.iterateObjects());
  assertEquals("Only sensor is there",1,list.size());
  assertEquals("Only one event",1,events.size());
  sensor.setPressure(200);
  sensor.setTemperature(200);
  handle=getFactHandle(handle,workingMemory);
  workingMemory.update(handle,sensor);
  workingMemory=getSerialisedStatefulSession(workingMemory);
  workingMemory.fireAllRules();
  assertEquals("Only sensor is there",1,list.size());
  TruthMaintenanceSystem tms=((NamedEntryPoint)workingMemory.getWorkingMemoryEntryPoint(EntryPointId.DEFAULT.getEntryPointId())).getTruthMaintenanceSystem();
  assertTrue(tms.getEqualityKeyMap().isEmpty());
}
