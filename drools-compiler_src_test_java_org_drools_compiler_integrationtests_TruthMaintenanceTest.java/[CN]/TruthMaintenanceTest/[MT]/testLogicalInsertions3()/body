{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_logicalInsertions3.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  StatefulSession workingMemory=ruleBase.newStatefulSession();
  final List list=new ArrayList();
  workingMemory.setGlobal("events",list);
  final Sensor sensor=new Sensor(150,100);
  FactHandle sensorHandle=workingMemory.insert(sensor);
  workingMemory.fireAllRules();
  workingMemory=getSerialisedStatefulSession(workingMemory);
  assertEquals(2,list.size());
  assertEquals(2,IteratorToList.convert(workingMemory.iterateObjects()).size());
  sensor.setTemperature(125);
  sensorHandle=getFactHandle(sensorHandle,workingMemory);
  workingMemory.update(sensorHandle,sensor);
  workingMemory=getSerialisedStatefulSession(workingMemory);
  workingMemory.fireAllRules();
  workingMemory=getSerialisedStatefulSession(workingMemory);
  assertEquals(3,list.size());
  assertEquals(2,IteratorToList.convert(workingMemory.iterateObjects()).size());
  sensor.setTemperature(80);
  sensorHandle=getFactHandle(sensorHandle,workingMemory);
  workingMemory.update(sensorHandle,sensor);
  workingMemory=getSerialisedStatefulSession(workingMemory);
  workingMemory.fireAllRules();
  assertEquals(3,list.size());
  assertEquals(1,IteratorToList.convert(workingMemory.iterateObjects()).size());
}
