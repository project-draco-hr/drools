{
  for (final Iterator it=pkgDescr.getFactTemplates().iterator(); it.hasNext(); ) {
    final FactTemplateDescr templ=(FactTemplateDescr)it.next();
    final String factType=templ.getName();
    this.builder.addFactType(factType);
    final String[] fields=new String[templ.getFields().size()];
    this.builder.addFieldsForType(factType,fields);
    int index=0;
    for (final Iterator fieldsIt=templ.getFields().iterator(); fieldsIt.hasNext(); ) {
      final FieldTemplateDescr fieldDescr=(FieldTemplateDescr)fieldsIt.next();
      fields[index++]=fieldDescr.getName();
      final String fieldType=fieldDescr.getClassType();
      Class fieldTypeClass=null;
      try {
        fieldTypeClass=resolver.resolveType(fieldType);
      }
 catch (      final ClassNotFoundException e) {
        this.errors.add("Fact template field type not found: " + fieldType);
      }
      this.builder.addFieldType(factType + "." + fieldDescr.getName(),getFieldType(fieldTypeClass));
    }
  }
}
