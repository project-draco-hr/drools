{
  if (type.getSort() == Type.OBJECT || type.getSort() == Type.ARRAY) {
    return;
  }
  if (type == Type.VOID_TYPE) {
    push((String)null);
  }
 else {
    Type boxed=type;
switch (type.getSort()) {
case Type.BYTE:
      boxed=GeneratorAdapter.BYTE_TYPE;
    break;
case Type.BOOLEAN:
  boxed=GeneratorAdapter.BOOLEAN_TYPE;
break;
case Type.SHORT:
boxed=GeneratorAdapter.SHORT_TYPE;
break;
case Type.CHAR:
boxed=GeneratorAdapter.CHARACTER_TYPE;
break;
case Type.INT:
boxed=GeneratorAdapter.INTEGER_TYPE;
break;
case Type.FLOAT:
boxed=GeneratorAdapter.FLOAT_TYPE;
break;
case Type.LONG:
boxed=GeneratorAdapter.LONG_TYPE;
break;
case Type.DOUBLE:
boxed=GeneratorAdapter.DOUBLE_TYPE;
break;
}
newInstance(boxed);
if (type.getSize() == 2) {
dupX2();
dupX2();
pop();
}
 else {
dupX1();
swap();
}
invokeConstructor(boxed,new Method("<init>",Type.VOID_TYPE,new Type[]{type}));
}
}
