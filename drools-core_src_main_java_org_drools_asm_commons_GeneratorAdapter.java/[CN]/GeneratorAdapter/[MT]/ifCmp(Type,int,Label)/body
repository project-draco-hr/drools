{
  int intOp=-1;
  int jumpMode=mode;
switch (mode) {
case GE:
    jumpMode=GeneratorAdapter.LT;
  break;
case LE:
jumpMode=GeneratorAdapter.GT;
break;
}
switch (type.getSort()) {
case Type.LONG:
this.mv.visitInsn(Opcodes.LCMP);
break;
case Type.DOUBLE:
this.mv.visitInsn(Opcodes.DCMPG);
break;
case Type.FLOAT:
this.mv.visitInsn(Opcodes.FCMPG);
break;
case Type.ARRAY:
case Type.OBJECT:
switch (mode) {
case EQ:
this.mv.visitJumpInsn(Opcodes.IF_ACMPEQ,label);
return;
case NE:
this.mv.visitJumpInsn(Opcodes.IF_ACMPNE,label);
return;
}
throw new IllegalArgumentException("Bad comparison for type " + type);
default :
switch (mode) {
case EQ:
intOp=Opcodes.IF_ICMPEQ;
break;
case NE:
intOp=Opcodes.IF_ICMPNE;
break;
case GE:
intOp=Opcodes.IF_ICMPGE;
break;
case LT:
intOp=Opcodes.IF_ICMPLT;
break;
case LE:
intOp=Opcodes.IF_ICMPLE;
break;
case GT:
intOp=Opcodes.IF_ICMPGT;
break;
}
this.mv.visitJumpInsn(intOp,label);
return;
}
this.mv.visitJumpInsn(jumpMode,label);
}
