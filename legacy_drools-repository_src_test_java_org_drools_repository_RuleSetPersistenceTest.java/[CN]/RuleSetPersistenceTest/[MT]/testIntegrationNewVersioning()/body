{
  RuleSetDef set=new RuleSetDef("InMemory",null);
  RuleDef def1=new RuleDef("Rule1","blah");
  RuleDef def2=new RuleDef("Rule2","blah2");
  def1.addTag("S").addTag("A");
  set.addRule(def1);
  set.addRule(def2);
  set.addAttachment(new RuleSetAttachment("x","x","x".getBytes(),"x"));
  assertEquals(2,set.getRules().size());
  assertEquals(1,def1.getVersionNumber());
  assertEquals(1,def2.getVersionNumber());
  assertEquals(1,set.getWorkingVersionNumber());
  set.createNewVersion("New version");
  assertEquals(4,set.getRules().size());
  assertEquals(2,set.getAttachments().size());
  assertEquals(1,def1.getVersionNumber());
  for (Iterator iter=set.getRules().iterator(); iter.hasNext(); ) {
    RuleDef rule=(RuleDef)iter.next();
    if (rule.getVersionNumber() == 2) {
      assertEquals("New version",rule.getVersionComment());
      if (rule.getName().equals("Rule1")) {
        assertEquals(2,rule.getTags().size());
      }
    }
  }
  RepositoryManager repo=getRepo();
  repo.save(set);
  RuleSetDef loaded=repo.loadRuleSet("InMemory",2);
  assertEquals(2,loaded.getRules().size());
  assertEquals(1,loaded.getAttachments().size());
  RuleSetAttachment att=(RuleSetAttachment)loaded.getAttachments().iterator().next();
  assertEquals(2,att.getVersionNumber());
  assertEquals("New version",att.getVersionComment());
  loaded=repo.loadRuleSet("InMemory",1);
  assertEquals(2,loaded.getRules().size());
  assertEquals(1,loaded.getAttachments().size());
  att=(RuleSetAttachment)loaded.getAttachments().iterator().next();
  assertEquals(1,att.getVersionNumber());
  assertFalse("New version".equals(att.getVersionComment()));
  RuleDef newRule=new RuleDef("blah42","blah42");
  loaded.addRule(newRule);
  loaded.addApplicationData(new ApplicationDataDef("x","XX")).addFunction(new FunctionDef("My func","yeah")).addImport(new ImportDef("com.allenparsons.project"));
  repo.save(loaded);
  assertEquals(loaded.getWorkingVersionNumber(),newRule.getVersionNumber());
  assertNotNull(newRule.getId());
  loaded=repo.loadRuleSet("InMemory",1);
  assertEquals(1,loaded.getApplicationData().size());
  assertEquals(1,loaded.getFunctions().size());
  assertEquals(1,loaded.getImports().size());
  loaded=repo.loadRuleSet("InMemory",2);
  assertEquals(0,loaded.getApplicationData().size());
  assertEquals(0,loaded.getFunctions().size());
  assertEquals(0,loaded.getImports().size());
}
