{
  String template="<rule>\n" + "  <name>guided-template-with-dsl</name>\n" + "  <modelVersion>1.0</modelVersion>\n"+ "  <attributes/>\n"+ "  <metadataList/>\n"+ "  <lhs>\n"+ "    <dslSentence>\n"+ "      <drl>applicant:" + Applicant.class.getCanonicalName() + "(approved=={bool})</drl>\n"+ "      <definition>When the applicant approval is {bool:BOOLEAN:checked}</definition>\n"+ "      <values>\n"+ "        <org.drools.workbench.models.datamodel.rule.DSLVariableValue>\n"+ "          <value>false</value>\n"+ "        </org.drools.workbench.models.datamodel.rule.DSLVariableValue>\n"+ "        <org.drools.workbench.models.datamodel.rule.DSLComplexVariableValue>\n"+ "          <value>bool</value>\n"+ "          <id>BOOLEAN:checked</id>\n"+ "        </org.drools.workbench.models.datamodel.rule.DSLComplexVariableValue>\n"+ "      </values>\n"+ "    </dslSentence>\n"+ "  </lhs>\n"+ "  <rhs>\n"+ "    <dslSentence>\n"+ "      <drl>applicant.setApproved(true)</drl>\n"+ "      <definition>Approve the loan</definition>\n"+ "      <values/>\n"+ "    </dslSentence>\n"+ "  </rhs>\n"+ "  <imports>\n"+ "    <imports/>\n"+ "  </imports>\n"+ "  <packageName>org.mortgages</packageName>\n"+ "  <isNegated>false</isNegated>\n"+ "  <table>\n"+ "    <entry>\n"+ "      <string>__ID_KOL_NAME__</string>\n"+ "      <list>\n"+ "        <string>1</string>\n"+ "      </list>\n"+ "    </entry>\n"+ "  </table>\n"+ "  <idCol>1</idCol>\n"+ "  <rowsCount>1</rowsCount>\n"+ "</rule>";
  String dsl="[when]When the applicant approval is {bool:BOOLEAN:checked} = applicant:" + Applicant.class.getCanonicalName() + "(approved=={bool})\n"+ "[then]Approve the loan = applicant.setApproved(true)";
  KieHelper kieHelper=new KieHelper();
  KieSession kieSession=kieHelper.addContent(template,ResourceType.TEMPLATE).addContent(dsl,ResourceType.DSL).build().newKieSession();
  Applicant applicant=new Applicant();
  applicant.setApproved(false);
  kieSession.insert(applicant);
  int rulesFired=kieSession.fireAllRules();
  Assert.assertEquals("Incorrect number of rules fired!",1,rulesFired);
  Assert.assertEquals("Rule RHS wasn't triggered!",true,applicant.isApproved());
}
