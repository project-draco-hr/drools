{
  registry.addEvaluatorDefinition(AfterEvaluatorDefinition.class.getName());
  EventFactHandle foo=new EventFactHandle(1,"foo",1,1,2,new DisconnectedWorkingMemoryEntryPoint("DEFAULT"));
  EventFactHandle bar=new EventFactHandle(2,"bar",1,4,3,new DisconnectedWorkingMemoryEntryPoint("DEFAULT"));
  EventFactHandle drool=new EventFactHandle(1,"drool",1,5,2,new DisconnectedWorkingMemoryEntryPoint("DEFAULT"));
  final Object[][] data={{drool,"after",foo,Boolean.TRUE},{drool,"after",bar,Boolean.FALSE},{bar,"after",foo,Boolean.TRUE},{bar,"after",drool,Boolean.FALSE},{foo,"after",drool,Boolean.FALSE},{foo,"after",bar,Boolean.FALSE},{foo,"not after",bar,Boolean.TRUE},{foo,"not after",drool,Boolean.TRUE},{bar,"not after",drool,Boolean.TRUE},{bar,"not after",foo,Boolean.FALSE},{drool,"not after",foo,Boolean.FALSE},{drool,"not after",bar,Boolean.TRUE},{bar,"after[1]",foo,Boolean.TRUE},{bar,"after[0]",foo,Boolean.TRUE},{bar,"after[-3]",drool,Boolean.TRUE},{bar,"after[-4]",drool,Boolean.TRUE},{drool,"after[2]",foo,Boolean.TRUE},{drool,"after[1]",foo,Boolean.TRUE},{drool,"after[-2]",bar,Boolean.TRUE},{drool,"after[-3]",bar,Boolean.TRUE},{foo,"after[-6]",drool,Boolean.TRUE},{foo,"after[-7]",drool,Boolean.TRUE},{foo,"after[-6]",bar,Boolean.TRUE},{foo,"after[-7]",bar,Boolean.TRUE},{bar,"not after[1]",foo,Boolean.FALSE},{bar,"not after[0]",foo,Boolean.FALSE},{bar,"not after[-3]",drool,Boolean.FALSE},{bar,"not after[-4]",drool,Boolean.FALSE},{drool,"not after[2]",foo,Boolean.FALSE},{drool,"not after[1]",foo,Boolean.FALSE},{drool,"not after[-2]",bar,Boolean.FALSE},{drool,"not after[-3]",bar,Boolean.FALSE},{foo,"not after[-6]",drool,Boolean.FALSE},{foo,"not after[-7]",drool,Boolean.FALSE},{foo,"not after[-6]",bar,Boolean.FALSE},{foo,"not after[-7]",bar,Boolean.FALSE},{drool,"after[1,4]",foo,Boolean.TRUE},{drool,"after[3,6]",foo,Boolean.FALSE},{drool,"after[-3,1]",bar,Boolean.TRUE},{drool,"after[-1,3]",bar,Boolean.FALSE},{bar,"after[1,5]",foo,Boolean.TRUE},{bar,"after[2,5]",foo,Boolean.FALSE},{bar,"after[-3,0]",drool,Boolean.TRUE},{bar,"after[-2,1]",drool,Boolean.FALSE},{foo,"after[-7,-3]",bar,Boolean.TRUE},{foo,"after[-5,-1]",bar,Boolean.FALSE},{foo,"after[-6,-5]",drool,Boolean.TRUE},{foo,"after[-5,-4]",drool,Boolean.FALSE},{drool,"not after[1,4]",foo,Boolean.FALSE},{drool,"not after[3,6]",foo,Boolean.TRUE},{drool,"not after[-3,1]",bar,Boolean.FALSE},{drool,"not after[-1,3]",bar,Boolean.TRUE},{bar,"not after[1,5]",foo,Boolean.FALSE},{bar,"not after[2,5]",foo,Boolean.TRUE},{bar,"not after[-3,0]",drool,Boolean.FALSE},{bar,"not after[-2,1]",drool,Boolean.TRUE},{foo,"not after[-7,-3]",bar,Boolean.FALSE},{foo,"not after[-5,-1]",bar,Boolean.TRUE},{foo,"not after[-6,-5]",drool,Boolean.FALSE},{foo,"not after[-5,-4]",drool,Boolean.TRUE}};
  runEvaluatorTest(data,ValueType.OBJECT_TYPE);
}
