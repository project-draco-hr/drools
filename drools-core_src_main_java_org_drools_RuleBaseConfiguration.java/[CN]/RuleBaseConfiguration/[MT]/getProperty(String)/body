{
  if (name == null) {
    return null;
  }
  if (name.equals("drools.sequential.agenda")) {
    return getSequentialAgenda().toExternalForm();
  }
 else   if (name.equals("drools.sequential")) {
    return Boolean.toString(isSequential());
  }
 else   if (name.equals("drools.maintainTms")) {
    return Boolean.toString(isMaintainTms());
  }
 else   if (name.equals("drools.removeIdentities")) {
    return Boolean.toString(isRemoveIdentities());
  }
 else   if (name.equals("drools.shareAlphaNodes")) {
    return Boolean.toString(isShareAlphaNodes());
  }
 else   if (name.equals("drools.shareBetaNodes")) {
    return Boolean.toString(isShareBetaNodes());
  }
 else   if (name.equals("drools.alphaNodeHashingThreshold")) {
    return Integer.toString(getAlphaNodeHashingThreshold());
  }
 else   if (name.equals("drools.compositeKeyDepth")) {
    return Integer.toString(getCompositeKeyDepth());
  }
 else   if (name.equals("drools.indexLeftBetaMemory")) {
    return Boolean.toString(isIndexLeftBetaMemory());
  }
 else   if (name.equals("drools.indexRightBetaMemory")) {
    return Boolean.toString(isIndexRightBetaMemory());
  }
 else   if (name.equals("drools.assertBehaviour")) {
    return getAssertBehaviour().toExternalForm();
  }
 else   if (name.equals("drools.logicalOverride")) {
    return getLogicalOverride().toExternalForm();
  }
 else   if (name.equals("drools.executorService")) {
    return getExecutorService();
  }
 else   if (name.equals("drools.consequenceExceptionHandler")) {
    return getConsequenceExceptionHandler().getClass().getName();
  }
 else   if (name.equals("drools.ruleBaseUpdateHandler")) {
    return getRuleBaseUpdateHandler();
  }
 else   if (name.equals("drools.conflictResolver")) {
    return getConflictResolver().getClass().getName();
  }
 else   if (name.equals("drools.advancedProcessRuleIntegration")) {
    return Boolean.toString(isAdvancedProcessRuleIntegration());
  }
 else   if (name.equals("drools.multithreadEvaluation")) {
    Boolean.toString(isMultithreadEvaluation());
  }
 else   if (name.equals("drools.maxThreads")) {
    return Integer.toString(getMaxThreads());
  }
 else   if (name.equals("drools.eventProcessingMode")) {
    return getEventProcessingMode().toExternalForm();
  }
  return null;
}
