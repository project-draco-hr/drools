{
  if (option instanceof MaintainTMSOption) {
    this.maintainTms=((MaintainTMSOption)option).isMaintainTMS();
  }
 else   if (option instanceof SequentialOption) {
    this.sequential=((SequentialOption)option).isSequential();
  }
 else   if (option instanceof RemoveIdentitiesOption) {
    this.removeIdentities=((RemoveIdentitiesOption)option).isRemoveIdentities();
  }
 else   if (option instanceof ShareAlphaNodesOption) {
    this.shareAlphaNodes=((ShareAlphaNodesOption)option).isShareAlphaNodes();
  }
 else   if (option instanceof ShareBetaNodesOption) {
    this.shareBetaNodes=((ShareBetaNodesOption)option).isShareBetaNodes();
  }
 else   if (option instanceof IndexLeftBetaMemoryOption) {
    this.indexLeftBetaMemory=((IndexLeftBetaMemoryOption)option).isIndexLeftBetaMemory();
  }
 else   if (option instanceof IndexRightBetaMemoryOption) {
    this.indexRightBetaMemory=((IndexRightBetaMemoryOption)option).isIndexRightBetaMemory();
  }
 else   if (option instanceof AssertBehaviorOption) {
    this.assertBehaviour=(option == AssertBehaviorOption.IDENTITY) ? AssertBehaviour.IDENTITY : AssertBehaviour.EQUALITY;
  }
 else   if (option instanceof LogicalOverrideOption) {
    this.logicalOverride=(option == LogicalOverrideOption.DISCARD) ? LogicalOverride.DISCARD : LogicalOverride.PRESERVE;
  }
 else   if (option instanceof SequentialAgendaOption) {
    this.sequentialAgenda=(option == SequentialAgendaOption.SEQUENTIAL) ? SequentialAgenda.SEQUENTIAL : SequentialAgenda.DYNAMIC;
  }
}
