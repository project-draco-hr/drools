{
  if (name == null) {
    return;
  }
  if (name.equals("drools.sequential.agenda")) {
    setSequentialAgenda(SequentialAgenda.determineSequentialAgenda(isEmpty(value) ? "sequential" : value));
  }
 else   if (name.equals("drools.sequential")) {
    setSequential(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.maintainTms")) {
    setMaintainTms(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.removeIdentities")) {
    setRemoveIdentities(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.shareAlphaNodes")) {
    setShareAlphaNodes(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.shareBetaNodes")) {
    setShareBetaNodes(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.alphaNodeHashingThreshold")) {
    setAlphaNodeHashingThreshold(isEmpty(value) ? 3 : Integer.parseInt(value));
  }
 else   if (name.equals("drools.compositeKeyDepth")) {
    setCompositeKeyDepth(isEmpty(value) ? 3 : Integer.parseInt(value));
  }
 else   if (name.equals("drools.indexLeftBetaMemory")) {
    setIndexLeftBetaMemory(isEmpty(value) ? true : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.indexRightBetaMemory")) {
    setIndexRightBetaMemory(isEmpty(value) ? true : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.assertBehaviour")) {
    setAssertBehaviour(AssertBehaviour.determineAssertBehaviour(isEmpty(value) ? "identity" : value));
  }
 else   if (name.equals("drools.logicalOverride")) {
    setLogicalOverride(LogicalOverride.determineLogicalOverride(isEmpty(value) ? "discard" : value));
  }
 else   if (name.equals("drools.executorService")) {
    setExecutorService(isEmpty(value) ? "org.drools.concurrent.DefaultExecutorService" : value);
  }
 else   if (name.equals("drools.consequenceExceptionHandler")) {
    setConsequenceExceptionHandler(isEmpty(value) ? "org.drools.runtime.rule.impl.DefaultConsequenceExceptionHandler" : value);
  }
 else   if (name.equals("drools.ruleBaseUpdateHandler")) {
    setRuleBaseUpdateHandler(isEmpty(value) ? "org.drools.base.FireAllRulesRuleBaseUpdateListener" : value);
  }
 else   if (name.equals("drools.conflictResolver")) {
    setConflictResolver(RuleBaseConfiguration.determineConflictResolver(isEmpty(value) ? "org.drools.conflict.DepthConflictResolver" : value));
  }
 else   if (name.equals("drools.advancedProcessRuleIntegration")) {
    setAdvancedProcessRuleIntegration(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.multithreadEvaluation")) {
    setMultithreadEvaluation(isEmpty(value) ? false : Boolean.valueOf(value));
  }
 else   if (name.equals("drools.maxThreads")) {
    setMaxThreads(isEmpty(value) ? -1 : Integer.parseInt(value));
  }
 else   if (name.equals("drools.eventProcessingMode")) {
    setEventProcessingMode(EventProcessingMode.determineAssertBehaviour(isEmpty(value) ? "cloud" : value));
  }
}
