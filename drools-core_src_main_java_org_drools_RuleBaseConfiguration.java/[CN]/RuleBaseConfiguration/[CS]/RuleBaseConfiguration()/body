{
  this.immutable=false;
  setMaintainTms(Boolean.valueOf(System.getProperty("drools.maintainTms","true")).booleanValue());
  setRemoveIdentities(Boolean.valueOf(System.getProperty("drools.removeIdentities","false")).booleanValue());
  setAlphaMemory(Boolean.valueOf(System.getProperty("drools.alphaMemory","false")).booleanValue());
  setShareAlphaNodes(Boolean.valueOf(System.getProperty("drools.shareAlphaNodes","true")).booleanValue());
  setShareBetaNodes(Boolean.valueOf(System.getProperty("drools.shareBetaNodes","true")).booleanValue());
  setAlphaNodeHashingThreshold(Integer.parseInt(System.getProperty("drools.alphaNodeHashingThreshold","3")));
  setCompositeKeyDepth(Integer.parseInt(System.getProperty("drools.compositeKeyDepth","3")));
  setIndexLeftBetaMemory(Boolean.valueOf(System.getProperty("drools.indexLeftBetaMemory","true")).booleanValue());
  setIndexRightBetaMemory(Boolean.valueOf(System.getProperty("drools.indexRightBetaMemory","true")).booleanValue());
  setAssertBehaviour(AssertBehaviour.determineAssertBehaviour(System.getProperty("drools.assertBehaviour","IDENTITY")));
  setLogicalOverride(LogicalOverride.determineLogicalOverride(System.getProperty("drools.logicalOverride","DISCARD")));
  setExecutorService(RuleBaseConfiguration.determineExecutorService(System.getProperty("drools.executorService","org.drools.concurrent.DefaultExecutorService")));
}
