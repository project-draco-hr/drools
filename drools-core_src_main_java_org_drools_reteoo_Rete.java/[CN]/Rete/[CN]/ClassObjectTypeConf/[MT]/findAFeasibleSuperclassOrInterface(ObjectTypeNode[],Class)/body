{
  Class ret=clazz.getSuperclass();
  boolean isOk=ret != null && ret != Object.class;
  if (isOk) {
    for (int i=0; isOk && ret != null && i < nodes.length; i++) {
      isOk=nodes[i].isAssignableFrom(ret);
    }
  }
  if (!isOk) {
    Class[] interfaces=clazz.getInterfaces();
    boolean notFound=true;
    isOk=interfaces.length > 0;
    for (int i=0; notFound && i < interfaces.length; i++) {
      ret=interfaces[i];
      isOk=interfaces[i] != Serializable.class && interfaces[i] != Cloneable.class && interfaces[i] != Comparable.class;
      for (int j=0; isOk && j < nodes.length; j++) {
        isOk=nodes[j].isAssignableFrom(ret);
      }
      notFound=!isOk;
    }
    if (notFound) {
      ret=null;
    }
  }
  return ret;
}
