{
  this.cls=cls;
  this.rete=rete;
  if (cls == null) {
    return;
  }
  String pkgName=cls.getPackage().getName();
  if ("org.drools.reteoo".equals(pkgName) || "org.drools.base".equals(pkgName)) {
    this.shadowEnabled=false;
    return;
  }
  Class shadowClass=null;
  final String shadowProxyName=ShadowProxyFactory.getProxyClassNameForClass(this.cls);
  try {
    shadowClass=this.rete.getRuleBase().getMapBackedClassLoader().loadClass(shadowProxyName);
  }
 catch (  final ClassNotFoundException cnfe) {
    final byte[] proxyBytes=ShadowProxyFactory.getProxyBytes(cls);
    if (proxyBytes != null) {
      this.rete.getRuleBase().getMapBackedClassLoader().addClass(shadowProxyName,proxyBytes);
      try {
        shadowClass=this.rete.getRuleBase().getMapBackedClassLoader().loadClass(shadowProxyName);
      }
 catch (      ClassNotFoundException e) {
        throw new RuntimeException("Unable to find or generate the ShadowProxy implementation for '" + this.cls.getName() + "'");
      }
    }
  }
  if (shadowClass != null) {
    this.shadowClass=shadowClass;
    this.shadowEnabled=true;
    setInstantiator();
    setDelegateFieldObject();
  }
}
