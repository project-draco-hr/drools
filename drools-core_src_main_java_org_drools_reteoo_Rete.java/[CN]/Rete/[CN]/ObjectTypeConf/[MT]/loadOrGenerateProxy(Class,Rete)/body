{
  Class shadowClass=null;
  final String shadowProxyName=ShadowProxyFactory.getProxyClassNameForClass(clazz);
  try {
    shadowClass=rete.getRuleBase().getMapBackedClassLoader().loadClass(shadowProxyName);
  }
 catch (  final ClassNotFoundException cnfe) {
    final byte[] proxyBytes=ShadowProxyFactory.getProxyBytes(clazz);
    if (proxyBytes != null) {
      rete.getRuleBase().getMapBackedClassLoader().addClass(shadowProxyName,proxyBytes);
      try {
        shadowClass=rete.getRuleBase().getMapBackedClassLoader().loadClass(shadowProxyName);
      }
 catch (      ClassNotFoundException e) {
        throw new RuntimeException("Unable to find or generate the ShadowProxy implementation for '" + clazz + "'");
      }
    }
  }
  return shadowClass;
}
