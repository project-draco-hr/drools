{
  this.ruleBase=ruleBase;
  this.factTemplate=factTemplate;
  ObjectType objectType=new FactTemplateObjectType(factTemplate);
  this.concreteObjectTypeNode=(ObjectTypeNode)ruleBase.getRete().getObjectTypeNodes().get(objectType);
  if (this.concreteObjectTypeNode == null) {
    BuildContext context=new BuildContext(ruleBase,((ReteooRuleBase)ruleBase.getRete().getRuleBase()).getReteooBuilder().getIdGenerator());
    if (context.getRuleBase().getConfiguration().isSequential()) {
      context.setHasLeftMemory(false);
      context.setHasObjectTypeMemory(false);
      context.setHasTerminalNodeMemory(false);
    }
 else {
      context.setHasLeftMemory(true);
      context.setHasObjectTypeMemory(true);
      context.setHasTerminalNodeMemory(true);
    }
    this.concreteObjectTypeNode=PatternBuilder.attachObjectTypeNode(context,objectType);
  }
  this.cache=new ObjectTypeNode[]{this.concreteObjectTypeNode};
}
