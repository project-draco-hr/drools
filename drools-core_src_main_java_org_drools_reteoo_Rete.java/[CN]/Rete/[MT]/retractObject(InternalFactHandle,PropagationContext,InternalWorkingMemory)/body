{
  final ObjectHashMap memory=(ObjectHashMap)workingMemory.getNodeMemory(this);
  final Object object=handle.getObject();
  ObjectTypeNode[] cachedNodes;
  if (object instanceof ShadowProxy) {
    cachedNodes=(ObjectTypeNode[])memory.get(object.getClass().getSuperclass());
  }
 else {
    cachedNodes=(ObjectTypeNode[])memory.get(object.getClass());
  }
  if (cachedNodes == null) {
    return;
  }
  for (int i=0; i < cachedNodes.length; i++) {
    cachedNodes[i].retractObject(handle,context,workingMemory);
  }
}
