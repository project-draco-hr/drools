{
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase(RuleBase.RETEOO);
  ruleBase.addPackage(this.pkg);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  final DefaultAgendaEventListener listener=new DefaultAgendaEventListener(){
    private int counter=0;
    public void afterActivationFired(    AfterActivationFiredEvent event){
      this.counter++;
    }
    public String toString(){
      return "fired :  " + this.counter;
    }
  }
;
  final InputStream is=getClass().getResourceAsStream("/manners64.dat");
  final List list=getInputObjects(is);
  for (final Iterator it=list.iterator(); it.hasNext(); ) {
    final Object object=it.next();
    workingMemory.insert(object);
  }
  workingMemory.insert(new Count(1));
  final long start=System.currentTimeMillis();
  workingMemory.fireAllRules();
  System.err.println(System.currentTimeMillis() - start);
}
