{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("ruleflow.drl")));
  final Package pkg=builder.getPackage();
  final ProcessBuilder processBuilder=new ProcessBuilder(builder);
  processBuilder.addProcessFromFile(new InputStreamReader(getClass().getResourceAsStream("ruleflow.rf")));
  final RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase.addProcess(processBuilder.getProcesses()[0]);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  final List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  workingMemory.fireAllRules();
  assertEquals(0,list.size());
  final ProcessInstance processInstance=workingMemory.startProcess("0");
  assertEquals(ProcessInstance.STATE_ACTIVE,processInstance.getState());
  workingMemory.fireAllRules();
  assertEquals(4,list.size());
  assertEquals("Rule1",list.get(0));
  assertEquals("Rule3",list.get(1));
  assertEquals("Rule2",list.get(2));
  assertEquals("Rule4",list.get(3));
  assertEquals(ProcessInstance.STATE_COMPLETED,processInstance.getState());
}
