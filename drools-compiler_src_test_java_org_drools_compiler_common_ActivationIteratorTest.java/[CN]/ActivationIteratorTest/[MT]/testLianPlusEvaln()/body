{
  String str="package org.kie.test \n" + "\n" + "rule rule1 when\n"+ "    $s : String( this != 'xx' )\n"+ "    eval( 1 == 1 ) \n"+ "then\n"+ "end\n"+ "rule rule6 when\n"+ "     java.util.Map()\n"+ "then\n"+ "end\n"+ "\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  for (int i=0; i < 5; i++) {
    ksession.insert(new String("" + i));
  }
  ActivationIterator it=ActivationIterator.iterator(ksession);
  List list=new ArrayList();
  for (AgendaItem act=(AgendaItem)it.next(); act != null; act=(AgendaItem)it.next()) {
    list.add(act.getRule().getName() + ":" + act.getDeclarationValue("$s")+ ":"+ act.isQueued());
  }
  assertContains(new String[]{"rule1:0:true","rule1:1:true","rule1:2:true","rule1:3:true","rule1:4:true"},list);
  ksession.fireAllRules();
  it=ActivationIterator.iterator(ksession);
  list=new ArrayList();
  for (AgendaItem act=(AgendaItem)it.next(); act != null; act=(AgendaItem)it.next()) {
    list.add(act.getRule().getName() + ":" + act.getDeclarationValue("$s")+ ":"+ act.isQueued());
  }
  assertContains(new String[]{"rule1:0:false","rule1:1:false","rule1:2:false","rule1:3:false","rule1:4:false"},list);
}
