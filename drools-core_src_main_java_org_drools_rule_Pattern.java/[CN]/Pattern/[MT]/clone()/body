{
  final String identifier=(this.declaration != null) ? this.declaration.getIdentifier() : null;
  final Pattern clone=new Pattern(this.index,this.offset,this.objectType,identifier,this.declaration != null ? this.declaration.isInternalFact() : false);
  if (this.getSource() != null) {
    clone.setSource((PatternSource)this.getSource().clone());
  }
  for (final Iterator it=this.constraints.iterator(); it.hasNext(); ) {
    final Object constr=it.next();
    if (constr instanceof Declaration) {
      final Declaration decl=(Declaration)constr;
      clone.addDeclaration(decl.getIdentifier(),decl.getExtractor());
    }
 else {
      Constraint constraint=(Constraint)((Constraint)constr).clone();
      Declaration[] oldDecl=((Constraint)constr).getRequiredDeclarations();
      Declaration[] newDecl=constraint.getRequiredDeclarations();
      for (int i=0; i < newDecl.length; i++) {
        if (newDecl[i].getPattern() == this) {
          newDecl[i].setPattern(clone);
          constraint.replaceDeclaration(oldDecl[i],newDecl[i]);
        }
      }
      clone.addConstraint(constraint);
    }
  }
  return clone;
}
