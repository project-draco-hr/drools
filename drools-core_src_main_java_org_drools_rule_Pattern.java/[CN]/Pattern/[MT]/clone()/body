{
  final String identifier=(this.declaration != null) ? this.declaration.getIdentifier() : null;
  final Pattern clone=new Pattern(this.index,this.offset,this.objectType,identifier,this.declaration != null && this.declaration.isInternalFact());
  clone.setListenedProperties(getListenedProperties());
  if (this.getSource() != null) {
    clone.setSource((PatternSource)this.getSource().clone());
    if (source instanceof From) {
      ((From)clone.getSource()).setResultPattern(this);
    }
  }
  if (this.declarations != null) {
    for (    Declaration decl : this.declarations.values()) {
      Declaration addedDeclaration=clone.addDeclaration(decl.getIdentifier());
      addedDeclaration.setReadAccessor(decl.getExtractor());
      addedDeclaration.setBindingName(decl.getBindingName());
    }
  }
  for (  Constraint constr : this.constraints) {
    Constraint constraint=(Constraint)((Constraint)constr).clone();
    Declaration[] oldDecl=constr.getRequiredDeclarations();
    Declaration[] newDecl=constraint.getRequiredDeclarations();
    for (int i=0; i < newDecl.length; i++) {
      if (newDecl[i].getPattern() == this) {
        newDecl[i].setPattern(clone);
        constraint.replaceDeclaration(oldDecl[i],newDecl[i]);
      }
    }
    clone.addConstraint(constraint);
  }
  if (behaviors != null) {
    for (    Behavior behavior : this.behaviors) {
      clone.addBehavior(behavior);
    }
  }
  return clone;
}
