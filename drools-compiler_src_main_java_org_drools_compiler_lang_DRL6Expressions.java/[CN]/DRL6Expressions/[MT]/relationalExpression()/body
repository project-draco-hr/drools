{
  relationalExpression_stack.push(new relationalExpression_scope());
  BaseDescr result=null;
  ParserRuleReturnScope left=null;
  BaseDescr right=null;
  relationalExpression_stack.peek().lsd=null;
  try {
{
      pushFollow(FOLLOW_shiftExpression_in_relationalExpression1750);
      left=shiftExpression();
      state._fsp--;
      if (state.failed)       return result;
      if (state.backtracking == 0) {
        if (buildDescr) {
          result=((left != null ? ((DRL6Expressions.shiftExpression_return)left).result : null) != null && ((!((left != null ? ((DRL6Expressions.shiftExpression_return)left).result : null) instanceof AtomicExprDescr)) || ((left != null ? input.toString(left.start,left.stop) : null).equals(((AtomicExprDescr)(left != null ? ((DRL6Expressions.shiftExpression_return)left).result : null)).getExpression())))) ? (left != null ? ((DRL6Expressions.shiftExpression_return)left).result : null) : new AtomicExprDescr((left != null ? input.toString(left.start,left.stop) : null));
          relationalExpression_stack.peek().lsd=result;
        }
      }
      loop37:       while (true) {
        int alt37=2;
        int LA37_0=input.LA(1);
        if ((LA37_0 == ID)) {
          int LA37_2=input.LA(2);
          if ((((((helper.validateIdentifierKey(DroolsSoftKeywords.NOT))) || ((helper.isPluggableEvaluator(false)))) && synpred8_DRL6Expressions()))) {
            alt37=1;
          }
        }
 else         if ((LA37_0 == EQUALS)) {
          int LA37_3=input.LA(2);
          if ((synpred8_DRL6Expressions())) {
            alt37=1;
          }
        }
 else         if ((LA37_0 == NOT_EQUALS)) {
          int LA37_4=input.LA(2);
          if ((synpred8_DRL6Expressions())) {
            alt37=1;
          }
        }
 else         if ((LA37_0 == LESS)) {
          int LA37_20=input.LA(2);
          if ((synpred8_DRL6Expressions())) {
            alt37=1;
          }
        }
 else         if ((LA37_0 == GREATER)) {
          int LA37_21=input.LA(2);
          if ((synpred8_DRL6Expressions())) {
            alt37=1;
          }
        }
 else         if ((LA37_0 == TILDE) && (synpred8_DRL6Expressions())) {
          alt37=1;
        }
 else         if ((LA37_0 == LESS_EQUALS) && (synpred8_DRL6Expressions())) {
          alt37=1;
        }
 else         if ((LA37_0 == GREATER_EQUALS) && (synpred8_DRL6Expressions())) {
          alt37=1;
        }
 else         if ((LA37_0 == LEFT_PAREN) && (synpred8_DRL6Expressions())) {
          alt37=1;
        }
switch (alt37) {
case 1:
{
            pushFollow(FOLLOW_orRestriction_in_relationalExpression1775);
            right=orRestriction();
            state._fsp--;
            if (state.failed)             return result;
            if (state.backtracking == 0) {
              if (buildDescr) {
                result=right;
                relationalExpression_stack.peek().lsd=result;
              }
            }
          }
        break;
default :
      break loop37;
  }
}
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
relationalExpression_stack.pop();
}
return result;
}
