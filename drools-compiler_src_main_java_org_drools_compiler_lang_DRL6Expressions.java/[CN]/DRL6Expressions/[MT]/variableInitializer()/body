{
  try {
    int alt84=2;
    int LA84_0=input.LA(1);
    if ((LA84_0 == LEFT_CURLY)) {
      alt84=1;
    }
 else     if ((LA84_0 == BOOL || (LA84_0 >= DECIMAL && LA84_0 <= DIV) || LA84_0 == FLOAT || LA84_0 == HEX || (LA84_0 >= ID && LA84_0 <= INCR) || (LA84_0 >= LEFT_PAREN && LA84_0 <= LESS) || LA84_0 == MINUS || LA84_0 == NEGATION || LA84_0 == NULL || LA84_0 == PLUS || (LA84_0 >= STAR && LA84_0 <= TIME_INTERVAL))) {
      alt84=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",84,0,input);
      throw nvae;
    }
switch (alt84) {
case 1:
{
        pushFollow(FOLLOW_arrayInitializer_in_variableInitializer4000);
        arrayInitializer();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_expression_in_variableInitializer4014);
    expression();
    state._fsp--;
    if (state.failed)     return;
  }
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
