{
  BaseDescr result=null;
  Token i1=null;
  Token i2=null;
  Token DOT12=null;
  Token LEFT_PAREN13=null;
  Token COMMA14=null;
  Token RIGHT_PAREN15=null;
  Token SHARP16=null;
  Token HASH17=null;
  Token NULL_SAFE_DOT18=null;
  BaseDescr expr=null;
  DRL6Expressions.literal_return literal11=null;
  try {
    int alt59=9;
    alt59=dfa59.predict(input);
switch (alt59) {
case 1:
{
        pushFollow(FOLLOW_parExpression_in_primary2695);
        expr=parExpression();
        state._fsp--;
        if (state.failed)         return result;
        if (state.backtracking == 0) {
          if (buildDescr) {
            result=expr;
          }
        }
      }
    break;
case 2:
{
    pushFollow(FOLLOW_nonWildcardTypeArguments_in_primary2712);
    nonWildcardTypeArguments();
    state._fsp--;
    if (state.failed)     return result;
    int alt54=2;
    int LA54_0=input.LA(1);
    if ((LA54_0 == ID)) {
      int LA54_1=input.LA(2);
      if ((!((((helper.validateIdentifierKey(DroolsSoftKeywords.THIS))))))) {
        alt54=1;
      }
 else       if ((((helper.validateIdentifierKey(DroolsSoftKeywords.THIS))))) {
        alt54=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return result;
        }
        NoViableAltException nvae=new NoViableAltException("",54,1,input);
        throw nvae;
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return result;
      }
      NoViableAltException nvae=new NoViableAltException("",54,0,input);
      throw nvae;
    }
switch (alt54) {
case 1:
{
        pushFollow(FOLLOW_explicitGenericInvocationSuffix_in_primary2715);
        explicitGenericInvocationSuffix();
        state._fsp--;
        if (state.failed)         return result;
      }
    break;
case 2:
{
    pushFollow(FOLLOW_this_key_in_primary2719);
    this_key();
    state._fsp--;
    if (state.failed)     return result;
    pushFollow(FOLLOW_arguments_in_primary2721);
    arguments();
    state._fsp--;
    if (state.failed)     return result;
  }
break;
}
}
break;
case 3:
{
pushFollow(FOLLOW_literal_in_primary2737);
literal11=literal();
state._fsp--;
if (state.failed) return result;
if (state.backtracking == 0) {
if (buildDescr) {
result=new AtomicExprDescr((literal11 != null ? input.toString(literal11.start,literal11.stop) : null),true);
}
}
}
break;
case 4:
{
pushFollow(FOLLOW_super_key_in_primary2759);
super_key();
state._fsp--;
if (state.failed) return result;
pushFollow(FOLLOW_superSuffix_in_primary2761);
superSuffix();
state._fsp--;
if (state.failed) return result;
}
break;
case 5:
{
pushFollow(FOLLOW_new_key_in_primary2776);
new_key();
state._fsp--;
if (state.failed) return result;
pushFollow(FOLLOW_creator_in_primary2778);
creator();
state._fsp--;
if (state.failed) return result;
}
break;
case 6:
{
pushFollow(FOLLOW_primitiveType_in_primary2793);
primitiveType();
state._fsp--;
if (state.failed) return result;
loop55: do {
int alt55=2;
int LA55_0=input.LA(1);
if ((LA55_0 == LEFT_SQUARE)) {
alt55=1;
}
switch (alt55) {
case 1:
{
match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_primary2796);
if (state.failed) return result;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_primary2798);
if (state.failed) return result;
}
break;
default :
break loop55;
}
}
 while (true);
match(input,DOT,FOLLOW_DOT_in_primary2802);
if (state.failed) return result;
pushFollow(FOLLOW_class_key_in_primary2804);
class_key();
state._fsp--;
if (state.failed) return result;
}
break;
case 7:
{
pushFollow(FOLLOW_inlineMapExpression_in_primary2824);
inlineMapExpression();
state._fsp--;
if (state.failed) return result;
}
break;
case 8:
{
pushFollow(FOLLOW_inlineListExpression_in_primary2839);
inlineListExpression();
state._fsp--;
if (state.failed) return result;
}
break;
case 9:
{
i1=(Token)match(input,ID,FOLLOW_ID_in_primary2855);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(i1,DroolsEditorType.IDENTIFIER);
}
loop57: do {
int alt57=6;
int LA57_0=input.LA(1);
if ((LA57_0 == DOT)) {
int LA57_2=input.LA(2);
if ((LA57_2 == ID)) {
int LA57_6=input.LA(3);
if ((synpred28_DRL6Expressions())) {
alt57=1;
}
}
 else if ((LA57_2 == LEFT_PAREN) && (synpred29_DRL6Expressions())) {
alt57=2;
}
}
 else if ((LA57_0 == SHARP) && (synpred30_DRL6Expressions())) {
alt57=3;
}
 else if ((LA57_0 == HASH) && (synpred31_DRL6Expressions())) {
alt57=4;
}
 else if ((LA57_0 == NULL_SAFE_DOT) && (synpred32_DRL6Expressions())) {
alt57=5;
}
switch (alt57) {
case 1:
{
{
DOT12=(Token)match(input,DOT,FOLLOW_DOT_in_primary2889);
if (state.failed) return result;
i2=(Token)match(input,ID,FOLLOW_ID_in_primary2893);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(DOT12,DroolsEditorType.SYMBOL);
helper.emit(i2,DroolsEditorType.IDENTIFIER);
}
}
}
break;
case 2:
{
{
match(input,DOT,FOLLOW_DOT_in_primary2933);
if (state.failed) return result;
LEFT_PAREN13=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_primary2935);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(DOT12,DroolsEditorType.SYMBOL);
helper.emit(LEFT_PAREN13,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_primary2975);
expression();
state._fsp--;
if (state.failed) return result;
loop56: do {
int alt56=2;
int LA56_0=input.LA(1);
if ((LA56_0 == COMMA)) {
alt56=1;
}
switch (alt56) {
case 1:
{
COMMA14=(Token)match(input,COMMA,FOLLOW_COMMA_in_primary2978);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(COMMA14,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_primary2982);
expression();
state._fsp--;
if (state.failed) return result;
}
break;
default :
break loop56;
}
}
 while (true);
RIGHT_PAREN15=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_primary3022);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(RIGHT_PAREN15,DroolsEditorType.SYMBOL);
}
}
}
break;
case 3:
{
{
SHARP16=(Token)match(input,SHARP,FOLLOW_SHARP_in_primary3074);
if (state.failed) return result;
i2=(Token)match(input,ID,FOLLOW_ID_in_primary3078);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(SHARP16,DroolsEditorType.SYMBOL);
helper.emit(i2,DroolsEditorType.IDENTIFIER);
}
}
}
break;
case 4:
{
{
HASH17=(Token)match(input,HASH,FOLLOW_HASH_in_primary3118);
if (state.failed) return result;
i2=(Token)match(input,ID,FOLLOW_ID_in_primary3122);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(HASH17,DroolsEditorType.SYMBOL);
helper.emit(i2,DroolsEditorType.IDENTIFIER);
}
}
}
break;
case 5:
{
{
NULL_SAFE_DOT18=(Token)match(input,NULL_SAFE_DOT,FOLLOW_NULL_SAFE_DOT_in_primary3162);
if (state.failed) return result;
i2=(Token)match(input,ID,FOLLOW_ID_in_primary3166);
if (state.failed) return result;
if (state.backtracking == 0) {
helper.emit(NULL_SAFE_DOT18,DroolsEditorType.SYMBOL);
helper.emit(i2,DroolsEditorType.IDENTIFIER);
}
}
}
break;
default :
break loop57;
}
}
 while (true);
int alt58=2;
alt58=dfa58.predict(input);
switch (alt58) {
case 1:
{
pushFollow(FOLLOW_identifierSuffix_in_primary3188);
identifierSuffix();
state._fsp--;
if (state.failed) return result;
}
break;
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return result;
}
