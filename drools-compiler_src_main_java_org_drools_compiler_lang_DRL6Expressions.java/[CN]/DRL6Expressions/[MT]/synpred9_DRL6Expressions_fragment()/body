{
  int alt95=2;
  int LA95_0=input.LA(1);
  if ((LA95_0 == EQUALS || (LA95_0 >= GREATER && LA95_0 <= GREATER_EQUALS) || (LA95_0 >= LESS && LA95_0 <= LESS_EQUALS) || LA95_0 == NOT_EQUALS || LA95_0 == TILDE)) {
    alt95=1;
  }
 else   if ((LA95_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.NOT))) || ((helper.isPluggableEvaluator(false)))))) {
    alt95=1;
  }
 else   if ((LA95_0 == LEFT_PAREN)) {
    alt95=2;
  }
 else {
    if (state.backtracking > 0) {
      state.failed=true;
      return;
    }
    NoViableAltException nvae=new NoViableAltException("",95,0,input);
    throw nvae;
  }
switch (alt95) {
case 1:
{
      pushFollow(FOLLOW_operator_in_synpred9_DRL6Expressions1846);
      operator();
      state._fsp--;
      if (state.failed)       return;
    }
  break;
case 2:
{
  match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_synpred9_DRL6Expressions1850);
  if (state.failed)   return;
}
break;
}
}
