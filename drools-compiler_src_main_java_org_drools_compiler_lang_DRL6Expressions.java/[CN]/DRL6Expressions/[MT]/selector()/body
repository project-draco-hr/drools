{
  Token DOT24=null;
  Token DOT25=null;
  Token DOT26=null;
  Token ID27=null;
  Token LEFT_SQUARE28=null;
  Token RIGHT_SQUARE29=null;
  try {
    int alt82=4;
    int LA82_0=input.LA(1);
    if ((LA82_0 == DOT)) {
      int LA82_1=input.LA(2);
      if ((synpred37_DRL6Expressions())) {
        alt82=1;
      }
 else       if ((synpred38_DRL6Expressions())) {
        alt82=2;
      }
 else       if ((synpred39_DRL6Expressions())) {
        alt82=3;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",82,1,input);
        throw nvae;
      }
    }
 else     if ((LA82_0 == LEFT_SQUARE) && (synpred41_DRL6Expressions())) {
      alt82=4;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",82,0,input);
      throw nvae;
    }
switch (alt82) {
case 1:
{
        DOT24=(Token)match(input,DOT,FOLLOW_DOT_in_selector3913);
        if (state.failed)         return;
        if (state.backtracking == 0) {
          helper.emit(DOT24,DroolsEditorType.SYMBOL);
        }
        pushFollow(FOLLOW_super_key_in_selector3917);
        super_key();
        state._fsp--;
        if (state.failed)         return;
        pushFollow(FOLLOW_superSuffix_in_selector3919);
        superSuffix();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
case 2:
{
    DOT25=(Token)match(input,DOT,FOLLOW_DOT_in_selector3935);
    if (state.failed)     return;
    if (state.backtracking == 0) {
      helper.emit(DOT25,DroolsEditorType.SYMBOL);
    }
    pushFollow(FOLLOW_new_key_in_selector3939);
    new_key();
    state._fsp--;
    if (state.failed)     return;
    int alt80=2;
    int LA80_0=input.LA(1);
    if ((LA80_0 == LESS)) {
      alt80=1;
    }
switch (alt80) {
case 1:
{
        pushFollow(FOLLOW_nonWildcardTypeArguments_in_selector3942);
        nonWildcardTypeArguments();
        state._fsp--;
        if (state.failed)         return;
      }
    break;
}
pushFollow(FOLLOW_innerCreator_in_selector3946);
innerCreator();
state._fsp--;
if (state.failed) return;
}
break;
case 3:
{
DOT26=(Token)match(input,DOT,FOLLOW_DOT_in_selector3962);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT26,DroolsEditorType.SYMBOL);
}
ID27=(Token)match(input,ID,FOLLOW_ID_in_selector3984);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(ID27,DroolsEditorType.IDENTIFIER);
}
int alt81=2;
alt81=dfa81.predict(input);
switch (alt81) {
case 1:
{
pushFollow(FOLLOW_arguments_in_selector4013);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
break;
case 4:
{
LEFT_SQUARE28=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_selector4034);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE28,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_selector4061);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE29=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_selector4086);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE29,DroolsEditorType.SYMBOL);
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return;
}
