{
  Token LEFT_SQUARE15=null;
  Token RIGHT_SQUARE16=null;
  Token DOT17=null;
  Token LEFT_SQUARE18=null;
  Token RIGHT_SQUARE19=null;
  try {
    int alt73=3;
    int LA73_0=input.LA(1);
    if ((LA73_0 == LEFT_SQUARE)) {
      int LA73_1=input.LA(2);
      if ((LA73_1 == RIGHT_SQUARE) && (synpred37_DRL6Expressions())) {
        alt73=1;
      }
 else       if ((LA73_1 == BOOL || (LA73_1 >= DECIMAL && LA73_1 <= DIV) || LA73_1 == FLOAT || LA73_1 == HEX || (LA73_1 >= ID && LA73_1 <= INCR) || (LA73_1 >= LEFT_PAREN && LA73_1 <= LESS) || LA73_1 == MINUS || LA73_1 == NEGATION || LA73_1 == NULL || LA73_1 == PLUS || (LA73_1 >= STAR && LA73_1 <= TIME_INTERVAL))) {
        alt73=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        int nvaeMark=input.mark();
        try {
          input.consume();
          NoViableAltException nvae=new NoViableAltException("",73,1,input);
          throw nvae;
        }
  finally {
          input.rewind(nvaeMark);
        }
      }
    }
 else     if ((LA73_0 == LEFT_PAREN)) {
      alt73=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",73,0,input);
      throw nvae;
    }
switch (alt73) {
case 1:
{
        int cnt71=0;
        loop71:         while (true) {
          int alt71=2;
          int LA71_0=input.LA(1);
          if ((LA71_0 == LEFT_SQUARE)) {
            alt71=1;
          }
switch (alt71) {
case 1:
{
              LEFT_SQUARE15=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix3602);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(LEFT_SQUARE15,DroolsEditorType.SYMBOL);
              }
              RIGHT_SQUARE16=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix3643);
              if (state.failed)               return;
              if (state.backtracking == 0) {
                helper.emit(RIGHT_SQUARE16,DroolsEditorType.SYMBOL);
              }
            }
          break;
default :
        if (cnt71 >= 1)         break loop71;
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
    EarlyExitException eee=new EarlyExitException(71,input);
  throw eee;
}
cnt71++;
}
DOT17=(Token)match(input,DOT,FOLLOW_DOT_in_identifierSuffix3687);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(DOT17,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_class_key_in_identifierSuffix3691);
class_key();
state._fsp--;
if (state.failed) return;
}
break;
case 2:
{
int cnt72=0;
loop72: while (true) {
int alt72=2;
int LA72_0=input.LA(1);
if ((LA72_0 == LEFT_SQUARE)) {
int LA72_36=input.LA(2);
if ((synpred38_DRL6Expressions())) {
alt72=1;
}
}
switch (alt72) {
case 1:
{
LEFT_SQUARE18=(Token)match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_identifierSuffix3706);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(LEFT_SQUARE18,DroolsEditorType.SYMBOL);
}
pushFollow(FOLLOW_expression_in_identifierSuffix3736);
expression();
state._fsp--;
if (state.failed) return;
RIGHT_SQUARE19=(Token)match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_identifierSuffix3764);
if (state.failed) return;
if (state.backtracking == 0) {
helper.emit(RIGHT_SQUARE19,DroolsEditorType.SYMBOL);
}
}
break;
default :
if (cnt72 >= 1) break loop72;
if (state.backtracking > 0) {
state.failed=true;
return;
}
EarlyExitException eee=new EarlyExitException(72,input);
throw eee;
}
cnt72++;
}
}
break;
case 3:
{
pushFollow(FOLLOW_arguments_in_identifierSuffix3780);
arguments();
state._fsp--;
if (state.failed) return;
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
