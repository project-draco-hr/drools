{
  try {
{
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3670);
      if (state.failed)       return;
      int alt74=2;
      int LA74_0=input.LA(1);
      if ((LA74_0 == RIGHT_SQUARE)) {
        alt74=1;
      }
 else       if ((LA74_0 == BOOL || (LA74_0 >= DECIMAL && LA74_0 <= DECR) || LA74_0 == FLOAT || LA74_0 == HEX || (LA74_0 >= ID && LA74_0 <= INCR) || (LA74_0 >= LEFT_PAREN && LA74_0 <= LESS) || LA74_0 == MINUS || LA74_0 == NEGATION || LA74_0 == NULL || LA74_0 == PLUS || (LA74_0 >= STAR && LA74_0 <= TIME_INTERVAL))) {
        alt74=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",74,0,input);
        throw nvae;
      }
switch (alt74) {
case 1:
{
          match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3680);
          if (state.failed)           return;
          loop71:           while (true) {
            int alt71=2;
            int LA71_0=input.LA(1);
            if ((LA71_0 == LEFT_SQUARE)) {
              alt71=1;
            }
switch (alt71) {
case 1:
{
                match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3683);
                if (state.failed)                 return;
                match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3685);
                if (state.failed)                 return;
              }
            break;
default :
          break loop71;
      }
    }
    pushFollow(FOLLOW_arrayInitializer_in_arrayCreatorRest3689);
    arrayInitializer();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 2:
{
pushFollow(FOLLOW_expression_in_arrayCreatorRest3703);
expression();
state._fsp--;
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3705);
if (state.failed) return;
loop72: while (true) {
  int alt72=2;
  int LA72_0=input.LA(1);
  if ((LA72_0 == LEFT_SQUARE)) {
    int LA72_1=input.LA(2);
    if (((!helper.validateLT(2,"]")))) {
      alt72=1;
    }
  }
switch (alt72) {
case 1:
{
      if (!((!helper.validateLT(2,"]")))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        throw new FailedPredicateException(input,"arrayCreatorRest","!helper.validateLT(2,\"]\")");
      }
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3710);
      if (state.failed)       return;
      pushFollow(FOLLOW_expression_in_arrayCreatorRest3712);
      expression();
      state._fsp--;
      if (state.failed)       return;
      match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3714);
      if (state.failed)       return;
    }
  break;
default :
break loop72;
}
}
loop73: while (true) {
int alt73=2;
int LA73_0=input.LA(1);
if ((LA73_0 == LEFT_SQUARE)) {
int LA73_2=input.LA(2);
if ((LA73_2 == RIGHT_SQUARE) && (synpred36_DRL6Expressions())) {
alt73=1;
}
}
switch (alt73) {
case 1:
{
match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3726);
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3728);
if (state.failed) return;
}
break;
default :
break loop73;
}
}
}
break;
}
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
