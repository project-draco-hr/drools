{
  try {
{
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3972);
      if (state.failed)       return;
      int alt84=2;
      int LA84_0=input.LA(1);
      if ((LA84_0 == RIGHT_SQUARE)) {
        alt84=1;
      }
 else       if ((LA84_0 == BOOL || (LA84_0 >= DECIMAL && LA84_0 <= DIV) || LA84_0 == DOT || LA84_0 == FLOAT || LA84_0 == HEX || (LA84_0 >= ID && LA84_0 <= INCR) || (LA84_0 >= LEFT_PAREN && LA84_0 <= LESS) || LA84_0 == MINUS || LA84_0 == NEGATION || LA84_0 == NULL || LA84_0 == PLUS || (LA84_0 >= STAR && LA84_0 <= TIME_INTERVAL))) {
        alt84=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",84,0,input);
        throw nvae;
      }
switch (alt84) {
case 1:
{
          match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3982);
          if (state.failed)           return;
          loop81:           while (true) {
            int alt81=2;
            int LA81_0=input.LA(1);
            if ((LA81_0 == LEFT_SQUARE)) {
              alt81=1;
            }
switch (alt81) {
case 1:
{
                match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3985);
                if (state.failed)                 return;
                match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3987);
                if (state.failed)                 return;
              }
            break;
default :
          break loop81;
      }
    }
    pushFollow(FOLLOW_arrayInitializer_in_arrayCreatorRest3991);
    arrayInitializer();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 2:
{
pushFollow(FOLLOW_expression_in_arrayCreatorRest4005);
expression();
state._fsp--;
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest4007);
if (state.failed) return;
loop82: while (true) {
  int alt82=2;
  int LA82_0=input.LA(1);
  if ((LA82_0 == LEFT_SQUARE)) {
    int LA82_1=input.LA(2);
    if (((!helper.validateLT(2,"]")))) {
      alt82=1;
    }
  }
switch (alt82) {
case 1:
{
      if (!((!helper.validateLT(2,"]")))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        throw new FailedPredicateException(input,"arrayCreatorRest","!helper.validateLT(2,\"]\")");
      }
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest4012);
      if (state.failed)       return;
      pushFollow(FOLLOW_expression_in_arrayCreatorRest4014);
      expression();
      state._fsp--;
      if (state.failed)       return;
      match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest4016);
      if (state.failed)       return;
    }
  break;
default :
break loop82;
}
}
loop83: while (true) {
int alt83=2;
int LA83_0=input.LA(1);
if ((LA83_0 == LEFT_SQUARE)) {
int LA83_2=input.LA(2);
if ((LA83_2 == RIGHT_SQUARE) && (synpred41_DRL6Expressions())) {
alt83=1;
}
}
switch (alt83) {
case 1:
{
match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest4028);
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest4030);
if (state.failed) return;
}
break;
default :
break loop83;
}
}
}
break;
}
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
