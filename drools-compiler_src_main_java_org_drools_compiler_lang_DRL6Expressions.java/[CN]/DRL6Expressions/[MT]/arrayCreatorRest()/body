{
  try {
{
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3656);
      if (state.failed)       return;
      int alt76=2;
      int LA76_0=input.LA(1);
      if ((LA76_0 == RIGHT_SQUARE)) {
        alt76=1;
      }
 else       if ((LA76_0 == BOOL || (LA76_0 >= DECIMAL && LA76_0 <= DECR) || LA76_0 == FLOAT || LA76_0 == HEX || (LA76_0 >= ID && LA76_0 <= INCR) || (LA76_0 >= LEFT_PAREN && LA76_0 <= LESS) || LA76_0 == MINUS || LA76_0 == NEGATION || LA76_0 == NULL || LA76_0 == PLUS || (LA76_0 >= STAR && LA76_0 <= TIME_INTERVAL))) {
        alt76=2;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        NoViableAltException nvae=new NoViableAltException("",76,0,input);
        throw nvae;
      }
switch (alt76) {
case 1:
{
          match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3666);
          if (state.failed)           return;
          loop73:           while (true) {
            int alt73=2;
            int LA73_0=input.LA(1);
            if ((LA73_0 == LEFT_SQUARE)) {
              alt73=1;
            }
switch (alt73) {
case 1:
{
                match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3669);
                if (state.failed)                 return;
                match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3671);
                if (state.failed)                 return;
              }
            break;
default :
          break loop73;
      }
    }
    pushFollow(FOLLOW_arrayInitializer_in_arrayCreatorRest3675);
    arrayInitializer();
    state._fsp--;
    if (state.failed)     return;
  }
break;
case 2:
{
pushFollow(FOLLOW_expression_in_arrayCreatorRest3689);
expression();
state._fsp--;
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3691);
if (state.failed) return;
loop74: while (true) {
  int alt74=2;
  int LA74_0=input.LA(1);
  if ((LA74_0 == LEFT_SQUARE)) {
    int LA74_1=input.LA(2);
    if (((!helper.validateLT(2,"]")))) {
      alt74=1;
    }
  }
switch (alt74) {
case 1:
{
      if (!((!helper.validateLT(2,"]")))) {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        throw new FailedPredicateException(input,"arrayCreatorRest","!helper.validateLT(2,\"]\")");
      }
      match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3696);
      if (state.failed)       return;
      pushFollow(FOLLOW_expression_in_arrayCreatorRest3698);
      expression();
      state._fsp--;
      if (state.failed)       return;
      match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3700);
      if (state.failed)       return;
    }
  break;
default :
break loop74;
}
}
loop75: while (true) {
int alt75=2;
int LA75_0=input.LA(1);
if ((LA75_0 == LEFT_SQUARE)) {
int LA75_2=input.LA(2);
if ((LA75_2 == RIGHT_SQUARE) && (synpred35_DRL6Expressions())) {
alt75=1;
}
}
switch (alt75) {
case 1:
{
match(input,LEFT_SQUARE,FOLLOW_LEFT_SQUARE_in_arrayCreatorRest3712);
if (state.failed) return;
match(input,RIGHT_SQUARE,FOLLOW_RIGHT_SQUARE_in_arrayCreatorRest3714);
if (state.failed) return;
}
break;
default :
break loop75;
}
}
}
break;
}
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
