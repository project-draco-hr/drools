{
  Token LEFT_PAREN26=null;
  Token RIGHT_PAREN27=null;
  try {
{
      LEFT_PAREN26=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_arguments4256);
      if (state.failed)       return;
      if (state.backtracking == 0) {
        helper.emit(LEFT_PAREN26,DroolsEditorType.SYMBOL);
      }
      int alt88=2;
      int LA88_0=input.LA(1);
      if ((LA88_0 == BOOL || (LA88_0 >= DECIMAL && LA88_0 <= DECR) || LA88_0 == FLOAT || LA88_0 == HEX || (LA88_0 >= ID && LA88_0 <= INCR) || (LA88_0 >= LEFT_PAREN && LA88_0 <= LESS) || LA88_0 == MINUS || LA88_0 == NEGATION || LA88_0 == NULL || LA88_0 == PLUS || (LA88_0 >= STAR && LA88_0 <= TIME_INTERVAL))) {
        alt88=1;
      }
switch (alt88) {
case 1:
{
          pushFollow(FOLLOW_expressionList_in_arguments4268);
          expressionList();
          state._fsp--;
          if (state.failed)           return;
        }
      break;
  }
  RIGHT_PAREN27=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_arguments4279);
  if (state.failed)   return;
  if (state.backtracking == 0) {
    helper.emit(RIGHT_PAREN27,DroolsEditorType.SYMBOL);
  }
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
