{
  Token LEFT_PAREN26=null;
  Token RIGHT_PAREN27=null;
  try {
{
      LEFT_PAREN26=(Token)match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_arguments4373);
      if (state.failed)       return;
      if (state.backtracking == 0) {
        helper.emit(LEFT_PAREN26,DroolsEditorType.SYMBOL);
      }
      int alt92=2;
      int LA92_0=input.LA(1);
      if ((LA92_0 == BOOL || (LA92_0 >= DECIMAL && LA92_0 <= DIV) || LA92_0 == FLOAT || LA92_0 == HEX || (LA92_0 >= ID && LA92_0 <= INCR) || (LA92_0 >= LEFT_PAREN && LA92_0 <= LESS) || LA92_0 == MINUS || LA92_0 == NEGATION || LA92_0 == NULL || LA92_0 == PLUS || (LA92_0 >= STAR && LA92_0 <= TIME_INTERVAL))) {
        alt92=1;
      }
switch (alt92) {
case 1:
{
          pushFollow(FOLLOW_expressionList_in_arguments4385);
          expressionList();
          state._fsp--;
          if (state.failed)           return;
        }
      break;
  }
  RIGHT_PAREN27=(Token)match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_arguments4396);
  if (state.failed)   return;
  if (state.backtracking == 0) {
    helper.emit(RIGHT_PAREN27,DroolsEditorType.SYMBOL);
  }
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
}
