{
  List sorted=new ArrayList(this.vertices);
  Collections.sort(sorted,new Comparator(){
    public int compare(    Object o1,    Object o2){
      Vertex v1=(Vertex)o1;
      Vertex v2=(Vertex)o2;
      if (v1.outDegree() < v2.outDegree()) {
        return 1;
      }
      if (v1.outDegree() > v2.outDegree()) {
        return -1;
      }
      return 0;
    }
  }
);
  LinkedList optimized=new LinkedList();
  boolean front=false;
  for (Iterator vertexIter=sorted.iterator(); vertexIter.hasNext(); ) {
    Vertex vertex=(Vertex)vertexIter.next();
    if (front) {
      optimized.addFirst(vertex);
    }
 else {
      optimized.addLast(vertex);
    }
    front=!front;
  }
  this.vertices=optimized;
}
