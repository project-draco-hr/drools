{
  BetaRightMemory memory=null;
  BetaRightMemory innerMostMemory=null;
  FieldConstraint[] constraints=(binder != null) ? binder.getConstraints() : null;
  if ((constraints != null) && (config.getBooleanProperty(RuleBaseConfiguration.PROPERTY_INDEX_RIGHT_BETA_MEMORY))) {
    for (int i=0; i < constraints.length; i++) {
      if (constraints[i] instanceof BoundVariableConstraint) {
        BoundVariableConstraint bvc=(BoundVariableConstraint)constraints[i];
        BetaRightMemory innerMemory=null;
switch (bvc.getEvaluator().getType()) {
case Evaluator.BOOLEAN_TYPE:
          innerMemory=new BooleanConstrainedRightMemory(bvc.getFieldExtractor(),bvc.getRequiredDeclarations()[0],bvc.getEvaluator());
        break;
case Evaluator.OBJECT_TYPE:
case Evaluator.SHORT_TYPE:
case Evaluator.INTEGER_TYPE:
case Evaluator.DOUBLE_TYPE:
case Evaluator.FLOAT_TYPE:
case Evaluator.BYTE_TYPE:
      if (bvc.getEvaluator().getOperator() == Evaluator.EQUAL) {
        innerMemory=new ObjectEqualConstrRightMemory(bvc.getFieldExtractor(),bvc.getRequiredDeclarations()[0],bvc.getEvaluator());
      }
 else       if (bvc.getEvaluator().getOperator() == Evaluator.NOT_EQUAL) {
        innerMemory=new ObjectNotEqualConstrRightMemory(bvc.getFieldExtractor(),bvc.getRequiredDeclarations()[0],bvc.getEvaluator());
      }
    break;
}
if (innerMemory != null) {
  if (innerMostMemory != null) {
    try {
      innerMostMemory.setInnerMemory(innerMemory);
      innerMostMemory=innerMemory;
    }
 catch (    OperationNotSupportedException e) {
      throw new RuntimeException("BUG: Exception was not supposed to be raised",e);
    }
  }
 else {
    memory=innerMemory;
    innerMostMemory=memory;
  }
}
}
}
}
if (memory == null) {
memory=new DefaultRightMemory();
}
return memory;
}
