{
  And cloned=(And)and.clone();
  processTree(cloned);
  Or or=null;
  for (Iterator it=cloned.getChildren().iterator(); it.hasNext(); ) {
    Object object=it.next();
    if (object instanceof Or) {
      or=(Or)applyOrTransformation(cloned,(GroupElement)object);
      break;
    }
  }
  And[] ands=null;
  if (or == null) {
    ands=new And[]{cloned};
  }
 else {
    ands=new And[or.getChildren().size()];
    int i=0;
    for (Iterator it=or.getChildren().iterator(); it.hasNext(); ) {
      Object object=it.next();
      if (object.getClass() == And.class) {
        ands[i]=(And)object;
      }
 else {
        And newAnd=new And();
        newAnd.addChild(and);
        ands[i]=newAnd;
      }
      checkForAndRemoveDuplicates(ands[i]);
      i++;
    }
  }
  return ands;
}
