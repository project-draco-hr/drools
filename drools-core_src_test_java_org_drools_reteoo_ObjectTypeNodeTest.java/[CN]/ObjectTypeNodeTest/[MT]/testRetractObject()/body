{
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  final PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  final ReteooWorkingMemory workingMemory=new ReteooWorkingMemory(1,(ReteooRuleBase)ruleBase);
  final Rete source=new Rete((InternalRuleBase)ruleBase);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,new ClassObjectType(String.class),source,true,3);
  final MockObjectSink sink=new MockObjectSink();
  objectTypeNode.addObjectSink(sink);
  final Object string1="cheese";
  final DefaultFactHandle handle1=new DefaultFactHandle(1,string1);
  objectTypeNode.assertObject(handle1,context,workingMemory);
  final FactHashTable memory=(FactHashTable)workingMemory.getNodeMemory(objectTypeNode);
  assertEquals(1,memory.size());
  objectTypeNode.retractObject(handle1,context,workingMemory);
  assertEquals(0,memory.size());
  final List retracted=sink.getRetracted();
  assertLength(1,retracted);
  assertSame(handle1,((Object[])retracted.get(0))[0]);
}
