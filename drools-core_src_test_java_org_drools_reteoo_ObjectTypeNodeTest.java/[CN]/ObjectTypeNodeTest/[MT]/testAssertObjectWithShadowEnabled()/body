{
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  final ReteooWorkingMemory workingMemory=new ReteooWorkingMemory(1,ruleBase);
  final Rete source=ruleBase.getRete();
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,new ClassObjectType(Cheese.class),buildContext);
  final MockObjectSink sink=new MockObjectSink();
  objectTypeNode.addObjectSink(sink);
  source.addObjectSink(objectTypeNode);
  final Object cheese=new Cheese("muzzarela",5);
  final InternalFactHandle handle1=(InternalFactHandle)workingMemory.insert(cheese);
  final List asserted=sink.getAsserted();
  assertLength(1,asserted);
  assertTrue(((InternalFactHandle)((Object[])asserted.get(0))[0]).getObject() instanceof ShadowProxy);
  assertEquals(cheese,((InternalFactHandle)((Object[])asserted.get(0))[0]).getObject());
  final FactHashTable memory=(FactHashTable)workingMemory.getNodeMemory(objectTypeNode);
  assertEquals(1,memory.size());
  assertTrue(memory.contains(handle1));
}
