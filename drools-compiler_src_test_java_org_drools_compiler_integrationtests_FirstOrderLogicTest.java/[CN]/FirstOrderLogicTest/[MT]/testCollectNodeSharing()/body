{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_collectNodeSharing.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getSinglethreadRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  StatefulSession workingMemory=ruleBase.newStatefulSession();
  List results=new ArrayList();
  workingMemory.setGlobal("results",results);
  workingMemory=SerializationHelper.getSerialisedStatefulSession(workingMemory);
  results=(List)workingMemory.getGlobal("results");
  workingMemory.insert(new Cheese("stilton",10));
  workingMemory=SerializationHelper.getSerialisedStatefulSession(workingMemory);
  results=(List)workingMemory.getGlobal("results");
  workingMemory.insert(new Cheese("brie",15));
  workingMemory.fireAllRules();
  workingMemory=SerializationHelper.getSerialisedStatefulSession(workingMemory);
  results=(List)workingMemory.getGlobal("results");
  assertEquals(1,results.size());
  assertEquals(2,((List)results.get(0)).size());
}
