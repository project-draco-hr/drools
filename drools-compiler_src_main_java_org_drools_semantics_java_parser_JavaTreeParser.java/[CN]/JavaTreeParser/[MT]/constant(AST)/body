{
  AST constant_AST_in=(AST)_t;
  try {
    if (_t == null)     _t=ASTNULL;
switch (_t.getType()) {
case NUM_INT:
{
        AST tmp159_AST_in=(AST)_t;
        match(_t,NUM_INT);
        _t=_t.getNextSibling();
        break;
      }
case CHAR_LITERAL:
{
      AST tmp160_AST_in=(AST)_t;
      match(_t,CHAR_LITERAL);
      _t=_t.getNextSibling();
      break;
    }
case STRING_LITERAL:
{
    AST tmp161_AST_in=(AST)_t;
    match(_t,STRING_LITERAL);
    _t=_t.getNextSibling();
    break;
  }
case NUM_FLOAT:
{
  AST tmp162_AST_in=(AST)_t;
  match(_t,NUM_FLOAT);
  _t=_t.getNextSibling();
  break;
}
case NUM_DOUBLE:
{
AST tmp163_AST_in=(AST)_t;
match(_t,NUM_DOUBLE);
_t=_t.getNextSibling();
break;
}
case NUM_LONG:
{
AST tmp164_AST_in=(AST)_t;
match(_t,NUM_LONG);
_t=_t.getNextSibling();
break;
}
default :
{
throw new NoViableAltException(_t);
}
}
}
 catch (RecognitionException ex) {
reportError(ex);
if (_t != null) {
_t=_t.getNextSibling();
}
}
_retTree=_t;
}
