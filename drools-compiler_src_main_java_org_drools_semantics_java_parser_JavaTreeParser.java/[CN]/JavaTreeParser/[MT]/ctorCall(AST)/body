{
  AST ctorCall_AST_in=(AST)_t;
  try {
    if (_t == null)     _t=ASTNULL;
switch (_t.getType()) {
case CTOR_CALL:
{
        AST __t524=_t;
        AST tmp72_AST_in=(AST)_t;
        match(_t,CTOR_CALL);
        _t=_t.getFirstChild();
        elist(_t);
        _t=_retTree;
        _t=__t524;
        _t=_t.getNextSibling();
        break;
      }
case SUPER_CTOR_CALL:
{
      AST __t525=_t;
      AST tmp73_AST_in=(AST)_t;
      match(_t,SUPER_CTOR_CALL);
      _t=_t.getFirstChild();
{
        if (_t == null)         _t=ASTNULL;
switch (_t.getType()) {
case ELIST:
{
            elist(_t);
            _t=_retTree;
            break;
          }
case TYPE:
case TYPECAST:
case INDEX_OP:
case METHOD_CALL:
case IDENT:
case DOT:
case LITERAL_this:
case LITERAL_super:
case LITERAL_true:
case LITERAL_false:
case LITERAL_null:
case LITERAL_new:
case NUM_INT:
case CHAR_LITERAL:
case STRING_LITERAL:
case NUM_FLOAT:
case NUM_LONG:
case NUM_DOUBLE:
{
          primaryExpression(_t);
          _t=_retTree;
          elist(_t);
          _t=_retTree;
          break;
        }
default :
{
        throw new NoViableAltException(_t);
      }
  }
}
_t=__t525;
_t=_t.getNextSibling();
break;
}
default :
{
throw new NoViableAltException(_t);
}
}
}
 catch (RecognitionException ex) {
reportError(ex);
if (_t != null) {
_t=_t.getNextSibling();
}
}
_retTree=_t;
}
