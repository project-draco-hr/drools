{
  final LeapsWaltzTest waltz=new LeapsWaltzTest();
  waltz.setUp();
  final org.drools.leaps.LeapsRuleBase ruleBase=new org.drools.leaps.LeapsRuleBase();
  ruleBase.addPackage(waltz.pkg);
  final WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  final InputStream is=waltz.getClass().getResourceAsStream("/waltz12.dat");
  final List list=waltz.getInputObjects(is);
  for (final Iterator it=list.iterator(); it.hasNext(); ) {
    final Object object=it.next();
    workingMemory.assertObject(object);
  }
  final long start=System.currentTimeMillis();
  workingMemory.fireAllRules();
  System.err.println(System.currentTimeMillis() - start);
}
