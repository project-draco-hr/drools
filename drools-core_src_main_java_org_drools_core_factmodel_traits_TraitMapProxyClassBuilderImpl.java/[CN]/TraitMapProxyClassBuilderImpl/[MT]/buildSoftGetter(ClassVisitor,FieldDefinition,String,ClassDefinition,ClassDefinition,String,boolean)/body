{
  String fieldName=field.getName();
  String type=field.getTypeName();
  MethodVisitor mv=cw.visitMethod(protect ? ACC_PROTECTED : ACC_PUBLIC,getterName,"()" + BuildUtils.getTypeDescriptor(type),null,null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(proxy),"map",Type.getDescriptor(Map.class));
  mv.visitLdcInsn(field.resolveAlias());
  mv.visitMethodInsn(INVOKEINTERFACE,Type.getInternalName(Map.class),"get","(" + Type.getDescriptor(Object.class) + ")"+ Type.getDescriptor(Object.class));
  String actualType=BuildUtils.isPrimitive(type) ? BuildUtils.box(type) : type;
  mv.visitVarInsn(ASTORE,1);
  mv.visitVarInsn(ALOAD,1);
  Label l0=new Label();
  mv.visitJumpInsn(IFNULL,l0);
  mv.visitVarInsn(ALOAD,1);
  mv.visitTypeInsn(INSTANCEOF,BuildUtils.getInternalType(actualType));
  mv.visitJumpInsn(IFEQ,l0);
  mv.visitVarInsn(ALOAD,1);
  mv.visitTypeInsn(CHECKCAST,BuildUtils.getInternalType(actualType));
  if (BuildUtils.isPrimitive(type)) {
    TraitFactory.primitiveValue(mv,type);
    mv.visitInsn(BuildUtils.returnType(type));
    mv.visitLabel(l0);
    mv.visitInsn(BuildUtils.zero(type));
    mv.visitInsn(BuildUtils.returnType(type));
  }
 else {
    mv.visitInsn(ARETURN);
    mv.visitLabel(l0);
    mv.visitInsn(ACONST_NULL);
    mv.visitInsn(ARETURN);
  }
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
