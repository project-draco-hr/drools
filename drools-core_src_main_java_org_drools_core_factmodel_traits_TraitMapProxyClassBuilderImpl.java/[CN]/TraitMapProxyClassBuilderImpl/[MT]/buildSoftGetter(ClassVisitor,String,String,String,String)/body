{
  String getter=BuildUtils.getterName(fieldName,type);
  MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,getter,"()" + BuildUtils.getTypeDescriptor(type),null,null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(proxy),"map",Type.getDescriptor(Map.class));
  mv.visitLdcInsn(fieldName);
  mv.visitMethodInsn(INVOKEINTERFACE,Type.getInternalName(Map.class),"get","(" + Type.getDescriptor(Object.class) + ")"+ Type.getDescriptor(Object.class));
  if (BuildUtils.isPrimitive(type)) {
    mv.visitVarInsn(ASTORE,1);
    mv.visitVarInsn(ALOAD,1);
    Label l0=new Label();
    mv.visitJumpInsn(IFNULL,l0);
    mv.visitVarInsn(ALOAD,1);
    Label l1=new Label();
    mv.visitJumpInsn(GOTO,l1);
    mv.visitLabel(l0);
    mv.visitInsn(BuildUtils.zero(type));
    TraitFactory.valueOf(mv,type);
    mv.visitLabel(l1);
    TraitFactory.promote(mv,type);
    mv.visitInsn(BuildUtils.returnType(type));
    mv.visitMaxs(0,0);
  }
 else {
    mv.visitTypeInsn(CHECKCAST,BuildUtils.getInternalType(type));
    mv.visitInsn(ARETURN);
    mv.visitMaxs(0,0);
  }
  mv.visitEnd();
}
