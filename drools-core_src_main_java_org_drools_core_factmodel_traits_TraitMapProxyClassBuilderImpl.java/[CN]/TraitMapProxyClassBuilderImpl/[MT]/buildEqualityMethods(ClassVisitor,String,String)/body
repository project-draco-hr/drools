{
  String proxyType=BuildUtils.getInternalType(proxy);
  String coreType=BuildUtils.getTypeDescriptor(core);
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"equals","(" + Type.getDescriptor(Object.class) + ")Z",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    Label l0=new Label();
    mv.visitJumpInsn(IF_ACMPNE,l0);
    mv.visitInsn(ICONST_1);
    mv.visitInsn(IRETURN);
    mv.visitLabel(l0);
    mv.visitVarInsn(ALOAD,1);
    Label l1=new Label();
    mv.visitJumpInsn(IFNONNULL,l1);
    mv.visitInsn(ICONST_0);
    mv.visitInsn(IRETURN);
    mv.visitLabel(l1);
    mv.visitVarInsn(ALOAD,0);
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"getClass","()" + Type.getDescriptor(Class.class));
    mv.visitVarInsn(ALOAD,1);
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"getClass","()" + Type.getDescriptor(Class.class));
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"equals","(" + Type.getDescriptor(Object.class) + ")Z");
    Label l2=new Label();
    mv.visitJumpInsn(IFNE,l2);
    mv.visitInsn(ICONST_0);
    mv.visitInsn(IRETURN);
    mv.visitLabel(l2);
    mv.visitVarInsn(ALOAD,1);
    mv.visitTypeInsn(CHECKCAST,Type.getInternalName(proxyBaseClass));
    mv.visitVarInsn(ASTORE,2);
    mv.visitVarInsn(ALOAD,0);
    mv.visitMethodInsn(INVOKEVIRTUAL,proxyType,"getFields","()" + Type.getDescriptor(Map.class));
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(proxyBaseClass),"getFields","()" + Type.getDescriptor(Map.class));
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"equals","(" + Type.getDescriptor(Object.class) + ")Z");
    mv.visitInsn(IRETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"hashCode","()I",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,proxyType,"object",coreType);
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"hashCode","()I");
    mv.visitVarInsn(ISTORE,1);
    mv.visitIntInsn(BIPUSH,31);
    mv.visitVarInsn(ILOAD,1);
    mv.visitInsn(IMUL);
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,proxyType,"map",Type.getDescriptor(Map.class));
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(Object.class),"hashCode","()I");
    mv.visitInsn(IADD);
    mv.visitVarInsn(ISTORE,1);
    mv.visitLdcInsn(proxy);
    mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(String.class),"hashCode","()I");
    mv.visitVarInsn(ILOAD,1);
    mv.visitInsn(IMUL);
    mv.visitVarInsn(ISTORE,1);
    mv.visitVarInsn(ILOAD,1);
    mv.visitInsn(IRETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
