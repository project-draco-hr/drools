{
  boolean solved=true;
  for (int row=0; row < NUM_ROWS; row++) {
    for (int col=0; col < NUM_COLS; col++) {
      if (!isCellResolved(row,col)) {
        System.out.println("(" + row + ","+ col+ ") has not been resolved");
        solved=false;
      }
    }
  }
  if (solved) {
    try {
      RuleBase validatorRuleBase=DroolsUtil.getInstance().readRuleBase(SUDOKU_VALIDATOR_DRL);
      StatefulSession validatorStatefulSession=validatorRuleBase.newStatefulSession();
      List issues=new ArrayList();
      validatorStatefulSession.setGlobal("issues",issues);
      insertAllCellValues(validatorStatefulSession);
      validatorStatefulSession.fireAllRules();
      if (issues.isEmpty()) {
        System.out.println("Sucessfully Validated Solution");
      }
 else {
        solved=false;
        Iterator iter=issues.iterator();
        while (iter.hasNext()) {
          Object issue=iter.next();
          System.out.println(issue);
        }
      }
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      throw new RuntimeException();
    }
  }
  return solved;
}
