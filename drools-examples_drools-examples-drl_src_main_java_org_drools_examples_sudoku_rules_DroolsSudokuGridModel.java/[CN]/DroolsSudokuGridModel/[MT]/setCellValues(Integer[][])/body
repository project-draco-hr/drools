{
  long startTime=System.currentTimeMillis();
  if (solverRuleBase == null) {
    try {
      solverRuleBase=DroolsUtil.getInstance().readRuleBase(SUDOKU_SOLVER_DRL);
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      throw new RuntimeException("Error Reading RuleBase for Solver");
    }
  }
  if (solverStatefulSession != null) {
    solverStatefulSession.removeEventListener(workingMemoryListener);
  }
  solverStatefulSession=solverRuleBase.newStatefulSession();
  solverStatefulSession.addEventListener(workingMemoryListener);
  for (int row=0; row < cellValues.length; row++) {
    for (int col=0; col < cellValues[row].length; col++) {
      cellValuesByRowAndCol[row][col]=new HashSet<Integer>();
      if (cellValues[row][col] == null) {
        for (int value=1; value < 10; value++) {
          PossibleCellValue cellValue=new PossibleCellValue(value,row,col);
          addCellValue(cellValue);
          allCellValues.add(cellValue);
        }
      }
 else {
        ResolvedCellValue cellValue=new ResolvedCellValue(cellValues[row][col],row,col);
        addCellValue(cellValue);
      }
    }
  }
  insertAllCellValues(solverStatefulSession);
  System.out.println("Setting up working memory and inserting all cell value POJOs took " + (System.currentTimeMillis() - startTime) + "ms.");
}
