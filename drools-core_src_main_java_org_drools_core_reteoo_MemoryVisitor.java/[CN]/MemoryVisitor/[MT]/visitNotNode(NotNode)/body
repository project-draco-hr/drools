{
  logger.info(indent() + node);
  try {
    final BetaMemory memory=(BetaMemory)this.workingMemory.getNodeMemory(node);
    checkObjectHashTable(memory.getRightTupleMemory());
    checkLeftTupleMemory(memory.getLeftTupleMemory());
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
  this.indent++;
  try {
    final Field field=LeftTupleSource.class.getDeclaredField("sink");
    field.setAccessible(true);
    final LeftTupleSinkPropagator sink=(LeftTupleSinkPropagator)field.get(node);
    final LeftTupleSink[] sinks=sink.getSinks();
    for (    LeftTupleSink sink1 : sinks) {
      visit(sink1);
    }
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
  this.indent--;
}
