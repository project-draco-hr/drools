{
  FactPattern fp=new FactPattern("Smurf");
  fp.setBoundName("p1");
  SingleFieldConstraint sfc1=new SingleFieldConstraint();
  sfc1.setOperator("==");
  sfc1.setFactType("Smurf");
  sfc1.setFieldName("name");
  sfc1.setFieldType(DataType.TYPE_STRING);
  sfc1.setConstraintValueType(SingleFieldConstraint.TYPE_TEMPLATE);
  sfc1.setValue("$f1");
  SingleFieldConstraint sfc2=new SingleFieldConstraint();
  sfc2.setOperator("==");
  sfc2.setFactType("Smurf");
  sfc2.setFieldName("age");
  sfc2.setFieldType(DataType.TYPE_NUMERIC_INTEGER);
  sfc2.setConstraintValueType(SingleFieldConstraint.TYPE_TEMPLATE);
  sfc2.setValue("$f2");
  fp.addConstraint(sfc1);
  fp.addConstraint(sfc2);
  TemplateModel m1=new TemplateModel();
  m1.addLhsItem(fp);
  m1.name="r1";
  m1.addRow(new String[]{null,null});
  final String expected1="rule \"r1_0\"\n" + "  dialect \"mvel\"\n" + "  when\n"+ "  then\n"+ "end";
  checkMarshall(expected1,m1);
  TemplateModel m2=new TemplateModel();
  m2.addLhsItem(fp);
  m2.name="r2";
  m2.addRow(new String[]{"   ","35"});
  final String expected2="rule \"r2_0\"\n" + "  dialect \"mvel\"\n" + "  when\n"+ "    p1 : Smurf( age == 35 )\n"+ "  then\n"+ "end";
  checkMarshall(expected2,m2);
  TemplateModel m3=new TemplateModel();
  m3.addLhsItem(fp);
  m3.name="r3";
  m3.addRow(new String[]{"",null});
  final String expected3="rule \"r3_0\"\n" + "  dialect \"mvel\"\n" + "  when\n"+ "  then\n"+ "end";
  checkMarshall(expected3,m3);
  TemplateModel m4=new TemplateModel();
  m4.addLhsItem(fp);
  m4.name="r4";
  m4.addRow(new String[]{"","35"});
  final String expected4="rule \"r4_0\"\n" + "  dialect \"mvel\"\n" + "  when\n"+ "    p1 : Smurf( age == 35 )\n"+ "  then\n"+ "end";
  checkMarshall(expected4,m4);
}
