{
  RightInfix r1=new RightInfix("some method","f( ${1}, ${2})",2);
  RightInfix r2=new RightInfix("another method","method(${right})",1);
  LiteralNode lit1=new LiteralNode("arg1");
  SubstitutionNode lit2=new SubstitutionNode("arg2","ARG_2");
  r1.next=r2;
  r2.prev=r1;
  r2.next=lit1;
  lit1.prev=r2;
  lit1.next=lit2;
  lit2.prev=lit1;
  assertFalse(r1.isAllSatisfied(RightInfix.class));
  r1.processLeftToRight(RightInfix.class);
  assertFalse(r1.isAllSatisfied(RightInfix.class));
  r1.processLeftToRight(RightInfix.class);
  assertTrue(r1.isAllSatisfied(RightInfix.class));
  assertEquals(null,r1.next);
  List r1Args=r1.getArguments();
  assertEquals(2,r1Args.size());
  assertEquals(r2,r1Args.get(0));
  assertEquals(lit2,r1Args.get(1));
  List r2Args=r2.getArguments();
  assertEquals(1,r2Args.size());
  assertEquals(lit1,r2Args.get(0));
}
