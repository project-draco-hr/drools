{
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  Package pkg=new Package("org.drools.test");
  pkg.addProcess(getProcess());
  ruleBase.addPackage(pkg);
  StatefulSession session=ruleBase.newStatefulSession();
  session.getWorkItemManager().registerWorkItemHandler("MyWork",new WorkItemHandler(){
    public void executeWorkItem(    WorkItem workItem,    WorkItemManager manager){
      MemoryPersisterProcessTest.this.workItem=workItem;
    }
    public void abortWorkItem(    WorkItem workItem,    WorkItemManager manager){
    }
  }
);
  ProcessInstance processInstance=session.startProcess("org.drools.test.TestProcess");
  MemoryPersister pm=new MemoryPersister(new StatefulSessionSnapshotter(session));
  Transaction t=pm.getTransaction();
  t.start();
  session.getWorkItemManager().completeWorkItem(workItem.getId(),null);
  assertEquals(ProcessInstance.STATE_COMPLETED,processInstance.getState());
  t.rollback();
  processInstance=session.getProcessInstance(processInstance.getId());
  assertNotNull(processInstance);
  assertEquals(ProcessInstance.STATE_ACTIVE,processInstance.getState());
  session.getWorkItemManager().completeWorkItem(workItem.getId(),null);
  assertEquals(ProcessInstance.STATE_COMPLETED,processInstance.getState());
}
