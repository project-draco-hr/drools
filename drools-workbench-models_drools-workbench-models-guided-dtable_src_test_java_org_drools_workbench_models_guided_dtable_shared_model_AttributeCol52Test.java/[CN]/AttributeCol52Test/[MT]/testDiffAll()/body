{
  column1.setAttribute("attr1");
  column1.setReverseOrder(false);
  column1.setUseRowNumber(false);
  column1.setHeader("header1");
  column1.setHideColumn(false);
  column1.setDefaultValue(new DTCellValue52("default1"));
  column2.setAttribute("attr2");
  column2.setReverseOrder(true);
  column2.setUseRowNumber(true);
  column2.setHeader("header2");
  column2.setHideColumn(true);
  column2.setDefaultValue(new DTCellValue52("default2"));
  List<BaseColumnFieldDiff> diff=column1.diff(column2);
  assertNotNull(diff);
  assertEquals(6,diff.size());
  assertEquals(FIELD_HIDE_COLUMN,diff.get(0).getFieldName());
  assertEquals(false,diff.get(0).getOldValue());
  assertEquals(true,diff.get(0).getValue());
  assertEquals(FIELD_DEFAULT_VALUE,diff.get(1).getFieldName());
  assertEquals("default1",diff.get(1).getOldValue());
  assertEquals("default2",diff.get(1).getValue());
  assertEquals(FIELD_HEADER,diff.get(2).getFieldName());
  assertEquals("header1",diff.get(2).getOldValue());
  assertEquals("header2",diff.get(2).getValue());
  assertEquals(FIELD_ATTRIBUTE,diff.get(3).getFieldName());
  assertEquals("attr1",diff.get(3).getOldValue());
  assertEquals("attr2",diff.get(3).getValue());
  assertEquals(FIELD_REVERSE_ORDER,diff.get(4).getFieldName());
  assertEquals(false,diff.get(4).getOldValue());
  assertEquals(true,diff.get(4).getValue());
  assertEquals(FIELD_USE_ROW_NUMBER,diff.get(5).getFieldName());
  assertEquals(false,diff.get(5).getOldValue());
  assertEquals(true,diff.get(5).getValue());
}
