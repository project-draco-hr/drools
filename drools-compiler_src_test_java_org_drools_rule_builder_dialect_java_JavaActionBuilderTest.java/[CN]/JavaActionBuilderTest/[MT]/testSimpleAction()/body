{
  final Package pkg=new Package("pkg1");
  ActionDescr actionDescr=new ActionDescr();
  actionDescr.setText("list.add( \"hello world\" );");
  PackageBuilder pkgBuilder=new PackageBuilder(pkg);
  final PackageBuilderConfiguration conf=pkgBuilder.getPackageBuilderConfiguration();
  DialectCompiletimeRegistry dialectRegistry=pkgBuilder.getPackageRegistry(pkg.getName()).getDialectCompiletimeRegistry();
  JavaDialect javaDialect=(JavaDialect)dialectRegistry.getDialect("java");
  ProcessDescr processDescr=new ProcessDescr();
  processDescr.setClassName("Process1");
  processDescr.setName("Process1");
  WorkflowProcessImpl process=new WorkflowProcessImpl();
  process.setName("Process1");
  process.setPackageName("pkg1");
  ProcessBuildContext context=new ProcessBuildContext(conf,pkgBuilder.getPackage(),null,processDescr,dialectRegistry,javaDialect);
  context.init(conf,pkg,null,dialectRegistry,javaDialect,null);
  pkgBuilder.addPackageFromDrl(new StringReader("package pkg1;\nglobal java.util.List list;\n"));
  ActionNode actionNode=new ActionNode();
  DroolsAction action=new DroolsConsequenceAction("java",null);
  actionNode.setAction(action);
  javaDialect.getActionBuilder().build(context,action,actionDescr);
  javaDialect.addProcess(context);
  javaDialect.compileAll();
  assertEquals(0,javaDialect.getResults().size());
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkgBuilder.getPackage());
  final WorkingMemory wm=ruleBase.newStatefulSession();
  List list=new ArrayList();
  wm.setGlobal("list",list);
  KnowledgeHelper knowledgeHelper=new DefaultKnowledgeHelper();
  ((Action)actionNode.getAction().getMetaData("Action")).execute(knowledgeHelper,wm,null);
  assertEquals("hello world",list.get(0));
}
