{
  String[] fileNames=new String[]{"Consequence.drl","alwaysFalse/Patterns.drl","equivalence/Rules.drl","incoherence/Patterns.drl","incoherence/Restrictions.drl","incompatibility/Patterns.drl","incompatibility/Restrictions.drl","missingEquality/MissingEquality.drl","opposites/Patterns.drl","opposites/Restrictions.drl","opposites/Rules.drl","optimisation/PatternOrder.drl","optimisation/RestrictionOrder.drl","overlaps/Restrictions.drl","rangeChecks/Clean.drl","rangeChecks/Dates.drl","rangeChecks/Doubles.drl","rangeChecks/Integers.drl","rangeChecks/NumberPatterns.drl","rangeChecks/Variables.drl","redundancy/Consequence.drl","redundancy/Notes.drl","redundancy/Patterns.drl","redundancy/Possibilities.drl","redundancy/Restrictions.drl","redundancy/Rules.drl","redundancy/Warnings.drl","reports/RangeCheckReports.drl","subsumption/Possibilities.drl","subsumption/Restrictions.drl"};
  Collection<Package> packages=new ArrayList<Package>();
  for (int i=0; i < fileNames.length; i++) {
    try {
      InputStreamReader reader=new InputStreamReader(RuleLoader.class.getResourceAsStream(fileNames[i]));
      packages.add(loadPackage(reader));
      reader.close();
    }
 catch (    DroolsParserException e) {
      e.printStackTrace();
    }
catch (    NullPointerException e) {
      System.err.println("Error when opening file " + fileNames[i] + ".");
      e.printStackTrace();
    }
catch (    IOException e) {
      e.printStackTrace();
    }
  }
  return packages;
}
