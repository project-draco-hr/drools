{
  int NUM_FACTS=5;
  String ruleString="package org.drools.integrationtests;\n" + "import " + KBuilderBatchExecutionTest.class.getCanonicalName() + ";\n"+ "import DroolsTest.Foo;\n"+ "import DroolsTest.Bar;\n"+ "rule test\n"+ "when\n"+ "      Foo($p : id, id < "+ Integer.toString(NUM_FACTS)+ ")\n"+ "      Bar(id == $p)\n"+ "then\n"+ "   "+ KBuilderBatchExecutionTest.class.getSimpleName()+ ".incCounter();\n"+ "end\n";
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  ksession=createKnowledgeSession(kbase);
  List<Command<?>> commands=new ArrayList<Command<?>>();
  commands.add(new NewKnowledgeBuilderCommand());
  commands.add(new KnowledgeBuilderAddCommand(ResourceFactory.newByteArrayResource(ruleString.getBytes()),ResourceType.DRL,null));
  commands.add(new KnowledgeBuilderGetKnowledgePackagesCommand("pkgs"));
  Command<?> cmds=CommandFactory.newBatchExecution(commands);
  ExecutionResults result=(ExecutionResults)ksession.execute(cmds);
  assertNotNull(result);
  Object pkgsObject=result.getValue("pkgs");
  assertTrue(pkgsObject != null && pkgsObject instanceof Collection<?>);
  kbase.addKnowledgePackages(((Collection<KnowledgePackage>)pkgsObject));
  ksession.dispose();
  ksession=createKnowledgeSession(kbase);
  for (int i=0; i < NUM_FACTS; i++) {
    ksession.insert(new Foo(i));
    ksession.insert(new Bar(i));
  }
  ksession.fireAllRules();
  assertEquals(NUM_FACTS,counter);
}
