{
  final PackageDescr packageDescr=this.xmlPackageReader.getPackageDescr();
  final Configuration config=this.xmlPackageReader.endConfiguration();
  final Configuration[] imports=config.getChildren("import");
  for (int i=0, length=imports.length; i < length; i++) {
    final String importEntry=imports[i].getAttribute("name");
    if (importEntry == null || importEntry.trim().equals("")) {
      throw new SAXParseException("<import> cannot be blank",this.xmlPackageReader.getLocator());
    }
    packageDescr.addImport(new ImportDescr(importEntry));
  }
  final Configuration[] globals=config.getChildren("global");
  for (int i=0, length=globals.length; i < length; i++) {
    final String identifier=globals[i].getAttribute("identifier");
    if (identifier == null || identifier.trim().equals("")) {
      throw new SAXParseException("<global> must have an identifier",this.xmlPackageReader.getLocator());
    }
    final String type=globals[i].getAttribute("type");
    if (type == null || type.trim().equals("")) {
      throw new SAXParseException("<global> must have specify a type",this.xmlPackageReader.getLocator());
    }
    final GlobalDescr global=new GlobalDescr(identifier,type);
    packageDescr.addGlobal(global);
  }
  return null;
}
