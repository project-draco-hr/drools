{
switch (type) {
case BOOLEAN:
    if (!emptyValue) {
      setBooleanValue(false);
    }
  this.dataType=DataType.DataTypes.BOOLEAN;
break;
case DATE:
if (!emptyValue) {
setDateValue(new Date());
}
this.dataType=DataType.DataTypes.DATE;
break;
case NUMERIC:
if (!emptyValue) {
setNumericValue(new BigDecimal("0"));
}
this.dataType=DataType.DataTypes.NUMERIC;
break;
case NUMERIC_BIGDECIMAL:
if (!emptyValue) {
setNumericValue(new BigDecimal("0"));
}
this.dataType=DataType.DataTypes.NUMERIC_BIGDECIMAL;
break;
case NUMERIC_BIGINTEGER:
if (!emptyValue) {
setNumericValue(new BigInteger("0"));
}
this.dataType=DataType.DataTypes.NUMERIC_BIGINTEGER;
break;
case NUMERIC_BYTE:
if (!emptyValue) {
setNumericValue(new Byte("0"));
}
this.dataType=DataType.DataTypes.NUMERIC_BYTE;
break;
case NUMERIC_DOUBLE:
if (!emptyValue) {
setNumericValue(0.0d);
}
this.dataType=DataType.DataTypes.NUMERIC_DOUBLE;
break;
case NUMERIC_FLOAT:
if (!emptyValue) {
setNumericValue(0.0f);
}
this.dataType=DataType.DataTypes.NUMERIC_FLOAT;
break;
case NUMERIC_INTEGER:
if (!emptyValue) {
setNumericValue(new Integer("0"));
}
this.dataType=DataType.DataTypes.NUMERIC_INTEGER;
break;
case NUMERIC_LONG:
if (!emptyValue) {
setNumericValue(0l);
}
this.dataType=DataType.DataTypes.NUMERIC_LONG;
break;
case NUMERIC_SHORT:
if (!emptyValue) {
setNumericValue(new Short("0"));
}
this.dataType=DataType.DataTypes.NUMERIC_SHORT;
break;
default :
if (!emptyValue) {
setStringValue("");
}
this.dataType=DataType.DataTypes.STRING;
}
}
