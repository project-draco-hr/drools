{
  String drl="package org.drools.traits.test;\n" + "\n" + "import org.drools.core.factmodel.traits.Traitable;\n"+ ""+ "global java.util.List list;"+ "\n"+ "declare Person\n"+ "@Traitable\n"+ "@propertyReactive\n"+ "    ssn : String\n"+ "    pob : String\n"+ "    isStudent : boolean\n"+ "    hasAssistantship : boolean\n"+ "end\n"+ "\n"+ "declare trait Student\n"+ "@propertyReactive\n"+ "    studyingCountry : String\n"+ "    hasAssistantship : boolean\n"+ "end\n"+ "\n"+ "declare trait Worker\n"+ "@propertyReactive\n"+ "    pob : String\n"+ "    workingCountry : String\n"+ "end\n"+ "\n"+ "declare trait USCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"US\"\n"+ "end\n"+ "\n"+ "declare trait ITCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"IT\"\n"+ "end\n"+ "\n"+ "declare trait IRCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"IR\"\n"+ "end\n"+ "\n"+ "rule \"init\"\n"+ "when\n"+ "then\n"+ "    insert( new Person(\"1234\",\"IR\",true,true) );\n"+ "end\n"+ "\n"+ "rule \"check for being student\"\n"+ "when\n"+ "    $p : Person( $ssn : ssn, $pob : pob,  isStudent == true )\n"+ "then\n"+ "    Student st = (Student) don( $p , Student.class );\n"+ "    modify( st ){\n"+ "        setStudyingCountry( \"US\" );\n"+ "    }\n"+ "end\n"+ "\n"+ "rule \"check for IR\"\n"+ "when\n"+ "    $p : Person( pob == \"IR\" )\n"+ "then\n"+ "    don( $p , IRCitizen.class );\n"+ "end\n"+ "\n"+ "rule \"check for being US citizen\"\n"+ "when\n"+ "    $s : Student( studyingCountry == \"US\" )\n"+ "then\n"+ "    don( $s , USCitizen.class );\n"+ "end\n"+ "\n"+ "rule \"check for being worker\"\n"+ "when\n"+ "    $p : Student( hasAssistantship == true, $sc : studyingCountry  )\n"+ "then\n"+ "    Worker wr = (Worker) don( $p , Worker.class );\n"+ "    modify( wr ){\n"+ "        setWorkingCountry( $sc );\n"+ "    }\n"+ "\n"+ "end\n"+ "\n"+ "rule \"Join Full\"\n"+ "salience -1\n"+ "when\n"+ "    Student( )      // $sc := studyingCountry )\n"+ "    USCitizen( )\n"+ "    IRCitizen( )      // $pob := pob )\n"+ "    Worker( )       // pob == $pob , workingCountry == $sc )\n"+ "then\n"+ "    list.add( 1 ); "+ "end\n"+ "\n"+ "\n";
  StatefulKnowledgeSession ks=getSessionFromString(drl);
  TraitFactory.setMode(mode,ks.getKieBase());
  List list=new ArrayList();
  ks.setGlobal("list",list);
  HashMap map;
  ks.fireAllRules();
  assertTrue(list.contains(1));
  assertEquals(1,list.size());
  ks.dispose();
}
