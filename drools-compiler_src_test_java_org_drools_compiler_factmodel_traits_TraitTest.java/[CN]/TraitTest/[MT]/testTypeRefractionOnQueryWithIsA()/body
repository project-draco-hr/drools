{
  String source="package t.x \n" + "import java.util.*; \n" + "import org.drools.core.factmodel.traits.Thing \n"+ "import org.drools.core.factmodel.traits.Traitable \n"+ "\n"+ "global java.util.List list; \n"+ "\n"+ ""+ "declare trait A @propertyReactive end\n"+ "declare trait B extends A @propertyReactive end\n"+ "declare trait C extends B @propertyReactive end\n"+ "declare trait D extends A @propertyReactive end\n"+ "declare trait E extends C, D @propertyReactive end\n"+ "declare trait F extends E @propertyReactive end\n"+ ""+ "declare Kore\n"+ " @Traitable\n"+ "end\n"+ ""+ "rule Init when\n"+ "then\n"+ " Kore k = new Kore();\n"+ " don( k, C.class ); \n"+ " don( k, D.class ); \n"+ " don( k, E.class ); \n"+ " don( k, B.class ); \n"+ " don( k, A.class ); \n"+ " don( k, F.class ); \n"+ " shed( k, B.class ); \n"+ "end\n"+ ""+ " \n"+ "query queryA\n"+ " $x := Kore( this isA A ) \n"+ "end\n"+ "";
  StatefulKnowledgeSession ks=getSessionFromString(source);
  List list=new ArrayList();
  ks.setGlobal("list",list);
  ks.fireAllRules();
  QueryResults res=ks.getQueryResults("queryA");
  Iterator<QueryResultsRow> iter=res.iterator();
  Object a=iter.next().get("$x");
  assertFalse(iter.hasNext());
  assertEquals(1,res.size());
}
