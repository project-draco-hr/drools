{
  String s1="package test; " + "import org.drools.core.factmodel.traits.*; " + ""+ "global java.util.List list; "+ ""+ "declare trait Student @PropertyReactive name : String end "+ "declare trait Worker @PropertyReactive name : String end "+ "declare trait StudentWorker extends Student, Worker @PropertyReactive name : String end "+ "declare trait Assistant extends Student, Worker @PropertyReactive name : String end "+ "declare Person @Traitable name : String end "+ ""+ "rule \"Init\"  "+ "when  "+ "then  "+ "  Person p = new Person( \"john\" );  "+ "  insert( p );  "+ "end  "+ ""+ "rule \"Don\"  "+ "no-loop  "+ "when  "+ "  $p : Person( name == \"john\" )  "+ "then  "+ "  System.out.println( $p );  "+ ""+ "  System.out.println( \" ----------------------------------------------------------------------------------- Don student\" );  "+ "  don( $p, Student.class );  "+ "  System.out.println( \" ----------------------------------------------------------------------------------- Don worker\" );  "+ "  don( $p, Worker.class );  "+ "  System.out.println( \" ----------------------------------------------------------------------------------- Don studentworker\" );  "+ "  don( $p, StudentWorker.class );  "+ "  System.out.println( \" ----------------------------------------------------------------------------------- Don assistant\" );  "+ "  don( $p, Assistant.class );  "+ "end  "+ ""+ "rule \"Log S\"  "+ "when  "+ "  $t : Student() @Watch( name ) "+ "then  "+ "  System.out.println( \"Student >> \" +  $t ); "+ "  list.add( $t.getName() );  "+ "end  "+ "rule \"Log W\"  "+ "when  "+ "  $t : Worker() @Watch( name ) "+ "then  "+ "  System.out.println( \"Worker >> \" + $t );  "+ "  list.add( $t.getName() );  "+ "end  "+ "rule \"Log SW\"  "+ "when  "+ "  $t : StudentWorker() @Watch( name ) "+ "then  "+ "  System.out.println( \"StudentWorker >> \" + $t );  "+ "  list.add( $t.getName() );  "+ "end  "+ "rule \"Log RA\"  "+ "when  "+ "  $t : Assistant() @Watch( name ) "+ "then  "+ "  System.out.println( \"Assistant >> \" + $t );  "+ "  list.add( $t.getName() );  "+ "end  "+ ""+ "rule \"Mod\"  "+ "salience -10  "+ "when  "+ "  $p : Person( name == \"john\" ) "+ "then  "+ "   System.out.println( \"-----------------------------\" ); "+ "   modify ( $p ) { setName( \"alan\" ); } "+ "end  "+ "";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(new ByteArrayResource(s1.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  TraitFactory.setMode(mode,kbase);
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  int k=ksession.fireAllRules();
  assertEquals(Arrays.asList("john","john","john","john","alan","alan","alan","alan"),list);
  assertEquals(11,k);
}
