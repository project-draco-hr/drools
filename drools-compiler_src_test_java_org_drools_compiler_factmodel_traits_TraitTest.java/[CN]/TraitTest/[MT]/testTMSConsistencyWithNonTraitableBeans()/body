{
  String s1="package org.drools.compiler.test;\n" + "import org.drools.compiler.Person; \n" + "rule \"Init\"\n"+ "when\n"+ "then\n"+ "  insertLogical( new Person( \"x\", 18 ) );\n"+ "end\n"+ "\n"+ "declare trait Student\n"+ "  age  : int\n"+ "  name : String\n"+ "end\n"+ "\n"+ "rule \"Trait\"\n"+ "when\n"+ "    $p : Person( )\n"+ "then\n"+ "    don( $p, Student.class, true );\n"+ "end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(new ByteArrayResource(s1.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  ksession.fireAllRules();
  FactHandle personHandle=ksession.getFactHandles(new ClassObjectFilter(Person.class)).iterator().next();
  InternalFactHandle h=((InternalFactHandle)personHandle);
  ObjectTypeConfigurationRegistry reg=((InternalWorkingMemoryEntryPoint)h.getEntryPoint()).getObjectTypeConfigurationRegistry();
  ObjectTypeConf conf=reg.getObjectTypeConf(((InternalWorkingMemoryEntryPoint)h.getEntryPoint()).getEntryPoint(),((InternalFactHandle)personHandle).getObject());
  assertTrue(conf.isTMSEnabled());
  ksession.dispose();
}
