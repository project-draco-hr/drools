{
  String drl="package org.drools.test.traits\n" + "import " + Y.class.getCanonicalName() + ";\n"+ "import "+ Z.class.getCanonicalName()+ ";\n"+ "\n"+ "global java.util.List list;"+ "\n"+ "declare Bean\n"+ "    @Traitable\n"+ "    name    : String       = \"xxx\"     @key\n"+ "end\n"+ "\n"+ "\n"+ "declare X extends Y,Z @Trait( mixinSolveConflicts = Trait.MixinConflictResolutionStrategy.ERROR_ON_CONFLICT ) end\n"+ "\n"+ "rule Init when\n"+ "then\n"+ "    insert( new Bean() );\n"+ "end\n"+ "\n"+ "rule Exec no-loop when\n"+ "    $b : Bean()\n"+ "then\n"+ "    X x = don( $b, X.class );\n"+ "    list.add( x.getYValue() );\n"+ "    list.add( x.getZValue() );\n"+ "    list.add( x.getShared() );\n"+ "end\n";
  KieSession ks=getSessionFromString(drl);
  TraitFactory.setMode(mode,ks.getKieBase());
  List<String> list=new ArrayList<String>();
  ks.setGlobal("list",list);
  try {
    ks.fireAllRules();
    fail("don should fail due to the conflict in getShared() method");
  }
 catch (  Exception e) {
  }
}
