{
  String str="package org.jboss.qa.brms.traits\n" + "import org.drools.compiler.Person;\n" + "import org.drools.core.factmodel.traits.Traitable;\n"+ ""+ "global java.util.List list;"+ ""+ "declare Person \n"+ " @Traitable \n"+ "end \n"+ ""+ "declare trait Student\n"+ " school : String\n"+ "end\n"+ "\n"+ "rule \"create student\" \n"+ " when\n"+ " $student : Person( age < 26 )\n"+ " then\n"+ " Student s = don( $student, Student.class );\n"+ " s.setSchool(\"Masaryk University\");\n"+ "end\n"+ "\n"+ "rule \"print student\"\n"+ " when\n"+ " student : Person( this isA Student )\n"+ " then"+ " list.add( 1 );\n"+ " System.out.println(\"Person is a student: \" + student);\n"+ "end\n"+ "\n"+ "rule \"print school\"\n"+ " when\n"+ " Student( $school : school )\n"+ " then\n"+ " list.add( 2 );\n"+ " System.out.println(\"Student is attending \" + $school);\n"+ "end";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(new ByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException(kbuilder.getErrors().toString());
  }
  List list=new ArrayList();
  KnowledgeBase kbase=kbuilder.newKnowledgeBase();
  TraitFactory.setMode(mode,kbase);
  StatelessKnowledgeSession ksession=kbase.newStatelessKnowledgeSession();
  ksession.setGlobal("list",list);
  List<Command<?>> commands=new ArrayList<Command<?>>();
  Person student=new Person("student",18);
  commands.add(CommandFactory.newInsert(student));
  System.out.println("Starting execution...");
  commands.add(CommandFactory.newFireAllRules());
  ksession.execute(CommandFactory.newBatchExecution(commands));
  System.out.println("Finished...");
  assertEquals(2,list.size());
  assertTrue(list.contains(1));
  assertTrue(list.contains(2));
}
