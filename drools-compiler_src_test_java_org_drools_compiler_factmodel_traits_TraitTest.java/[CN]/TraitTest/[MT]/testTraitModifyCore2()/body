{
  String s1="package test; " + "import org.drools.core.factmodel.traits.*; " + ""+ "declare trait Student @propertyReactive name : String end "+ "declare trait Worker @propertyReactive name : String end "+ "declare trait StudentWorker extends Student, Worker @propertyReactive name : String end "+ "declare trait StudentWorker2 extends StudentWorker @propertyReactive name : String end "+ "declare trait Assistant extends Student, Worker @propertyReactive name : String end "+ "declare Person @Traitable @propertyReactive name : String end "+ ""+ "rule \"Init\"  "+ "when  "+ "then  "+ "  Person p = new Person( \"john\" );  "+ "  insert( p );  "+ "end  "+ ""+ "rule \"Don\"  "+ "when  "+ "  $p : Person( name == \"john\" )  "+ "then  "+ "  System.out.println( \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DON WORKER \" + $p  );  "+ "  don( $p, Worker.class );  "+ "  System.out.println( \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DON STUDWORKER-2 \" + $p );  "+ "  don( $p, StudentWorker2.class );  "+ "  System.out.println( \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DON ASSISTANT \" + $p );  "+ "  don( $p, Assistant.class );  "+ "end  "+ ""+ "rule \"Log S\"  "+ "when  "+ "  $t : Student() @watch( name )  "+ "then  "+ "  System.err.println( \"@@Student >> \" +  $t );  "+ "end  "+ "rule \"Log W\"  "+ "when  "+ "  $t : Worker() @watch( name )  "+ "then  "+ "  System.err.println( \"@@Worker >> \" + $t );  "+ "end  "+ "rule \"Log SW\"  "+ "when  "+ "  $t : StudentWorker() @watch( name )  "+ "then  "+ "  System.err.println( \"@@StudentWorker >> \" + $t );  "+ "end  "+ "rule \"Log RA\"  "+ "when  "+ "  $t : Assistant() @watch( name )  "+ "then  "+ "  System.err.println( \"@@Assistant >> \" + $t );  "+ "end  "+ "rule \"Log Px\"  "+ "salience -1  "+ "when  "+ "  $p : Person() @watch( name )  "+ "then  "+ "  System.err.println( \"Poor Core Person >> \" + $p );  "+ "end  "+ ""+ "rule \"Mod\"  "+ "salience -10  "+ "when  "+ "  String( this == \"go\" )  "+ "  $p : Student( name == \"john\" )  "+ "then  "+ "  System.out.println( \" ------------------------------------------------------------------------------ \" + $p );  "+ "  modify ( $p ) { setName( \"alan\" ); } "+ "end  "+ "";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(new ByteArrayResource(s1.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  TraitFactory.setMode(mode,kbase);
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  int k=ksession.fireAllRules();
  assertEquals(7,k);
  ksession.insert("go");
  k=ksession.fireAllRules();
  assertEquals(6,k);
}
