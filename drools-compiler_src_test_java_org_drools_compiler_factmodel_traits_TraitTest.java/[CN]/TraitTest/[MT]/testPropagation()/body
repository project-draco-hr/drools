{
  String drl="package org.drools.test;\n" + "import org.drools.core.factmodel.traits.*; \n" + "\n"+ "global java.util.List list; \n"+ ""+ "declare X @Traitable end \n"+ ""+ "declare trait A @propertyReactive end\n"+ "declare trait B extends A @propertyReactive end\n"+ "declare trait C extends B @propertyReactive end \n"+ "declare trait D extends C @propertyReactive end\n"+ "declare trait E extends B,C @propertyReactive end\n"+ "declare trait F extends E @propertyReactive end\n"+ "declare trait G extends B @propertyReactive end\n"+ "declare trait H extends G @propertyReactive end\n"+ "declare trait I extends E,H @propertyReactive end\n"+ "declare trait J extends I @propertyReactive end\n"+ ""+ "rule Init when then X x = new X(); insert( x ); don( x, F.class); end \n"+ "rule Go when String( this == \"go\" ) $x : X() then don( $x, H.class); end \n"+ "rule Go2 when String( this == \"go2\" ) $x : X() then don( $x, D.class); end \n"+ "";
  for (int j='A'; j <= 'J'; j++) {
    String x="" + (char)j;
    drl+="rule \"Log " + x + "\" when "+ x+ "() then System.out.println( \"@@ "+ x+ " detected \" ); list.add( \""+ x+ "\" ); end \n";
    drl+="rule \"Log II" + x + "\" salience -1 when "+ x+ "( ";
    drl+="this isA H";
    drl+=" ) then System.out.println( \"@@ as H >> " + x + " detected \" ); list.add( \"H"+ x+ "\" ); end \n";
  }
  StatefulKnowledgeSession ks=getSessionFromString(drl);
  TraitFactory.setMode(mode,ks.getKieBase());
  List list=new ArrayList();
  ks.setGlobal("list",list);
  ks.fireAllRules();
  assertTrue(list.contains("A"));
  assertTrue(list.contains("B"));
  assertTrue(list.contains("C"));
  assertTrue(list.contains("E"));
  assertTrue(list.contains("F"));
  assertEquals(5,list.size());
  list.clear();
  System.out.println("---------------------------------------");
  ks.insert("go");
  ks.fireAllRules();
  assertTrue(list.contains("H"));
  assertTrue(list.contains("G"));
  assertTrue(list.contains("HA"));
  assertTrue(list.contains("HB"));
  assertTrue(list.contains("HC"));
  assertTrue(list.contains("HE"));
  assertTrue(list.contains("HF"));
  assertTrue(list.contains("HG"));
  assertTrue(list.contains("HH"));
  System.out.println(list);
  assertEquals(9,list.size());
  list.clear();
  System.out.println("---------------------------------------");
  ks.insert("go2");
  ks.fireAllRules();
  assertTrue(list.contains("D"));
  assertTrue(list.contains("HA"));
  assertTrue(list.contains("HB"));
  assertTrue(list.contains("HC"));
  assertTrue(list.contains("HE"));
  assertTrue(list.contains("HF"));
  assertTrue(list.contains("HG"));
  assertTrue(list.contains("HH"));
  assertTrue(list.contains("HH"));
  assertTrue(list.contains("HD"));
  assertEquals(9,list.size());
  ks.dispose();
}
