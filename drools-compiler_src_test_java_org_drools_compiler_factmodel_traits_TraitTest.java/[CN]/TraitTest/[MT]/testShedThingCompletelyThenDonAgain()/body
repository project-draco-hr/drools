{
  final String s1="package test;\n" + "import org.drools.core.factmodel.traits.*; \n" + "global java.util.List list;\n"+ ""+ "declare Core @Traitable end\n"+ ""+ "declare trait Mask end\n"+ "declare trait Mask2 end\n"+ ""+ "rule \"Don ItemStyle\"\n"+ "	when\n"+ "     $s : String( this == \"don1\" ) \n"+ "	then\n"+ "     delete( $s ); \n"+ "		don( new Core(), Mask.class );\n"+ "end\n"+ ""+ "rule \"Clear\" \n"+ "	when \n"+ "     $s : String( this == \"shed1\" ) \n"+ "		$m : Mask() \n"+ "then \n"+ "     delete( $s ); \n"+ "     shed( $m, Thing.class ); \n"+ "end\n"+ ""+ "rule \"Add\" \n"+ "	when \n"+ "     $s : String( this == \"don2\" ) \n"+ "		$c : Core() \n"+ "then \n"+ "     delete( $s ); \n"+ "     don( $c, Mask2.class ); \n"+ "end\n"+ ""+ "rule \"Clear Again\" \n"+ "	when \n"+ "     $s : String( this == \"shed2\" ) \n"+ "		$m : Mask2() \n"+ "then \n"+ "     delete( $s ); \n"+ "     shed( $m, Mask2.class ); \n"+ "end\n"+ ""+ ""+ "rule Log \n"+ "when \n"+ " $t : Thing() \n"+ "then \n"+ "  System.out.println( \"Thing detected \" + $t ); \n"+ "  list.add( $t.getClass().getName() ); \n"+ "end \n"+ "";
  KieBase kbase=getKieBaseFromString(s1);
  TraitFactory.setMode(mode,kbase);
  ArrayList list=new ArrayList();
  KieSession knowledgeSession=kbase.newKieSession();
  knowledgeSession.setGlobal("list",list);
  knowledgeSession.insert("don1");
  knowledgeSession.fireAllRules();
  assertEquals(1,list.size());
  assertEquals(Arrays.asList("test.Mask.test.Core_Proxy"),list);
  knowledgeSession.insert("shed1");
  knowledgeSession.fireAllRules();
  assertEquals(1,list.size());
  assertEquals(Arrays.asList("test.Mask.test.Core_Proxy"),list);
  knowledgeSession.insert("don2");
  knowledgeSession.fireAllRules();
  System.out.println(list);
  assertEquals(2,list.size());
  assertEquals(Arrays.asList("test.Mask.test.Core_Proxy","test.Mask2.test.Core_Proxy"),list);
  knowledgeSession.insert("shed2");
  knowledgeSession.fireAllRules();
  assertEquals(3,list.size());
  assertEquals(Arrays.asList("test.Mask.test.Core_Proxy","test.Mask2.test.Core_Proxy","org.drools.core.factmodel.traits.Thing.test.Core_Proxy"),list);
}
