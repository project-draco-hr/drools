{
  String drl="" + "package org.drools.core.factmodel.traits.test;\n" + "\n"+ "import org.drools.core.factmodel.traits.*;\n"+ "import java.util.*;\n"+ "\n"+ "global List list; \n"+ ""+ "declare trait A @propertyReactive end \n"+ "declare trait B @propertyReactive end \n"+ "\n"+ "declare TBean @Traitable @propertyReactive fld0 : String end \n"+ ""+ "rule \"Don 1\"\n"+ "when \n"+ "then\n"+ "  TBean t = new TBean(); \n"+ "  don( t, A.class ); \n"+ "  don( t, B.class ); \n"+ "end\n"+ ""+ "rule \"Test Don A,B\" "+ "when \n"+ "  A(this isA B) \n"+ "then \n"+ "  list.add( 0 ); \n"+ "  System.out.println( \"Call DON MANY (A isA B) \" ); "+ "end \n"+ ""+ "";
  KieSession ksession=loadKnowledgeBaseFromString(drl).newKieSession();
  TraitFactory.setMode(mode,ksession.getKieBase());
  ArrayList list=new ArrayList();
  ksession.setGlobal("list",list);
  CountingWorkingMemoryEventListener cwm=new CountingWorkingMemoryEventListener();
  ksession.addEventListener(cwm);
  ksession.fireAllRules();
  assertEquals(Arrays.asList(0),list);
  assertEquals(0,cwm.getdeletes());
  assertEquals(3,cwm.getInserts());
  assertEquals(1,cwm.getUpdates());
}
