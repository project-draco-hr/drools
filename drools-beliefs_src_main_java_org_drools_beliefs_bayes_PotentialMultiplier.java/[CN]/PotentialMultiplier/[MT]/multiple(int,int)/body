{
  int numberOfOutcomes=vars[currentVar].getOutcomes().length;
  boolean isParent=false;
  int nextParentKeyPos=parentKeyPos;
  if (parentVarPos.length > 0 && parentKeyPos < parentVarPos.length && parentVarPos[parentKeyPos] == currentVar) {
    nextParentKeyPos++;
    isParent=true;
  }
  for (int j=0; j < numberOfOutcomes; j++) {
    path[currentVar]=j;
    if (currentVar < vars.length - 1) {
      multiple(currentVar + 1,nextParentKeyPos);
    }
 else {
      trgPotentials[trgPotentialIndex++]*=varPotential[varProbabilityTableRow][path[varPos]];
    }
    if (isParent) {
      varProbabilityTableRow+=parentIndexMultipliers[parentKeyPos];
    }
  }
  if (isParent) {
    varProbabilityTableRow-=(parentIndexMultipliers[parentKeyPos] * numberOfOutcomes);
  }
}
