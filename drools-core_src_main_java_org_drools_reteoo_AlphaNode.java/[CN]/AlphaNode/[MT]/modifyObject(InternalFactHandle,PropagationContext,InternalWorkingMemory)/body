{
  if (this.constraint.isAllowed(handle.getObject(),null,workingMemory)) {
    boolean exists=false;
    if (hasMemory()) {
      final ObjectHashTable memory=(ObjectHashTable)workingMemory.getNodeMemory(this);
      exists=!memory.add(handle,true);
    }
    if (exists) {
      this.sink.propagateModifyObject(handle,context,workingMemory);
    }
 else {
      this.sink.propagateAssertObject(handle,context,workingMemory);
    }
  }
 else {
    boolean exists=true;
    if (hasMemory) {
      final ObjectHashTable memory=(ObjectHashTable)workingMemory.getNodeMemory(this);
      exists=memory.remove(handle);
    }
    if (exists) {
      this.sink.propagateRetractObject(handle,context,workingMemory,false);
    }
  }
}
