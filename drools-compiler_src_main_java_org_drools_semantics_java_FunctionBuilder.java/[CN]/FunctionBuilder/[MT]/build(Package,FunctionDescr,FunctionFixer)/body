{
  final StringTemplate st=FunctionBuilder.functionGroup.getInstanceOf("function");
  st.setAttribute("package",pkg.getName());
  st.setAttribute("imports",pkg.getImports());
  st.setAttribute("className",ucFirst(functionDescr.getName()));
  st.setAttribute("methodName",functionDescr.getName());
  st.setAttribute("returnType",functionDescr.getReturnType());
  st.setAttribute("parameterTypes",functionDescr.getParameterTypes());
  st.setAttribute("parameterNames",functionDescr.getParameterNames());
  st.setAttribute("text",fixer.fix(functionDescr.getText()));
  String text=st.toString();
  BufferedReader reader=new BufferedReader(new StringReader(text));
  String line=null;
  String lineStartsWith="    public static " + functionDescr.getReturnType() + " "+ functionDescr.getName();
  int offset=0;
  try {
    while ((line=reader.readLine()) != null) {
      offset++;
      if (line.startsWith(lineStartsWith)) {
        break;
      }
    }
    functionDescr.setOffset(offset);
  }
 catch (  IOException e) {
    throw new RuntimeDroolsException("Error determining start offset with function");
  }
  return text;
}
