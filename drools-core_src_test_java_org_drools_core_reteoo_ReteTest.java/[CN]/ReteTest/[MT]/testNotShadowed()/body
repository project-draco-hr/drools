{
  Properties properties=new Properties();
  properties.setProperty("drools.shadowProxyExcludes","org.drools.core.test.model.Cheese");
  RuleBaseConfiguration conf=new RuleBaseConfiguration(properties);
  final ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase(conf);
  buildContext=new BuildContext(ruleBase,((ReteooRuleBase)ruleBase).getReteooBuilder().getIdGenerator());
  final AbstractWorkingMemory workingMemory=new AbstractWorkingMemory(1,ruleBase);
  final Rete rete=ruleBase.getRete();
  final EntryPointNode entryPoint=new EntryPointNode(0,rete,buildContext);
  entryPoint.attach(buildContext);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,entryPoint,new ClassObjectType(Cheese.class),buildContext);
  objectTypeNode.attach();
  final MockObjectSink sink1=new MockObjectSink();
  objectTypeNode.addObjectSink(sink1);
  final Cheese cheese=new Cheese("brie",15);
  final DefaultFactHandle h1=new DefaultFactHandle(1,cheese);
  rete.assertObject(h1,new PropagationContextImpl(0,PropagationContext.INSERTION,null,null,null),workingMemory);
  final Object[] results=(Object[])sink1.getAsserted().get(0);
  assertFalse(((DefaultFactHandle)results[0]).getObject() instanceof ShadowProxy);
}
