{
  Properties properties=new Properties();
  properties.setProperty("drools.shadowProxyExcludes","org.drools.core.test.model.Cheese");
  RuleBaseConfiguration conf=new RuleBaseConfiguration(properties);
  InternalKnowledgeBase kBase=(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase(conf);
  buildContext=new BuildContext(kBase,kBase.getReteooBuilder().getIdGenerator());
  final StatefulKnowledgeSessionImpl workingMemory=new StatefulKnowledgeSessionImpl(1,kBase);
  final Rete rete=kBase.getRete();
  final EntryPointNode entryPoint=new EntryPointNode(0,rete,buildContext);
  entryPoint.attach(buildContext);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,entryPoint,new ClassObjectType(Cheese.class),buildContext);
  objectTypeNode.attach();
  final MockObjectSink sink1=new MockObjectSink();
  objectTypeNode.addObjectSink(sink1);
  final Cheese cheese=new Cheese("brie",15);
  final DefaultFactHandle h1=new DefaultFactHandle(1,cheese);
  rete.assertObject(h1,pctxFactory.createPropagationContext(0,PropagationContext.INSERTION,null,null,null),workingMemory);
  final Object[] results=(Object[])sink1.getAsserted().get(0);
}
