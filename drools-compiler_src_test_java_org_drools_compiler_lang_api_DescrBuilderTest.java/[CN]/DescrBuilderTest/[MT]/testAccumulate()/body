{
  PackageDescrBuilder packBuilder=DescrFactory.newPackage().newGlobal().identifier("list").type(List.class.getName()).end().name("org.drools.compiler").newRule().name("r1").lhs().pattern().id("$tot",true).type(Double.class.getName()).end().accumulate().source().pattern().id("$i",false).type(Integer.class.getName()).end().end().function("sum","$tot",true,"$i").constraint("$tot > 15").end().end().rhs("list.add( $tot );").end().newRule().name("r2").attribute("dialect","mvel").lhs().pattern().id("$tot",true).type(Double.class.getName()).end().accumulate().source().pattern().id("$i",false).type(Integer.class.getName()).end().end().function("sum","$tot",true,"$i").constraint("$tot > 15").end().end().rhs("list.add( $tot * 2 );").end();
  String drl=new DrlDumper().dump(packBuilder.getDescr());
  System.out.println(drl);
  KnowledgeBuilder knowledgeBuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  knowledgeBuilder.add(new ByteArrayResource(drl.getBytes()),ResourceType.DRL);
  System.err.println(knowledgeBuilder.getErrors());
  assertFalse(knowledgeBuilder.getErrors().toString(),knowledgeBuilder.hasErrors());
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(knowledgeBuilder.getKnowledgePackages());
  StatefulKnowledgeSession knowledgeSession=kbase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  knowledgeSession.setGlobal("list",list);
  knowledgeSession.insert(3);
  knowledgeSession.insert(39);
  knowledgeSession.insert(24.0);
  knowledgeSession.insert(42.0);
  knowledgeSession.fireAllRules();
  assertEquals(Arrays.asList(42.0,84.0),list);
}
