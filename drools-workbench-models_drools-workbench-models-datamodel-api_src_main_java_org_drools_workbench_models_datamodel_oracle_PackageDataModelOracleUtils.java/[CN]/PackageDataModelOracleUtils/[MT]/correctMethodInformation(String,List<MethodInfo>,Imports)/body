{
  final List<MethodInfo> correctedMethodInformation=new ArrayList<MethodInfo>();
  for (  final MethodInfo mi : originalMethodInformation) {
    String miReturnType=mi.getReturnClassType();
    String miGenericReturnType=mi.getGenericType();
    String miParametricReturnType=mi.getParametricReturnType();
    final String miReturnType_QualifiedType=miReturnType;
    final String miReturnType_PackageName=getPackageName(miReturnType_QualifiedType);
    final String miReturnType_TypeName=getTypeName(miReturnType_QualifiedType);
    if (miReturnType_PackageName.equals(packageName) || isImported(miReturnType_QualifiedType,imports)) {
      miReturnType=miReturnType_TypeName;
    }
    final String miGenericReturnType_QualifiedType=miGenericReturnType;
    final String miGenericReturnType_PackageName=getPackageName(miGenericReturnType_QualifiedType);
    final String miGenericReturnType_TypeName=getTypeName(miGenericReturnType_QualifiedType);
    if (miGenericReturnType_PackageName.equals(packageName) || isImported(miGenericReturnType_QualifiedType,imports)) {
      miGenericReturnType=miGenericReturnType_TypeName;
    }
    if (miParametricReturnType != null) {
      final String miParametricReturnType_QualifiedType=miParametricReturnType;
      final String miParametricReturnType_PackageName=getPackageName(miParametricReturnType_QualifiedType);
      final String miParametricReturnType_TypeName=getTypeName(miParametricReturnType_QualifiedType);
      if (miParametricReturnType_PackageName.equals(packageName) || isImported(miParametricReturnType_QualifiedType,imports)) {
        miParametricReturnType=miParametricReturnType_TypeName;
      }
    }
    correctedMethodInformation.add(new MethodInfo(mi.getName(),mi.getParams(),miReturnType,miParametricReturnType,miGenericReturnType));
  }
  return correctedMethodInformation;
}
