{
  final ConditionalBranchMemory memory=(ConditionalBranchMemory)workingMemory.getNodeMemory(this);
  boolean breaking=false;
  ConditionalExecution conditionalExecution=branchEvaluator.evaluate(leftTuple,workingMemory,memory.context);
  if (conditionalExecution != null) {
    conditionalExecution.getSink().propagateAssertLeftTuple(leftTuple,context,workingMemory,this.tupleMemoryEnabled);
    breaking=conditionalExecution.isBreaking();
  }
  if (!breaking) {
    this.sink.propagateAssertLeftTuple(leftTuple,context,workingMemory,this.tupleMemoryEnabled);
  }
}
