{
  RuleModel model=new RuleModel();
  model.lhs=new IPattern[3];
  FactPattern x=new FactPattern("Car");
  model.lhs[0]=x;
  x.boundName="x";
  FactPattern y=new FactPattern("Car");
  model.lhs[1]=y;
  y.boundName="y";
  Constraint[] cons=new Constraint[2];
  y.constraints=cons;
  cons[0]=new Constraint("age");
  cons[1]=new Constraint("make");
  cons[0].fieldBinding="qbc";
  cons[0].connectives=new ConnectiveConstraint[1];
  cons[0].connectives[0]=new ConnectiveConstraint("&","x");
  cons[0].connectives[0].constraintValueType=ConnectiveConstraint.TYPE_LITERAL;
  FactPattern other=new FactPattern("House");
  model.lhs[2]=other;
  other.boundName="q";
  Constraint[] cons2=new Constraint[1];
  cons2[0]=new Constraint();
  other.constraints=cons2;
  List vars=model.getBoundVariablesInScope(cons[0]);
  assertEquals(1,vars.size());
  assertEquals("x",vars.get(0));
  vars=model.getBoundVariablesInScope(cons[0].connectives[0]);
  assertEquals(1,vars.size());
  assertEquals("x",vars.get(0));
  vars=model.getBoundVariablesInScope(cons[1]);
  assertEquals(2,vars.size());
  assertEquals("x",vars.get(0));
  assertEquals("qbc",vars.get(1));
  vars=model.getBoundVariablesInScope(cons[0]);
  assertEquals(1,vars.size());
  assertEquals("x",vars.get(0));
  vars=model.getBoundVariablesInScope(cons2[0]);
  assertEquals(3,vars.size());
  assertEquals("x",vars.get(0));
  assertEquals("qbc",vars.get(1));
  assertEquals("y",vars.get(2));
}
