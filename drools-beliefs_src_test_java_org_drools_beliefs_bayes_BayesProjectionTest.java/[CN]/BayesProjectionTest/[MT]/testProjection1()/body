{
  BayesVariable a=new BayesVariable<String>("A",0,new String[]{"A1","A2"},null);
  BayesVariable b=new BayesVariable<String>("B",1,new String[]{"B1","B2"},null);
  Graph<BayesVariable> graph=new BayesNetwork();
  GraphNode x0=addNode(graph);
  GraphNode x1=addNode(graph);
  x0.setContent(a);
  x1.setContent(b);
  JunctionTreeClique node1=new JunctionTreeClique(0,graph,bitSet("0011"));
  JunctionTreeClique node2=new JunctionTreeClique(1,graph,bitSet("0011"));
  SeparatorState sep=new JunctionTreeSeparator(0,node1,node2,bitSet("0011"),graph).createState();
  double v=0.1;
  for (int i=0; i < node1.getPotentials().length; i++) {
    node1.getPotentials()[i]=v;
    v+=+0.1;
  }
  BayesVariable[] vars=new BayesVariable[]{a,b};
  BayesVariable[] sepVars=new BayesVariable[]{a,b};
  int[] sepVarPos=PotentialMultiplier.createSubsetVarPos(vars,sepVars);
  int sepVarNumberOfStates=PotentialMultiplier.createNumberOfStates(sepVars);
  int[] sepVarMultipliers=PotentialMultiplier.createIndexMultipliers(sepVars,sepVarNumberOfStates);
  double[] projectedSepPotentials=new double[sep.getPotentials().length];
  BayesProjection p=new BayesProjection(vars,node1.getPotentials(),sepVarPos,sepVarMultipliers,projectedSepPotentials);
  p.project();
  assertArray(new double[]{0.1,0.2,0.3,0.4},scaleDouble(3,projectedSepPotentials));
}
