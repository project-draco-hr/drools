{
  try {
    RulesRepository repo=getRepo();
    Session session=repo.getSession();
    Node rn=session.getRootNode();
    Node asset=rn.addNode("asset","drools:assetNodeType");
    asset.setProperty("drools:packageName","one");
    asset.setProperty("drools:title","title");
    asset.setProperty("drools:format","format");
    asset.setProperty("drools:description","description");
    Calendar lastModified=Calendar.getInstance();
    asset.setProperty("drools:lastModified",lastModified);
    Node category=rn.addNode("category","drools:categoryNodeType");
    Value[] newTagValues=new Value[1];
    newTagValues[0]=asset.getSession().getValueFactory().createValue(category);
    asset.setProperty("drools:categoryReference",newTagValues);
    session.save();
    PropertyIterator pi=category.getReferences();
    while (pi.hasNext()) {
      Property property=pi.nextProperty();
      String name=property.getName();
      System.out.println("Name=" + name);
      assertEquals("drools:categoryReference",name);
    }
    Value[] updatedTagValues=new Value[1];
    updatedTagValues[0]=null;
    asset.setProperty("drools:categoryReference",updatedTagValues);
    category.remove();
    session.save();
  }
 catch (  RepositoryException e) {
    e.printStackTrace();
    fail();
  }
}
