{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_StaticField.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  WorkingMemory workingMemory=ruleBase.newStatefulSession();
  workingMemory=ruleBase.newStatefulSession(new ByteArrayInputStream(DroolsStreamUtils.streamOut(workingMemory)));
  List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  final Cheesery cheesery1=new Cheesery();
  cheesery1.setStatus(Cheesery.SELLING_CHEESE);
  cheesery1.setMaturity(Maturity.OLD);
  workingMemory.insert(cheesery1);
  final Cheesery cheesery2=new Cheesery();
  cheesery2.setStatus(Cheesery.MAKING_CHEESE);
  cheesery2.setMaturity(Maturity.YOUNG);
  workingMemory.insert(cheesery2);
  workingMemory.fireAllRules();
  assertEquals(2,list.size());
  assertSame(cheesery1,list.get(0));
  assertEquals(cheesery1,list.get(0));
  assertSame(cheesery2,list.get(1));
  assertEquals(cheesery2,list.get(1));
  workingMemory=ruleBase.newStatefulSession(new ByteArrayInputStream(DroolsStreamUtils.streamOut(workingMemory)));
  list=(List)workingMemory.getGlobal("list");
  workingMemory.fireAllRules();
  assertEquals(2,list.size());
  assertNotSame(cheesery1,list.get(0));
  assertEquals(cheesery1,list.get(0));
  assertNotSame(cheesery2,list.get(1));
  assertEquals(cheesery2,list.get(1));
}
