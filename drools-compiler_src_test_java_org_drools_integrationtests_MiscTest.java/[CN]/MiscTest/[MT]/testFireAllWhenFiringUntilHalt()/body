{
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  final StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  Runnable fireUntilHalt=new Runnable(){
    public void run(){
      ksession.fireUntilHalt();
    }
  }
;
  Runnable fireAllRules=new Runnable(){
    public void run(){
      ksession.fireAllRules();
    }
  }
;
  Thread t1=new Thread(fireUntilHalt);
  Thread t2=new Thread(fireAllRules);
  t1.start();
  try {
    Thread.currentThread().sleep(500);
  }
 catch (  InterruptedException e) {
  }
  t2.start();
  try {
    Thread.currentThread().sleep(1000);
  }
 catch (  InterruptedException e) {
  }
  boolean aliveT2=t2.isAlive();
  ksession.halt();
  try {
    Thread.currentThread().sleep(1000);
  }
 catch (  InterruptedException e) {
  }
  boolean aliveT1=t1.isAlive();
  if (t2.isAlive()) {
    t2.interrupt();
  }
  if (t1.isAlive()) {
    t1.interrupt();
  }
  assertFalse("T2 should have finished",aliveT2);
  assertFalse("T1 should have finished",aliveT1);
}
