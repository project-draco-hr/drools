{
  try {
    final PackageBuilder builder1=new PackageBuilder();
    builder1.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RuleNameClashes1.drl")));
    final Package pkg1=builder1.getPackage();
    assertEquals(1,pkg1.getRules().length);
    final PackageBuilder builder2=new PackageBuilder();
    builder2.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_RuleNameClashes2.drl")));
    final Package pkg2=builder2.getPackage();
    assertEquals(1,pkg2.getRules().length);
    RuleBase ruleBase=getSinglethreadRuleBase();
    ruleBase.addPackage(pkg1);
    ruleBase.addPackage(pkg2);
    ruleBase=SerializationHelper.serializeObject(ruleBase);
    final WorkingMemory workingMemory=ruleBase.newStatefulSession();
    final List results=new ArrayList();
    workingMemory.setGlobal("results",results);
    workingMemory.insert(new Cheese("stilton",10));
    workingMemory.insert(new Cheese("brie",5));
    workingMemory.fireAllRules();
    assertEquals(results.toString(),2,results.size());
    assertTrue(results.contains("p1.r1"));
    assertTrue(results.contains("p2.r1"));
  }
 catch (  PackageMergeException e) {
    fail("Should not raise exception when merging different packages into the same rulebase: " + e.getMessage());
  }
catch (  Exception e) {
    e.printStackTrace();
    fail("unexpected exception: " + e.getMessage());
  }
}
