{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("test_InsertionOrder.drl",getClass()),ResourceType.DRL);
  KnowledgeBuilderErrors errors=kbuilder.getErrors();
  if (errors.size() > 0) {
    for (    KnowledgeBuilderError error : errors) {
      System.err.println(error);
    }
    throw new IllegalArgumentException("Could not parse knowledge.");
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List<String> results=new ArrayList<String>();
  ksession.setGlobal("results",results);
  ksession.insert(new Move(1,2));
  ksession.insert(new Move(2,3));
  Win win2=new Win(2);
  Win win3=new Win(3);
  ksession.fireAllRules();
  assertEquals(2,results.size());
  assertTrue(results.contains(win2));
  assertTrue(results.contains(win3));
  ksession=kbase.newStatefulKnowledgeSession();
  results=new ArrayList<String>();
  ksession.setGlobal("results",results);
  ksession.insert(new Move(2,3));
  ksession.insert(new Move(1,2));
  ksession.fireAllRules();
  assertEquals(2,results.size());
  assertTrue(results.contains(win2));
  assertTrue(results.contains(win3));
}
