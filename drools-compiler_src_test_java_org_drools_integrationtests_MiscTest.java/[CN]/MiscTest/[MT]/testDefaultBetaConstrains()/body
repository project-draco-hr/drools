{
  KnowledgeBase kbase=SerializationHelper.serializeObject(loadKnowledgeBase("test_DefaultBetaConstraint.drl"));
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  final List results=new ArrayList();
  ksession.setGlobal("results",results);
  final FirstClass first=new FirstClass("1","2","3","4","5");
  final org.kie.runtime.rule.FactHandle handle=ksession.insert(first);
  ksession.fireAllRules();
  assertEquals(1,results.size());
  assertEquals("NOT",results.get(0));
  ksession.insert(new SecondClass());
  ksession.update(handle,first);
  ksession.fireAllRules();
  assertEquals(2,results.size());
  assertEquals("NOT",results.get(1));
  ksession.update(handle,first);
  ksession.insert(new SecondClass(null,"2","3","4","5"));
  ksession.fireAllRules();
  assertEquals(3,results.size());
  assertEquals("NOT",results.get(2));
  ksession.update(handle,first);
  ksession.insert(new SecondClass("1",null,"3","4","5"));
  ksession.fireAllRules();
  assertEquals(4,results.size());
  assertEquals("NOT",results.get(3));
  ksession.update(handle,first);
  ksession.insert(new SecondClass("1","2",null,"4","5"));
  ksession.fireAllRules();
  assertEquals(5,results.size());
  assertEquals("NOT",results.get(4));
  ksession.update(handle,first);
  ksession.insert(new SecondClass("1","2","3",null,"5"));
  ksession.fireAllRules();
  assertEquals(6,results.size());
  assertEquals("NOT",results.get(5));
  ksession.update(handle,first);
  ksession.insert(new SecondClass("1","2","3","4",null));
  ksession.fireAllRules();
  assertEquals(7,results.size());
  assertEquals("NOT",results.get(6));
  ksession.insert(new SecondClass("1","2","3","4","5"));
  ksession.update(handle,first);
  ksession.fireAllRules();
  assertEquals(8,results.size());
  assertEquals("EQUALS",results.get(7));
}
