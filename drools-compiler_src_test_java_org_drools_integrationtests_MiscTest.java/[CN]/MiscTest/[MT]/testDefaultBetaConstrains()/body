{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_DefaultBetaConstraint.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getSinglethreadRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  final List results=new ArrayList();
  workingMemory.setGlobal("results",results);
  final FirstClass first=new FirstClass("1","2","3","4","5");
  final FactHandle handle=workingMemory.insert(first);
  workingMemory.fireAllRules();
  assertEquals(1,results.size());
  assertEquals("NOT",results.get(0));
  workingMemory.insert(new SecondClass());
  workingMemory.update(handle,first);
  workingMemory.fireAllRules();
  assertEquals(2,results.size());
  assertEquals("NOT",results.get(1));
  workingMemory.update(handle,first);
  workingMemory.insert(new SecondClass(null,"2","3","4","5"));
  workingMemory.fireAllRules();
  assertEquals(3,results.size());
  assertEquals("NOT",results.get(2));
  workingMemory.update(handle,first);
  workingMemory.insert(new SecondClass("1",null,"3","4","5"));
  workingMemory.fireAllRules();
  assertEquals(4,results.size());
  assertEquals("NOT",results.get(3));
  workingMemory.update(handle,first);
  workingMemory.insert(new SecondClass("1","2",null,"4","5"));
  workingMemory.fireAllRules();
  assertEquals(5,results.size());
  assertEquals("NOT",results.get(4));
  workingMemory.update(handle,first);
  workingMemory.insert(new SecondClass("1","2","3",null,"5"));
  workingMemory.fireAllRules();
  assertEquals(6,results.size());
  assertEquals("NOT",results.get(5));
  workingMemory.update(handle,first);
  workingMemory.insert(new SecondClass("1","2","3","4",null));
  workingMemory.fireAllRules();
  assertEquals(7,results.size());
  assertEquals("NOT",results.get(6));
  workingMemory.insert(new SecondClass("1","2","3","4","5"));
  workingMemory.update(handle,first);
  workingMemory.fireAllRules();
  assertEquals(8,results.size());
  assertEquals("EQUALS",results.get(7));
}
