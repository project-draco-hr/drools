{
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_MatchesNotMatches.drl")));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  final List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  final Cheese stilton=new Cheese("stilton",12);
  final Cheese stilton2=new Cheese("stilton2",12);
  final Cheese agedStilton=new Cheese("aged stilton",12);
  final Cheese brie=new Cheese("brie",10);
  final Cheese brie2=new Cheese("brie2",10);
  final Cheese muzzarella=new Cheese("muzzarella",10);
  final Cheese muzzarella2=new Cheese("muzzarella2",10);
  final Cheese provolone=new Cheese("provolone",10);
  final Cheese provolone2=new Cheese("another cheese (provolone)",10);
  workingMemory.insert(stilton);
  workingMemory.insert(stilton2);
  workingMemory.insert(agedStilton);
  workingMemory.insert(brie);
  workingMemory.insert(brie2);
  workingMemory.insert(muzzarella);
  workingMemory.insert(muzzarella2);
  workingMemory.insert(provolone);
  workingMemory.insert(provolone2);
  workingMemory.fireAllRules();
  System.out.println(list.toString());
  assertEquals(4,list.size());
  assertEquals(stilton,list.get(0));
  assertEquals(brie,list.get(1));
  assertEquals(agedStilton,list.get(2));
  assertEquals(provolone,list.get(3));
}
