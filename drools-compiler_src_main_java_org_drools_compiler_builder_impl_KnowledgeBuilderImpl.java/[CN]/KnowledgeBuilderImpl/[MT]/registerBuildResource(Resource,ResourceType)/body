{
  InternalResource ires=(InternalResource)resource;
  if (ires.getResourceType() == null) {
    ires.setResourceType(type);
  }
 else   if (ires.getResourceType() != type) {
    addBuilderResult(new ResourceTypeDeclarationWarning(resource,ires.getResourceType(),type));
  }
  if (ResourceType.CHANGE_SET == type) {
    try {
      ChangeSet changeSet=parseChangeSet(resource);
      List<Resource> resources=new ArrayList<Resource>();
      resources.add(resource);
      for (      Resource addedRes : changeSet.getResourcesAdded()) {
        resources.add(addedRes);
      }
      for (      Resource modifiedRes : changeSet.getResourcesModified()) {
        resources.add(modifiedRes);
      }
      for (      Resource removedRes : changeSet.getResourcesRemoved()) {
        resources.add(removedRes);
      }
      buildResources.push(resources);
    }
 catch (    Exception e) {
      results.add(new DroolsError(){
        public String getMessage(){
          return "Unable to register changeset resource " + resource;
        }
        public int[] getLines(){
          return new int[0];
        }
      }
);
    }
  }
 else {
    buildResources.push(Arrays.asList(resource));
  }
}
