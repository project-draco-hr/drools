{
  String name=bind[0];
  String index=bind[1];
  String type=bind[2];
  String field=bind[3];
  String cast=null;
  if (bind.length == 5) {
    cast=bind[4];
  }
  try {
    Pattern pattern=reteTesterHelper.getPattern(Integer.parseInt(index),type);
    ClassFieldAccessorStore store=(ClassFieldAccessorStore)context.get("ClassFieldAccessorStore");
    InternalReadAccessor extractor=null;
    if (field.startsWith("[")) {
      extractor=store.getReader(ArrayElements.class,"elements",getClass().getClassLoader());
      extractor=new ArrayElementReader(extractor,Integer.parseInt(field.substring(1,field.length() - 1)),reteTesterHelper.getTypeResolver().resolveType(cast));
    }
 else {
      extractor=store.getReader(reteTesterHelper.getTypeResolver().resolveType(type),field,getClass().getClassLoader());
    }
    Declaration declr=new Declaration(name,extractor,pattern);
    context.put(name,declr);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Cannot create Binding for arguments: " + Arrays.toString(bind),e);
  }
}
