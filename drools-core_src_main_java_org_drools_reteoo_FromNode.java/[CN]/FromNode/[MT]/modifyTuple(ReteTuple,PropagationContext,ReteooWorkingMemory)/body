{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.remove(workingMemory,leftTuple);
  final Map matches=leftTuple.getTupleMatches();
  if (matches.isEmpty()) {
    assertTuple(leftTuple,context,workingMemory);
  }
 else {
    for (final Iterator it=matches.values().iterator(); it.hasNext(); ) {
      final TupleMatch tupleMatch=(TupleMatch)it.next();
      propagateRetractTuple(tupleMatch,context,workingMemory);
      workingMemory.getFactHandleFactory().destroyFactHandle(tupleMatch.getObjectMatches().getFactHandle());
    }
    leftTuple.clearTupleMatches();
    assertTuple(leftTuple,context,workingMemory);
  }
}
