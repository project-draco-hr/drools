{
  for (int i=0; i < value.fieldValues.size(); i++) {
    VerifyField fld=(VerifyField)value.fieldValues.get(i);
    Map<String,Object> st=new HashMap<String,Object>();
    st.put("__fact__",fact);
    if (fld.expected != null) {
      Object expectedVal=fld.expected.trim();
      if (fld.expected.startsWith("=")) {
        expectedVal=eval(fld.expected.substring(1),this.populatedData);
      }
      st.put("__expected__",expectedVal);
      ParserContext ctx=new ParserContext();
      for (      Map.Entry<String,Object> entry : st.entrySet()) {
        ctx.addInput(entry.getKey(),entry.getValue().getClass());
      }
      CompiledExpression expr=new ExpressionCompiler("__fact__." + fld.fieldName + " "+ fld.operator+ " __expected__").compile(ctx);
      fld.successResult=(Boolean)MVEL.executeExpression(expr,st);
      if (!fld.successResult) {
        Object actual=MVEL.executeExpression(new ExpressionCompiler("__fact__." + fld.fieldName).compile(ctx),st);
        fld.actualResult=(actual != null) ? actual.toString() : "";
        if (fld.operator.equals("==")) {
          fld.explanation="[" + value.name + "] field ["+ fld.fieldName+ "] was ["+ fld.actualResult+ "] expected ["+ fld.expected+ "].";
        }
 else {
          fld.explanation="[" + value.name + "] field ["+ fld.fieldName+ "] was not expected to be ["+ fld.actualResult+ "].";
        }
      }
 else {
        if (fld.operator.equals("==")) {
          fld.explanation="[" + value.name + "] field ["+ fld.fieldName+ "] was ["+ fld.expected+ "].";
        }
 else         if (fld.operator.equals("!=")) {
          fld.explanation="[" + value.name + "] field ["+ fld.fieldName+ "] was not ["+ fld.expected+ "].";
        }
      }
    }
  }
}
