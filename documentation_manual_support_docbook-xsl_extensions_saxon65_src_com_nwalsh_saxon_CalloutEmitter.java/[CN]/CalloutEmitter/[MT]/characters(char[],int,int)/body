{
  firstElement=false;
  if (lineNumber == 0) {
    lineNumber++;
    colNumber=1;
  }
  char[] newChars=new char[len];
  int pos=0;
  for (int count=start; count < start + len; count++) {
    if (calloutPos < calloutCount && callout[calloutPos].getLine() == lineNumber && callout[calloutPos].getColumn() == colNumber) {
      if (pos > 0) {
        rtfEmitter.characters(newChars,0,pos);
        pos=0;
      }
      closeOpenElements(rtfEmitter);
      while (calloutPos < calloutCount && callout[calloutPos].getLine() == lineNumber && callout[calloutPos].getColumn() == colNumber) {
        fCallout.formatCallout(rtfEmitter,callout[calloutPos]);
        calloutPos++;
      }
      openClosedElements(rtfEmitter);
    }
    if (chars[count] == '\n') {
      if (calloutPos < calloutCount && callout[calloutPos].getLine() == lineNumber && callout[calloutPos].getColumn() > colNumber) {
        if (pos > 0) {
          rtfEmitter.characters(newChars,0,pos);
          pos=0;
        }
        closeOpenElements(rtfEmitter);
        while (calloutPos < calloutCount && callout[calloutPos].getLine() == lineNumber && callout[calloutPos].getColumn() > colNumber) {
          formatPad(callout[calloutPos].getColumn() - colNumber);
          colNumber=callout[calloutPos].getColumn();
          while (calloutPos < calloutCount && callout[calloutPos].getLine() == lineNumber && callout[calloutPos].getColumn() == colNumber) {
            fCallout.formatCallout(rtfEmitter,callout[calloutPos]);
            calloutPos++;
          }
        }
        openClosedElements(rtfEmitter);
      }
      lineNumber++;
      colNumber=1;
    }
 else {
      colNumber++;
    }
    newChars[pos++]=chars[count];
  }
  if (pos > 0) {
    rtfEmitter.characters(newChars,0,pos);
  }
}
