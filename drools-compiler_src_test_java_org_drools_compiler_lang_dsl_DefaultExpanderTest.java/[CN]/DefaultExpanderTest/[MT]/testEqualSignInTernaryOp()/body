{
  String source="declare Person" + NL + "    age : int"+ NL+ "    name : String"+ NL+ "end"+ NL+ ""+ NL+ "rule \"Your First Rule\""+ NL+ "    when"+ NL+ "        There is a Person"+ NL+ "            - with a negative age"+ NL+ "            - with a positive age"+ NL+ "            - with a zero age"+ NL+ "    then"+ NL+ "        print \"Your First Rule\""+ NL+ ""+ NL+ "end"+ NL;
  String dsl="[when][]There is an? {entity}=${entity!lc}: {entity!ucfirst}()" + NL + "[when][]- with an? {attr} greater than {amount}={attr} > {amount!num}"+ NL+ "[then]print \"{text}\"=System.out.println(\"{text}\");"+ NL+ ""+ NL+ "[when]- with a {what} {attr}={attr} {what!zero?==0/!=0}"+ NL;
  String expected="declare Person" + NL + "    age : int"+ NL+ "    name : String"+ NL+ "end"+ NL+ ""+ NL+ "rule \"Your First Rule\""+ NL+ "    when"+ NL+ "        $person: Person(age  !=0, age  !=0, age  ==0)"+ NL+ "    then"+ NL+ "        System.out.println(\"Your First Rule\");"+ NL+ ""+ NL+ "end"+ NL;
  DSLTokenizedMappingFile file=new DSLTokenizedMappingFile();
  file.parseAndLoad(new StringReader(dsl));
  assertEquals(file.getErrors().toString(),0,file.getErrors().size());
  DefaultExpander ex=new DefaultExpander();
  ex.addDSLMapping(file.getMapping());
  String drl=ex.expand(source);
  assertFalse(ex.hasErrors());
  assertEquals(expected,drl);
}
