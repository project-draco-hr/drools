{
  String source="declare Person\n" + "    age : int\n" + "    name : String\n"+ "end\n"+ "\n"+ "rule \"Your First Rule\"\n"+ "    when\n"+ "        There is a Person\n"+ "            - with a negative age\n"+ "            - with a positive age\n"+ "            - with a zero age\n"+ "    then\n"+ "        print \"Your First Rule\"\n"+ "\n"+ "end\n";
  String dsl="[when][]There is an? {entity}=${entity!lc}: {entity!ucfirst}()\n" + "[when][]- with an? {attr} greater than {amount}={attr} > {amount!num}\n" + "[then]print \"{text}\"=System.out.println(\"{text}\");\n"+ "\n"+ "[when]- with a {what} {attr}={attr} {what!zero?==0/!=0}\n";
  String expected="declare Person\n" + "    age : int\n" + "    name : String\n"+ "end\n"+ "\n"+ "rule \"Your First Rule\"\n"+ "    when\n"+ "        $person: Person(age  !=0, age  !=0, age  ==0)\n"+ "    then\n"+ "        System.out.println(\"Your First Rule\");\n"+ "\n"+ "end\n";
  DSLTokenizedMappingFile file=new DSLTokenizedMappingFile();
  file.parseAndLoad(new StringReader(dsl));
  assertEquals(file.getErrors().toString(),0,file.getErrors().size());
  DefaultExpander ex=new DefaultExpander();
  ex.addDSLMapping(file.getMapping());
  String drl=ex.expand(source);
  assertFalse(ex.hasErrors());
  assertEquals(expected,drl);
}
