{
  BaseDescr result=null;
  DRL5Expressions.operator_return op=null;
  java.util.List<String> sa=null;
  DRL5Expressions.shiftExpression_return value=null;
  BaseDescr or=null;
  try {
    int alt42=2;
    int LA42_0=input.LA(1);
    if (((LA42_0 >= EQUALS && LA42_0 <= LESS) || LA42_0 == TILDE)) {
      alt42=1;
    }
 else     if ((LA42_0 == ID) && ((((helper.validateIdentifierKey(DroolsSoftKeywords.NOT))) || ((helper.isPluggableEvaluator(false)))))) {
      alt42=1;
    }
 else     if ((LA42_0 == LEFT_PAREN)) {
      alt42=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return result;
      }
      NoViableAltException nvae=new NoViableAltException("",42,0,input);
      throw nvae;
    }
switch (alt42) {
case 1:
{
        pushFollow(FOLLOW_operator_in_singleRestriction1931);
        op=operator();
        state._fsp--;
        if (state.failed)         return result;
        if (state.backtracking == 0) {
          helper.emit(Location.LOCATION_LHS_INSIDE_CONDITION_ARGUMENT);
        }
        int alt41=2;
        alt41=dfa41.predict(input);
switch (alt41) {
case 1:
{
            pushFollow(FOLLOW_squareArguments_in_singleRestriction1960);
            sa=squareArguments();
            state._fsp--;
            if (state.failed)             return result;
            pushFollow(FOLLOW_shiftExpression_in_singleRestriction1964);
            value=shiftExpression();
            state._fsp--;
            if (state.failed)             return result;
          }
        break;
case 2:
{
        pushFollow(FOLLOW_shiftExpression_in_singleRestriction1977);
        value=shiftExpression();
        state._fsp--;
        if (state.failed)         return result;
      }
    break;
}
if (state.backtracking == 0) {
  if (buildDescr) {
    BaseDescr descr=((value != null ? value.result : null) != null && ((!((value != null ? value.result : null) instanceof AtomicExprDescr)) || ((value != null ? input.toString(value.start,value.stop) : null).equals(((AtomicExprDescr)(value != null ? value.result : null)).getExpression())))) ? (value != null ? value.result : null) : new AtomicExprDescr((value != null ? input.toString(value.start,value.stop) : null));
    result=new RelationalExprDescr((op != null ? op.opr : null),(op != null ? op.negated : false),sa,((relationalExpression_scope)relationalExpression_stack.peek()).lsd,descr);
    if (((relationalExpression_scope)relationalExpression_stack.peek()).lsd instanceof BindingDescr) {
      ((relationalExpression_scope)relationalExpression_stack.peek()).lsd=new AtomicExprDescr(((BindingDescr)((relationalExpression_scope)relationalExpression_stack.peek()).lsd).getExpression());
    }
  }
  helper.emit(Location.LOCATION_LHS_INSIDE_CONDITION_END);
}
}
break;
case 2:
{
match(input,LEFT_PAREN,FOLLOW_LEFT_PAREN_in_singleRestriction2002);
if (state.failed) return result;
pushFollow(FOLLOW_orRestriction_in_singleRestriction2006);
or=orRestriction();
state._fsp--;
if (state.failed) return result;
match(input,RIGHT_PAREN,FOLLOW_RIGHT_PAREN_in_singleRestriction2008);
if (state.failed) return result;
if (state.backtracking == 0) {
result=or;
}
}
break;
}
}
 catch (RecognitionException re) {
throw re;
}
 finally {
}
return result;
}
