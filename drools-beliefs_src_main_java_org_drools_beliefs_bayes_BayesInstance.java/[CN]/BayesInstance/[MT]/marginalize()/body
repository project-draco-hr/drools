{
  Object[] args=new Object[targetParameterMap.length];
  args[0]=this;
  for (int i=1; i < targetParameterMap.length; i++) {
    int id=targetParameterMap[i];
    BayesVariableState varState=varStates[id];
    marginalize(varState);
    int highestIndex=0;
    double highestValue=0;
    int maximalCounts=1;
    for (int j=0, length=varState.getDistribution().length; j < length; j++) {
      if (varState.getDistribution()[j] > highestValue) {
        highestValue=varState.getDistribution()[j];
        highestIndex=j;
        maximalCounts=1;
      }
 else       if (j != 0 && varState.getDistribution()[j] == highestValue) {
        maximalCounts++;
      }
    }
    if (maximalCounts > 1) {
      int picked=new Random().nextInt(maximalCounts);
      int count=0;
      for (int j=0, length=varState.getDistribution().length; j < length; j++) {
        if (varState.getDistribution()[j] == highestValue) {
          highestIndex=j;
          if (++count > picked) {
            break;
          }
        }
      }
    }
    args[i]=varState.getOutcomes()[highestIndex];
  }
  try {
    System.out.println(targetConstructor);
    return targetConstructor.newInstance(args);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to instantiate " + targetClass.getSimpleName() + " "+ Arrays.asList(args),e);
  }
}
