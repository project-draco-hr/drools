{
  FactHandle[] lFacts=lhs.getTuple().getFactHandles();
  FactHandle[] rFacts=rhs.getTuple().getFactHandles();
  FactHandle leftLeastRecent=getLeastRecentFact(lFacts);
  FactHandle rightLeastRecent=getLeastRecentFact(rFacts);
  int lastIndex=(lFacts.length < rFacts.length) ? lFacts.length : rFacts.length;
  if (leftLeastRecent.getRecency() == rightLeastRecent.getRecency() && lastIndex > 1) {
    for (int i=0; i < lastIndex; i++) {
      leftLeastRecent=getLeastRecentFact(lFacts,leftLeastRecent);
      rightLeastRecent=getLeastRecentFact(rFacts,rightLeastRecent);
      if (leftLeastRecent.getRecency() != rightLeastRecent.getRecency()) {
        return (int)(rightLeastRecent.getRecency() - leftLeastRecent.getRecency());
      }
    }
  }
 else {
    return (int)(leftLeastRecent.getRecency() - rightLeastRecent.getRecency());
  }
  return rFacts.length - lFacts.length;
}
