{
  ProtobufMessages.Agenda _agenda=_ruleData.getAgenda();
  for (  org.drools.core.marshalling.impl.ProtobufMessages.Agenda.AgendaGroup _agendaGroup : _agenda.getAgendaGroupList()) {
    AgendaGroupQueueImpl group=(AgendaGroupQueueImpl)agenda.getAgendaGroup(_agendaGroup.getName(),context.ruleBase);
    group.setActive(_agendaGroup.getIsActive());
    group.setAutoDeactivate(_agendaGroup.getIsAutoDeactivate());
    group.setClearedForRecency(_agendaGroup.getClearedForRecency());
    group.hasRuleFlowListener(_agendaGroup.getHasRuleFlowLister());
    group.setActivatedForRecency(_agendaGroup.getActivatedForRecency());
    for (    org.drools.core.marshalling.impl.ProtobufMessages.Agenda.AgendaGroup.NodeInstance _nodeInstance : _agendaGroup.getNodeInstanceList()) {
      group.addNodeInstance(_nodeInstance.getProcessInstanceId(),_nodeInstance.getNodeInstanceId());
    }
    agenda.getAgendaGroupsMap().put(group.getName(),group);
  }
  for (  String _groupName : _agenda.getFocusStack().getGroupNameList()) {
    agenda.addAgendaGroupOnStack(agenda.getAgendaGroup(_groupName));
  }
  readActivations(context,_agenda.getMatchList(),_agenda.getRuleActivationList());
  agenda.setActivationsFilter(context.filter);
}
