{
  for (LeftTuple leftTuple=srcLeftTuples.getDeleteFirst(); leftTuple != null; ) {
    LeftTuple next=leftTuple.getStagedNext();
    InternalFactHandle fh=(InternalFactHandle)leftTuple.getObject();
    DroolsQuery dquery=(DroolsQuery)fh.getObject();
    if (dquery.isOpen()) {
      LeftInputAdapterNode lian=(LeftInputAdapterNode)qmem.getQuerySegmentMemory().getRootNode();
      LiaNodeMemory lm=(LiaNodeMemory)qmem.getQuerySegmentMemory().getNodeMemories().get(0);
      LeftTuple childLeftTuple=fh.getFirstLeftTuple();
      LeftInputAdapterNode.doDeleteObject(childLeftTuple,childLeftTuple.getPropagationContext(),qmem.getQuerySegmentMemory(),wm,lian,false,lm);
      flushTupleQuery(lm,wm);
    }
 else {
      LeftTuple childLeftTuple=leftTuple.getFirstChild();
      while (childLeftTuple != null) {
        childLeftTuple=RuleNetworkEvaluator.deleteLeftChild(childLeftTuple,trgLeftTuples,stagedLeftTuples);
        LiaNodeMemory lm=(LiaNodeMemory)qmem.getQuerySegmentMemory().getNodeMemories().get(0);
        flushTupleQuery(lm,wm);
      }
    }
    leftTuple.clearStaged();
    leftTuple=next;
  }
}
