{
  while (input.LA(1) != DRL6Lexer.EOF) {
    if (helper.validateIdentifierKey(DroolsSoftKeywords.END)) {
      int next=input.LA(2) == DRL6Lexer.SEMICOLON ? 3 : 2;
      if (input.LA(next) == DRL6Lexer.EOF || input.LA(next) == DRL6Lexer.AT || helper.validateStatement(next)) {
        break;
      }
    }
 else     if (helper.validateIdentifierKey(DroolsSoftKeywords.THEN)) {
      if (isNextTokenThenCompatible(input.LA(2))) {
        break;
      }
    }
    helper.emit(input.LT(1),DroolsEditorType.CODE_CHUNK);
    input.consume();
  }
  int last=input.LT(1).getTokenIndex();
  if (last <= first) {
    return "";
  }
  String chunk=input.toString(first,last);
  if (chunk.endsWith(DroolsSoftKeywords.END)) {
    chunk=chunk.substring(0,chunk.length() - DroolsSoftKeywords.END.length());
  }
 else   if (chunk.endsWith(DroolsSoftKeywords.THEN)) {
    chunk=chunk.substring(0,chunk.length() - DroolsSoftKeywords.THEN.length());
  }
  return chunk;
}
