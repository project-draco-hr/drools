{
  String str="";
  str+="package org.kie.test\n";
  str+="global java.util.List list\n";
  str+="rule rule1\n";
  str+="when\n";
  str+="  Integer(intValue > 0)\n";
  str+="then\n";
  str+="  list.add( 1 );\n";
  str+="end\n";
  str+="\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=JPAKnowledgeService.newStatefulKnowledgeSession(kbase,null,env);
  List<?> list=new ArrayList<Object>();
  for (int i=0; i < 2; i++) {
    new InsertAndFireThread(ksession.getId(),kbase,list).start();
  }
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
  assertEquals(6,list.size());
  ksession.dispose();
}
