{
  this.returnType=objectType;
  this.params=params;
  if (args != null) {
    this.abducibleArgs=Arrays.copyOf(args,args.length);
    this.arg2param=new int[abducibleArgs.length];
    for (int j=0; j < this.abducibleArgs.length; j++) {
      boolean matched=false;
      for (int k=0; k < params.length; k++) {
        if (abducibleArgs[j].equals(params[k])) {
          this.arg2param[j]=k;
          matched=true;
          break;
        }
        if (matched) {
          break;
        }
      }
      if (!matched) {
        throw new IllegalArgumentException("Constructor argument " + abducibleArgs[j] + " cannot be resolved ");
      }
    }
  }
 else {
    this.abducibleArgs=Arrays.copyOf(params,params.length - 1);
    this.arg2param=new int[abducibleArgs.length];
    for (int j=0; j < this.abducibleArgs.length; j++) {
      this.arg2param[j]=j;
    }
  }
  findConstructor(declarations);
}
