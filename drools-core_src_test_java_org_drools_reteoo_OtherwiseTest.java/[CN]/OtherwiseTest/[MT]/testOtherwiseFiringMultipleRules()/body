{
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase(RuleBase.RETEOO);
  final Package pkg=new Package("Miss Manners");
  pkg.setClassFieldAccessorCache(new ClassFieldAccessorCache(Thread.currentThread().getContextClassLoader()));
  final Rule rule1=getRule("rule1");
  pkg.addRule(rule1);
  final Rule rule2=getRule("rule2");
  pkg.addRule(rule2);
  final Rule ruleOtherwise1=getOtherwise("other1");
  pkg.addRule(ruleOtherwise1);
  final Rule ruleOtherwise2=getOtherwise("other2");
  pkg.addRule(ruleOtherwise2);
  ruleBase.addPackage(pkg);
  final WorkingMemory workingMemory=ruleBase.newStatefulSession();
  workingMemory.fireAllRules();
  assertFalse(((MockConsequence)rule1.getConsequence()).fired);
  assertFalse(((MockConsequence)rule2.getConsequence()).fired);
  assertTrue(((MockConsequence)ruleOtherwise1.getConsequence()).fired);
  assertTrue(((MockConsequence)ruleOtherwise2.getConsequence()).fired);
}
