{
  if (!node.isInUse()) {
    removeObjectSink((ObjectSink)node);
  }
  if (!this.isInUse()) {
    for (    InternalWorkingMemory workingMemory : workingMemories) {
      ObjectHashMap memory=(ObjectHashMap)workingMemory.getNodeMemory(this);
      Iterator it=memory.iterator();
      for (ObjectEntry entry=(ObjectEntry)it.next(); entry != null; entry=(ObjectEntry)it.next()) {
        LeftTuple leftTuple=(LeftTuple)entry.getKey();
        leftTuple.unlinkFromLeftParent();
        leftTuple.unlinkFromRightParent();
        InternalFactHandle handle=(InternalFactHandle)entry.getValue();
        workingMemory.getFactHandleFactory().destroyFactHandle(handle);
      }
      workingMemory.clearNodeMemory(this);
    }
  }
  this.tupleSource.remove(context,builder,this,workingMemories);
}
