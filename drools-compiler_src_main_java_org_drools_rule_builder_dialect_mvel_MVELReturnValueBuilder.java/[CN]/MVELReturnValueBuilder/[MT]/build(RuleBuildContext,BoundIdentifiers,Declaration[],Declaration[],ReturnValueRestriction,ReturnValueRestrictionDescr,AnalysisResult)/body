{
  boolean typesafe=context.isTypesafe();
  try {
    MVELDialect dialect=(MVELDialect)context.getDialect(context.getDialect().getId());
    Map<String,Class<?>> declIds=context.getDeclarationResolver().getDeclarationClasses(context.getRule());
    Pattern p=(Pattern)context.getBuildStack().peek();
    context.setTypesafe(((MVELAnalysisResult)analysis).isTypesafe());
    MVELCompilationUnit unit=dialect.getMVELCompilationUnit((String)returnValueRestrictionDescr.getContent(),analysis,previousDeclarations,localDeclarations,null,context,"drools",KnowledgeHelper.class);
    MVELReturnValueExpression expr=new MVELReturnValueExpression(unit,context.getDialect().getId());
    returnValueRestriction.setReturnValueExpression(expr);
    MVELDialectRuntimeData data=(MVELDialectRuntimeData)context.getPkg().getDialectRuntimeRegistry().getDialectData("mvel");
    data.addCompileable(returnValueRestriction,expr);
    expr.compile(data);
  }
 catch (  final Exception e) {
    copyErrorLocation(e,context.getRuleDescr());
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),context.getRuleDescr(),null,"Unable to build expression for 'returnValue' : " + e.getMessage() + "'"+ context.getRuleDescr().getSalience()+ "'"));
  }
 finally {
    context.setTypesafe(typesafe);
  }
}
