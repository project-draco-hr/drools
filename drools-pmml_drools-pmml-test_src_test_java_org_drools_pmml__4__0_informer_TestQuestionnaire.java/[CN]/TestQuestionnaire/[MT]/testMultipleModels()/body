{
  setKSession(getModelSession(new String[]{source,source2},VERBOSE));
  setKbase(getKSession().getKnowledgeBase());
  FactType petalNumType=getKbase().getFactType(packageName,"PetalNumber");
  FactType out=getKbase().getFactType(packageName,"OutSepLen");
  FactType sepalType=getKbase().getFactType(packageName,"SEPALLEN");
  getKSession().fireAllRules();
  getKSession().getWorkingMemoryEntryPoint("in_PetalNumber").insert(4);
  getKSession().getWorkingMemoryEntryPoint("in_PETALWID").insert(10);
  getKSession().getWorkingMemoryEntryPoint("in_SEPALWID").insert(33);
  getKSession().getWorkingMemoryEntryPoint("in_SPECIES").insert("virginica");
  getKSession().fireAllRules();
  checkFirstDataFieldOfTypeStatus(petalNumType,false,false,"Neupre",4);
  assertEquals(1,getKSession().getObjects(new ClassObjectFilter(InvalidAnswer.class)).size());
  assertEquals(2,getKSession().getObjects(new ClassObjectFilter(Note.class)).size());
  System.out.println("\n\n\n\n\n\n\n\n Before 2 \n");
  Answer ans1=new Answer("Neupre_PetalNumber","40");
  getKSession().insert(ans1);
  getKSession().fireAllRules();
  checkFirstDataFieldOfTypeStatus(petalNumType,true,false,"Neupre",40);
  assertEquals(0,getKSession().getObjects(new ClassObjectFilter(InvalidAnswer.class)).size());
  assertEquals(4,getKSession().getObjects(new ClassObjectFilter(Note.class)).size());
  checkFirstDataFieldOfTypeStatus(out,true,false,"Neupre",60);
  checkFirstDataFieldOfTypeStatus(sepalType,true,false,"Neupre",60);
  System.out.println("\n\n\n\n\n\n\n\n Before 3 \n");
  Answer ans2=new Answer("Neupre_PetalNumber","-4");
  getKSession().insert(ans2);
  getKSession().fireAllRules();
  checkFirstDataFieldOfTypeStatus(petalNumType,false,false,"Neupre",-4);
  assertEquals(1,getKSession().getObjects(new ClassObjectFilter(InvalidAnswer.class)).size());
  assertEquals(3,getKSession().getObjects(new ClassObjectFilter(Note.class)).size());
  checkFirstDataFieldOfTypeStatus(out,true,false,"Neupre",60);
  assertEquals(0,getKSession().getObjects(new ClassObjectFilter(sepalType.getFactClass())).size());
  System.out.println("\n\n\n\n\n\n\n\n Now 3 \n");
  Answer ans3=new Answer("Neupre_PetalNumber","44");
  getKSession().insert(ans3);
  getKSession().fireAllRules();
  checkFirstDataFieldOfTypeStatus(petalNumType,true,false,"Neupre",44);
  assertEquals(0,getKSession().getObjects(new ClassObjectFilter(InvalidAnswer.class)).size());
  assertEquals(4,getKSession().getObjects(new ClassObjectFilter(Note.class)).size());
  checkFirstDataFieldOfTypeStatus(out,true,false,"Neupre",61);
  checkFirstDataFieldOfTypeStatus(sepalType,true,false,"Neupre",61);
}
