{
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  if (sequentialMode) {
    kconf.setOption(RuleEngineOption.RETEOO);
    kconf.setOption(SequentialOption.YES);
  }
 else {
    kconf.setOption(SequentialOption.NO);
  }
  KnowledgeBase kbase=loadKnowledgeBase(kconf,file);
  StatelessKnowledgeSession ksession=createStatelessKnowledgeSession(kbase);
  final List list=new ArrayList();
  ksession.setGlobal("list",list);
  Object[] data=new Object[50000];
  for (int i=0; i < data.length; i++) {
    if (i % 2 == 0) {
      final Person p=new Person("p" + i,"stilton");
      data[i]=p;
    }
 else {
      data[i]=new Cheese("cheddar",i);
    }
  }
  if (timetoMeasureIterations == 0) {
    long start=System.currentTimeMillis();
    ksession.execute(CommandFactory.newInsertElements(Arrays.asList(data)));
    System.out.println("Time for " + message + ":"+ (System.currentTimeMillis() - start));
    assertTrue(list.size() > 0);
  }
 else {
    long start=System.currentTimeMillis();
    long end=start + timetoMeasureIterations;
    int count=0;
    while (System.currentTimeMillis() < end) {
      StatelessKnowledgeSession sess2=createStatelessKnowledgeSession(kbase);
      List list2=new ArrayList();
      sess2.setGlobal("list",list2);
      sess2.execute(CommandFactory.newInsertElements(Arrays.asList(data)));
      count++;
    }
    System.out.println("Iterations in for " + message + " : "+ count);
  }
}
