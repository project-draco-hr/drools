{
  Class newClazz=clazz;
  Method method=null;
  while (method == null && newClazz != Object.class) {
    String methodName=newClazz.getName();
    methodName="visit" + methodName.substring(methodName.lastIndexOf('.') + 1);
    try {
      method=getClass().getMethod(methodName,new Class[]{newClazz});
    }
 catch (    NoSuchMethodException e) {
      newClazz=newClazz.getSuperclass();
    }
  }
  if (newClazz == Object.class) {
    Class[] interfaces=clazz.getInterfaces();
    for (int i=0; i < interfaces.length; i++) {
      String methodName=interfaces[i].getName();
      methodName="visit" + methodName.substring(methodName.lastIndexOf('.') + 1);
      try {
        method=getClass().getMethod(methodName,new Class[]{interfaces[i]});
      }
 catch (      NoSuchMethodException e) {
      }
    }
  }
  if (method == null) {
    try {
      method=getClass().getMethod("visitObject",new Class[]{Object.class});
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  return method;
}
