{
  final Element element=parser.endElementBuilder();
  final RuleDescr ruleDescr=(RuleDescr)parser.getCurrent();
  final AndDescr lhs=ruleDescr.getLhs();
  if (lhs == null) {
    throw new SAXParseException("<rule> requires a LHS",parser.getLocator());
  }
  NodeList list=element.getElementsByTagName("rhs");
  if (list.getLength() == 0) {
    throw new SAXParseException("<rule> requires a <rh> child element",parser.getLocator());
  }
  ruleDescr.setConsequence(((org.w3c.dom.Text)list.item(0).getChildNodes().item(0)).getWholeText());
  NodeList attributes=element.getElementsByTagName("rule-attribute");
  for (int i=0, length=attributes.getLength(); i < length; i++) {
    final String name=((Element)attributes.item(i)).getAttribute("name");
    emptyAttributeCheck("rule-attribute","name",name,parser);
    final String value=((Element)attributes.item(i)).getAttribute("value");
    ruleDescr.addAttribute(new AttributeDescr(name,value));
  }
  ((PackageDescr)parser.getData()).addRule(ruleDescr);
  return ruleDescr;
}
