{
  if (create != null) {
    create.remove(recentObject);
  }
  if (update != null) {
    update.remove(recentObject);
  }
  if (delete != null) {
    if (recentObject instanceof InvalidAnswer) {
      delete.remove(recentObject);
    }
 else {
      delete.remove(new ItemId((Item)recentObject));
    }
  }
  boolean isCreate=(originalObject == null || !originalObject.isActive()) && newObject != null && newObject.isActive();
  boolean isUpdate=originalObject != null && originalObject.isActive() && newObject != null && newObject.isActive() && different(originalObject,newObject);
  boolean isDelete=originalObject != null && originalObject.isActive() && (newObject == null || !newObject.isActive());
  if (isCreate) {
    if (create == null) {
      create=new HashMap<Object,FactHandle>();
    }
    create.put(newObject,factHandle);
  }
  if (isUpdate) {
    if (update == null) {
      update=new ArrayList<Object>();
    }
    update.add(newObject);
  }
  if (isDelete) {
    if (delete == null) {
      delete=new ArrayList<Object>();
    }
    if (recentObject instanceof InvalidAnswer) {
      delete.add(recentObject);
    }
 else {
      delete.add(new ItemId((Item)recentObject));
    }
  }
  if (create != null && create.isEmpty()) {
    create=null;
  }
  if (update != null && update.isEmpty()) {
    update=null;
  }
  if (delete != null && delete.isEmpty()) {
    delete=null;
  }
}
