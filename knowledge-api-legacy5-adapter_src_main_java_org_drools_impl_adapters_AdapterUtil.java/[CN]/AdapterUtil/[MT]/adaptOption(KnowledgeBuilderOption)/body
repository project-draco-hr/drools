{
  if (option instanceof AccumulateFunctionOption) {
    AccumulateFunctionOption legacyOption=(AccumulateFunctionOption)option;
    return org.kie.internal.builder.conf.AccumulateFunctionOption.get(legacyOption.getName(),new AccumulateFunctionAdapter(legacyOption.getFunction()));
  }
  if (option instanceof ClassLoaderCacheOption) {
    ClassLoaderCacheOption legacyOption=(ClassLoaderCacheOption)option;
switch (legacyOption) {
case DISABLED:
      return org.kie.internal.builder.conf.ClassLoaderCacheOption.DISABLED;
case ENABLED:
    return org.kie.internal.builder.conf.ClassLoaderCacheOption.ENABLED;
}
}
if (option instanceof DefaultDialectOption) {
DefaultDialectOption legacyOption=(DefaultDialectOption)option;
return org.kie.internal.builder.conf.DefaultDialectOption.get(legacyOption.getName());
}
if (option instanceof DefaultPackageNameOption) {
DefaultPackageNameOption legacyOption=(DefaultPackageNameOption)option;
return org.kie.internal.builder.conf.DefaultPackageNameOption.get(legacyOption.getPackageName());
}
if (option instanceof DumpDirOption) {
DumpDirOption legacyOption=(DumpDirOption)option;
return org.kie.internal.builder.conf.DumpDirOption.get(legacyOption.getDirectory());
}
if (option instanceof EvaluatorOption) {
EvaluatorOption legacyOption=(EvaluatorOption)option;
return org.kie.internal.builder.conf.EvaluatorOption.get(legacyOption.getName(),(EvaluatorDefinition)legacyOption.getEvaluatorDefinition());
}
if (option instanceof KBuilderSeverityOption) {
KBuilderSeverityOption legacyOption=(KBuilderSeverityOption)option;
return org.kie.internal.builder.conf.KBuilderSeverityOption.get(legacyOption.getName(),legacyOption.getSeverity().toString());
}
if (option instanceof LanguageLevelOption) {
LanguageLevelOption legacyOption=(LanguageLevelOption)option;
switch (legacyOption) {
case DRL5:
  return org.kie.internal.builder.conf.LanguageLevelOption.DRL5;
case DRL6:
return org.kie.internal.builder.conf.LanguageLevelOption.DRL6;
}
}
if (option instanceof ProcessStringEscapesOption) {
ProcessStringEscapesOption legacyOption=(ProcessStringEscapesOption)option;
switch (legacyOption) {
case YES:
return org.kie.internal.builder.conf.ProcessStringEscapesOption.YES;
case NO:
return org.kie.internal.builder.conf.ProcessStringEscapesOption.NO;
}
}
if (option instanceof PropertySpecificOption) {
PropertySpecificOption legacyOption=(PropertySpecificOption)option;
switch (legacyOption) {
case ALLOWED:
return org.kie.internal.builder.conf.PropertySpecificOption.ALLOWED;
case ALWAYS:
return org.kie.internal.builder.conf.PropertySpecificOption.ALWAYS;
case DISABLED:
return org.kie.internal.builder.conf.PropertySpecificOption.DISABLED;
}
}
throw new UnsupportedOperationException("Unknown option " + option);
}
