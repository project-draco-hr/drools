{
  if (option instanceof org.drools.runtime.conf.BeliefSystemTypeOption) {
    org.drools.runtime.conf.BeliefSystemTypeOption legacyOption=(org.drools.runtime.conf.BeliefSystemTypeOption)option;
    return BeliefSystemTypeOption.get(legacyOption.getBeliefSystemType());
  }
  if (option instanceof org.drools.runtime.conf.ClockTypeOption) {
    org.drools.runtime.conf.ClockTypeOption legacyOption=(org.drools.runtime.conf.ClockTypeOption)option;
    return ClockTypeOption.get(legacyOption.getClockType());
  }
  if (option instanceof org.drools.runtime.conf.KeepReferenceOption) {
    org.drools.runtime.conf.KeepReferenceOption legacyOption=(org.drools.runtime.conf.KeepReferenceOption)option;
switch (legacyOption) {
case YES:
      return KeepReferenceOption.YES;
case NO:
    return KeepReferenceOption.NO;
}
}
if (option instanceof org.drools.runtime.conf.QueryListenerOption) {
org.drools.runtime.conf.QueryListenerOption legacyOption=(org.drools.runtime.conf.QueryListenerOption)option;
switch (legacyOption) {
case STANDARD:
  return QueryListenerOption.STANDARD;
case LIGHTWEIGHT:
return QueryListenerOption.LIGHTWEIGHT;
}
}
if (option instanceof org.drools.runtime.conf.TimerJobFactoryOption) {
org.drools.runtime.conf.TimerJobFactoryOption legacyOption=(org.drools.runtime.conf.TimerJobFactoryOption)option;
return TimerJobFactoryOption.get(legacyOption.getTimerJobType());
}
if (option instanceof org.drools.runtime.conf.WorkItemHandlerOption) {
org.drools.runtime.conf.WorkItemHandlerOption legacyOption=(org.drools.runtime.conf.WorkItemHandlerOption)option;
return WorkItemHandlerOption.get(legacyOption.getName(),new WorkItemHandlerAdapter(legacyOption.getHandler()));
}
throw new UnsupportedOperationException("Unknown option " + option);
}
