{
  if (numbers == null || numbers.length < MIN_NUMBER_OF_CONSTRAINTS) {
    return null;
  }
  BigDecimal gap=null;
  Number missingNumber=null;
  BigDecimal a=numbers[0];
  BigDecimal b=numbers[1];
  BigDecimal c=numbers[2];
  BigDecimal d=numbers[3];
  if (b.subtract(a).equals(c.subtract(b))) {
    gap=b.subtract(a);
  }
 else   if (c.subtract(b).equals(d.subtract(c))) {
    gap=c.subtract(b);
  }
 else   if (b.subtract(a).equals(d.subtract(c))) {
    gap=b.subtract(a);
  }
 else {
    return null;
  }
  for (int i=0; i < (numbers.length - 1); i++) {
    BigDecimal first=numbers[i];
    BigDecimal second=numbers[i + 1];
    if (missingNumber == null && !second.subtract(first).equals(gap)) {
      missingNumber=second.subtract(gap);
    }
 else     if (!second.subtract(first).equals(gap) && missingNumber != null) {
      return null;
    }
  }
  return missingNumber;
}
