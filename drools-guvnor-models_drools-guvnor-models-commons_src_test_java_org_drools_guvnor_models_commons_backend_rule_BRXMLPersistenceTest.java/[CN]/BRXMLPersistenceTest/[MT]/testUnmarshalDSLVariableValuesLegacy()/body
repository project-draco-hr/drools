{
  final String xml="<rule>" + "<name>BugReportRule</name>" + "<modelVersion>1.0</modelVersion>"+ "<attributes/>"+ "<metadataList/>"+ "<lhs>"+ "<dslSentence>"+ "<definition>If processInstance</definition>"+ "<values/>"+ "</dslSentence>"+ "</lhs>"+ "<rhs>"+ "<dslSentence>"+ "<definition>MyLog {myout}</definition>"+ "<values>"+ "<string>sample out rule 1</string>"+ "<string>myout</string>"+ "</values>"+ "</dslSentence>"+ "</rhs>"+ "<isNegated>false</isNegated>"+ "</rule>";
  RuleModel rm=BRXMLPersistence.getInstance().unmarshal(xml);
  assertNotNull(rm);
  assertEquals(1,rm.lhs.length);
  assertTrue(rm.lhs[0] instanceof DSLSentence);
  DSLSentence dslPattern=(DSLSentence)rm.lhs[0];
  assertEquals("If processInstance",dslPattern.getDefinition());
  assertEquals(0,dslPattern.getValues().size());
  assertEquals(1,rm.rhs.length);
  assertTrue(rm.rhs[0] instanceof DSLSentence);
  DSLSentence dslAction=(DSLSentence)rm.rhs[0];
  assertEquals("MyLog {myout}",dslAction.getDefinition());
  assertEquals(2,dslAction.getValues().size());
  assertTrue(dslAction.getValues().get(0) instanceof DSLVariableValue);
  assertTrue(dslAction.getValues().get(1) instanceof DSLVariableValue);
  assertEquals("sample out rule 1",dslAction.getValues().get(0).getValue());
  assertEquals("myout",dslAction.getValues().get(1).getValue());
}
