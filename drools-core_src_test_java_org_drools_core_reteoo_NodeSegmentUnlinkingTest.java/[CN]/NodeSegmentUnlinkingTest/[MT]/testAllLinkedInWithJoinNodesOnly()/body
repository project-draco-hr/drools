{
  setUp(JOIN_NODE);
  assertEquals(JoinNode.class,n3.getClass());
  KieBaseConfiguration kconf=org.kie.internal.KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(RuleEngineOption.PHREAK);
  InternalKnowledgeBase kBase=(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase(kconf);
  StatefulKnowledgeSessionImpl ksession=(StatefulKnowledgeSessionImpl)kBase.newStatefulKnowledgeSession();
  DefaultFactHandle f1=(DefaultFactHandle)ksession.insert("test1");
  n3.assertObject(f1,context,ksession);
  BetaMemory bm=(BetaMemory)ksession.getNodeMemory(n3);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n4.assertObject(f1,context,ksession);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n5.assertObject(f1,context,ksession);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n6.assertObject(f1,context,ksession);
  assertTrue(bm.getSegmentMemory().isSegmentLinked());
  n6.retractRightTuple(f1.getLastRightTuple(),context,ksession);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
}
