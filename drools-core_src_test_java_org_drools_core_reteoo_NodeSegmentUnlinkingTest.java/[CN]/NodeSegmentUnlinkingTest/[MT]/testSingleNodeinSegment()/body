{
  rule1=new RuleImpl("rule1");
  rule2=new RuleImpl("rule2");
  rule3=new RuleImpl("rule3");
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(RuleEngineOption.PHREAK);
  kBase=(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase(kconf);
  BuildContext buildContext=new BuildContext(kBase,kBase.getReteooBuilder().getIdGenerator());
  MockObjectSource mockObjectSource=new MockObjectSource(8);
  MockTupleSource mockTupleSource=new MockTupleSource(9);
  ObjectTypeNode otn=new ObjectTypeNode(2,null,new ClassObjectType(String.class),buildContext);
  BetaNode n1=new JoinNode(10,new LeftInputAdapterNode(3,otn,buildContext),mockObjectSource,new EmptyBetaConstraints(),buildContext);
  BetaNode n2=new JoinNode(11,n1,mockObjectSource,new EmptyBetaConstraints(),buildContext);
  BetaNode n3=new JoinNode(12,n1,mockObjectSource,new EmptyBetaConstraints(),buildContext);
  BetaNode n4=new JoinNode(13,n2,mockObjectSource,new EmptyBetaConstraints(),buildContext);
  BetaNode n5=new JoinNode(14,n2,mockObjectSource,new EmptyBetaConstraints(),buildContext);
  n1.addAssociation(rule1);
  n1.addAssociation(rule2);
  n1.addAssociation(rule3);
  n2.addAssociation(rule2);
  n2.addAssociation(rule3);
  n3.addAssociation(rule1);
  n4.addAssociation(rule2);
  n5.addAssociation(rule3);
  mockObjectSource.attach(buildContext);
  mockTupleSource.attach(buildContext);
  n1.attach(buildContext);
  n2.attach(buildContext);
  n3.attach(buildContext);
  n4.attach(buildContext);
  n5.attach(buildContext);
  StatefulKnowledgeSessionImpl ksession=(StatefulKnowledgeSessionImpl)kBase.newStatefulKnowledgeSession();
  createSegmentMemory(n2,ksession);
  BetaMemory bm=(BetaMemory)ksession.getNodeMemory(n1);
  assertNull(bm.getSegmentMemory());
  bm=(BetaMemory)ksession.getNodeMemory(n3);
  assertNull(bm.getSegmentMemory());
  bm=(BetaMemory)ksession.getNodeMemory(n4);
  assertNull(bm.getSegmentMemory());
  bm=(BetaMemory)ksession.getNodeMemory(n2);
  assertEquals(1,bm.getNodePosMaskBit());
  assertEquals(1,bm.getSegmentMemory().getAllLinkedMaskTest());
}
