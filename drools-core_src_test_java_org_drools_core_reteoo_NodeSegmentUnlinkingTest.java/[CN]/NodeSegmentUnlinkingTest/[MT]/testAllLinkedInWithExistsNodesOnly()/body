{
  setUp(EXISTS_NODE);
  assertEquals(ExistsNode.class,n3.getClass());
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(PhreakOption.ENABLED);
  AbstractWorkingMemory wm=new AbstractWorkingMemory(1,(ReteooRuleBase)RuleBaseFactory.newRuleBase((RuleBaseConfiguration)kconf));
  DefaultFactHandle f1=(DefaultFactHandle)wm.insert("test1");
  n3.assertObject(f1,context,wm);
  BetaMemory bm=(BetaMemory)wm.getNodeMemory(n3);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n4.assertObject(f1,context,wm);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n5.assertObject(f1,context,wm);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
  n6.assertObject(f1,context,wm);
  assertTrue(bm.getSegmentMemory().isSegmentLinked());
  n6.retractRightTuple(f1.getLastRightTuple(),context,wm);
  assertFalse(bm.getSegmentMemory().isSegmentLinked());
}
