{
  if (multiThreadedRepository == null) {
    File dir=new File("repository");
    log.info("DELETING test repo: " + dir.getAbsolutePath());
    deleteDir(dir);
    log.info("TEST repo was deleted.");
    try {
      multiThreadedRepository=RulesRepositoryConfigurator.getInstance(null).getJCRRepository();
      Session session=multiThreadedRepository.login(new SimpleCredentials("alan_parsons","password".toCharArray()));
      RulesRepositoryAdministrator admin=new RulesRepositoryAdministrator(session);
      if (admin.isRepositoryInitialized()) {
        admin.clearRulesRepository();
      }
      RulesRepositoryConfigurator.getInstance(null).setupRepository(session);
    }
 catch (    Exception e) {
      throw new RulesRepositoryException(e);
    }
  }
  Session session;
  try {
    session=multiThreadedRepository.login(new SimpleCredentials("alan_parsons","password".toCharArray()));
    RulesRepository threadLocalRepo=new RulesRepository(session);
    return threadLocalRepo;
  }
 catch (  LoginException e) {
    e.printStackTrace();
  }
catch (  RepositoryException e) {
    e.printStackTrace();
  }
  return null;
}
