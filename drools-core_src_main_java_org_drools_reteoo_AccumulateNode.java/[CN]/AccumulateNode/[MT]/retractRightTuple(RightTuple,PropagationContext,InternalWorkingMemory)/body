{
  final AccumulateMemory memory=(AccumulateMemory)workingMemory.getNodeMemory(this);
  final InternalFactHandle origin=(InternalFactHandle)context.getFactHandleOrigin();
  if (context.getType() == PropagationContext.EXPIRATION) {
    ((PropagationContextImpl)context).setFactHandle(null);
  }
  BetaMemory bm=memory.betaMemory;
  if (rightTuple.getMemory() == bm.getStagedAssertRightTupleList()) {
    bm.getStagedAssertRightTupleList().remove(rightTuple);
    rightTuple.setMemory(null);
  }
 else {
    bm.getRightTupleMemory().remove(rightTuple);
  }
  if (isUnlinkingEnabled() && bm.getAndDecCounter() == 0 && !isRightInputIsRiaNode()) {
    bm.unlinkNode(workingMemory);
  }
  removePreviousMatchesForRightTuple(rightTuple,context,workingMemory,memory,rightTuple.firstChild);
  if (context.getType() == PropagationContext.EXPIRATION) {
    ((PropagationContextImpl)context).setFactHandle(origin);
  }
}
