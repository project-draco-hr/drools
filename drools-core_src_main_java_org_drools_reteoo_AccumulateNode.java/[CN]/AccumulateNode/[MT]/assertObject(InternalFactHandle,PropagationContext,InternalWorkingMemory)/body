{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.add(workingMemory,handle);
  final BetaConstraints binder=constraints();
  for (final Iterator it=memory.leftTupleIterator(workingMemory,handle); it.hasNext(); ) {
    final ReteTuple leftTuple=(ReteTuple)it.next();
    if (binder.isAllowed(handle,leftTuple,workingMemory)) {
      this.modifyTuple(leftTuple,context,workingMemory);
    }
  }
}
