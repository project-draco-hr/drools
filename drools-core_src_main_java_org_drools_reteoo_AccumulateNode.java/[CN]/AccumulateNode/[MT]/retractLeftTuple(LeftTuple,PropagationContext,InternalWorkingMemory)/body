{
  final AccumulateMemory memory=(AccumulateMemory)workingMemory.getNodeMemory(this);
  memory.betaMemory.getLeftTupleMemory().remove(leftTuple);
  final AccumulateContext accctx=(AccumulateContext)leftTuple.getObject();
  if (accctx.getAction() != null) {
    context.removeInsertAction(accctx.getAction());
  }
  leftTuple.setObject(null);
  removePreviousMatchesForLeftTuple(leftTuple,workingMemory,memory,accctx);
  if (accctx.propagated) {
    this.sink.propagateRetractLeftTupleDestroyRightTuple(leftTuple,context,workingMemory);
  }
 else {
  }
}
