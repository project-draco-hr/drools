{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.add(workingMemory,leftTuple);
  final BetaNodeBinder binder=getJoinNodeBinder();
  List matchingObjects=new ArrayList();
  for (final Iterator it=memory.rightObjectIterator(workingMemory,leftTuple); it.hasNext(); ) {
    final ObjectMatches objectMatches=(ObjectMatches)it.next();
    final DefaultFactHandle handle=objectMatches.getFactHandle();
    if (attemptJoin(leftTuple,handle,objectMatches,binder,workingMemory) != null) {
      matchingObjects.add(handle.getObject());
    }
  }
  Object result=this.accumulator.accumulate(leftTuple,matchingObjects,workingMemory);
  DefaultFactHandle handle=new CalculatedObjectHandle(result);
  propagateAssertTuple(leftTuple,handle,context,workingMemory);
}
