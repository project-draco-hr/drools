{
  RightTuple rightTuple=modifyPreviousTuples.peekRightTuple();
  while (rightTuple != null && rightTuple.getRightTupleSink().getRightInputOtnId().before(getRightInputOtnId())) {
    modifyPreviousTuples.removeRightTuple();
    if (isUnlinkingEnabled()) {
      BetaMemory bm=getBetaMemory((BetaNode)rightTuple.getRightTupleSink(),wm);
      doDeleteRightTuple(rightTuple,wm,bm);
    }
 else {
      rightTuple.getRightTupleSink().retractRightTuple(rightTuple,context,wm);
    }
    rightTuple=modifyPreviousTuples.peekRightTuple();
  }
  if (rightTuple != null && rightTuple.getRightTupleSink().getRightInputOtnId().equals(getRightInputOtnId())) {
    modifyPreviousTuples.removeRightTuple();
    rightTuple.reAdd();
    if (intersect(context.getModificationMask(),rightInferredMask)) {
      if (isUnlinkingEnabled()) {
        BetaMemory bm=getBetaMemory(this,wm);
        rightTuple.setPropagationContext(context);
        doUpdateRightTuple(rightTuple,wm,bm);
      }
 else {
        modifyRightTuple(rightTuple,context,wm);
      }
    }
  }
 else {
    if (intersect(context.getModificationMask(),rightInferredMask)) {
      assertObject(factHandle,context,wm);
    }
  }
}
