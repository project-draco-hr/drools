{
  final BetaMemory memory=(BetaMemory)getBetaMemoryFromRightInput(this,wm);
  RightTuple rightTuple=createRightTuple(factHandle,this,pctx);
  if (isUnlinkingEnabled()) {
    boolean stagedInsertWasEmpty=false;
    if (streamMode) {
      stagedInsertWasEmpty=memory.getSegmentMemory().getTupleQueue().isEmpty();
      memory.getSegmentMemory().getTupleQueue().add(new RightTupleEntry(rightTuple,pctx,memory));
    }
 else {
      stagedInsertWasEmpty=memory.getStagedRightTuples().addInsert(rightTuple);
    }
    if (log.isTraceEnabled()) {
      log.trace("BetaNode insert={} stagedInsertWasEmpty={}",memory.getStagedRightTuples().insertSize(),stagedInsertWasEmpty);
    }
    if (memory.getAndIncCounter() == 0) {
      memory.linkNode(wm);
    }
 else     if (stagedInsertWasEmpty) {
      memory.getSegmentMemory().notifyRuleLinkSegment(wm);
    }
    if (pctx.getReaderContext() != null) {
      MarshallerReaderContext mrc=(MarshallerReaderContext)pctx.getReaderContext();
      mrc.filter.fireRNEAs(wm);
    }
    return;
  }
  assertRightTuple(rightTuple,pctx,wm);
}
