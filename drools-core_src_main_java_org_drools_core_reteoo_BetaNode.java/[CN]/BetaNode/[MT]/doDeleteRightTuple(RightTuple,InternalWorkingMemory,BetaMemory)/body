{
  RightTupleSets stagedRightTuples=memory.getStagedRightTuples();
  boolean stagedDeleteWasEmpty=false;
  if (isStreamMode()) {
    PropagationContext pctx=rightTuple.getPropagationContext();
    int propagationType=pctx.getType() == PropagationContext.MODIFICATION ? PropagationContext.DELETION : pctx.getType();
    stagedDeleteWasEmpty=memory.getSegmentMemory().getStreamQueue().addDelete(new RightTupleEntry(rightTuple,pctx,memory,propagationType));
    if (isLogTraceEnabled) {
      log.trace("{} delete queue={} size={} pctx={} lt={}",getClass().getSimpleName(),System.identityHashCode(memory.getSegmentMemory().getStreamQueue()),memory.getSegmentMemory().getStreamQueue().size(),PhreakPropagationContext.intEnumToString(rightTuple.getPropagationContext()),rightTuple);
    }
    if (stagedDeleteWasEmpty && !memory.getSegmentMemory().isSegmentLinked()) {
      GarbageCollector garbageCollector=((InternalAgenda)wm.getAgenda()).getGarbageCollector();
synchronized (garbageCollector) {
        for (        PathMemory pmem : memory.getSegmentMemory().getPathMemories()) {
          if (pmem.getNodeType() == NodeTypeEnums.RuleTerminalNode) {
            garbageCollector.add(pmem.getOrCreateRuleAgendaItem(wm));
          }
        }
        garbageCollector.increaseDeleteCounter();
      }
    }
  }
 else {
    stagedDeleteWasEmpty=stagedRightTuples.addDelete(rightTuple);
  }
  if (memory.getAndDecCounter() == 1) {
    memory.unlinkNode(wm);
  }
 else   if (stagedDeleteWasEmpty) {
    memory.setNodeDirty(wm);
  }
  ;
}
