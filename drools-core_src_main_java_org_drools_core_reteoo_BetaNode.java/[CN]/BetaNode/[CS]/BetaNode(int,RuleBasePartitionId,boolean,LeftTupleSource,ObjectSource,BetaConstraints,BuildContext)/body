{
  super(id,partitionId,partitionsEnabled);
  setLeftTupleSource(leftInput);
  this.rightInput=rightInput;
  if (NodeTypeEnums.RightInputAdaterNode == rightInput.getType()) {
    rightInputIsRiaNode=true;
  }
 else {
    rightInputIsRiaNode=false;
  }
  this.constraints=constraints;
  if (this.constraints == null) {
    throw new RuntimeException("cannot have null constraints, must at least be an instance of EmptyBetaConstraints");
  }
  initMasks(context,leftInput);
  this.unlinkingEnabled=context.getRuleBase().getConfiguration().isPhreakEnabled();
  this.unlinkedDisabledCount=0;
  if (rightInput instanceof WindowNode) {
    parentIsWindowNode=true;
  }
 else {
    parentIsWindowNode=false;
  }
}
