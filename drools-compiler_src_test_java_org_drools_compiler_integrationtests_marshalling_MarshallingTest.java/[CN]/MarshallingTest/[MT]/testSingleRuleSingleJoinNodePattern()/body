{
  String rule="package org.drools.compiler.test;\n";
  rule+="import org.drools.compiler.Person\n";
  rule+="import org.drools.compiler.Cheese\n";
  rule+="global java.util.List list\n";
  rule+="rule \"Rule 1\"\n";
  rule+="when\n";
  rule+="    $c : Cheese( ) \n";
  rule+="    $p : Person( cheese == $c ) \n";
  rule+="then\n";
  rule+="    list.add( $p );\n";
  rule+="end";
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new StringReader(rule));
  final Package pkg=builder.getPackage();
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  Map<Integer,BaseNode> nodes=RuleBaseNodes.getNodeMap((InternalRuleBase)ruleBase);
  assertEquals(4,nodes.size());
  assertEquals("Cheese",((ClassObjectType)((ObjectTypeNode)nodes.get(2)).getObjectType()).getClassType().getSimpleName());
  assertEquals("Person",((ClassObjectType)((ObjectTypeNode)nodes.get(4)).getObjectType()).getClassType().getSimpleName());
  assertTrue("Should end with JoinNode",nodes.get(5).getClass().getSimpleName().endsWith("JoinNode"));
  assertEquals("Rule 1",((RuleTerminalNode)nodes.get(6)).getRule().getName());
  StatefulSession session=ruleBase.newStatefulSession();
  List list=new ArrayList();
  session.setGlobal("list",list);
  Cheese stilton=new Cheese("stilton",25);
  Cheese brie=new Cheese("brie",49);
  Person bobba=new Person("bobba fet",32);
  bobba.setCheese(stilton);
  Person vadar=new Person("darth vadar",32);
  session.insert(stilton);
  session.insert(bobba);
  session.insert(vadar);
  session.insert(brie);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(1,((List)session.getGlobal("list")).size());
  assertEquals(bobba,((List)session.getGlobal("list")).get(0));
  Person c3po=new Person("c3p0",32);
  c3po.setCheese(stilton);
  session.insert(c3po);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(2,((List)session.getGlobal("list")).size());
  assertEquals(c3po,((List)session.getGlobal("list")).get(1));
  Person r2d2=new Person("r2d2",32);
  r2d2.setCheese(brie);
  session.insert(r2d2);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(3,((List)session.getGlobal("list")).size());
  assertEquals(r2d2,((List)session.getGlobal("list")).get(2));
}
