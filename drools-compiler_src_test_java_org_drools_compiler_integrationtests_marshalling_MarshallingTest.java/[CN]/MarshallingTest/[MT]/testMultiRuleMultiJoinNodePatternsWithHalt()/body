{
  String rule1="package org.drools.compiler.test;\n";
  rule1+="import org.drools.compiler.Person\n";
  rule1+="import org.drools.compiler.Cheese\n";
  rule1+="global java.util.List list\n";
  rule1+="rule \"Rule 1\"\n";
  rule1+="when\n";
  rule1+="    $c : Cheese( ) \n";
  rule1+="    $p : Person( cheese == $c ) \n";
  rule1+="then\n";
  rule1+="    list.add( $p );\n";
  rule1+="end";
  String rule2="package org.drools.compiler.test;\n";
  rule2+="import org.drools.compiler.Person\n";
  rule2+="import org.drools.compiler.Cheese\n";
  rule2+="import org.drools.compiler.Cell\n";
  rule2+="global java.util.List list\n";
  rule2+="rule \"Rule 2\"\n";
  rule2+="when\n";
  rule2+="    $c : Cheese( ) \n";
  rule2+="    $p : Person( cheese == $c ) \n";
  rule2+="    Cell( value == $p.age ) \n";
  rule2+="then\n";
  rule2+="    list.add( $p );\n";
  rule2+="end";
  String rule3="package org.drools.compiler.test;\n";
  rule3+="import org.drools.compiler.FactA\n";
  rule3+="import org.drools.compiler.FactB\n";
  rule3+="import org.drools.compiler.FactC\n";
  rule3+="import org.drools.compiler.Person\n";
  rule3+="global java.util.List list\n";
  rule3+="rule \"Rule 3\"\n";
  rule3+="when\n";
  rule3+="    $a : FactA( field2 > 10 ) \n";
  rule3+="    $b : FactB( f2 >= $a.field2 ) \n";
  rule3+="    $p : Person( name == \"darth vadar\" ) \n";
  rule3+="    $c : FactC( f2 >= $b.f2 ) \n";
  rule3+="then\n";
  rule3+="    list.add( $c );\n";
  rule3+="    drools.halt();\n";
  rule3+="end";
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new StringReader(rule1));
  builder.addPackageFromDrl(new StringReader(rule2));
  builder.addPackageFromDrl(new StringReader(rule3));
  final Package pkg=builder.getPackage();
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  StatefulSession session=ruleBase.newStatefulSession();
  List list=new ArrayList();
  session.setGlobal("list",list);
  Cheese stilton=new Cheese("stilton",25);
  Cheese brie=new Cheese("brie",49);
  Person bobba=new Person("bobba fet",30);
  bobba.setCheese(stilton);
  Person vadar=new Person("darth vadar",38);
  Person c3po=new Person("c3p0",17);
  c3po.setCheese(stilton);
  Person r2d2=new Person("r2d2",58);
  r2d2.setCheese(brie);
  session.insert(stilton);
  session.insert(bobba);
  session.insert(vadar);
  session.insert(brie);
  session.insert(c3po);
  session.insert(r2d2);
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(3,((List)session.getGlobal("list")).size());
  assertEquals(r2d2,((List)session.getGlobal("list")).get(0));
  assertEquals(c3po,((List)session.getGlobal("list")).get(1));
  assertEquals(bobba,((List)session.getGlobal("list")).get(2));
  session=getSerialisedStatefulSession(session);
  session.insert(new Cell(30));
  session.insert(new Cell(58));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(5,((List)session.getGlobal("list")).size());
  assertEquals(bobba,((List)session.getGlobal("list")).get(4));
  assertEquals(r2d2,((List)session.getGlobal("list")).get(3));
  session=getSerialisedStatefulSession(session);
  session.insert(new FactA(15));
  session.insert(new FactB(20));
  session.insert(new FactC(27));
  session.insert(new FactC(52));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(6,((List)session.getGlobal("list")).size());
  assertEquals(new FactC(52),((List)session.getGlobal("list")).get(5));
  session=getSerialisedStatefulSession(session);
  session.fireAllRules();
  assertEquals(7,((List)session.getGlobal("list")).size());
  assertEquals(new FactC(27),((List)session.getGlobal("list")).get(6));
}
