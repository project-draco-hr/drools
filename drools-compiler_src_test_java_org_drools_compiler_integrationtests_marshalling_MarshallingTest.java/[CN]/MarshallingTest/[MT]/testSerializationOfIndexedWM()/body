{
  Collection<KnowledgePackage> kpkgs=loadKnowledgePackages("../test_Serializable2.drl");
  kpkgs=SerializationHelper.serializeObject(kpkgs);
  KnowledgeBase kBase=getKnowledgeBase();
  kBase.addKnowledgePackages(kpkgs);
  kBase=SerializationHelper.serializeObject(kBase);
  Map map=new HashMap();
  map.put("x",kBase);
  map=SerializationHelper.serializeObject(map);
  kBase=(KnowledgeBase)map.get("x");
  org.kie.api.definition.rule.Rule[] rules=(org.kie.api.definition.rule.Rule[])kBase.getKnowledgePackage("org.drools.compiler").getRules().toArray(new org.kie.api.definition.rule.Rule[0]);
  assertEquals(3,rules.length);
  StatefulKnowledgeSession session=kBase.newStatefulKnowledgeSession();
  session.setGlobal("list",new ArrayList());
  final Primitives p=new Primitives();
  p.setBytePrimitive((byte)1);
  p.setShortPrimitive((short)2);
  p.setIntPrimitive((int)3);
  session.insert(p);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  assertEquals(1,session.getObjects().size());
  assertEquals(p,IteratorToList.convert(session.getObjects().iterator()).get(0));
  assertEquals(3,((InternalAgenda)session.getAgenda()).agendaSize());
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  session.fireAllRules();
  final List list=(List)session.getGlobal("list");
  assertEquals(3,list.size());
  assertEquals("1",list.get(0));
  assertEquals("2",list.get(1));
  assertEquals("3",list.get(2));
}
