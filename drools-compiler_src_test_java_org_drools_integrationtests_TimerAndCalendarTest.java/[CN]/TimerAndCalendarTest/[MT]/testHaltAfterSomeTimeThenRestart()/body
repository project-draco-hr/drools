{
  String drl="package org.drools.test;\n" + "\n" + "rule FireAtWill\n"+ "timer(int:0 1000)\n"+ "when  \n"+ "then\n"+ "  System.out.println(\"fire\"); \n"+ "  insert( new java.util.Date() );\n"+ "end\n"+ "\n"+ "rule ImDone\n"+ "when\n"+ "  String( this == \"halt\" )\n"+ "then\n"+ "  System.out.println(\"HALT\"); \n"+ "  drools.halt();\n"+ "end";
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new ByteArrayResource(drl.getBytes()));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  final StatefulSession workingMemory=ruleBase.newStatefulSession();
  new Thread(new Runnable(){
    public void run(){
      workingMemory.fireUntilHalt();
    }
  }
).start();
  Thread.sleep(2500);
  workingMemory.insert("halt");
  Thread.sleep(3000);
  new Thread(new Runnable(){
    public void run(){
      workingMemory.fireUntilHalt();
    }
  }
).start();
  Thread.sleep(2000);
  assertEquals(6,workingMemory.getFactCount());
}
