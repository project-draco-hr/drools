{
  String drl="package org.drools.test;" + "global java.util.List list; \n" + "\n"+ "\n"+ "rule FireAtWill\n"+ "timer(int:0 100)\n"+ "when  \n"+ "  eval(true)"+ "  String( this == \"trigger\" )"+ "then \n"+ "  list.add( 0 );\n"+ "end\n"+ "\n"+ "rule ImDone\n"+ "when\n"+ "  String( this == \"halt\" )\n"+ "then\n"+ "  drools.halt();\n"+ "end\n"+ "\n";
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new ByteArrayResource(drl.getBytes()));
  final Package pkg=builder.getPackage();
  RuleBase ruleBase=getRuleBase();
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  final StatefulSession ksession=ruleBase.newStatefulSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  FactHandle handle=ksession.insert("trigger");
  new Thread(new Runnable(){
    public void run(){
      ksession.fireUntilHalt();
    }
  }
).start();
  Thread.sleep(150);
  ksession.insert("halt");
  Thread.sleep(200);
  ksession.retract(handle);
  new Thread(new Runnable(){
    public void run(){
      ksession.fireUntilHalt();
    }
  }
).start();
  Thread.sleep(200);
  assertEquals(2,list.size());
  assertEquals(java.util.Arrays.asList(0,0),list);
}
