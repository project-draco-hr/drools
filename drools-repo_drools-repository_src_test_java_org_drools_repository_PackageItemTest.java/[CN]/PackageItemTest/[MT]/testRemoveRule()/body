{
  PackageItem rulePackageItem1=getRepo().createPackage("testRemoveRule","desc");
  AssetItem ruleItem1=rulePackageItem1.addAsset("testRemoveRule","test lhs content");
  ruleItem1.updateContent("test lhs content");
  Iterator rulesIt=rulePackageItem1.getAssets();
  AssetItem next=(AssetItem)rulesIt.next();
  assertFalse(rulesIt.hasNext());
  assertEquals("testRemoveRule",next.getName());
  ruleItem1.updateContent("new lhs");
  List rules=iteratorToList(rulePackageItem1.getAssets());
  assertNotNull(rules);
  assertEquals(1,rules.size());
  assertEquals("testRemoveRule",((AssetItem)rules.get(0)).getName());
  assertEquals("new lhs",((AssetItem)rules.get(0)).getContent());
  AssetItem ruleItem2=rulePackageItem1.addAsset("testRemoveRule2","test lhs content");
  rulePackageItem1.loadAsset(ruleItem1.getName()).remove();
  rulePackageItem1.rulesRepository.save();
  rules=iteratorToList(rulePackageItem1.getAssets());
  assertEquals(1,rules.size());
  assertEquals("testRemoveRule2",((AssetItem)rules.get(0)).getName());
  rulePackageItem1.loadAsset(ruleItem2.getName()).remove();
  rules=iteratorToList(rulePackageItem1.getAssets());
  assertNotNull(rules);
  assertEquals(0,rules.size());
}
