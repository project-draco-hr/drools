{
  validateUniqueRuleNames(packageDescr);
  String dialectName=this.defaultDialect;
  for (Iterator it=packageDescr.getAttributes().iterator(); it.hasNext(); ) {
    AttributeDescr value=(AttributeDescr)it.next();
    if ("dialect".equals(value.getName())) {
      dialectName=value.getValue();
      break;
    }
  }
  if (isEmpty(packageDescr.getNamespace())) {
    packageDescr.setNamespace(this.configuration.getDefaultPackageName());
  }
  checkNamespace(packageDescr.getNamespace());
  PackageRegistry pkgRegistry=this.pkgRegistryMap.get(packageDescr.getNamespace());
  if (pkgRegistry == null) {
    pkgRegistry=newPackage(packageDescr);
  }
 else {
    mergePackage(packageDescr);
  }
  pkgRegistry.setDialect(dialectName);
  if (!hasErrors()) {
    for (    final FactTemplateDescr factTempl : packageDescr.getFactTemplates()) {
      addFactTemplate(packageDescr,factTempl);
    }
    if (!packageDescr.getFunctions().isEmpty()) {
      for (final Iterator it=packageDescr.getFunctions().iterator(); it.hasNext(); ) {
        FunctionDescr functionDescr=(FunctionDescr)it.next();
        if (isEmpty(functionDescr.getNamespace())) {
          functionDescr.setNamespace(packageDescr.getNamespace());
        }
        if (isEmpty(functionDescr.getDialect())) {
          functionDescr.setDialect(pkgRegistry.getDialect());
        }
        preCompileAddFunction(functionDescr);
      }
      for (final Iterator it=packageDescr.getFunctions().iterator(); it.hasNext(); ) {
        FunctionDescr functionDescr=(FunctionDescr)it.next();
        addFunction(functionDescr);
      }
      compileAll();
      for (final Iterator it=packageDescr.getFunctions().iterator(); it.hasNext(); ) {
        FunctionDescr functionDescr=(FunctionDescr)it.next();
        postCompileAddFunction(functionDescr);
      }
    }
    for (final Iterator it=packageDescr.getRules().iterator(); it.hasNext(); ) {
      RuleDescr ruleDescr=(RuleDescr)it.next();
      if (isEmpty(ruleDescr.getNamespace())) {
        ruleDescr.setNamespace(packageDescr.getNamespace());
      }
      if (isEmpty(ruleDescr.getDialect())) {
        ruleDescr.addAttribute(new AttributeDescr("dialect",pkgRegistry.getDialect()));
      }
      addRule(ruleDescr);
    }
  }
  compileAll();
  reloadAll();
  updateResults();
  if (this.ruleBase != null) {
    for (final Iterator it=packageDescr.getRules().iterator(); it.hasNext(); ) {
      RuleDescr ruleDescr=(RuleDescr)it.next();
      pkgRegistry=this.pkgRegistryMap.get(ruleDescr.getNamespace());
      this.ruleBase.addRule(pkgRegistry.getPackage(),pkgRegistry.getPackage().getRule(ruleDescr.getName()));
    }
  }
}
