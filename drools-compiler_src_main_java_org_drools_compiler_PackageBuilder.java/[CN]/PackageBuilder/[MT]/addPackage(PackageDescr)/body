{
  validatePackageName(packageDescr);
  validateUniqueRuleNames(packageDescr);
  String dialectName=null;
  if (dialectName == null && this.dialect == null) {
    dialectName=configuration.getDefaultDialect();
    this.dialect=this.dialects.getDialect(dialectName);
  }
  if (dialectName != null) {
    this.dialect=this.dialects.getDialect(dialectName);
  }
 else   if (this.dialect == null) {
    this.dialect=this.dialects.getDialect(configuration.getDefaultDialect());
  }
  if (this.pkg != null) {
    mergePackage(this.pkg,packageDescr);
  }
 else {
    this.pkg=newPackage(packageDescr);
  }
  this.builder=new RuleBuilder();
  if (!hasErrors()) {
    for (final Iterator it=packageDescr.getFactTemplates().iterator(); it.hasNext(); ) {
      addFactTemplate((FactTemplateDescr)it.next());
    }
    for (final Iterator it=packageDescr.getFunctions().iterator(); it.hasNext(); ) {
      addFunction((FunctionDescr)it.next());
    }
    for (final Iterator it=packageDescr.getRules().iterator(); it.hasNext(); ) {
      addRule((RuleDescr)it.next());
    }
  }
  this.dialects.compileAll();
  this.results=this.dialects.addResults(this.results);
}
