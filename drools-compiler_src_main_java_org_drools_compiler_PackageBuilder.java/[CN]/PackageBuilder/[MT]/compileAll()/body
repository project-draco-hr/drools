{
  String[] classes=new String[this.generatedClassList.size()];
  this.generatedClassList.toArray(classes);
  final CompilationResult result=this.compiler.compile(classes,src,this.packageStoreWrapper,this.pkg.getPackageCompilationData().getClassLoader());
  if (result.getErrors().length > 0) {
    for (int i=0; i < result.getErrors().length; i++) {
      CompilationProblem err=result.getErrors()[i];
      ErrorHandler handler=(ErrorHandler)this.errorHandlers.get(err.getFileName());
      handler.addError(err);
    }
    Collection errors=this.errorHandlers.values();
    for (Iterator iter=errors.iterator(); iter.hasNext(); ) {
      ErrorHandler handler=(ErrorHandler)iter.next();
      if (!(handler instanceof RuleInvokerErrorHandler)) {
        this.results.add(handler.getError());
      }
 else {
        System.err.println("!!!! An error occurred compiling the invoker: " + handler.getError());
      }
    }
  }
}
