{
  if (cls.isPrimitive() || cls.isArray()) {
    return null;
  }
  TypeDeclaration tdecl=null;
  PackageRegistry pkgReg=null;
  if (this.cacheTypes == null) {
    this.cacheTypes=new HashMap<String,TypeDeclaration>();
  }
 else {
    tdecl=cacheTypes.get(cls.getName());
    if (tdecl != null) {
      return tdecl;
    }
  }
  tdecl=this.builtinTypes.get((cls.getName()));
  if (tdecl == null) {
    pkgReg=this.pkgRegistryMap.get(ClassUtils.getPackage(cls));
    if (pkgReg != null) {
      tdecl=pkgReg.getPackage().getTypeDeclaration(cls.getSimpleName());
    }
  }
  if (tdecl == null) {
    tdecl=new TypeDeclaration(cls.getSimpleName());
  }
  Set<TypeDeclaration> tdecls=new LinkedHashSet<TypeDeclaration>();
  buildTypeDeclarations(cls,tdecls);
  TypeDeclaration[] tarray=tdecls.toArray(new TypeDeclaration[tdecls.size()]);
  for (int i=tarray.length - 1; i >= 0; i--) {
    TypeDeclaration currentTDecl=tarray[i];
    if ((tdecl.getSetMask() & TypeDeclaration.ROLE_BIT) != TypeDeclaration.ROLE_BIT) {
      tdecl.setRole(currentTDecl.getRole());
    }
    if ((tdecl.getSetMask() & TypeDeclaration.FORMAT_BIT) != TypeDeclaration.FORMAT_BIT) {
      tdecl.setFormat(currentTDecl.getFormat());
    }
    if ((tdecl.getSetMask() & TypeDeclaration.TYPESAFE_BIT) != TypeDeclaration.TYPESAFE_BIT) {
      tdecl.setTypesafe(currentTDecl.isTypesafe());
    }
  }
  this.cacheTypes.put(cls.getName(),tdecl);
  return tdecl;
}
