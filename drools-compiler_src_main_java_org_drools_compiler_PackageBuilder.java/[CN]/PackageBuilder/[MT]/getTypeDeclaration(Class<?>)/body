{
  if (cls.isPrimitive() || cls.isArray()) {
    return null;
  }
  TypeDeclaration tdecl=null;
  if (this.cacheTypes != null) {
    tdecl=cacheTypes.get(cls.getName());
    if (tdecl != null) {
      return tdecl;
    }
  }
  tdecl=this.builtinTypes.get((cls.getName()));
  PackageRegistry pkgReg=null;
  if (tdecl == null) {
    String pack=ClassUtils.getPackage(cls);
    pkgReg=this.pkgRegistryMap.get(pack);
    if (pkgReg != null) {
      tdecl=pkgReg.getPackage().getTypeDeclaration(cls.getSimpleName());
    }
  }
  Class<?> originalCls=cls;
  while (tdecl == null && cls != Object.class) {
    cls=cls.getSuperclass();
    if (cls == null) {
      break;
    }
    tdecl=this.builtinTypes.get((cls.getName()));
    if (tdecl == null) {
      pkgReg=this.pkgRegistryMap.get(ClassUtils.getPackage(cls));
      if (pkgReg != null) {
        tdecl=pkgReg.getPackage().getTypeDeclaration(cls.getSimpleName());
      }
    }
  }
  if (tdecl == null) {
    Class<?>[] intfs=originalCls.getInterfaces();
    for (    Class<?> intf : intfs) {
      cls=intf;
      pkgReg=this.pkgRegistryMap.get(ClassUtils.getPackage(cls));
      if (pkgReg != null) {
        tdecl=pkgReg.getPackage().getTypeDeclaration(cls.getSimpleName());
      }
      while (tdecl == null) {
        cls=cls.getSuperclass();
        if (cls == null) {
          break;
        }
        tdecl=this.builtinTypes.get((cls.getName()));
        if (tdecl == null) {
          pkgReg=this.pkgRegistryMap.get(ClassUtils.getPackage(cls));
          if (pkgReg != null) {
            tdecl=pkgReg.getPackage().getTypeDeclaration(cls.getSimpleName());
          }
        }
      }
    }
  }
  if (this.cacheTypes == null) {
    this.cacheTypes=new HashMap<String,TypeDeclaration>();
  }
  this.cacheTypes.put(originalCls.getName(),tdecl);
  return tdecl;
}
