{
  ProcessBuilder processBuilder=new ProcessBuilder(this);
  try {
    processBuilder.addProcessFromFile(processSource);
    Process[] processes=processBuilder.getProcesses();
    for (int i=0; i < processes.length; i++) {
      buildActions(processes[i]);
      pkg.addRuleFlow(processes[i]);
    }
    this.results.addAll(processBuilder.getErrors());
  }
 catch (  Exception e) {
    if (e instanceof RuntimeException) {
      throw (RuntimeException)e;
    }
    this.results.add(new RuleFlowLoadError("Unable to load the rule flow.",e));
  }
  if (this.pkg != null) {
    this.dialectRegistry.compileAll();
    if (this.pkg.getPackageCompilationData().isDirty()) {
      this.pkg.getPackageCompilationData().reload();
    }
  }
  this.results=this.dialectRegistry.addResults(this.results);
}
