{
  String s1="package org.drools.test.pack1;\n" + "\n" + "declare Event\n"+ "@role(event)"+ "  id    : int\n"+ "end\n";
  String s2="package org.drools.test.pack2;\n" + "\n" + "import org.drools.test.pack1.Event;\n"+ "\n"+ "declare Event end\n"+ "\n"+ "declare SubEvent extends Event\n"+ "end\n"+ "\n"+ "rule \"Init\"\n"+ "when\n"+ "then\n"+ "  insert( new SubEvent( 1 ) );\n"+ "  insert( new SubEvent( 2 ) );\n"+ "end\n"+ "\n"+ "rule \"Seq\"\n"+ "when\n"+ "  $s1 : SubEvent()\n"+ "  $s2 : SubEvent( this after $s1 )\n"+ "then\n"+ "  System.out.println( $s1 + \" after \" + $s1 );\n"+ "end \n"+ "\n"+ "rule \"Seq 2 \"\n"+ "when\n"+ "  $s1 : Event()\n"+ "  $s2 : Event( this after $s1 )\n"+ "then\n"+ "  System.out.println( $s1 + \" after II \" + $s1 );\n"+ "end";
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=createKAgent(kbase,false,true);
  ByteArrayResource bres=(ByteArrayResource)ResourceFactory.newByteArrayResource(s1.getBytes());
  bres.setResourceType(ResourceType.DRL);
  ChangeSetImpl cs=new ChangeSetImpl();
  cs.setResourcesAdded(Arrays.<Resource>asList(bres));
  kagent.applyChangeSet(cs);
  KnowledgePackage pack=kagent.getKnowledgeBase().getKnowledgePackage("org.drools.test.pack1");
  assertNotNull(pack);
  assertEquals(0,pack.getRules().size());
  assertEquals(1,pack.getFactTypes().size());
  ByteArrayResource bres2=(ByteArrayResource)ResourceFactory.newByteArrayResource(s2.getBytes());
  bres2.setResourceType(ResourceType.DRL);
  ChangeSetImpl cs2=new ChangeSetImpl();
  cs2.setResourcesAdded(Arrays.<Resource>asList(bres2));
  kagent.applyChangeSet(cs2);
  pack=kagent.getKnowledgeBase().getKnowledgePackage("org.drools.test.pack1");
  assertNotNull(pack);
  assertEquals(0,pack.getRules().size());
  assertEquals(1,pack.getFactTypes().size());
  KnowledgePackage pack2=kagent.getKnowledgeBase().getKnowledgePackage("org.drools.test.pack2");
  assertNotNull(pack2);
  assertEquals(3,pack2.getRules().size());
  assertEquals(1,pack2.getFactTypes().size());
  assertEquals(3,kagent.getKnowledgeBase().newStatefulKnowledgeSession().fireAllRules());
}
