{
  fileManager.write("rule1.drl",createDefaultRule("rule1"));
  fileManager.write("rule2.drl",createDefaultRule("rule2"));
  String xml1="";
  xml1+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml1+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml1+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml1+="    <add> ";
  xml1+="        <resource source='http://localhost:" + this.getPort() + "/rule1.drl' type='DRL' />";
  xml1+="        <resource source='http://localhost:" + this.getPort() + "/rule2.drl' type='DRL' />";
  xml1+="    </add> ";
  xml1+="</change-set>";
  File fxml=fileManager.write("changeset2.xml",xml1);
  String xml2="";
  xml2+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml2+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml2+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set http://anonsvn.jboss.org/repos/labs/labs/jbossrules/trunk/drools-api/src/main/resources/change-set-1.0.0.xsd' >";
  xml2+="    <add> ";
  xml2+="        <resource source='http://localhost:" + this.getPort() + "/changeset2.xml' type='CHANGE_SET' />";
  xml2+="    </add> ";
  xml2+="</change-set>";
  File fxm2=fileManager.write("changeset.xml",xml1);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase);
  kagent.applyChangeSet(ResourceFactory.newUrlResource(fxm2.toURI().toURL()));
  StatefulKnowledgeSession ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule1"));
  assertTrue(list.contains("rule2"));
  list.clear();
  fileManager.write("rule1.drl",createDefaultRule("rule3"));
  scan(kagent);
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule3"));
  assertTrue(list.contains("rule2"));
  kagent.dispose();
}
