{
  String rule1=this.createDefaultRule("rule1");
  File f1=fileManager.newFile("rule1.drl");
  Writer output=new BufferedWriter(new FileWriter(f1));
  output.write(rule1);
  output.close();
  String rule2=this.createDefaultRule("rule2");
  File f2=fileManager.newFile("rule2.drl");
  output=new BufferedWriter(new FileWriter(f2));
  output.write(rule2);
  output.close();
  String xml1="";
  xml1+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml1+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml1+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set drools-change-set-5.0.xsd' >";
  xml1+="    <add> ";
  xml1+="        <resource source='http://localhost:" + this.getPort() + "/rule1.drl' type='DRL' />";
  xml1+="        <resource source='http://localhost:" + this.getPort() + "/rule2.drl' type='DRL' />";
  xml1+="    </add> ";
  xml1+="</change-set>";
  File fxml1=fileManager.newFile("changeset2.xml");
  output=new BufferedWriter(new FileWriter(fxml1));
  output.write(xml1);
  output.close();
  String xml2="";
  xml2+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml2+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml2+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set drools-change-set-5.0.xsd' >";
  xml2+="    <add> ";
  xml2+="        <resource source='http://localhost:" + this.getPort() + "/changeset2.xml' type='CHANGE_SET' />";
  xml2+="    </add> ";
  xml2+="</change-set>";
  File fxml2=fileManager.newFile("changeset.xml");
  output=new BufferedWriter(new FileWriter(fxml2));
  output.write(xml2);
  output.close();
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  KnowledgeAgent kagent=this.createKAgent(kbase);
  kagent.applyChangeSet(ResourceFactory.newUrlResource(fxml2.toURI().toURL()));
  kbaseUpdated=false;
  StatefulKnowledgeSession ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule1"));
  assertTrue(list.contains("rule2"));
  list.clear();
  Thread.sleep(2000);
  rule1=this.createDefaultRule("rule3");
  output=new BufferedWriter(new FileWriter(f1));
  output.write(rule1);
  output.close();
  this.waitUntilKBaseUpdate();
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule3"));
  assertTrue(list.contains("rule2"));
  kagent.monitorResourceChangeEvents(false);
}
