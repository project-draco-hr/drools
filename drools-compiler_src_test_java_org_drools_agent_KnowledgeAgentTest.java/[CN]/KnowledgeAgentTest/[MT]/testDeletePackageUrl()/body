{
  String rule1="";
  rule1+="package org.drools.test1\n";
  rule1+="global java.util.List list\n";
  rule1+="rule rule1\n";
  rule1+="when\n";
  rule1+="then\n";
  rule1+="list.add( drools.getRule().getName() );\n";
  rule1+="end\n";
  String rule2="";
  rule2+="package org.drools.test2\n";
  rule2+="global java.util.List list\n";
  rule2+="rule rule2\n";
  rule2+="when\n";
  rule2+="then\n";
  rule2+="list.add( drools.getRule().getName() );\n";
  rule2+="end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(rule1.getBytes()),ResourceType.DRL);
  kbuilder.add(ResourceFactory.newByteArrayResource(rule2.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  Map<String,KnowledgePackage> map=new HashMap<String,KnowledgePackage>();
  for (  KnowledgePackage pkg : kbuilder.getKnowledgePackages()) {
    map.put(pkg.getName(),pkg);
  }
  writePackage((KnowledgePackage)map.get("org.drools.test1"),fileManager.newFile("pkg1.pkg"));
  writePackage((KnowledgePackage)map.get("org.drools.test2"),fileManager.newFile("pkg2.pkg"));
  String xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set drools-change-set-5.0.xsd' >";
  xml+="    <add> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/pkg1.pkg' type='PKG' />";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/pkg2.pkg' type='PKG' />";
  xml+="    </add> ";
  xml+="</change-set>";
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  ResourceChangeScannerConfiguration sconf=ResourceFactory.getResourceChangeScannerService().newResourceChangeScannerConfiguration();
  sconf.setProperty("drools.resource.scanner.interval","2");
  ResourceFactory.getResourceChangeScannerService().configure(sconf);
  KnowledgeAgentConfiguration aconf=KnowledgeAgentFactory.newKnowledgeAgentConfiguration();
  aconf.setProperty("drools.agent.scanDirectories","true");
  aconf.setProperty("drools.agent.scanResources","true");
  aconf.setProperty("drools.agent.newInstance","true");
  KnowledgeAgent kagent=KnowledgeAgentFactory.newKnowledgeAgent("test agent",kbase,aconf);
  kagent.applyChangeSet(ResourceFactory.newByteArrayResource(xml.getBytes()));
  StatefulKnowledgeSession ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(2,list.size());
  assertTrue(list.contains("rule1"));
  assertTrue(list.contains("rule2"));
  list.clear();
  Thread.sleep(2000);
  xml="";
  xml+="<change-set xmlns='http://drools.org/drools-5.0/change-set'";
  xml+="    xmlns:xs='http://www.w3.org/2001/XMLSchema-instance'";
  xml+="    xs:schemaLocation='http://drools.org/drools-5.0/change-set drools-change-set-5.0.xsd' >";
  xml+="    <remove> ";
  xml+="        <resource source='http://localhost:" + this.getPort() + "/pkg2.pkg' type='PKG' />";
  xml+="    </remove> ";
  xml+="</change-set>";
  kagent.applyChangeSet(ResourceFactory.newByteArrayResource(xml.getBytes()));
  Thread.sleep(3000);
  ksession=kagent.getKnowledgeBase().newStatefulKnowledgeSession();
  list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.dispose();
  assertEquals(1,list.size());
  assertTrue(list.contains("rule1"));
  kagent.monitorResourceChangeEvents(false);
}
