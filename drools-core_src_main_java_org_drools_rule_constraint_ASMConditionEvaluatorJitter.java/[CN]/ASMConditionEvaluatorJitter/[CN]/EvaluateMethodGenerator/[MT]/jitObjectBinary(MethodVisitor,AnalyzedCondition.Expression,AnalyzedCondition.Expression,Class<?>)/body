{
  if (left.isFixed()) {
    throw new RuntimeException("Unmanaged fixed left");
  }
  Class<?> leftType=left.getType();
  Class<?> rightType=right.getType();
  jitTopExpression(mv,left,type != null ? type : leftType);
  store(2,leftType);
  jitTopExpression(mv,right,type != null ? type : rightType);
  store(4,rightType);
  Label notNullLabel=jitLeftIsNull(mv,type == null || leftType == type ? jitNullSafeOperationStart(mv) : jitNullSafeCoercion(mv,leftType,type));
  AnalyzedCondition.BooleanOperator operation=analyzedCondition.getOperation();
  if (operation.isEquality()) {
    checkNullEquality(mv,operation);
  }
 else {
    mv.visitInsn(ICONST_0);
  }
  returnOnNull(mv,notNullLabel);
  loadOperands(mv,right,type,rightType);
  if (operation == AnalyzedCondition.BooleanOperator.CONTAINS) {
    invokeStatic(EvaluatorHelper.class,"contains",boolean.class,Object.class,Object.class);
  }
 else   if (operation == AnalyzedCondition.BooleanOperator.MATCHES) {
    invokeVirtual(type,"matches",boolean.class,String.class);
  }
 else   if (operation.isEquality()) {
    if (type.isInterface()) {
      invokeInterface(type,"equals",boolean.class,Object.class);
    }
 else {
      invokeVirtual(type,"equals",boolean.class,Object.class);
    }
    if (operation == AnalyzedCondition.BooleanOperator.NE) {
      analyzedCondition.toggleNegation();
    }
  }
 else {
    if (type.isInterface()) {
      invokeInterface(type,"compareTo",int.class,type);
    }
 else {
      invokeVirtual(type,"compareTo",int.class,type);
    }
    mv.visitInsn(ICONST_0);
    jitPrimitiveOperation(mv,operation,int.class);
  }
}
