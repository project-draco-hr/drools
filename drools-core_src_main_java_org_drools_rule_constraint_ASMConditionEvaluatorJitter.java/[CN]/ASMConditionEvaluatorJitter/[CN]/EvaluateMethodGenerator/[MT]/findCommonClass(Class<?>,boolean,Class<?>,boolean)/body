{
  Class<?> result=null;
  if (class1 == class2) {
    result=class1;
  }
 else   if (class1 == NullType.class) {
    result=convertFromPrimitiveType(class2);
  }
 else   if (class2 == NullType.class) {
    result=convertFromPrimitiveType(class1);
  }
 else   if (class1 == Object.class) {
    result=convertFromPrimitiveType(class2);
    if (Number.class.isAssignableFrom(result) && !result.getSimpleName().startsWith("Big")) {
      result=Double.class;
    }
  }
 else   if (class2 == Object.class) {
    result=convertFromPrimitiveType(class1);
    if (Number.class.isAssignableFrom(result) && !result.getSimpleName().startsWith("Big")) {
      result=Double.class;
    }
  }
 else   if (class1 == String.class) {
    result=convertFromPrimitiveType(class2);
  }
 else   if (class2 == String.class) {
    result=convertFromPrimitiveType(class1);
  }
  if (result == null) {
    result=findCommonClass(class1,class2,primitive2);
  }
  if (result == null) {
    result=findCommonClass(class2,class1,primitive1);
  }
  if (result == null) {
    throw new RuntimeException("Cannot find a common class between " + class1.getName() + " and "+ class2.getName()+ " ||  "+ class1.hashCode()+ " vs "+ class2.hashCode());
  }
  return result == Number.class ? Double.class : result;
}
