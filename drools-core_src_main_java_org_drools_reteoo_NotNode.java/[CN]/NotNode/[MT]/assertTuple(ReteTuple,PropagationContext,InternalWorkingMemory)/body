{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  memory.add(workingMemory,leftTuple);
  final BetaNodeBinder binder=getJoinNodeBinder();
  for (final Iterator it=memory.rightObjectIterator(workingMemory,leftTuple); it.hasNext(); ) {
    final ObjectMatches objectMatches=(ObjectMatches)it.next();
    final InternalFactHandle handle=objectMatches.getFactHandle();
    attemptJoin(leftTuple,handle,objectMatches,binder,workingMemory);
  }
  if (leftTuple.matchesSize() == 0) {
    this.sink.propagateAssertTuple(leftTuple,context,workingMemory);
  }
}
