{
  final BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  if (!memory.getObjectMemory().remove(handle)) {
    return;
  }
  Iterator it=memory.getTupleMemory().iterator();
  this.constraints.updateFromFactHandle(handle);
  for (ReteTuple tuple=(ReteTuple)it.next(); tuple != null; tuple=(ReteTuple)it.next()) {
    if (this.constraints.isAllowedCachedRight(tuple)) {
      tuple.setMatches(tuple.getMatches() - 1);
      if (tuple.getMatches() == 0) {
        this.sink.propagateAssertTuple(tuple,context,workingMemory);
      }
    }
  }
}
