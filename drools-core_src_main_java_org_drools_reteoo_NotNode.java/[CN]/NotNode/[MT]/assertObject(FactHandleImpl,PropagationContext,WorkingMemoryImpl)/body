{
  BetaMemory memory=(BetaMemory)workingMemory.getNodeMemory(this);
  ObjectMatches objectMatches=memory.add(handle);
  BetaNodeBinder binder=getJoinNodeBinder();
  for (ReteTuple leftTuple=memory.getFirstTuple(); leftTuple != null; leftTuple=(ReteTuple)leftTuple.getNext()) {
    int previousSize=leftTuple.matchesSize();
    attemptJoin(leftTuple,handle,objectMatches,binder,workingMemory);
    if (previousSize == 0 && leftTuple.matchesSize() != 0) {
      propagateRetractTuple(leftTuple,context,workingMemory);
    }
  }
}
