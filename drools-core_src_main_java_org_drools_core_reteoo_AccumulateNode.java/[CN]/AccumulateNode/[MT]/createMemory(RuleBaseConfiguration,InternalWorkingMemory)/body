{
  AccumulateMemory memory=this.accumulate.isMultiFunction() ? new MultiAccumulateMemory(this.accumulate.getAccumulators()) : new SingleAccumulateMemory(this.accumulate.getAccumulators()[0]);
  memory.betaMemory=this.constraints.createBetaMemory(config,NodeTypeEnums.AccumulateNode);
  memory.workingMemoryContext=this.accumulate.createWorkingMemoryContext();
  memory.resultsContext=this.resultBinder.createContext();
  memory.alphaContexts=new ContextEntry[this.resultConstraints.length];
  for (int i=0; i < this.resultConstraints.length; i++) {
    memory.alphaContexts[i]=this.resultConstraints[i].createContextEntry();
  }
  return memory;
}
