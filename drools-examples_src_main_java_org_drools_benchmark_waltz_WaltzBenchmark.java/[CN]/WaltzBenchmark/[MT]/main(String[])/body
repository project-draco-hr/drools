{
  try {
    PackageBuilder builder=new PackageBuilder();
    builder.addPackageFromDrl(new InputStreamReader(WaltzBenchmark.class.getResourceAsStream("waltz.drl")));
    Package pkg=builder.getPackage();
    final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
    ruleBase.addPackage(pkg);
    WorkingMemory workingMemory=ruleBase.newWorkingMemory();
    String filename;
    if (args.length != 0) {
      String arg=args[0];
      filename=arg;
    }
 else {
      filename="waltz12.dat";
    }
    loadLines(workingMemory,"waltz50.dat");
    Stage stage=new Stage(Stage.DUPLICATE);
    workingMemory.assertObject(stage);
    long start=System.currentTimeMillis();
    workingMemory.fireAllRules();
    System.out.println(System.currentTimeMillis() - start);
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
