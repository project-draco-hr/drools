{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("waltz.drl",WaltzBenchmark.class),ResourceType.DRL);
  Collection<KnowledgePackage> pkgs=kbuilder.getKnowledgePackages();
  final KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(pkgs);
  long totalTime=0;
  for (int i=0; i < 5; i++) {
    StatefulKnowledgeSession session=kbase.newStatefulKnowledgeSession();
    String filename;
    if (args.length != 0) {
      String arg=args[0];
      filename=arg;
    }
 else {
      filename="waltz50.dat";
    }
    loadLines(session,filename);
    Stage stage=new Stage(Stage.DUPLICATE);
    session.insert(stage);
    long start=System.currentTimeMillis();
    session.setGlobal("time",start);
    session.fireAllRules();
    long time=System.currentTimeMillis() - start;
    System.err.println(time);
    totalTime+=time;
    session.dispose();
  }
  System.out.println("average : " + totalTime / 5);
}
