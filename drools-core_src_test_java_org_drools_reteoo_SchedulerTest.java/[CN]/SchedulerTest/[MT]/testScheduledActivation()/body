{
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  final ReteooWorkingMemory workingMemory=(ReteooWorkingMemory)ruleBase.newStatefulSession();
  final Rule rule=new Rule("test-rule");
  final RuleTerminalNode node=new RuleTerminalNode(1,new MockTupleSource(2),rule,rule.getLhs());
  final List data=new ArrayList();
  rule.setConsequence(new org.drools.spi.Consequence(){
    /** 
 */
    private static final long serialVersionUID=-7225205391633485219L;
    public void evaluate(    final KnowledgeHelper knowledgeHelper,    final WorkingMemory workingMemory){
      data.add("tested");
    }
  }
);
  final Duration duration=new Duration(){
    /** 
 */
    private static final long serialVersionUID=5737133396760056769L;
    public long getDuration(    Tuple tuple){
      return 100;
    }
  }
;
  rule.setDuration(duration);
  final PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  final ReteTuple tuple=new ReteTuple(new DefaultFactHandle(1,"cheese"));
  assertEquals(0,data.size());
  node.assertTuple(tuple,context,workingMemory);
  Thread.sleep(300);
  assertEquals(1,data.size());
}
