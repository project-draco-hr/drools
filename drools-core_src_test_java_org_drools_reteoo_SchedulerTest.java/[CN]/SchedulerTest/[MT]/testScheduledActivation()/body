{
  RuleBase ruleBase=new RuleBaseImpl();
  WorkingMemoryImpl workingMemory=(WorkingMemoryImpl)ruleBase.newWorkingMemory();
  final Rule rule=new Rule("test-rule");
  final TerminalNode node=new TerminalNode(1,new MockTupleSource(2),rule);
  final List data=new ArrayList();
  rule.setConsequence(new org.drools.spi.Consequence(){
    public void invoke(    Activation activation,    WorkingMemory workingMemory){
      data.add("tested");
    }
  }
);
  Duration duration=new Duration(){
    public long getDuration(    Tuple tuple){
      return 100;
    }
  }
;
  rule.setDuration(duration);
  PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  ReteTuple tuple=new ReteTuple(new FactHandleImpl(1));
  assertEquals(0,data.size());
  node.assertTuple(tuple,context,(WorkingMemoryImpl)workingMemory);
  Thread.sleep(300);
  assertEquals(1,data.size());
}
