{
  RuleBase ruleBase=new RuleBaseImpl();
  final WorkingMemoryImpl workingMemory=(WorkingMemoryImpl)ruleBase.newWorkingMemory();
  final Agenda agenda=workingMemory.getAgenda();
  final Rule rule=new Rule("test-rule");
  final TerminalNode node=new TerminalNode(1,new MockTupleSource(2),rule);
  final List data=new ArrayList();
  Duration duration=new Duration(){
    public long getDuration(    Tuple tuple){
      return 100;
    }
  }
;
  rule.setDuration(duration);
  rule.setConsequence(new org.drools.spi.Consequence(){
    public void evaluate(    KnowledgeHelper knowledgeHelper,    WorkingMemory workingMemory){
      if (data.size() < 3) {
        PropagationContext context2=new PropagationContextImpl(0,0,rule,knowledgeHelper.getActivation());
        ReteTuple tuple2=new ReteTuple(new FactHandleImpl(2));
        node.assertTuple(tuple2,context2,(WorkingMemoryImpl)workingMemory);
      }
      data.add("tested");
    }
  }
);
  PropagationContext context1=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  ReteTuple tuple1=new ReteTuple(new FactHandleImpl(1));
  node.assertTuple(tuple1,context1,(WorkingMemoryImpl)workingMemory);
  assertEquals(0,data.size());
  Thread.sleep(500);
  assertEquals(4,data.size());
}
