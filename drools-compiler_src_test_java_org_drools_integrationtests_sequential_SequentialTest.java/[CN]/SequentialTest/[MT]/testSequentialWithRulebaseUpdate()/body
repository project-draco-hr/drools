{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("simpleSalience.drl",getClass()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(SequentialOption.YES);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase(kconf);
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  kbase=SerializationHelper.serializeObject(kbase);
  StatelessKnowledgeSession ksession=kbase.newStatelessKnowledgeSession();
  final List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.execute(new Person("pob"));
  kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newClassPathResource("test_Dynamic3.drl",DynamicRulesTest.class),ResourceType.DRL);
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  ksession=kbase.newStatelessKnowledgeSession();
  ksession.setGlobal("list",list);
  Person person=new Person("bop");
  ksession.execute(person);
  assertEquals(7,list.size());
  assertEquals("rule 3",list.get(0));
  assertEquals("rule 2",list.get(1));
  assertEquals("rule 1",list.get(2));
  assertEquals("rule 3",list.get(3));
  assertEquals("rule 2",list.get(4));
  assertEquals("rule 1",list.get(5));
  assertEquals(person,list.get(6));
}
