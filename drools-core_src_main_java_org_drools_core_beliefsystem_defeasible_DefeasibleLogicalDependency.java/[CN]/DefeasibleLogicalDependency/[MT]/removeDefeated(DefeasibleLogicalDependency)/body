{
  defeated.setDefeatedBy(null);
  if (this.rootDefeated.getObject() == defeated) {
    removeFirst();
  }
 else   if (this.tailDefeated.getObject() == defeated) {
    removeLast();
  }
 else {
    LinkedListEntry<DefeasibleLogicalDependency> entry=this.rootDefeated;
    while (entry.getObject() != defeated) {
      entry=entry.getNext();
    }
    entry.getPrevious().setNext(entry.getNext());
    (entry.getNext()).setPrevious(entry.getPrevious());
    entry.nullPrevNext();
  }
}
