{
  final Rule rule=new Rule("only columns");
  final Column c1=new Column(0,new ClassObjectType(String.class));
  final Column c2=new Column(1,new ClassObjectType(String.class));
  final Column c3=new Column(2,new ClassObjectType(String.class));
  final GroupElement lhsroot=GroupElementFactory.newAndInstance();
  lhsroot.addChild(c1);
  lhsroot.addChild(c2);
  lhsroot.addChild(c3);
  rule.setLhs(lhsroot);
  final Consequence consequence=new Consequence(){
    public void evaluate(    KnowledgeHelper knowledgeHelper,    WorkingMemory workingMemory) throws Exception {
      System.out.println("Consequence!");
    }
  }
;
  rule.setConsequence(consequence);
  final List terminals=this.builder.addRule(rule,this.rulebase,new ReteooBuilder.IdGenerator(1));
  Assert.assertEquals("Rule must have a single terminal node",1,terminals.size());
  final RuleTerminalNode terminal=(RuleTerminalNode)terminals.get(0);
}
