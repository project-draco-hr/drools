{
  TimerService clock=workingMemory.getTimerService();
  long currentTime=clock.getCurrentTime();
  SlidingTimeWindowContext queue=(SlidingTimeWindowContext)context;
  EventFactHandle handle=queue.queue.peek();
synchronized (queue.queue) {
    while (handle != null && isExpired(currentTime,handle)) {
      queue.expiringHandle=handle;
      queue.queue.remove();
      if (handle.isValid()) {
        final PropagationContext pctx=new PropagationContextImpl(workingMemory.getNextPropagationIdCounter(),PropagationContext.EXPIRATION,null,null,handle);
        WindowTupleList list=(WindowTupleList)memory.events.get(handle);
        for (RightTuple tuple=list.getFirstWindowTuple(); tuple != null; tuple=list.getFirstWindowTuple()) {
          tuple.setPropagationContext(pctx);
          tuple.getRightTupleSink().retractRightTuple(tuple,pctx,workingMemory);
          pctx.evaluateActionQueue(workingMemory);
          tuple.unlinkFromRightParent();
        }
      }
      queue.expiringHandle=null;
      handle=queue.queue.peek();
    }
  }
  updateNextExpiration(handle,workingMemory,memory,this,queue);
}
