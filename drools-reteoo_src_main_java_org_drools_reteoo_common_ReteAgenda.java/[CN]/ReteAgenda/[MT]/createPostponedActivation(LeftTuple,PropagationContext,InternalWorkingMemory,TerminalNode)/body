{
  final RuleImpl rule=rtn.getRule();
  AgendaItem item;
  if (rule.getCalendars() != null) {
    long timestamp=workingMemory.getSessionClock().getCurrentTime();
    for (    String cal : rule.getCalendars()) {
      if (!workingMemory.getCalendars().get(cal).isTimeIncluded(timestamp)) {
        return false;
      }
    }
  }
  InternalAgendaGroup agendaGroup=(InternalAgendaGroup)getAgendaGroup(rule.getAgendaGroup());
  if (rule.isLockOnActive() && agendaGroup.isActive() && agendaGroup.getAutoFocusActivator() != context) {
    return false;
  }
  item=createAgendaItem(tuple,0,context,rtn,null,agendaGroup);
  item.setSalience(rule.getSalience().getValue(new DefaultKnowledgeHelper(item,workingMemory),rule,workingMemory));
  if (activationsFilter != null && !activationsFilter.accept(item,workingMemory,rtn)) {
    return false;
  }
  item.setQueued(true);
  tuple.increaseActivationCountForEvents();
  ((EventSupport)workingMemory).getAgendaEventSupport().fireActivationCreated(item,workingMemory);
  return true;
}
