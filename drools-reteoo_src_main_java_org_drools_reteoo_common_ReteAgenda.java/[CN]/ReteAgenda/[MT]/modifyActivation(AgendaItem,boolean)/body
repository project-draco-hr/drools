{
  if (declarativeAgenda) {
    InternalFactHandle factHandle=activation.getActivationFactHandle();
    workingMemory.getEntryPointNode().modifyActivation(factHandle,activation.getPropagationContext(),workingMemory);
    if (previouslyActive) {
      return;
    }
    if (activation.isCanceled() || (activation.getBlockers() != null && activation.getBlockers().size() > 0)) {
      return;
    }
    InternalActivationGroup activationGroup=getStageActivationsGroup();
    if (activation.getActivationGroupNode() != null && activation.getActivationGroupNode().getActivationGroup() == activationGroup) {
      return;
    }
    activationGroup.addActivation(activation);
  }
 else {
    if (!previouslyActive) {
      addActivation(activation,true);
    }
 else {
      Timer timer=activation.getRule().getTimer();
      if (timer != null && timer instanceof ExpressionIntervalTimer) {
        ScheduledAgendaItem schItem=(ScheduledAgendaItem)activation;
        removeScheduleItem(schItem);
        scheduleItem(schItem,workingMemory);
      }
    }
  }
}
