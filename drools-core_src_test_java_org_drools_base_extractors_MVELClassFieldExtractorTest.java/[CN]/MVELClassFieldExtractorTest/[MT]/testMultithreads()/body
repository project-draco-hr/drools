{
  final int THREAD_COUNT=30;
  try {
    final Vector errors=new Vector();
    final Thread t[]=new Thread[THREAD_COUNT];
    for (int j=0; j < 10; j++) {
      for (int i=0; i < t.length; i++) {
        final int ID=i;
        t[i]=new Thread(){
          public void run(){
            try {
              final int ITERATIONS=300;
              for (int k=0; k < ITERATIONS; k++) {
                String value=(String)extractor.getValue(null,person[ID % 2]);
                if (!home[ID % 2].getStreet().equals(value)) {
                  errors.add("THREAD(" + ID + "): Wrong value at iteration "+ k+ ". Value='"+ value+ "'\n");
                }
              }
            }
 catch (            Exception ex) {
              ex.printStackTrace();
              errors.add(ex);
            }
          }
        }
;
        t[i].start();
      }
      for (int i=0; i < t.length; i++) {
        t[i].join();
      }
    }
    if (!errors.isEmpty()) {
      fail(" Errors occured during execution\n" + errors.toString());
    }
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
    fail("Unexpected exception running test: " + e.getMessage());
  }
}
