{
  if (object == null) {
    return null;
  }
  try {
    this.wm.startOperation();
    ObjectTypeConf typeConf=this.typeConfReg.getObjectTypeConf(this.entryPoint,object);
    if (logical && !typeConf.isTMSEnabled()) {
      enableTMS(object,typeConf);
    }
    InternalFactHandle handle=null;
    final PropagationContext propagationContext=this.pctxFactory.createPropagationContextImpl(this.wm.getNextPropagationIdCounter(),PropagationContext.INSERTION,rule,(activation == null) ? null : activation.getTuple(),handle,entryPoint);
    if (this.wm.isSequential()) {
      handle=createHandle(object,typeConf);
      propagationContext.setFactHandle(handle);
      insert(handle,object,rule,activation,typeConf,propagationContext);
      return handle;
    }
    try {
      this.lock.lock();
      this.ruleBase.readLock();
      handle=this.objectStore.getHandleForObject(object);
      if (typeConf.isTMSEnabled()) {
        TruthMaintenanceSystem tms=getTruthMaintenanceSystem();
        if (handle != null) {
          propagationContext.setFactHandle(handle);
          insertWhenHandleExists(object,tmsValue,logical,rule,activation,typeConf,handle,tms,propagationContext);
          return handle;
        }
        EqualityKey key=tms.get(object);
        if (logical) {
          if (key != null && key.getStatus() == EqualityKey.STATED) {
            return null;
          }
          if (key == null) {
            handle=createHandle(object,typeConf);
            key=new EqualityKey(handle);
            handle.setEqualityKey(key);
            tms.put(key);
            key.setStatus(EqualityKey.JUSTIFIED);
          }
 else {
            handle=key.getFactHandle();
          }
          tms.addLogicalDependency(handle,object,tmsValue,activation,activation.getPropagationContext(),rule,typeConf);
          return key.getFactHandle();
        }
 else {
          if (key == null) {
            handle=createHandle(object,typeConf);
            key=new EqualityKey(handle);
            handle.setEqualityKey(key);
            tms.put(key);
          }
 else           if (key.getStatus() == EqualityKey.JUSTIFIED) {
            key.setStatus(EqualityKey.STATED);
            final InternalFactHandle justifiedHandle=key.getFactHandle();
            ((PropagationContextImpl)propagationContext).setFactHandle(justifiedHandle);
            TruthMaintenanceSystemHelper.clearLogicalDependencies(justifiedHandle,propagationContext);
            return update(justifiedHandle,true,object,Long.MAX_VALUE,Object.class,activation);
          }
 else {
            handle=createHandle(object,typeConf);
            handle.setEqualityKey(key);
            key.addFactHandle(handle);
          }
          key.setStatus(EqualityKey.STATED);
        }
      }
 else {
        if (handle != null) {
          return handle;
        }
        handle=createHandle(object,typeConf);
      }
      propagationContext.setFactHandle(handle);
      if (dynamic || typeConf.isDynamic()) {
        addPropertyChangeListener(handle,dynamic);
      }
      insert(handle,object,rule,activation,typeConf,propagationContext);
    }
  finally {
      this.ruleBase.readUnlock();
      this.lock.unlock();
    }
    return handle;
  }
  finally {
    this.wm.endOperation();
  }
}
