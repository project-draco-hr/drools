{
  this.configurationStack=new LinkedList();
  this.parents=new LinkedList();
  this.handlers=new HashMap();
  this.handlers.put("package",new PackageHandler(this));
  this.handlers.put("rule",new RuleHandler(this));
  this.handlers.put("query",new QueryHandler(this));
  this.handlers.put("attribute",null);
  this.handlers.put("function",new FunctionHandler(this));
  this.handlers.put("lhs",new AndHandler(this));
  this.handlers.put("and-restriction-connective",new RestrictionConnectiveHandler(this));
  this.handlers.put("or-restriction-connective",new RestrictionConnectiveHandler(this));
  this.handlers.put("and-conditional-element",new AndHandler(this));
  this.handlers.put("or-conditional-element",new OrHandler(this));
  this.handlers.put("and-constraint-connective",new AndHandler(this));
  this.handlers.put("or-constraint-connective",new OrHandler(this));
  this.handlers.put("not",new NotHandler(this));
  this.handlers.put("exists",new ExistsHandler(this));
  this.handlers.put("eval",new EvalHandler(this));
  this.handlers.put("pattern",new PatternHandler(this));
  this.handlers.put("from",new FromHandler(this));
  this.handlers.put("forall",new ForallHandler(this));
  this.handlers.put("collect",new CollectHandler(this));
  this.handlers.put("accumulate",new AccumulateHandler(this));
  this.handlers.put("field-constraint",new FieldConstraintHandler(this));
  this.handlers.put("literal-restriction",new LiteralRestrictionHandler(this));
  this.handlers.put("variable-restriction",new VariableRestrictionsHandler(this));
  this.handlers.put("predicate",new PredicateHandler(this));
  this.handlers.put("return-value-restriction",new ReturnValueRestrictionHandler(this));
  this.handlers.put("qualified-identifier-restriction",new QualifiedIdentifierRestrictionHandler(this));
  this.handlers.put("field-binding",new FieldBindingHandler(this));
  this.handlers.put("field-binding",new FieldBindingHandler(this));
  this.handlers.put("init",new AccumulateHelperHandler(this));
  this.handlers.put("action",new AccumulateHelperHandler(this));
  this.handlers.put("result",new AccumulateHelperHandler(this));
  this.handlers.put("reverse",new AccumulateHelperHandler(this));
  this.handlers.put("expression",new ExpressionHandler(this));
  initEntityResolver();
}
