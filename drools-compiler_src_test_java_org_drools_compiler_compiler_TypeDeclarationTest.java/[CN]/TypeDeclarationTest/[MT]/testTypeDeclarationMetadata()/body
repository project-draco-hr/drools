{
  String str="";
  str+="package org.drools.test; \n" + "import org.drools.compiler.compiler.TypeDeclarationTest.KlassAnnotation; \n" + "import org.drools.compiler.compiler.TypeDeclarationTest.FieldAnnotation; \n"+ "import org.drools.Person\n"+ "\n"+ "declare Bean \n"+ "@role(event) \n"+ "@expires( 1s ) \n"+ "@KlassAnnotation( \"klass\" )"+ ""+ "    name : String @key @FieldAnnotation( prop = \"fld\" )\n"+ "end \n"+ "declare Person @role(event) end";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  System.err.println(kbuilder.getErrors());
  assertFalse(kbuilder.hasErrors());
  KnowledgeBase kBase=KnowledgeBaseFactory.newKnowledgeBase();
  kBase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  FactType bean=kBase.getFactType("org.drools.test","Bean");
  FactType pers=kBase.getFactType("org.drools","Person");
  assertEquals("org.drools.test.Bean",bean.getName());
  assertEquals("Bean",bean.getSimpleName());
  assertEquals("org.drools.test",bean.getPackageName());
  assertEquals(1,bean.getClassAnnotations().size());
  Annotation ann=bean.getClassAnnotations().get(0);
  assertEquals("org.drools.compiler.compiler.TypeDeclarationTest$KlassAnnotation",ann.getName());
  assertEquals("klass",ann.getPropertyValue("value"));
  assertEquals(String.class,ann.getPropertyType("value"));
  assertEquals(2,bean.getMetaData().size());
  assertEquals("event",bean.getMetaData().get("role"));
  FactField field=bean.getField("name");
  assertNotNull(field);
  assertEquals(1,field.getFieldAnnotations().size());
  Annotation fnn=field.getFieldAnnotations().get(0);
  assertEquals("org.drools.compiler.compiler.TypeDeclarationTest$FieldAnnotation",fnn.getName());
  assertEquals("fld",fnn.getPropertyValue("prop"));
  assertEquals(String.class,fnn.getPropertyType("prop"));
  assertEquals(1,field.getMetaData().size());
  assertTrue(field.getMetaData().containsKey("key"));
}
