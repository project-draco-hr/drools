{
  if (this.children.size() == 0) {
    parent.children.remove(this);
    return;
  }
  if (this.isAnd() || this.isOr() || this.isExists()) {
    if (parent.getType() == this.getType()) {
      int index=parent.getChildren().indexOf(this);
      parent.getChildren().remove(this);
      for (final Iterator childIt=this.children.iterator(); childIt.hasNext(); ) {
        final Object child=childIt.next();
        parent.getChildren().add(index++,child);
        if (child instanceof GroupElement) {
          final int previousSize=parent.getChildren().size();
          ((GroupElement)child).pack(parent);
          index+=(parent.getChildren().size() - previousSize);
        }
      }
    }
 else     if ((!this.isExists()) && (this.children.size() == 1)) {
      final int index=parent.getChildren().indexOf(this);
      parent.getChildren().remove(this);
      final Object child=this.children.get(0);
      parent.getChildren().add(index,child);
      if (child instanceof GroupElement) {
        ((GroupElement)child).pack(parent);
      }
    }
 else {
      this.pack();
    }
  }
 else {
    this.pack();
  }
}
