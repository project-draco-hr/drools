{
  try {
    ClassLoader loader1=new SubvertedClassLoader(new URL[]{getClass().getResource("/testEnumReteoo.jar")},this.getClass().getClassLoader());
    loader1.loadClass("org.drools.Primitives");
    loader1.loadClass("org.drools.TestEnum");
    byte[] out=null;
    ClassLoader ccl=Thread.currentThread().getContextClassLoader();
    Collection<KnowledgePackage> kpkgs2=null;
    try {
      Thread.currentThread().setContextClassLoader(loader1);
      Collection<KnowledgePackage> kpkgs=loadKnowledgePackages("test_EnumSerialization.drl");
      out=DroolsStreamUtils.streamOut(kpkgs);
      KnowledgeBase kbase=getKnowledgeBase();
      kbase.addKnowledgePackages(kpkgs);
      StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
      List list=new ArrayList();
      ksession.setGlobal("list",list);
      assertEquals(1,ksession.fireAllRules());
      assertEquals(1,list.size());
    }
  finally {
      Thread.currentThread().setContextClassLoader(ccl);
    }
    ClassLoader loader2=new SubvertedClassLoader(new URL[]{getClass().getResource("/testEnumReteoo.jar")},this.getClass().getClassLoader());
    loader2.loadClass("org.drools.Primitives");
    loader2.loadClass("org.drools.TestEnum");
    ccl=Thread.currentThread().getContextClassLoader();
    kpkgs2=null;
    try {
      Thread.currentThread().setContextClassLoader(loader2);
      kpkgs2=(Collection<KnowledgePackage>)DroolsStreamUtils.streamIn(out);
      KnowledgeBase kbase2=getKnowledgeBase();
      kbase2.addKnowledgePackages(kpkgs2);
      StatefulKnowledgeSession ksession=createKnowledgeSession(kbase2);
      List list=new ArrayList();
      ksession.setGlobal("list",list);
      assertEquals(1,ksession.fireAllRules());
      assertEquals(1,list.size());
    }
  finally {
      Thread.currentThread().setContextClassLoader(ccl);
    }
  }
 catch (  ClassCastException cce) {
    cce.printStackTrace();
    fail("No ClassCastException should be raised.");
  }
}
