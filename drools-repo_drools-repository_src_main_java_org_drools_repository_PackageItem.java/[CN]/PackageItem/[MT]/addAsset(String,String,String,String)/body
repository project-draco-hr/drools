{
  Node ruleNode;
  try {
    assetName=assetName.trim();
    Node rulesFolder=this.node.getNode(ASSET_FOLDER_NAME);
    ruleNode=rulesFolder.addNode(assetName,AssetItem.RULE_NODE_TYPE_NAME);
    ruleNode.setProperty(AssetItem.TITLE_PROPERTY_NAME,assetName);
    ruleNode.setProperty(AssetItem.DESCRIPTION_PROPERTY_NAME,description);
    if (format != null) {
      ruleNode.setProperty(AssetItem.FORMAT_PROPERTY_NAME,format);
    }
 else {
      ruleNode.setProperty(AssetItem.FORMAT_PROPERTY_NAME,AssetItem.DEFAULT_CONTENT_FORMAT);
    }
    ruleNode.setProperty(VersionableItem.CHECKIN_COMMENT,"Initial");
    Calendar lastModified=Calendar.getInstance();
    ruleNode.setProperty(AssetItem.LAST_MODIFIED_PROPERTY_NAME,lastModified);
    ruleNode.setProperty(AssetItem.PACKAGE_NAME_PROPERTY,this.getName());
    ruleNode.setProperty(CREATOR_PROPERTY_NAME,this.node.getSession().getUserID());
    rulesRepository.getSession().save();
    AssetItem rule=new AssetItem(this.rulesRepository,ruleNode);
    rule.updateState(StateItem.DRAFT_STATE_NAME);
    if (initialCategory != null) {
      rule.addCategory(initialCategory);
    }
    return rule;
  }
 catch (  RepositoryException e) {
    if (e instanceof ItemExistsException) {
      throw new RulesRepositoryException("A rule of that name already exists in that package.",e);
    }
 else {
      throw new RulesRepositoryException(e);
    }
  }
}
