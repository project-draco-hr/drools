{
  RuleBaseConfiguration conf=new RuleBaseConfiguration();
  conf.setOption(RuleEngineOption.RETEOO);
  ReteooRuleBase rbase=(ReteooRuleBase)RuleBaseFactory.newRuleBase(conf);
  StatefulSession wm=rbase.newStatefulSession();
  InternalAgenda agenda=(InternalAgenda)wm.getAgenda();
  AgendaItem item1=new RuleTerminalNodeLeftTuple();
  AgendaItem item2=new RuleTerminalNodeLeftTuple();
  AgendaItem item3=new RuleTerminalNodeLeftTuple();
  agenda.createAgendaItem((LeftTuple)item1,0,null,null,null,null);
  agenda.createAgendaItem((LeftTuple)item2,0,null,null,null,null);
  agenda.createAgendaItem((LeftTuple)item3,0,null,null,null,null);
  DefaultKnowledgeHelper kcontext=new DefaultKnowledgeHelper(wm);
  kcontext.setActivation(item1);
  kcontext.blockMatch(item3);
  kcontext.reset();
  kcontext.setActivation(item2);
  kcontext.blockMatch(item3);
  kcontext.unblockAllMatches(item3);
  assertEquals(0,item3.getBlockers().size());
  assertNull(item3.getBlocked());
  assertEquals(0,item2.getBlocked().size());
  assertNull(item2.getBlockers());
  assertEquals(0,item1.getBlocked().size());
  assertEquals(0,item1.getBlocked().size());
}
