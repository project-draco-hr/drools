{
  final KieSessionModelImpl kSession=new KieSessionModelImpl();
  kSession.setName(reader.getAttribute("name"));
  String kSessionType=reader.getAttribute("type");
  kSession.setType(kSessionType != null ? KieSessionType.valueOf(kSessionType.toUpperCase()) : KieSessionType.STATEFUL);
  String clockType=reader.getAttribute("clockType");
  if (clockType != null) {
    kSession.setClockType(ClockTypeOption.get(clockType));
  }
  String scope=reader.getAttribute("scope");
  if (scope != null) {
    kSession.setScope(scope);
  }
  readNodes(reader,new AbstractXStreamConverter.NodeReader(){
    public void onNode(    HierarchicalStreamReader reader,    String name,    String value){
      if ("agendaEventListener".equals(name) || "workingMemoryEventListener".equals(name) || "processEventListener".equals(name)) {
        ListenerModelImpl listener=readObject(reader,context,ListenerModelImpl.class);
        listener.setKSession(kSession);
        listener.setKind(ListenerModel.Kind.fromString(name));
        kSession.addListenerModel(listener);
      }
 else       if ("workItemHandler".equals(name)) {
        WorkItemHandlerModelImpl wih=readObject(reader,context,WorkItemHandlerModelImpl.class);
        wih.setKSession(kSession);
        kSession.addWorkItemHandelerModel(wih);
      }
    }
  }
);
  return kSession;
}
