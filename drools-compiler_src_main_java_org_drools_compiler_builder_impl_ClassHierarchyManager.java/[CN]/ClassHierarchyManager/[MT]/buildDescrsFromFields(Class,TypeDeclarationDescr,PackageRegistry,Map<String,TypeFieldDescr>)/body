{
  ClassFieldInspector inspector=new ClassFieldInspector(klass);
  for (  String name : inspector.getGetterMethods().keySet()) {
    if (inspector.getSetterMethods().containsKey(name)) {
      if (!inspector.isNonGetter(name) && !"class".equals(name)) {
        Resource resource=typeDescr.getResource();
        PatternDescr patternDescr=new PatternDescr(inspector.getFieldType(name).getName());
        patternDescr.setResource(resource);
        TypeFieldDescr inheritedFlDescr=new TypeFieldDescr(name,patternDescr);
        inheritedFlDescr.setResource(resource);
        inheritedFlDescr.setInherited(!Modifier.isAbstract(inspector.getGetterMethods().get(name).getModifiers()));
        if (!fieldMap.containsKey(inheritedFlDescr.getFieldName()))         fieldMap.put(inheritedFlDescr.getFieldName(),inheritedFlDescr);
      }
    }
  }
}
