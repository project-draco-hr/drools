{
  MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"containsValue","(" + Type.getDescriptor(Object.class) + ")Z",null,null);
  mv.visitCode();
  mv.visitVarInsn(ALOAD,1);
  Label l99=new Label();
  mv.visitJumpInsn(IFNONNULL,l99);
  int j=0;
  int N=core.getFieldsDefinitions().size();
  for (  FieldDefinition field : core.getFieldsDefinitions()) {
    j++;
    if (!BuildUtils.isPrimitive(field.getTypeName())) {
      TraitFactory.invokeExtractor(mv,wrapperName,trait,core,field);
      if (j != N) {
        Label l1=new Label();
        mv.visitJumpInsn(IFNONNULL,l1);
        mv.visitInsn(ICONST_1);
        mv.visitInsn(IRETURN);
        mv.visitLabel(l1);
      }
 else {
        mv.visitJumpInsn(IFNONNULL,l99);
        mv.visitInsn(ICONST_1);
        mv.visitInsn(IRETURN);
        mv.visitLabel(l99);
      }
    }
  }
  mv.visitVarInsn(ALOAD,0);
  mv.visitVarInsn(ALOAD,1);
  mv.visitMethodInsn(INVOKESPECIAL,Type.getInternalName(TripleBasedStruct.class),"containsValue","(" + Type.getDescriptor(Object.class) + ")Z");
  mv.visitInsn(IRETURN);
  mv.visitMaxs(core.getFieldsDefinitions().size() > 0 ? 3 : 2,2);
  mv.visitEnd();
}
