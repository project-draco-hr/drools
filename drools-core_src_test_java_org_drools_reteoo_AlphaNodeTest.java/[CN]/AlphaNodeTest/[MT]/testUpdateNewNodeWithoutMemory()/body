{
  WorkingMemoryImpl workingMemory=new WorkingMemoryImpl(new RuleBaseImpl());
  Rule rule=new Rule("test-rule");
  PropagationContext context=new PropagationContextImpl(PropagationContext.ASSERTION,null,null);
  MockObjectSource source=new MockObjectSource(1);
  LiteralExpressionConstraint mockConstraint0=new LiteralExpressionConstraint(){
    public boolean isAllowed(    Object object,    ConstraintComparator comparator){
      return true;
    }
  }
;
  LiteralConstraint constraint0=new LiteralConstraint(mockConstraint0,new StringConstraintComparator(ConstraintComparator.EQUAL));
  AlphaNode alphaNode=new AlphaNode(2,constraint0,false,source);
  alphaNode.attach();
  assertEquals(0,source.getUdated());
  alphaNode.updateNewNode(null,null);
  assertEquals(1,source.getUdated());
}
