{
  WorkingMemoryImpl workingMemory=new WorkingMemoryImpl(new RuleBaseImpl());
  Rule rule=new Rule("test-rule");
  PropagationContext context=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  MockObjectSource source=new MockObjectSource(1);
  FieldExtractor extractor=new ClassFieldExtractor(Cheese.class,"type");
  FieldValue field=new MockField("cheddar");
  Evaluator evaluator=EvaluatorFactory.getInstance().getEvaluator(Evaluator.OBJECT_TYPE,Evaluator.EQUAL);
  LiteralConstraint constraint=new LiteralConstraint(field,extractor,evaluator);
  AlphaNode alphaNode=new AlphaNode(2,constraint,source);
  alphaNode.attach();
  MockObjectSink sink1=new MockObjectSink();
  alphaNode.addObjectSink(sink1);
  Cheese cheese=new Cheese("cheddar",0);
  FactHandleImpl handle1=new FactHandleImpl(1);
  workingMemory.putObject(handle1,cheese);
  source.propagateAssertObject(handle1,context,workingMemory);
  assertLength(1,sink1.getAsserted());
  MockObjectSink sink2=new MockObjectSink();
  alphaNode.addObjectSink(sink2);
  alphaNode.updateNewNode(workingMemory,context);
  assertLength(1,sink1.getAsserted());
  assertLength(1,sink2.getAsserted());
  assertEquals(0,source.getUdated());
}
