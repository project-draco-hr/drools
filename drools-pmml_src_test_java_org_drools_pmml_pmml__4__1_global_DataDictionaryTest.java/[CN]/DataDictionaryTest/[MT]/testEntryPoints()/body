{
  setKSession(getModelSession(source,VERBOSE));
  setKbase(getKSession().getKieBase());
  FactType gender=getKbase().getFactType(packageName,"Gender");
  FactType noclaims=getKbase().getFactType(packageName,"NoOfClaims");
  FactType scrambled=getKbase().getFactType(packageName,"Scrambled");
  FactType domicile=getKbase().getFactType(packageName,"Domicile");
  FactType agecar=getKbase().getFactType(packageName,"AgeOfCar");
  FactType amklaims=getKbase().getFactType(packageName,"AmountOfClaims");
  Assert.assertEquals(7,getKSession().getEntryPoints().size());
  EntryPoint gender_ep=getKSession().getEntryPoint("in_Gender");
  Assert.assertNotNull(gender_ep);
  EntryPoint noclaims_ep=getKSession().getEntryPoint("in_NoOfClaims");
  Assert.assertNotNull(noclaims_ep);
  EntryPoint scrambled_ep=getKSession().getEntryPoint("in_Scrambled");
  Assert.assertNotNull(scrambled_ep);
  EntryPoint domicile_ep=getKSession().getEntryPoint("in_Domicile");
  Assert.assertNotNull(domicile_ep);
  EntryPoint agecar_ep=getKSession().getEntryPoint("in_AgeOfCar");
  Assert.assertNotNull(agecar_ep);
  EntryPoint amklaims_ep=getKSession().getEntryPoint("in_AmountOfClaims");
  Assert.assertNotNull(amklaims_ep);
  gender_ep.insert("M");
  noclaims_ep.insert("> 4");
  scrambled_ep.insert(4);
  domicile_ep.insert("way out");
  agecar_ep.insert(new Double("3.4"));
  amklaims_ep.insert(9);
  getKSession().fireAllRules();
  System.err.println(reportWMObjects(getKSession()));
  Assert.assertEquals(6,getKSession().getObjects().size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(gender.getFactClass())).size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(noclaims.getFactClass())).size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(scrambled.getFactClass())).size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(domicile.getFactClass())).size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(agecar.getFactClass())).size());
  Assert.assertEquals(1,getKSession().getObjects(new ClassObjectFilter(amklaims.getFactClass())).size());
  checkFirstDataFieldOfTypeStatus(amklaims,true,false,null,9);
  checkFirstDataFieldOfTypeStatus(domicile,false,false,null,"way out");
}
