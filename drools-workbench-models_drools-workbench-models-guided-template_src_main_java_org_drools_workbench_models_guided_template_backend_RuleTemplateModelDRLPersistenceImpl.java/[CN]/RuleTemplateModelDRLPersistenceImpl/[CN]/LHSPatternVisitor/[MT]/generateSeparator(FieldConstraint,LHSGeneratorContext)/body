{
  final List<LHSGeneratorContext> peers=generatorContextFactory.getPeers(gctx);
  if (peers.size() == 0) {
    return;
  }
  boolean generateTemplateCheck=isTemplateKey(constr);
  if (generateTemplateCheck) {
    buf.append("@if{(");
    buf.append("hasLHSOutput" + gctx.getDepth() + "_"+ gctx.getOffset()).append(" && (");
    for (int i=0; i < peers.size(); i++) {
      final LHSGeneratorContext peer=peers.get(i);
      buf.append("hasLHSOutput" + peer.getDepth() + "_"+ peer.getOffset());
      buf.append((i < peers.size() - 1 ? " || " : ")"));
    }
    buf.append(")}");
  }
  preGenerateNestedConnector(gctx);
  if (gctx.getParent().getFieldConstraint() instanceof CompositeFieldConstraint) {
    CompositeFieldConstraint cconstr=(CompositeFieldConstraint)gctx.getParent().getFieldConstraint();
    buf.append(cconstr.getCompositeJunctionType() + " ");
  }
 else {
    if (buf.length() > 2 && !(buf.charAt(buf.length() - 2) == ',')) {
      buf.append(", ");
    }
  }
  postGenerateNestedConnector(gctx);
  if (generateTemplateCheck) {
    buf.append("@end{}");
  }
}
