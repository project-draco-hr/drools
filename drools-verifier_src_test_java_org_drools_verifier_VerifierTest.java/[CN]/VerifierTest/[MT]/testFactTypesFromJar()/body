{
  VerifierBuilder vBuilder=VerifierBuilderFactory.newVerifierBuilder();
  assertFalse(vBuilder.hasErrors());
  assertEquals(0,vBuilder.getErrors().size());
  Verifier verifier=vBuilder.newVerifier();
  try {
    JarInputStream jar=new JarInputStream(this.getClass().getResourceAsStream("model.jar"));
    verifier.addObjectModel(jar);
  }
 catch (  IOException e) {
    fail(e.getMessage());
  }
  verifier.addResourcesToVerify(new ClassPathResource("imports.drl",Verifier.class),ResourceType.DRL);
  assertFalse(verifier.hasErrors());
  assertEquals(0,verifier.getErrors().size());
  boolean works=verifier.fireAnalysis();
  assertTrue(works);
  VerifierReport result=verifier.getResult();
  Collection<ObjectType> objectTypes=result.getVerifierData().getAll(VerifierComponentType.OBJECT_TYPE);
  assertNotNull(objectTypes);
  assertEquals(3,objectTypes.size());
  Collection<Field> fields=result.getVerifierData().getAll(VerifierComponentType.FIELD);
  for (  Field field : fields) {
    System.out.println(field);
  }
  assertNotNull(fields);
  assertEquals(10,fields.size());
  System.out.println("Done");
}
