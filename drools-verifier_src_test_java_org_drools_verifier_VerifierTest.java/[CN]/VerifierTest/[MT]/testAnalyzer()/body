{
  Verifier anal=new Verifier();
  DrlParser p=new DrlParser();
  InputStreamReader reader=new InputStreamReader(this.getClass().getResourceAsStream("Misc3.drl"));
  PackageDescr pkg=p.parse(reader);
  assertFalse(p.hasErrors());
  anal.addPackageDescr(pkg);
  assertTrue("Firing verifier failed.",anal.fireAnalysis());
  VerifierResult result=anal.getResult();
  assertNotNull(result);
  assertEquals(0,result.getBySeverity(Severity.ERROR).size());
  assertEquals(10,result.getBySeverity(Severity.WARNING).size());
  assertEquals(16,result.getBySeverity(Severity.NOTE).size());
  anal=new Verifier();
  p=new DrlParser();
  reader=new InputStreamReader(this.getClass().getResourceAsStream("Misc3.drl"));
  pkg=p.parse(reader);
  assertFalse(p.hasErrors());
  anal.addPackageDescr(pkg);
  assertTrue("Firing verifier failed.",anal.fireAnalysis());
  result=anal.getResult();
  assertNotNull(result);
  assertEquals(0,result.getBySeverity(Severity.ERROR).size());
  assertEquals(10,result.getBySeverity(Severity.WARNING).size());
  assertEquals(16,result.getBySeverity(Severity.NOTE).size());
}
