{
  String drl="" + "package org.drools.traits.test;\n" + "\n"+ "import org.drools.core.factmodel.traits.Traitable;\n"+ "\n"+ "\n"+ "global java.util.List list;\n"+ "\n"+ "declare Person\n"+ "@Traitable\n"+ "@propertyReactive\n"+ "    ssn : String\n"+ "    pob : String\n"+ "    isStudent : boolean\n"+ "    hasAssistantship : boolean\n"+ "end\n"+ "\n"+ "declare trait Student\n"+ "@propertyReactive\n"+ "    studyingCountry : String @position(1)\n"+ "    hasAssistantship : boolean\n"+ "end\n"+ "\n"+ "declare trait Worker\n"+ "@propertyReactive\n"+ "    pob : String @position(0)\n"+ "    workingCountry : String\n"+ "end\n"+ "\n"+ "declare trait USCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"US\"\n"+ "end\n"+ "\n"+ "declare trait ITCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"IT\"\n"+ "end\n"+ "\n"+ "declare trait IRCitizen\n"+ "@propertyReactive\n"+ "    pob : String = \"IR\"\n"+ "end\n"+ "\n"+ "declare trait StudentWorker extends Student, Worker\n"+ "@propertyReactive\n"+ "    uniName : String\n"+ "end\n"+ "\n"+ "rule \"init\"\n"+ "when\n"+ "then\n"+ "    Person p = new Person(\"1234\",\"IR\",true,true);\n"+ "    insert( p );\n"+ "    System.out.println(\"init\");\n"+ "    list.add(\"initialized\");\n"+ "\n"+ "end\n"+ "\n"+ "rule \"check for being student\"\n"+ "when\n"+ "    $p : Person( $ssn : ssn, $pob : pob,  isStudent == true )\n"+ "    if($pob == \"IR\" ) do[pobIsIR]\n"+ "then\n"+ "    Student st = (Student) don( $p , Student.class );\n"+ "    modify( st ){\n"+ "        setStudyingCountry( \"US\" );\n"+ "    }\n"+ "    System.out.println(\"student\");\n"+ "    list.add(\"student\");\n"+ "then[pobIsIR]\n"+ "    don( $p , IRCitizen.class );\n"+ "    System.out.println(\"IR citizen\");\n"+ "    list.add(\"IR citizen\");\n"+ "end\n"+ "\n"+ "rule \"check for being US citizen\"\n"+ "\n"+ "when\n"+ "    $s : Student( studyingCountry == \"US\" )\n"+ "then\n"+ "    don( $s , USCitizen.class );\n"+ "    System.out.println(\"US citizen\");\n"+ "    list.add(\"US citizen\");\n"+ "end\n"+ "\n"+ "rule \"check for being worker\"\n"+ "\n"+ "when\n"+ "    $p : Student( hasAssistantship == true, $sc : studyingCountry )\n"+ "then\n"+ "    Worker wr = (Worker) don( $p , Worker.class );\n"+ "    modify( wr ){\n"+ "        setWorkingCountry( $sc );\n"+ "    }\n"+ "    System.out.println(\"worker\");\n"+ "    list.add(\"worker\");\n"+ "end\n"+ "\n"+ "rule \"position args 1\"\n"+ "when\n"+ "    Student( $sc : studyingCountry ) @watch( studyingCountry )\n"+ "    $w : Worker( $pob , $sc; )\n"+ "    USCitizen( )\n"+ "    IRCitizen( $pob := pob )\n"+ "then\n"+ "    System.out.println(\"::You are working in US as student worker.\");\n"+ "    list.add(\"You are working in US as student worker\");\n"+ "    StudentWorker sw = (StudentWorker) don( $w, StudentWorker.class );\n"+ "    modify(sw){\n"+ "        setUniName( \"ASU\" );\n"+ "    }\n"+ "    System.out.println(\"student worker \" + sw);\n"+ "end\n"+ "\n"+ "rule \"position args 2\"\n"+ "when\n"+ "    Student( $sc : studyingCountry ) @watch( studyingCountry )\n"+ "    $sw : StudentWorker( $pob , $sc; )\n"+ "    IRCitizen( $pob := pob )\n"+ "then\n"+ "    System.out.println(\"::You are studying and working at ASU.\" + $sw );\n"+ "    list.add(\"You are studying and working at ASU\");\n"+ "end\n";
  KnowledgeBase kBase=loadKnowledgeBaseFromString(drl);
  TraitFactory.setMode(mode,kBase);
  StatefulKnowledgeSession kSession=kBase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  kSession.setGlobal("list",list);
  kSession.fireAllRules();
  System.out.println(list);
  assertTrue(list.contains("initialized"));
  assertTrue(list.contains("student"));
  assertTrue(list.contains("IR citizen"));
  assertTrue(list.contains("US citizen"));
  assertTrue(list.contains("worker"));
  assertTrue(list.contains("You are working in US as student worker"));
  assertTrue(list.contains("You are studying and working at ASU"));
}
