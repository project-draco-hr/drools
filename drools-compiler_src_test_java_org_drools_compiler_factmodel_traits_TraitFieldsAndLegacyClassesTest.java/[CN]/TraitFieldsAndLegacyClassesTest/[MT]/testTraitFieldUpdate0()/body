{
  String drl="" + "package org.drools.factmodel.traits0;\n" + "\n"+ "import org.drools.core.factmodel.traits.Traitable;\n"+ "import org.drools.core.factmodel.traits.Thing;\n"+ "import java.util.*\n"+ "import org.drools.compiler.factmodel.traits.TraitFieldsAndLegacyClassesTest.Parent;\n"+ "import org.drools.compiler.factmodel.traits.TraitFieldsAndLegacyClassesTest.Child;\n"+ "global java.util.List list;\n"+ "\n"+ "declare trait ParentTrait\n"+ "@propertyReactive\n"+ "    child : Child\n"+ "    age : int = 24\n"+ "end\n"+ "declare Parent\n"+ "@Traitable\n"+ "@propertyReactive\n"+ "end\n"+ "rule \"Init\" \n"+ "no-loop\n"+ "when\n"+ "    \n"+ "then\n"+ "   Parent p = new Parent(\"parent\", null);\n"+ "   Map map = new HashMap();\n"+ "   map.put( \"parent\", ParentTrait.class );\n"+ "   insert(p);\n"+ "   insert(map);\n"+ "   System.out.println(\"Initialized : \"+p);\n"+ "end\n"+ "\n"+ "rule \"trait parent\" \n"+ "no-loop\n"+ "when\n"+ "   $p : Parent( name == \"parent\" )\n"+ "   $map : HashMap([parent] != null)\n"+ "then\n"+ "   Object p = don ( $p , (Class) $map.get(\"parent\") );\n"+ "   System.out.println(\"donned : \"+p);\n"+ "   System.out.println(\">>>>>>\"+$map.get(\"parent\"));\n"+ "   list.add(\"correct\");\n"+ "end\n"+ "\n"+ "\n";
  KnowledgeBase kBase=loadKnowledgeBaseFromString(drl);
  TraitFactory.setMode(mode,kBase);
  StatefulKnowledgeSession knowledgeSession=kBase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  knowledgeSession.setGlobal("list",list);
  knowledgeSession.fireAllRules();
  assertTrue(list.contains("correct"));
  assertEquals(1,list.size());
}
