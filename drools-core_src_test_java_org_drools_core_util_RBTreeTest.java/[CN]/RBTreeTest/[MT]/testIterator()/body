{
  final int ITEMS=10000;
  RBTree<Integer,String> tree=new RBTree<Integer,String>();
  Random random=new Random(0);
  for (int i=0; i < ITEMS; i++) {
    int key=random.nextInt();
    tree.insert(key,"" + key);
  }
  int i=0;
  FastIterator fastIterator=tree.fastIterator();
  int lastKey=Integer.MIN_VALUE;
  for (Node<Integer,String> node=(Node<Integer,String>)fastIterator.next(null); node != null; node=(Node<Integer,String>)fastIterator.next(node)) {
    int currentKey=node.key;
    if (currentKey < lastKey) {
      fail(currentKey + " should be greater than " + lastKey);
    }
    lastKey=currentKey;
    i++;
  }
  assertEquals(ITEMS,i);
}
