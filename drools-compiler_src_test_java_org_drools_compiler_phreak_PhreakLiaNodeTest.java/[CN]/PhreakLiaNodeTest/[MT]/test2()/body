{
  String str="package org.drools.compiler.test\n" + "\n" + "import " + A.class.getCanonicalName() + "\n"+ "import "+ B.class.getCanonicalName()+ "\n"+ "\n"+ "rule r1 \n"+ "    when \n"+ "        $a : A( object == 1 )\n"+ "    then \n"+ "        System.out.println( $a ); \n"+ "end \n"+ "rule r2 \n"+ "    when \n"+ "        $a : A( object == 2 )\n"+ "    then \n"+ "        System.out.println( $a ); \n"+ "end \n "+ "rule r3 \n"+ "    when \n"+ "        $a : A( object == 2 )\n"+ "        $b : B( )\n"+ "    then \n"+ "        System.out.println( $a + \" : \" + $b  );"+ "      modify($a) { setObject(3) };  \n"+ "end \n "+ "rule r4 \n"+ "    when \n"+ "        $a : A( object == 3 )\n"+ "    then \n"+ "        System.out.println( $a ); \n"+ "end \n";
  KnowledgeBuilder builder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  builder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (builder.hasErrors()) {
    throw new RuntimeException(builder.getErrors().toString());
  }
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(PhreakOption.ENABLED);
  KnowledgeBase knowledgeBase=KnowledgeBaseFactory.newKnowledgeBase(kconf);
  knowledgeBase.addKnowledgePackages(builder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=knowledgeBase.newStatefulKnowledgeSession();
  InternalFactHandle fhB=(InternalFactHandle)ksession.insert(B.b(1));
  InternalFactHandle fhA=(InternalFactHandle)ksession.insert(A.a(1));
  ksession.fireAllRules();
  System.out.println("---1---");
  InternalFactHandle fhB2=(InternalFactHandle)ksession.insert(B.b(2));
  InternalFactHandle fhB3=(InternalFactHandle)ksession.insert(B.b(3));
  ksession.update(fhA,A.a(2));
  ksession.fireAllRules();
  System.out.println("---3---");
  ksession.dispose();
}
