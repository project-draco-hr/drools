{
  NamePool namePool=context.getController().getNamePool();
  boolean useGraphics=false;
  boolean useUnicode=false;
  int unicodeStart=49;
  int unicodeMax=0;
  String unicodeFont="";
  defaultColumn=60;
  graphicsPath=null;
  graphicsExt=null;
  graphicsMax=0;
  foStylesheet=false;
  calloutsSetup=true;
  Value variable=null;
  String varString=null;
  varString=getVariable(context,"stylesheet.result.type");
  foStylesheet=(varString.equals("fo"));
  varString=getVariable(context,"callout.defaultcolumn");
  try {
    defaultColumn=Integer.parseInt(varString);
  }
 catch (  NumberFormatException nfe) {
    System.out.println("$callout.defaultcolumn is not a number: " + varString);
  }
  varString=getVariable(context,"callout.graphics");
  useGraphics=!(varString.equals("0") || varString.equals(""));
  varString=getVariable(context,"callout.unicode");
  useUnicode=!(varString.equals("0") || varString.equals(""));
  if (useGraphics) {
    varString=getVariable(context,"callout.graphics.path");
    graphicsPath=varString;
    varString=getVariable(context,"callout.graphics.extension");
    graphicsExt=varString;
    varString=getVariable(context,"callout.graphics.number.limit");
    try {
      graphicsMax=Integer.parseInt(varString);
    }
 catch (    NumberFormatException nfe) {
      System.out.println("$callout.graphics.number.limit is not a number: " + varString);
      graphicsMax=0;
    }
    fCallout=new FormatGraphicCallout(namePool,graphicsPath,graphicsExt,graphicsMax,foStylesheet);
  }
 else   if (useUnicode) {
    varString=getVariable(context,"callout.unicode.start.character");
    try {
      unicodeStart=Integer.parseInt(varString);
    }
 catch (    NumberFormatException nfe) {
      System.out.println("$callout.unicode.start.character is not a number: " + varString);
      unicodeStart=48;
    }
    varString=getVariable(context,"callout.unicode.number.limit");
    try {
      unicodeMax=Integer.parseInt(varString);
    }
 catch (    NumberFormatException nfe) {
      System.out.println("$callout.unicode.number.limit is not a number: " + varString);
      unicodeStart=0;
    }
    unicodeFont=getVariable(context,"callout.unicode.font");
    if (unicodeFont == null) {
      unicodeFont="";
    }
    fCallout=new FormatUnicodeCallout(namePool,unicodeFont,unicodeStart,unicodeMax,foStylesheet);
  }
 else {
    fCallout=new FormatTextCallout(namePool,foStylesheet);
  }
}
