{
  final Rule rule1=new Rule("test-rule1");
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  final Rete rete=new Rete((InternalRuleBase)ruleBase);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(0,new ClassObjectType(String.class),rete,3);
  objectTypeNode.attach();
  final MockObjectSink sink=new MockObjectSink();
  objectTypeNode.addObjectSink(sink);
  final RuleTerminalNode node=new RuleTerminalNode(2,new MockTupleSource(2),rule1,rule1.getLhs());
  final ReteooWorkingMemory workingMemory=(ReteooWorkingMemory)ruleBase.newStatefulSession();
  final Agenda agenda=workingMemory.getAgenda();
  final Consequence consequence=new Consequence(){
    /** 
 */
    private static final long serialVersionUID=400L;
    public void evaluate(    KnowledgeHelper knowledgeHelper,    WorkingMemory workingMemory){
    }
  }
;
  rule1.setConsequence(consequence);
  final DefaultFactHandle handle1=new DefaultFactHandle(1,"cheese");
  final ReteTuple tuple1=new ReteTuple(handle1);
  final PropagationContext context1=new PropagationContextImpl(0,PropagationContext.ASSERTION,null,null);
  node.assertTuple(tuple1,context1,workingMemory);
  final String statedString1=new String("logical");
  final FactHandle statedHandle1=workingMemory.insert(statedString1);
  final String statedString2=new String("logical");
  final FactHandle statedHandle2=workingMemory.insert(statedString2);
  final String logicalString3=new String("logical");
  FactHandle logicalHandle3=workingMemory.insert(logicalString3,false,true,rule1,tuple1.getActivation());
  assertNull(logicalHandle3);
  if (RuleBaseConfiguration.AssertBehaviour.IDENTITY == ((ReteooRuleBase)ruleBase).getConfiguration().getAssertBehaviour()) {
    workingMemory.retract(statedHandle2);
    logicalHandle3=workingMemory.insert(logicalString3,false,true,rule1,tuple1.getActivation());
    assertNull(logicalHandle3);
  }
  workingMemory.retract(statedHandle1);
  logicalHandle3=workingMemory.insert(logicalString3,false,true,rule1,tuple1.getActivation());
  assertNotNull(logicalHandle3);
}
