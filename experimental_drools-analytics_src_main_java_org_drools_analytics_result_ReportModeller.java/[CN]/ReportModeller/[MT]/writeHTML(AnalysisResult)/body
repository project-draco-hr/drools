{
  StringBuffer str=new StringBuffer("");
  str.append("<html>\n");
  str.append("<head>\n");
  str.append("<title>\n");
  str.append("Analysis Result\n");
  str.append("</title>\n");
  str.append("<style type=\"text/css\">\n");
  str.append("<!--\n");
  try {
    BufferedReader reader=new BufferedReader(new InputStreamReader(ReportModeller.class.getResourceAsStream(cssFile)));
    String cssLine=null;
    while ((cssLine=reader.readLine()) != null) {
      str.append(cssLine);
      str.append("\n");
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  str.append("-->\n");
  str.append("</style>\n");
  str.append("</head>\n");
  str.append("<body>\n\n");
  str.append("<br>\n");
  str.append("<h1>\n");
  str.append("Analysis results");
  str.append("</h1>\n");
  str.append("<br>\n");
  if (result.getErrors().size() > 0) {
    str.append("<table class=\"errors\">\n");
    str.append("<tr>\n");
    str.append("<th>\n");
    str.append("ERRORS (");
    str.append(result.getErrors().size());
    str.append(")\n");
    str.append("</th>\n");
    str.append("</tr>\n");
    for (    AnalysisError error : result.getErrors()) {
      str.append("<tr>\n");
      str.append("<td>\n");
      str.append(error);
      str.append("</td>\n");
      str.append("</tr>\n");
    }
    str.append("</table>\n");
    str.append("<br>\n");
    str.append("<br>\n");
  }
  if (result.getWarnings().size() > 0) {
    str.append("<table class=\"warnings\">\n");
    str.append("<tr>\n");
    str.append("<th>\n");
    str.append("WARNINGS (");
    str.append(result.getWarnings().size());
    str.append(")\n");
    str.append("</th>\n");
    str.append("</tr>\n");
    for (    AnalysisWarning warning : result.getWarnings()) {
      str.append("<tr>\n");
      str.append("<td>\n");
      str.append("Warning id = ");
      str.append(warning.getId());
      str.append(":<BR>\n");
      if (warning.getFaulty().getRuleName() != null) {
        str.append("in rule ");
        str.append(warning.getFaulty().getRuleName());
        str.append(": ");
      }
      str.append(warning.getMessage());
      str.append("<BR>\n");
      str.append("&nbsp;&nbsp; Causes are [<BR>\n");
      for (      Cause cause : warning.getCauses()) {
        str.append("&nbsp;&nbsp;&nbsp;&nbsp;");
        str.append(cause);
        str.append("<BR>\n");
      }
      str.append("&nbsp;&nbsp; ]\n");
      str.append("</td>\n");
      str.append("</tr>\n");
    }
    str.append("</table>\n");
    str.append("<br>\n");
    str.append("<br>\n");
  }
  if (result.getNotes().size() > 0) {
    str.append("<table class=\"notes\">\n");
    str.append("<tr>\n");
    str.append("<th>\n");
    str.append("NOTES (");
    str.append(result.getNotes().size());
    str.append(")\n");
    str.append("</th>\n");
    str.append("</tr>\n");
    for (    AnalysisNote note : result.getNotes()) {
      str.append("<tr>\n");
      str.append("<td>\n");
      str.append(note);
      str.append("</td>\n");
      str.append("</tr>\n");
    }
    str.append("</table>\n");
  }
  str.append("</body>\n");
  str.append("</html>");
  return str.toString();
}
