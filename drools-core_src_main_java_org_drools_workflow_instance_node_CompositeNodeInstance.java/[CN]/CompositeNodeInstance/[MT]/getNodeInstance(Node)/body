{
  if (node instanceof CompositeNode.CompositeNodeStart) {
    CompositeNodeStartInstance nodeInstance=new CompositeNodeStartInstance();
    nodeInstance.setNodeId(node.getId());
    nodeInstance.setNodeInstanceContainer(this);
    nodeInstance.setProcessInstance(getProcessInstance());
    return nodeInstance;
  }
 else   if (node instanceof CompositeNode.CompositeNodeEnd) {
    CompositeNodeEndInstance nodeInstance=new CompositeNodeEndInstance();
    nodeInstance.setNodeId(node.getId());
    nodeInstance.setNodeInstanceContainer(this);
    nodeInstance.setProcessInstance(getProcessInstance());
    return nodeInstance;
  }
  NodeInstanceFactoryRegistry nodeRegistry=((InternalRuleBase)getProcessInstance().getWorkingMemory().getRuleBase()).getConfiguration().getProcessNodeInstanceFactoryRegistry();
  NodeInstanceFactory conf=nodeRegistry.getProcessNodeInstanceFactory(node);
  if (conf == null) {
    throw new IllegalArgumentException("Illegal node type: " + node.getClass());
  }
  NodeInstanceImpl nodeInstance=(NodeInstanceImpl)conf.getNodeInstance(node,getProcessInstance(),this);
  if (nodeInstance == null) {
    throw new IllegalArgumentException("Illegal node type: " + node.getClass());
  }
  return nodeInstance;
}
