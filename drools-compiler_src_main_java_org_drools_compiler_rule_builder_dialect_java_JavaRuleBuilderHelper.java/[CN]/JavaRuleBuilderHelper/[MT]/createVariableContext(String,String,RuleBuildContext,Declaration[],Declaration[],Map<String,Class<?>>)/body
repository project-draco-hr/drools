{
  final Map<String,Object> map=new HashMap<String,Object>();
  map.put("className",className);
  map.put("methodName",className);
  map.put("package",context.getPkg().getName());
  map.put("ruleClassName",StringUtils.ucFirst(context.getRuleDescr().getClassName()));
  map.put("invokerClassName",context.getRuleDescr().getClassName() + StringUtils.ucFirst(className) + "Invoker");
  if (text != null) {
    map.put("text",text);
    map.put("hashCode",text.hashCode());
  }
  map.put("declarations",declarations);
  if (localDeclarations != null) {
    map.put("localDeclarations",localDeclarations);
  }
  String[] globalStr=new String[globals.size()];
  String[] globalTypes=new String[globals.size()];
  int i=0;
  for (  Entry<String,Class<?>> entry : globals.entrySet()) {
    globalStr[i]=entry.getKey();
    globalTypes[i]=entry.getValue().getName().replace('$','.');
    i++;
  }
  map.put("globals",globalStr);
  map.put("globalTypes",globalTypes);
  return map;
}
