{
  final XmlPackageReader xmlPackageReader=new XmlPackageReader();
  xmlPackageReader.read(new InputStreamReader(getClass().getResourceAsStream("test_ParseLhs.xml")));
  final PackageDescr packageDescr=xmlPackageReader.getPackageDescr();
  assertNotNull(packageDescr);
  assertEquals("com.sample",packageDescr.getName());
  final List imports=packageDescr.getImports();
  assertEquals(2,imports.size());
  assertEquals("java.util.HashMap",((ImportDescr)imports.get(0)).getTarget());
  assertEquals("org.drools.*",((ImportDescr)imports.get(1)).getTarget());
  final List globals=packageDescr.getGlobals();
  assertEquals(2,globals.size());
  GlobalDescr x=(GlobalDescr)globals.get(0);
  GlobalDescr yada=(GlobalDescr)globals.get(1);
  assertEquals("com.sample.X",x.getType());
  assertEquals("x",x.getIdentifier());
  assertEquals("com.sample.Yada",yada.getType());
  assertEquals("yada",yada.getIdentifier());
  final FunctionDescr functionDescr=(FunctionDescr)packageDescr.getFunctions().get(0);
  final List names=functionDescr.getParameterNames();
  assertEquals("foo",names.get(0));
  assertEquals("bada",names.get(1));
  final List types=functionDescr.getParameterTypes();
  assertEquals("Bar",types.get(0));
  assertEquals("Bing",types.get(1));
  assertEquals("System.out.println(\"hello world\");",functionDescr.getText().trim());
  final RuleDescr ruleDescr=(RuleDescr)packageDescr.getRules().get(0);
  assertEquals("my rule",ruleDescr.getName());
  final AndDescr lhsDescr=ruleDescr.getLhs();
  AndDescr andDescr=(AndDescr)lhsDescr.getDescrs().get(0);
  OrDescr orDescr=(OrDescr)lhsDescr.getDescrs().get(1);
  final ColumnDescr column1=(ColumnDescr)lhsDescr.getDescrs().get(2);
  assertNull(column1.getIdentifier());
  assertEquals("Foo",column1.getObjectType());
  final ColumnDescr column2=(ColumnDescr)lhsDescr.getDescrs().get(3);
  assertEquals("Bar",column2.getObjectType());
  assertEquals("bar",column2.getIdentifier());
  final ColumnDescr column3=(ColumnDescr)lhsDescr.getDescrs().get(4);
  FieldConstraintDescr fieldConstraintDescr=(FieldConstraintDescr)column3.getDescrs().get(0);
  final LiteralRestrictionDescr literalDescr=(LiteralRestrictionDescr)fieldConstraintDescr.getRestrictions().get(0);
  assertEquals("field1",fieldConstraintDescr.getFieldName());
  assertEquals("==",literalDescr.getEvaluator());
  assertEquals("value1",literalDescr.getText());
  final ReturnValueRestrictionDescr returnValueDescr=(ReturnValueRestrictionDescr)fieldConstraintDescr.getRestrictions().get(1);
  assertEquals("==",returnValueDescr.getEvaluator());
  assertEquals("1==1",returnValueDescr.getContent());
  final VariableRestrictionDescr variableDescr=(VariableRestrictionDescr)fieldConstraintDescr.getRestrictions().get(2);
  assertEquals("==",variableDescr.getEvaluator());
  assertEquals("var1",variableDescr.getIdentifier());
  final PredicateDescr predicateDescr=(PredicateDescr)column3.getDescrs().get(1);
  assertEquals("1==1",predicateDescr.getContent());
  final FieldBindingDescr fieldBindingDescr=(FieldBindingDescr)column3.getDescrs().get(2);
  assertEquals("field1",fieldBindingDescr.getFieldName());
  assertEquals("var1",fieldBindingDescr.getIdentifier());
  final NotDescr notDescr=(NotDescr)lhsDescr.getDescrs().get(5);
  assertEquals(1,notDescr.getDescrs().size());
  ColumnDescr columnDescr=(ColumnDescr)notDescr.getDescrs().get(0);
  assertEquals("Bar",columnDescr.getObjectType());
  final ExistsDescr existsDescr=(ExistsDescr)lhsDescr.getDescrs().get(6);
  assertEquals(1,existsDescr.getDescrs().size());
  columnDescr=(ColumnDescr)existsDescr.getDescrs().get(0);
  assertEquals("Bar",columnDescr.getObjectType());
  andDescr=(AndDescr)lhsDescr.getDescrs().get(7);
  assertEquals(2,andDescr.getDescrs().size());
  orDescr=(OrDescr)andDescr.getDescrs().get(0);
  columnDescr=(ColumnDescr)orDescr.getDescrs().get(0);
  assertEquals("Bar",columnDescr.getObjectType());
  columnDescr=(ColumnDescr)andDescr.getDescrs().get(1);
  assertEquals("Yada",columnDescr.getObjectType());
  orDescr=(OrDescr)lhsDescr.getDescrs().get(8);
  assertEquals(2,orDescr.getDescrs().size());
  andDescr=(AndDescr)orDescr.getDescrs().get(0);
  columnDescr=(ColumnDescr)andDescr.getDescrs().get(0);
  assertEquals("Foo",columnDescr.getObjectType());
  columnDescr=(ColumnDescr)orDescr.getDescrs().get(1);
  assertEquals("Zaa",columnDescr.getObjectType());
  final EvalDescr evalDescr=(EvalDescr)lhsDescr.getDescrs().get(9);
  assertEquals("1==1",evalDescr.getContent());
}
