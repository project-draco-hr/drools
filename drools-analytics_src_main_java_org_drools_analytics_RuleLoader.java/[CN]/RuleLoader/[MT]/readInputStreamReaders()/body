{
  Collection<InputStreamReader> list=new ArrayList<InputStreamReader>();
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Dates.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Doubles.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Integers.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Patterns.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Variables.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("rangeChecks/Clean.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("Consequence.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("optimisation/RestrictionOrder.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("optimisation/PatternOrder.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("redundancy/Restrictions.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("redundancy/Notes.drl")));
  list.add(new InputStreamReader(RuleLoader.class.getResourceAsStream("reports/RangeCheckReports.drl")));
  return list;
}
