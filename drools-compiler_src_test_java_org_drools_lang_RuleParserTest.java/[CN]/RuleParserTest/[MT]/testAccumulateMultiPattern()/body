{
  final PackageDescr pkg=(PackageDescr)parseResource("compilationUnit","accumulate_multi_pattern.drl");
  assertEquals(1,pkg.getRules().size());
  final RuleDescr rule=(RuleDescr)pkg.getRules().get(0);
  assertEquals(1,rule.getLhs().getDescrs().size());
  final PatternDescr outPattern=(PatternDescr)rule.getLhs().getDescrs().get(0);
  final AccumulateDescr accum=(AccumulateDescr)outPattern.getSource();
  assertEqualsIgnoreWhitespace("$counter",outPattern.getIdentifier());
  assertEqualsIgnoreWhitespace("int x = 0 ;",accum.getInitCode());
  assertEqualsIgnoreWhitespace("x++;",accum.getActionCode());
  assertEqualsIgnoreWhitespace("new Integer(x)",accum.getResultCode());
  final AndDescr and=(AndDescr)accum.getInput();
  assertEquals(2,and.getDescrs().size());
  final PatternDescr person=(PatternDescr)and.getDescrs().get(0);
  final PatternDescr cheese=(PatternDescr)and.getDescrs().get(1);
  assertEquals("Person",person.getObjectType());
  assertEquals("Cheese",cheese.getObjectType());
}
