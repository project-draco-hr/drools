{
  final DRLParser parser=parseResource("declare_type_with_fields.drl");
  parser.compilation_unit();
  assertFalse("Parser should not raise errors: " + parser.getErrorMessages().toString(),parser.hasErrors());
  PackageDescr pkg=parser.getPackageDescr();
  List<TypeDeclarationDescr> td=pkg.getTypeDeclarations();
  assertEquals(2,td.size());
  TypeDeclarationDescr d=td.get(0);
  assertEquals("SomeFact",d.getTypeName());
  assertEquals(2,d.getFields().size());
  assertTrue(d.getFields().containsKey("name"));
  assertTrue(d.getFields().containsKey("age"));
  TypeFieldDescr f=d.getFields().get("name");
  assertEquals("String",f.getPattern().getObjectType());
  f=d.getFields().get("age");
  assertEquals("Integer",f.getPattern().getObjectType());
  d=td.get(1);
  assertEquals("AnotherFact",d.getTypeName());
}
