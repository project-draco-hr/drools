{
  RuleParser parser=parseResource("simple_expander.drl");
  MockExpanderResolver mockExpanderResolver=new MockExpanderResolver();
  parser.setExpanderResolver(mockExpanderResolver);
  parser.compilation_unit();
  PackageDescr pack=parser.getPackageDescr();
  assertNotNull(pack);
  assertEquals(1,pack.getRules().size());
  assertTrue(mockExpanderResolver.checkCalled("foo.dsl"));
  RuleDescr rule=(RuleDescr)pack.getRules().get(0);
  assertEquals("simple_rule",rule.getName());
  assertEquals(4,rule.getLhs().getDescrs().size());
  ColumnDescr col=(ColumnDescr)rule.getLhs().getDescrs().get(0);
  assertEquals("Bar",col.getObjectType());
  assertEquals("foo",col.getIdentifier());
  assertEquals(1,col.getDescrs().size());
  LiteralDescr lit=(LiteralDescr)col.getDescrs().get(0);
  assertEquals("==",lit.getEvaluator());
  assertEquals("a",lit.getFieldName());
  assertEquals("3",lit.getText());
  col=(ColumnDescr)rule.getLhs().getDescrs().get(1);
  assertEquals("Baz",col.getObjectType());
  col=(ColumnDescr)rule.getLhs().getDescrs().get(2);
  assertEquals("Bar",col.getObjectType());
  assertEquals("foo",col.getIdentifier());
  assertEquals(1,col.getDescrs().size());
  lit=(LiteralDescr)col.getDescrs().get(0);
  assertEquals("==",lit.getEvaluator());
  assertEquals("a",lit.getFieldName());
  assertEquals("3",lit.getText());
  col=(ColumnDescr)rule.getLhs().getDescrs().get(3);
  assertEquals("Bar",col.getObjectType());
}
