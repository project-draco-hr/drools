{
  final RuleDescr rule=(RuleDescr)parseResource("rule","rule","rule_attributes.drl");
  assertEquals("simple_rule",rule.getName());
  assertEqualsIgnoreWhitespace("bar();",(String)rule.getConsequence());
  final Map<String,AttributeDescr> attrs=rule.getAttributes();
  assertEquals(6,attrs.size());
  AttributeDescr at=(AttributeDescr)attrs.get("salience");
  assertEquals("salience",at.getName());
  assertEquals("42",at.getValue());
  at=(AttributeDescr)attrs.get("agenda-group");
  assertEquals("agenda-group",at.getName());
  assertEquals("my_group",at.getValue());
  at=(AttributeDescr)attrs.get("no-loop");
  assertEquals("no-loop",at.getName());
  assertEquals("true",at.getValue());
  at=(AttributeDescr)attrs.get("duration");
  assertEquals("duration",at.getName());
  assertEquals("42",at.getValue());
  at=(AttributeDescr)attrs.get("activation-group");
  assertEquals("activation-group",at.getName());
  assertEquals("my_activation_group",at.getValue());
  at=(AttributeDescr)attrs.get("lock-on-active");
  assertEquals("lock-on-active",at.getName());
  assertEquals("true",at.getValue());
}
