{
  final PackageDescr pkg=(PackageDescr)parseResource("compilationUnit","Rule_with_nested_LHS.drl");
  assertFalse(parser.getErrors().toString(),parser.hasErrors());
  RuleDescr rule=pkg.getRules().get(0);
  assertEquals("test",rule.getName());
  AndDescr lhs=rule.getLhs();
  assertNotNull(lhs);
  assertEquals(2,lhs.getDescrs().size());
  PatternDescr a=(PatternDescr)lhs.getDescrs().get(0);
  assertEquals("A",a.getObjectType());
  OrDescr or=(OrDescr)lhs.getDescrs().get(1);
  assertEquals(3,or.getDescrs().size());
  AndDescr and1=(AndDescr)or.getDescrs().get(0);
  assertEquals(2,and1.getDescrs().size());
  PatternDescr b=(PatternDescr)and1.getDescrs().get(0);
  PatternDescr c=(PatternDescr)and1.getDescrs().get(1);
  assertEquals("B",b.getObjectType());
  assertEquals("C",c.getObjectType());
  AndDescr and2=(AndDescr)or.getDescrs().get(1);
  assertEquals(2,and2.getDescrs().size());
  PatternDescr d=(PatternDescr)and2.getDescrs().get(0);
  PatternDescr e=(PatternDescr)and2.getDescrs().get(1);
  assertEquals("D",d.getObjectType());
  assertEquals("E",e.getObjectType());
  AndDescr and3=(AndDescr)or.getDescrs().get(1);
  assertEquals(2,and3.getDescrs().size());
  PatternDescr f=(PatternDescr)and3.getDescrs().get(0);
  PatternDescr g=(PatternDescr)and3.getDescrs().get(1);
  assertEquals("F",f.getObjectType());
  assertEquals("G",g.getObjectType());
}
