{
  ExpanderResolver res=new ExpanderResolver(){
    public Expander get(    String name,    String config){
      return new Expander(){
        public String expand(        String scope,        String pattern){
          if (pattern.startsWith("Good")) {
            return pattern;
          }
 else {
            throw new IllegalArgumentException("whoops");
          }
        }
      }
;
    }
  }
;
  RuleParser parser=parseResource("expander_line_errors.drl");
  parser.setExpanderResolver(res);
  parser.compilation_unit();
  assertTrue(parser.hasErrors());
  List messages=parser.getErrorMessages();
  assertEquals(messages.size(),parser.getErrors().size());
  assertEquals(4,parser.getErrors().size());
  assertEquals(ExpanderException.class,parser.getErrors().get(0).getClass());
  assertEquals(8,((RecognitionException)parser.getErrors().get(0)).line);
  assertEquals(10,((RecognitionException)parser.getErrors().get(1)).line);
  assertEquals(12,((RecognitionException)parser.getErrors().get(2)).line);
  assertEquals(13,((RecognitionException)parser.getErrors().get(3)).line);
  PackageDescr pack=parser.getPackageDescr();
  assertNotNull(pack);
  ExpanderException ex=(ExpanderException)parser.getErrors().get(0);
  assertTrue(ex.getMessage().indexOf("whoops") > -1);
}
