{
  Package pkg=(Package)this.pkgs.get(packageName);
  for (Iterator it=this.workingMemories.keySet().iterator(); it.hasNext(); ) {
    WorkingMemoryImpl workingMemory=(WorkingMemoryImpl)it.next();
    workingMemory.getLock().lock();
  }
  Rule[] rules=pkg.getRules();
  for (int i=0; i < rules.length; ++i) {
    removeRule(rules[i]);
  }
  this.packageClassLoader.removeClassLoader(pkg.getPackageCompilationData().getClassLoader());
  pkg.clear();
  Set referencedGlobals=new HashSet();
  for (Iterator it=this.pkgs.values().iterator(); it.hasNext(); ) {
    org.drools.rule.Package pkgref=(org.drools.rule.Package)it.next();
    if (pkgref != pkg) {
      referencedGlobals.addAll(pkgref.getGlobals().keySet());
    }
  }
  for (Iterator it=pkg.getGlobals().keySet().iterator(); it.hasNext(); ) {
    String globalName=(String)it.next();
    if (!referencedGlobals.contains(globalName)) {
      this.globals.remove(globalName);
    }
  }
  this.pkgs.remove(pkg.getName());
  for (Iterator it=this.workingMemories.keySet().iterator(); it.hasNext(); ) {
    WorkingMemoryImpl workingMemory=(WorkingMemoryImpl)it.next();
    workingMemory.getLock().unlock();
  }
}
