{
  int numberOfOutcomes=srcVars[currentVar].getOutcomes().length;
  boolean isTrgVar=false;
  int nextParentKeyPos=targetVarPos;
  if (this.trgVarPos.length > 0 && targetVarPos < this.trgVarPos.length && this.trgVarPos[targetVarPos] == currentVar) {
    nextParentKeyPos++;
    isTrgVar=true;
  }
  for (int j=0; j < numberOfOutcomes; j++) {
    path[currentVar]=j;
    if (currentVar < srcVars.length - 1) {
      recurse(currentVar + 1,nextParentKeyPos);
    }
 else {
      trgPotentials[trgPotentialIndex]+=srcPotentials[srcPotentialIndex++];
    }
    if (isTrgVar) {
      trgPotentialIndex+=trgVarPosMultipliers[targetVarPos];
    }
  }
  if (isTrgVar) {
    trgPotentialIndex-=(trgVarPosMultipliers[targetVarPos] * numberOfOutcomes);
  }
}
