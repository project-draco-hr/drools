{
  String header="package org.drools.compiler.test;\n";
  header+="import java.util.List;\n";
  header+="import org.drools.compiler.Person\n";
  header+="import org.drools.compiler.Cheese\n";
  header+="global Cheese cheese;\n";
  header+="global Person person;\n";
  header+="global java.util.List list;\n";
  String rule1="rule \"not person then cheese\"\n";
  rule1+="when \n";
  rule1+="    not Person() \n";
  rule1+="then \n";
  rule1+="    if (list.size() < 3) { \n";
  rule1+="        list.add(new Integer(0)); \n";
  rule1+="        insertLogical( cheese ); \n" + "    }\n";
  rule1+="    drools.halt();\n" + "end\n";
  String rule2="rule \"if cheese then person\"\n";
  rule2+="when\n";
  rule2+="    Cheese()\n";
  rule2+="then\n";
  rule2+="    if (list.size() < 3) {\n";
  rule2+="        list.add(new Integer(0));\n";
  rule2+="        insertLogical( person );\n";
  rule2+="    }\n" + "    drools.halt();\n";
  rule2+="end\n";
  KnowledgeBase kBase=loadKnowledgeBaseFromString(header + rule1 + rule2);
  StatefulKnowledgeSession ksession=kBase.newStatefulKnowledgeSession();
  final List list=new ArrayList();
  final Person person=new Person("person");
  final Cheese cheese=new Cheese("cheese",0);
  ksession.setGlobal("cheese",cheese);
  ksession.setGlobal("person",person);
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.fireAllRules();
  assertEquals(3,list.size());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.fireAllRules();
  assertEquals(3,list.size());
}
