{
  Collection<KnowledgePackage> kpkgs=loadKnowledgePackages("../test_Dynamic1_0.drl");
  kpkgs=SerializationHelper.serializeObject(kpkgs);
  KnowledgeBase kBase=getKnowledgeBase();
  kBase.addKnowledgePackages(kpkgs);
  kBase=SerializationHelper.serializeObject(kBase);
  List results=new ArrayList();
  StatefulKnowledgeSession session=kBase.newStatefulKnowledgeSession();
  session.setGlobal("results",results);
  InternalFactHandle stilton1=(InternalFactHandle)session.insert(new Cheese("stilton",10));
  InternalFactHandle brie1=(InternalFactHandle)session.insert(new Cheese("brie",10));
  session.fireAllRules();
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  kpkgs=loadKnowledgePackages("../test_Dynamic1_1.drl");
  kBase.addKnowledgePackages(SerializationHelper.serializeObject(kpkgs));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  InternalFactHandle stilton2=(InternalFactHandle)session.insert(new Cheese("stilton",20));
  InternalFactHandle brie2=(InternalFactHandle)session.insert(new Cheese("brie",20));
  InternalFactHandle brie3=(InternalFactHandle)session.insert(new Cheese("brie",30));
  session.fireAllRules();
  assertEquals(5,results.size());
  assertEquals(stilton2.getObject(),results.get(1));
  assertEquals(brie3.getObject(),results.get(2));
  assertEquals(brie2.getObject(),results.get(3));
  assertEquals(brie1.getObject(),results.get(4));
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session.dispose();
}
