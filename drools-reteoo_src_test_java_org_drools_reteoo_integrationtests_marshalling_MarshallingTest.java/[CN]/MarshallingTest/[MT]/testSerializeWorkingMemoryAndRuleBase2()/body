{
  Collection<KnowledgePackage> kpkgs=loadKnowledgePackages("../test_Serializable.drl");
  KnowledgeBase kBase=getKnowledgeBase();
  Map map=new HashMap();
  map.put("x",kBase);
  map=SerializationHelper.serializeObject(map);
  kBase=(KnowledgeBase)map.get("x");
  StatefulKnowledgeSession session=kBase.newStatefulKnowledgeSession();
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  kBase.addKnowledgePackages(kpkgs);
  session.setGlobal("list",new ArrayList());
  final Person bob=new Person("bob");
  session.insert(bob);
  org.kie.api.definition.rule.Rule[] rules=(org.kie.api.definition.rule.Rule[])kBase.getKnowledgePackage("org.drools.compiler.test").getRules().toArray(new org.kie.api.definition.rule.Rule[0]);
  assertEquals(4,rules.length);
  assertEquals("match Person 1",rules[0].getName());
  assertEquals("match Person 2",rules[1].getName());
  assertEquals("match Person 3",rules[2].getName());
  assertEquals("match Integer",rules[3].getName());
  assertEquals(1,session.getObjects().size());
  assertEquals(bob,IteratorToList.convert(session.getObjects().iterator()).get(0));
  assertEquals(2,((AgendaImpl)session.getAgenda()).getAgenda().agendaSize());
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  session.fireAllRules();
  final List list=(List)session.getGlobal("list");
  assertEquals(3,list.size());
  assertEquals(new Integer(4),list.get(0));
  assertEquals(2,session.getObjects().size());
  assertTrue(IteratorToList.convert(session.getObjects().iterator()).contains(bob));
  assertTrue(IteratorToList.convert(session.getObjects().iterator()).contains(new Person("help")));
}
