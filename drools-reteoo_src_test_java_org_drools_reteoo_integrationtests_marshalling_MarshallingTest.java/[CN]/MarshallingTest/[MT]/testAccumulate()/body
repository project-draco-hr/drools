{
  String rule="package org.drools\n" + "import org.drools.compiler.Message\n" + "global java.util.List results\n"+ "rule MyRule\n"+ "  when\n"+ "    $n : Number( intValue >= 2 ) from accumulate ( m: Message( ), count( m ) )\n"+ "  then\n"+ "    results.add($n);\n"+ "end";
  KnowledgeBase kBase=loadKnowledgeBaseFromString(rule);
  StatefulKnowledgeSession ksession=getSerialisedStatefulKnowledgeSession(kBase.newStatefulKnowledgeSession(),true);
  kBase=SerializationHelper.serializeObject(kBase);
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.setGlobal("results",new ArrayList());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.insert(new Message());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  List results=(List)ksession.getGlobal("results");
  ksession.insert(new Message());
  ksession.insert(new Message());
  ksession.fireAllRules();
  assertEquals(3,((Number)results.get(0)).intValue());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  ksession.insert(new Message());
  ksession.insert(new Message());
  ksession=getSerialisedStatefulKnowledgeSession(ksession,true);
  assertEquals(1,((InternalAgenda)ksession.getAgenda()).agendaSize());
  ksession.fireAllRules();
  assertEquals(5,((Number)results.get(1)).intValue());
}
