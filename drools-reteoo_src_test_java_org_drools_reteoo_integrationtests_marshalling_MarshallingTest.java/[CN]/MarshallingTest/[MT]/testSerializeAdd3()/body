{
  Collection<KnowledgePackage> kpkgs=loadKnowledgePackages("../test_Dynamic1_0.drl");
  kpkgs=SerializationHelper.serializeObject(kpkgs);
  KnowledgeBase kBase=getKnowledgeBase();
  kBase.addKnowledgePackages(kpkgs);
  kBase=SerializationHelper.serializeObject(kBase);
  List results=new ArrayList();
  StatefulKnowledgeSession session=kBase.newStatefulKnowledgeSession();
  session.setGlobal("results",results);
  InternalFactHandle stilton1=(InternalFactHandle)session.insert(new Cheese("stilton",10));
  InternalFactHandle brie1=(InternalFactHandle)session.insert(new Cheese("brie",10));
  session.fireAllRules();
  assertEquals(1,results.size());
  assertEquals(stilton1.getObject(),results.get(0));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  kpkgs=loadKnowledgePackages("../test_Dynamic3_0.drl");
  kBase.addKnowledgePackages(SerializationHelper.serializeObject(kpkgs));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  InternalFactHandle stilton2=(InternalFactHandle)session.insert(new Cheese("stilton",20));
  InternalFactHandle brie2=(InternalFactHandle)session.insert(new Cheese("brie",20));
  InternalFactHandle bob1=(InternalFactHandle)session.insert(new Person("bob",20));
  InternalFactHandle bob2=(InternalFactHandle)session.insert(new Person("bob",30));
  session.fireAllRules();
  assertEquals(4,results.size());
  assertEquals(stilton2.getObject(),results.get(1));
  assertEquals(bob2.getObject(),results.get(2));
  assertEquals(bob1.getObject(),results.get(3));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  kpkgs=loadKnowledgePackages("../test_Dynamic1_2.drl");
  kBase.addKnowledgePackages(SerializationHelper.serializeObject(kpkgs));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  InternalFactHandle stilton3=(InternalFactHandle)session.insert(new Cheese("stilton",40));
  InternalFactHandle brie3=(InternalFactHandle)session.insert(new Cheese("brie",40));
  InternalFactHandle bob3=(InternalFactHandle)session.insert(new Person("bob",40));
  InternalFactHandle bob4=(InternalFactHandle)session.insert(new Person("bob",40));
  InternalFactHandle addr1=(InternalFactHandle)session.insert(new Address("bangalore"));
  InternalFactHandle addr2=(InternalFactHandle)session.insert(new Address("India"));
  session.fireAllRules();
  assertEquals(9,results.size());
  assertEquals(stilton3.getObject(),results.get(4));
  assertEquals(bob4.getObject(),results.get(5));
  assertEquals(bob3.getObject(),results.get(6));
  assertEquals(addr2.getObject(),results.get(7));
  assertEquals(addr1.getObject(),results.get(8));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  InternalFactHandle stilton4=(InternalFactHandle)session.insert(new Cheese("stilton",50));
  InternalFactHandle brie4=(InternalFactHandle)session.insert(new Cheese("brie",50));
  InternalFactHandle bob5=(InternalFactHandle)session.insert(new Person("bob",50));
  InternalFactHandle bob6=(InternalFactHandle)session.insert(new Person("bob",50));
  InternalFactHandle addr3=(InternalFactHandle)session.insert(new Address("Tripura"));
  InternalFactHandle addr4=(InternalFactHandle)session.insert(new Address("Agartala"));
  session.fireAllRules();
  assertEquals(14,results.size());
  assertEquals(stilton4.getObject(),results.get(9));
  assertEquals(bob6.getObject(),results.get(10));
  assertEquals(bob5.getObject(),results.get(11));
  assertEquals(addr4.getObject(),results.get(12));
  assertEquals(addr3.getObject(),results.get(13));
  kBase=(KnowledgeBase)SerializationHelper.serializeObject(kBase);
  session=SerializationHelper.getSerialisedStatefulKnowledgeSession(session,kBase,true);
  session.dispose();
}
