{
  Map<ResourceChangeListener,ChangeSetImpl> localChangeSets=new HashMap<ResourceChangeListener,ChangeSetImpl>();
  this.listener.debug("ResourceChangeNotification processing ChangeSet");
  for (  Resource resource : changeSet.getResourcesAdded()) {
    Set<ResourceChangeListener> listeners=this.subscriptions.get(resource);
    for (    ResourceChangeListener listener : listeners) {
      ChangeSetImpl localChangeSet=localChangeSets.get(listener);
      if (localChangeSet == null) {
        localChangeSet=new ChangeSetImpl();
        localChangeSets.put(listener,localChangeSet);
      }
      if (localChangeSet.getResourcesAdded().isEmpty()) {
        localChangeSet.setResourcesAdded(new ArrayList<Resource>());
      }
      localChangeSet.getResourcesAdded().add(resource);
      this.listener.debug("ResourceChangeNotification ChangeSet added resource=" + resource + " for listener="+ listener);
    }
  }
  for (  Resource resource : changeSet.getResourcesRemoved()) {
    Set<ResourceChangeListener> listeners=this.subscriptions.remove(resource);
    for (    ResourceChangeListener listener : listeners) {
      ChangeSetImpl localChangeSet=localChangeSets.get(listener);
      if (localChangeSet == null) {
        localChangeSet=new ChangeSetImpl();
        localChangeSets.put(listener,localChangeSet);
      }
      if (localChangeSet.getResourcesRemoved().isEmpty()) {
        localChangeSet.setResourcesRemoved(new ArrayList<Resource>());
      }
      localChangeSet.getResourcesRemoved().add(resource);
      this.listener.debug("ResourceChangeNotification ChangeSet removed resource=" + resource + " for listener="+ listener);
    }
  }
  for (  Resource resource : changeSet.getResourcesModified()) {
    Set<ResourceChangeListener> listeners=this.subscriptions.get(resource);
    for (    ResourceChangeListener listener : listeners) {
      ChangeSetImpl localChangeSet=localChangeSets.get(listener);
      if (localChangeSet == null) {
        localChangeSet=new ChangeSetImpl();
        localChangeSets.put(listener,localChangeSet);
      }
      if (localChangeSet.getResourcesModified().isEmpty()) {
        localChangeSet.setResourcesModified(new ArrayList<Resource>());
      }
      localChangeSet.getResourcesModified().add(resource);
      this.listener.debug("ResourceChangeNotification ChangeSet modified resource=" + resource + " for listener="+ listener);
    }
  }
  for (  Entry<ResourceChangeListener,ChangeSetImpl> entry : localChangeSets.entrySet()) {
    ResourceChangeListener listener=entry.getKey();
    ChangeSetImpl localChangeSet=entry.getValue();
    listener.resourcesChanged(localChangeSet);
  }
}
