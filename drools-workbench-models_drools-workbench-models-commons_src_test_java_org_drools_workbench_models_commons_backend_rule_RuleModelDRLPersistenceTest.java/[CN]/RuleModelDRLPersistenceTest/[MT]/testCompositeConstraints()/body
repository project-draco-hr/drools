{
  RuleModel m=new RuleModel();
  m.name="with composite";
  FactPattern p1=new FactPattern("Person");
  p1.setBoundName("p1");
  m.addLhsItem(p1);
  FactPattern p=new FactPattern("Goober");
  m.addLhsItem(p);
  CompositeFieldConstraint comp=new CompositeFieldConstraint();
  comp.setCompositeJunctionType(CompositeFieldConstraint.COMPOSITE_TYPE_OR);
  p.addConstraint(comp);
  final SingleFieldConstraint X=new SingleFieldConstraint();
  X.setFieldName("goo");
  X.setFieldType(DataType.TYPE_STRING);
  X.setConstraintValueType(SingleFieldConstraint.TYPE_LITERAL);
  X.setValue("foo");
  X.setOperator("==");
  X.setConnectives(new ConnectiveConstraint[1]);
  X.getConnectives()[0]=new ConnectiveConstraint();
  X.getConnectives()[0].setConstraintValueType(ConnectiveConstraint.TYPE_LITERAL);
  X.getConnectives()[0].setFieldType(DataType.TYPE_STRING);
  X.getConnectives()[0].setOperator("|| ==");
  X.getConnectives()[0].setValue("bar");
  comp.addConstraint(X);
  final SingleFieldConstraint Y=new SingleFieldConstraint();
  Y.setFieldName("goo2");
  Y.setFieldType(DataType.TYPE_STRING);
  Y.setConstraintValueType(SingleFieldConstraint.TYPE_LITERAL);
  Y.setValue("foo");
  Y.setOperator("==");
  comp.addConstraint(Y);
  CompositeFieldConstraint comp2=new CompositeFieldConstraint();
  comp2.setCompositeJunctionType(CompositeFieldConstraint.COMPOSITE_TYPE_AND);
  final SingleFieldConstraint Q1=new SingleFieldConstraint();
  Q1.setFieldType(DataType.TYPE_STRING);
  Q1.setFieldName("goo");
  Q1.setOperator("==");
  Q1.setValue("whee");
  Q1.setConstraintValueType(BaseSingleFieldConstraint.TYPE_LITERAL);
  comp2.addConstraint(Q1);
  final SingleFieldConstraint Q2=new SingleFieldConstraint();
  Q2.setFieldType(DataType.TYPE_STRING);
  Q2.setFieldName("gabba");
  Q2.setOperator("==");
  Q2.setValue("whee");
  Q2.setConstraintValueType(BaseSingleFieldConstraint.TYPE_LITERAL);
  comp2.addConstraint(Q2);
  comp.addConstraint(comp2);
  final SingleFieldConstraint Z=new SingleFieldConstraint();
  Z.setFieldName("goo3");
  Z.setConstraintValueType(SingleFieldConstraint.TYPE_LITERAL);
  Z.setFieldType(DataType.TYPE_STRING);
  Z.setValue("foo");
  Z.setOperator("==");
  p.addConstraint(Z);
  ActionInsertFact ass=new ActionInsertFact("Whee");
  m.addRhsItem(ass);
  String actual=RuleModelDRLPersistenceImpl.getInstance().marshal(m);
  String expected="rule \"with composite\"\n" + "\tdialect \"mvel\"\n" + "\twhen\n"+ "\t\tp1 : Person( )\n"+ "\t\tGoober( goo == \"foo\"  || == \"bar\" || goo2 == \"foo\" || ( goo == \"whee\" && gabba == \"whee\" ), goo3 == \"foo\" )\n"+ "\tthen\n"+ "\t\tinsert( new Whee() );\n"+ "end\n";
  assertEqualsIgnoreWhitespace(expected,actual);
  checkMarshalling(expected,m);
}
