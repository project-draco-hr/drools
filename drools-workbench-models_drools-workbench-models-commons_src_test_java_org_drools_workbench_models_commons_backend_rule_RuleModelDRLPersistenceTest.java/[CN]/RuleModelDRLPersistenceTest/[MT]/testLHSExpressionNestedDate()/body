{
  RuleModel m=new RuleModel();
  m.name="test expressionsNestedDate";
  FactPattern p=new FactPattern("Person");
  SingleFieldConstraintEBLeftSide con=new SingleFieldConstraintEBLeftSide();
  con.getExpressionLeftSide().appendPart(new ExpressionUnboundFact(p.getFactType()));
  con.getExpressionLeftSide().appendPart(new ExpressionField("favouriteCheese","Cheese",DataType.TYPE_OBJECT));
  con.getExpressionLeftSide().appendPart(new ExpressionField("dateBrought","java.util.Date",DataType.TYPE_DATE));
  con.setOperator("==");
  con.setValue("27-Jun-2011");
  con.setConstraintValueType(SingleFieldConstraint.TYPE_LITERAL);
  p.addConstraint(con);
  m.addLhsItem(p);
  String expected="rule \"test expressionsNestedDate\"" + "\tdialect \"mvel\"\n when " + "     Person( favouriteCheese.dateBrought == \"27-Jun-2011\" )"+ " then "+ "end";
  PackageDataModelOracle dmo=mock(PackageDataModelOracle.class);
  when(dmo.getProjectModelFields()).thenReturn(new HashMap<String,ModelField[]>(){
{
      put("Person",new ModelField[]{new ModelField("favouriteCheese","Cheese",ModelField.FIELD_CLASS_TYPE.TYPE_DECLARATION_CLASS,ModelField.FIELD_ORIGIN.DECLARED,FieldAccessorsAndMutators.BOTH,"Cheese")});
      put("Cheese",new ModelField[]{new ModelField("dateBrought","Date",ModelField.FIELD_CLASS_TYPE.TYPE_DECLARATION_CLASS,ModelField.FIELD_ORIGIN.DECLARED,FieldAccessorsAndMutators.BOTH,"Date")});
    }
  }
);
  checkMarshallUnmarshall(expected,m,dmo);
}
