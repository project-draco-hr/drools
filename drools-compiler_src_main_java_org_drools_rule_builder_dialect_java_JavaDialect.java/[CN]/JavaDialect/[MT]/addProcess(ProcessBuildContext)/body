{
  ProcessClassBuilder classBuilder=context.getDialect().getProcessClassBuilder();
  String processClass=classBuilder.buildRule(context);
  if (processClass == null) {
    return;
  }
  final Process process=context.getProcess();
  final ProcessDescr processDescr=context.getProcessDescr();
  addClassCompileTask(this.pkg.getName() + "." + processDescr.getClassName(),processDescr,processClass,this.src,new ProcessErrorHandler(processDescr,process,"Process Compilation error"));
  for (final Iterator it=context.getInvokers().keySet().iterator(); it.hasNext(); ) {
    final String className=(String)it.next();
    final Object invoker=context.getInvokerLookups().get(className);
    if (invoker != null) {
      this.pkg.getPackageCompilationData().putInvoker(className,invoker);
    }
    final String text=(String)context.getInvokers().get(className);
    final BaseDescr descr=(BaseDescr)context.getDescrLookups().get(className);
    addClassCompileTask(className,descr,text,this.src,new ProcessInvokerErrorHandler(processDescr,process,"Unable to generate action invoker."));
  }
}
