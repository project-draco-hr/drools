{
  GuidedDTDRLPersistence p=new GuidedDTDRLPersistence();
  String[] row=new String[]{"1","desc","true","true","false"};
  List<BaseColumn> allColumns=new ArrayList<BaseColumn>();
  allColumns.add(new RowNumberCol52());
  allColumns.add(new DescriptionCol52());
  List<ActionCol52> cols=new ArrayList<ActionCol52>();
  ActionWorkItemCol52 awi=new ActionWorkItemCol52();
  PortableWorkDefinition pwd=new PortableWorkDefinition();
  pwd.setName("WorkItem");
  awi.setWorkItemDefinition(pwd);
  PortableBooleanParameterDefinition p1=new PortableBooleanParameterDefinition();
  p1.setName("BooleanResult");
  pwd.addResult(p1);
  PortableFloatParameterDefinition p2=new PortableFloatParameterDefinition();
  p2.setName("FloatResult");
  pwd.addResult(p2);
  cols.add(awi);
  ActionWorkItemSetFieldCol52 asf1=new ActionWorkItemSetFieldCol52();
  asf1.setBoundName("$r");
  asf1.setFactField("ResultBooleanField");
  asf1.setType(DataType.TYPE_BOOLEAN);
  asf1.setWorkItemName("WorkItem");
  asf1.setWorkItemResultParameterName("BooleanResult");
  asf1.setParameterClassName(Boolean.class.getName());
  cols.add(asf1);
  ActionWorkItemSetFieldCol52 asf2=new ActionWorkItemSetFieldCol52();
  asf2.setBoundName("$r");
  asf2.setFactField("ResultFloatField");
  asf2.setType(DataType.TYPE_NUMERIC_FLOAT);
  asf2.setWorkItemName("WorkItem");
  asf2.setWorkItemResultParameterName("FloatResult");
  asf2.setParameterClassName(Float.class.getName());
  cols.add(asf2);
  RuleModel rm=new RuleModel();
  allColumns.addAll(cols);
  allColumns.add(new AnalysisCol52());
  List<DTCellValue52> rowData=DataUtilities.makeDataRowList(row);
  TemplateDataProvider rowDataProvider=new GuidedDTTemplateDataProvider(allColumns,rowData);
  p.doActions(allColumns,cols,rowDataProvider,rowData,rm);
  assertEquals(2,rm.rhs.length);
  ActionExecuteWorkItem aw=(ActionExecuteWorkItem)rm.rhs[0];
  assertNotNull(aw);
  ActionSetField asf=(ActionSetField)rm.rhs[1];
  assertNotNull(asf);
  PortableWorkDefinition mpwd=aw.getWorkDefinition();
  assertNotNull(mpwd);
  assertEquals(2,mpwd.getResults().size());
  PortableBooleanParameterDefinition mp1=(PortableBooleanParameterDefinition)mpwd.getResult("BooleanResult");
  assertNotNull(mp1);
  PortableFloatParameterDefinition mp2=(PortableFloatParameterDefinition)mpwd.getResult("FloatResult");
  assertNotNull(mp2);
  assertEquals(asf.getVariable(),"$r");
  assertEquals(1,asf.getFieldValues().length);
  ActionFieldValue fv1=asf.getFieldValues()[0];
  assertNotNull(fv1);
  assertTrue(fv1 instanceof ActionWorkItemFieldValue);
  ActionWorkItemFieldValue wifv1=(ActionWorkItemFieldValue)fv1;
  assertEquals("ResultBooleanField",wifv1.getField());
  assertEquals(DataType.TYPE_BOOLEAN,wifv1.getType());
  assertEquals("WorkItem",wifv1.getWorkItemName());
  assertEquals("BooleanResult",wifv1.getWorkItemParameterName());
  assertEquals(Boolean.class.getName(),wifv1.getWorkItemParameterClassName());
}
