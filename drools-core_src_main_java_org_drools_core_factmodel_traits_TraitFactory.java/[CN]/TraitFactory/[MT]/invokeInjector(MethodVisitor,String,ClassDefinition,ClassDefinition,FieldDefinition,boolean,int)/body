{
  FieldDefinition tgtField=core.getFieldByAlias(field.resolveAlias());
  String fieldType=tgtField.getTypeName();
  String fieldName=tgtField.getName();
  String returnType=BuildUtils.getTypeDescriptor(fieldType);
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(masterName),"object",BuildUtils.getTypeDescriptor(core.getName()));
  if (toNull) {
    mv.visitInsn(BuildUtils.zero(field.getTypeName()));
  }
 else {
    mv.visitVarInsn(BuildUtils.varType(fieldType),pointer);
  }
  if (!BuildUtils.isPrimitive(fieldType)) {
    mv.visitTypeInsn(CHECKCAST,BuildUtils.getInternalType(fieldType));
  }
  mv.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(core.getDefinedClass()),BuildUtils.setterName(fieldName,fieldType),Type.getMethodDescriptor(Type.getType(void.class),new Type[]{Type.getType(returnType)}));
}
