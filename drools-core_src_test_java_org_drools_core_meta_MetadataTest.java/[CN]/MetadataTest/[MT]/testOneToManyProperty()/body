{
  AnotherKlass aki=AnotherKlass_.newAnotherKlass("000").call();
  AnotherKlass aki2=AnotherKlass_.newAnotherKlass("999").call();
  Klass klass1=Klass_.newKlass("001").call();
  Klass klass2=Klass_.newKlass("002").call();
  AnotherKlass_.modify(aki,With.updates(klass1,klass2)).manyKlasses(new ArrayList(Arrays.asList(klass1,klass2)),Lit.SET).call();
  assertSame(aki,klass1.getOneAnother());
  assertSame(aki,klass2.getOneAnother());
  AnotherKlass_.modify(aki2).manyKlasses(klass1,Lit.ADD).call();
  assertSame(aki2,klass1.getOneAnother());
  assertSame(aki,klass2.getOneAnother());
  assertFalse(aki.getManyKlasses().contains(klass1));
  assertTrue(aki2.getManyKlasses().contains(klass1));
  assertTrue(aki.getManyKlasses().contains(klass2));
  AnotherKlass_.modify(aki2).manyKlasses(klass1,Lit.REMOVE).call();
  assertNull(klass1.getOneAnother());
  assertFalse(aki2.getManyKlasses().contains(klass1));
}
