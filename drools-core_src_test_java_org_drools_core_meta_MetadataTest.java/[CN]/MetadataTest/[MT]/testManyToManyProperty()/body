{
  AnotherKlass aki1=AnotherKlass_.newAnotherKlass("000").call();
  AnotherKlass aki2=AnotherKlass_.newAnotherKlass("999").call();
  Klass klass1=Klass_.newKlass("001").call();
  Klass klass2=Klass_.newKlass("002").call();
  Klass_.modify(klass1).manyOthers(aki1,Lit.ADD).call();
  Klass_.modify(klass1).manyOthers(aki2,Lit.ADD).call();
  AnotherKlass_.modify(aki2).manyMoreKlasses(klass2,Lit.ADD).call();
  AnotherKlass_.modify(aki1).manyMoreKlasses(klass2,Lit.ADD).call();
  assertTrue(klass1.getManyAnothers().contains(aki1));
  assertTrue(klass1.getManyAnothers().contains(aki2));
  assertTrue(klass2.getManyAnothers().contains(aki1));
  assertTrue(klass2.getManyAnothers().contains(aki2));
  assertTrue(aki1.getManyMoreKlasses().contains(klass1));
  assertTrue(aki1.getManyMoreKlasses().contains(klass2));
  assertTrue(aki2.getManyMoreKlasses().contains(klass1));
  assertTrue(aki2.getManyMoreKlasses().contains(klass2));
  AnotherKlass_.modify(aki2).manyMoreKlasses(klass2,Lit.REMOVE).call();
  assertTrue(klass1.getManyAnothers().contains(aki1));
  assertTrue(klass1.getManyAnothers().contains(aki2));
  assertTrue(klass2.getManyAnothers().contains(aki1));
  assertFalse(klass2.getManyAnothers().contains(aki2));
  assertTrue(aki1.getManyMoreKlasses().contains(klass1));
  assertTrue(aki1.getManyMoreKlasses().contains(klass2));
  assertTrue(aki2.getManyMoreKlasses().contains(klass1));
  assertFalse(aki2.getManyMoreKlasses().contains(klass2));
  AnotherKlass_.modify(aki2).manyMoreKlasses(klass2,Lit.ADD).call();
  assertTrue(klass1.getManyAnothers().contains(aki1));
  assertTrue(klass1.getManyAnothers().contains(aki2));
  assertTrue(klass2.getManyAnothers().contains(aki1));
  assertTrue(klass2.getManyAnothers().contains(aki2));
  assertTrue(aki1.getManyMoreKlasses().contains(klass1));
  assertTrue(aki1.getManyMoreKlasses().contains(klass2));
  assertTrue(aki2.getManyMoreKlasses().contains(klass1));
  assertTrue(aki2.getManyMoreKlasses().contains(klass2));
  AnotherKlass_.modify(aki2).manyMoreKlasses(klass2,Lit.SET).call();
  assertTrue(klass1.getManyAnothers().contains(aki1));
  assertFalse(klass1.getManyAnothers().contains(aki2));
  assertTrue(klass2.getManyAnothers().contains(aki1));
  assertTrue(klass2.getManyAnothers().contains(aki2));
  assertTrue(aki1.getManyMoreKlasses().contains(klass1));
  assertTrue(aki1.getManyMoreKlasses().contains(klass2));
  assertFalse(aki2.getManyMoreKlasses().contains(klass1));
  assertTrue(aki2.getManyMoreKlasses().contains(klass2));
}
