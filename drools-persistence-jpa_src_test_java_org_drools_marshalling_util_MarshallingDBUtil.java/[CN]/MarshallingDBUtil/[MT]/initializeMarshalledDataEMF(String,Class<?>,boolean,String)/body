{
  HashMap<String,Object> context=new HashMap<String,Object>();
  Properties dsProps=getDatasourceProperties();
  String driverClass=dsProps.getProperty("driverClassName");
  if (!driverClass.startsWith("org.h2")) {
    return null;
  }
  String dbFilePath=generatePathToTestDb(testClass);
  if (useBaseDb) {
    dbFilePath=dbFilePath.replace(MARSHALLING_TEST_DB,MARSHALLING_BASE_DB);
    if (baseDbVer != null && baseDbVer.length() > 0) {
      dbFilePath=dbFilePath.replace("current",baseDbVer);
    }
  }
  String jdbcURLBase=dsProps.getProperty("url");
  String jdbcUrl=jdbcURLBase + dbFilePath;
  PoolingDataSource ds1=setupPoolingDataSource(dsProps);
  ds1.getDriverProperties().setProperty("url",jdbcUrl);
  ds1.init();
  context.put(DATASOURCE,ds1);
  Properties overrideProperties=new Properties();
  overrideProperties.setProperty("hibernate.connection.url",jdbcUrl);
  EntityManagerFactory emf=Persistence.createEntityManagerFactory(persistenceUnitName,overrideProperties);
  context.put(ENTITY_MANAGER_FACTORY,emf);
  return context;
}
