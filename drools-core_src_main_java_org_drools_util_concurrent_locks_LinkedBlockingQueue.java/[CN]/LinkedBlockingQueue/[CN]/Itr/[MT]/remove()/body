{
  if (lastRet == null)   throw new IllegalStateException();
synchronized (putLock) {
synchronized (takeLock) {
      Node node=lastRet;
      lastRet=null;
      Node trail=head;
      Node p=head.next;
      while (p != null && p != node) {
        trail=p;
        p=p.next;
      }
      if (p == node) {
        p.item=null;
        trail.next=p.next;
        if (last == p)         last=trail;
        int c;
synchronized (this) {
          c=count--;
        }
        if (c == capacity)         putLock.notifyAll();
      }
    }
  }
}
