{
  Object x=null;
  int c=-1;
  long nanos=unit.toNanos(timeout);
synchronized (takeLock) {
    long deadline=Utils.nanoTime() + nanos;
    for (; ; ) {
      if (count > 0) {
        x=extract();
synchronized (this) {
          c=count--;
        }
        if (c > 1)         takeLock.notify();
        break;
      }
      if (nanos <= 0)       return null;
      try {
        TimeUnit.NANOSECONDS.timedWait(takeLock,nanos);
        nanos=deadline - Utils.nanoTime();
      }
 catch (      InterruptedException ie) {
        takeLock.notify();
        throw ie;
      }
    }
  }
  if (c == capacity)   signalNotFull();
  return x;
}
