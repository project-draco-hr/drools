{
  if (o == null)   return false;
  boolean removed=false;
synchronized (putLock) {
synchronized (takeLock) {
      Node trail=head;
      Node p=head.next;
      while (p != null) {
        if (o.equals(p.item)) {
          removed=true;
          break;
        }
        trail=p;
        p=p.next;
      }
      if (removed) {
        p.item=null;
        trail.next=p.next;
        if (last == p)         last=trail;
synchronized (this) {
          if (count-- == capacity)           putLock.notifyAll();
        }
      }
    }
  }
  return removed;
}
