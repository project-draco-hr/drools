{
  Constant c1=(Constant)o1;
  Constant c2=(Constant)o2;
  int d=getSort(c1) - getSort(c2);
  if (d == 0) {
switch (c1.type) {
case 'I':
      return new Integer(c1.intVal).compareTo(new Integer(c2.intVal));
case 'J':
    return new Long(c1.longVal).compareTo(new Long(c2.longVal));
case 'F':
  return new Float(c1.floatVal).compareTo(new Float(c2.floatVal));
case 'D':
return new Double(c1.doubleVal).compareTo(new Double(c2.doubleVal));
case 's':
case 'S':
case 'C':
return c1.strVal1.compareTo(c2.strVal1);
case 'T':
d=c1.strVal1.compareTo(c2.strVal1);
if (d == 0) {
d=c1.strVal2.compareTo(c2.strVal2);
}
break;
default :
d=c1.strVal1.compareTo(c2.strVal1);
if (d == 0) {
d=c1.strVal2.compareTo(c2.strVal2);
if (d == 0) {
d=c1.strVal3.compareTo(c2.strVal3);
}
}
}
}
return d;
}
