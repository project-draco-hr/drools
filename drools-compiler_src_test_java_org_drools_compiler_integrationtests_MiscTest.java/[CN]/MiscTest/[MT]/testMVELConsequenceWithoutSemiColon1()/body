{
  String drl="";
  drl+="package test\n";
  drl+="import org.drools.compiler.Person\n";
  drl+="import org.drools.compiler.Pet\n";
  drl+="rule test dialect 'mvel'\n";
  drl+="when\n";
  drl+="$person:Person()\n";
  drl+="$pet:Pet()\n";
  drl+="then\n";
  drl+="    delete($person) // some comment\n";
  drl+="    delete($pet) // another comment\n";
  drl+="end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(drl);
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  org.kie.api.event.rule.WorkingMemoryEventListener wml=Mockito.mock(org.kie.api.event.rule.WorkingMemoryEventListener.class);
  ksession.addEventListener(wml);
  org.kie.api.runtime.rule.FactHandle personFH=ksession.insert(new Person("Toni"));
  org.kie.api.runtime.rule.FactHandle petFH=ksession.insert(new Pet("Toni"));
  int fired=ksession.fireAllRules();
  assertEquals(1,fired);
  ArgumentCaptor<ObjectDeletedEvent> retracts=ArgumentCaptor.forClass(ObjectDeletedEvent.class);
  verify(wml,times(2)).objectDeleted(retracts.capture());
  List<ObjectDeletedEvent> values=retracts.getAllValues();
  assertThat(values.get(0).getFactHandle(),is(personFH));
  assertThat(values.get(1).getFactHandle(),is(petFH));
}
