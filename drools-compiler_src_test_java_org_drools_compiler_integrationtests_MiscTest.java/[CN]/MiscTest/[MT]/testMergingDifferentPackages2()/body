{
  try {
    Collection<KnowledgePackage> kpkgs1=loadKnowledgePackages("test_RuleNameClashes1.drl");
    assertEquals(1,kpkgs1.iterator().next().getRules().size());
    Collection<KnowledgePackage> kpkgs2=loadKnowledgePackages("test_RuleNameClashes2.drl");
    assertEquals(1,kpkgs2.iterator().next().getRules().size());
    KnowledgeBase kbase=loadKnowledgeBase();
    kbase.addKnowledgePackages(kpkgs1);
    kbase.addKnowledgePackages(kpkgs2);
    kbase=SerializationHelper.serializeObject(kbase);
    StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
    final List results=new ArrayList();
    ksession.setGlobal("results",results);
    ksession.insert(new Cheese("stilton",10));
    ksession.insert(new Cheese("brie",5));
    ksession.fireAllRules();
    assertEquals(results.toString(),2,results.size());
    assertTrue(results.contains("p1.r1"));
    assertTrue(results.contains("p2.r1"));
  }
 catch (  KnowledgeBuilderImpl.PackageMergeException e) {
    fail("Should not raise exception when merging different packages into the same rulebase: " + e.getMessage());
  }
catch (  Exception e) {
    e.printStackTrace();
    fail("unexpected exception: " + e.getMessage());
  }
}
