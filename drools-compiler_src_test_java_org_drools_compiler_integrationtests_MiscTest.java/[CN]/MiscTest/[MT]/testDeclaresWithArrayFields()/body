{
  String rule="package org.drools.compiler.test; \n" + "import " + org.drools.compiler.test.Person.class.getName() + ";\n"+ "import "+ org.drools.compiler.test.Man.class.getName()+ ";\n"+ "\n"+ "global java.util.List list;"+ "\n"+ "declare Cheese\n"+ "   name : String = \"ched\" \n"+ "end \n"+ ""+ "declare X\n"+ "    fld \t: String   = \"xx\"                                      @key \n"+ "    achz\t: Cheese[] \n"+ "    astr\t: String[] "+ " = new String[] {\"x\", \"y11\" } \n"+ "    aint\t: int[] \n"+ "    sint\t: short[] \n"+ "    bint\t: byte[] \n"+ "    lint\t: long[] \n"+ "    dint\t: double[] \n"+ "    fint\t: float[] \n"+ "    zint\t: Integer[] "+ " = new Integer[] {2,3}                   @key \n"+ "    aaaa\t: String[][] \n"+ "    bbbb\t: int[][] \n"+ "    aprs\t: Person[] "+ " = new org.drools.compiler.test.Person[] { new org.drools.compiler.test.Man() } \n"+ "end\n"+ "\n"+ "rule \"Init\"\n"+ "when\n"+ "\n"+ "then\n"+ "    X x = new X( \"xx\", \n"+ "                 new Cheese[0], \n"+ "                 new String[] { \"x\", \"y22\" }, \n"+ "                 new int[] { 7, 9 }, \n"+ "                 new short[] { 3, 4 }, \n"+ "                 new byte[] { 1, 2 }, \n"+ "                 new long[] { 100L, 200L }, \n"+ "                 new double[] { 3.2, 4.4 }, \n"+ "                 new float[] { 3.2f, 4.4f }, \n"+ "                 new Integer[] { 2, 3 }, \n"+ "                 new String[2][3], \n"+ "                 new int[5][3], \n"+ "                 null \n"+ "    ); \n"+ "   insert( x );\n"+ "   "+ "   X x2 = new X(); \n"+ "   x2.setAint( new int[2] ); \n "+ "   x2.getAint()[0] = 7; \n"+ "   insert( x2 );\n"+ "   "+ "   if ( x.hashCode() == x2.hashCode() ) list.add( \"hash\" );  \n"+ "   "+ "   if( x.equals( x2 ) ) list.add( \"equals\" );  \n"+ "   "+ "   list.add( x.getAint(  )[0] );  \n"+ "end \n"+ "\n"+ "rule \"Check\"\n"+ "when\n"+ "    X( astr.length > 0,            \n"+ "       astr[0] == \"x\",           \n"+ "       $x : astr[1],               \n"+ "       aint[0] == 7  )             \n"+ "then\n"+ "    list.add( $x );\n"+ "end \n"+ "";
  System.out.println(rule);
  KnowledgeBase kbase=loadKnowledgeBaseFromString(rule);
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertTrue(list.contains("hash"));
  assertTrue(list.contains("equals"));
  assertTrue(list.contains(7));
  assertTrue(list.contains("y11"));
  assertTrue(list.contains("y22"));
}
