{
  String str="import org.drools.compiler.TestParam;\n" + "\n" + "global java.util.List list;\n"+ "\n"+ "rule \"Intercept\"\n"+ "when\n"+ "    TestParam( value1 == \"extract\", $args : elements )\n"+ "    $s : String( this == $args[$s.length() - $s.length()] )\n"+ "    $s1 : String( this == $args[0] )\n"+ "    $s2 : String( this == $args[1] )\n"+ "    Integer( this == 2 ) from $args.length\n"+ "    $s3 : String( this == $args[$args.length - $args.length  + 1] )\n"+ "then\n"+ "    delete( $s1 );  \n"+ "    delete( $s2 );  \n"+ "    list.add( $s1 ); \n"+ "    list.add( $s2 ); \n"+ "end\n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  java.util.List list=new java.util.ArrayList();
  ksession.setGlobal("list",list);
  int N=2;
  for (int j=0; j < N; j++) {
    TestParam o=new TestParam();
    o.setValue1("extract");
    o.setElements(new Object[]{"x1_" + j,"x2_" + j});
    ksession.insert("x1_" + j);
    ksession.insert("x2_" + j);
    ksession.insert(o);
    ksession.fireAllRules();
  }
  assertEquals(4,list.size());
  assertTrue(list.contains("x1_0"));
  assertTrue(list.contains("x1_1"));
  assertTrue(list.contains("x2_0"));
  assertTrue(list.contains("x2_1"));
  ksession.dispose();
}
