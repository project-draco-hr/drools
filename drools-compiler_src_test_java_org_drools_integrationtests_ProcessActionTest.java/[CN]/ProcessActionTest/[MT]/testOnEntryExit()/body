{
  PackageBuilder builder=new PackageBuilder();
  Reader source=new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<process xmlns=\"http://drools.org/drools-4.0/process\"\n" + "         xmlns:xs=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ "         xs:schemaLocation=\"http://drools.org/drools-4.0/process drools-processes-4.0.xsd\"\n"+ "         type=\"RuleFlow\" name=\"flow\" id=\"org.drools.actions\" package-name=\"org.drools\" version=\"1\" >\n"+ "\n"+ "  <header>\n"+ "    <globals>\n"+ "      <global identifier=\"list\" type=\"java.util.List\" />\n"+ "    </globals>\n"+ "  </header>\n"+ "\n"+ "  <nodes>\n"+ "    <start id=\"1\" name=\"Start\" />\n"+ "    <workItem id=\"2\" name=\"HumanTask\" >\n"+ "      <work name=\"Human Task\" >\n"+ "        <parameter name=\"ActorId\" type=\"org.drools.process.core.datatype.impl.type.StringDataType\" >John Doe</parameter>\n"+ "        <parameter name=\"TaskName\" type=\"org.drools.process.core.datatype.impl.type.StringDataType\" >Do something</parameter>\n"+ "        <parameter name=\"Priority\" type=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "        <parameter name=\"Comment\" type=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "      </work>\n"+ "      <onEntry>\n"+ "        <action type=\"expression\" name=\"Print\" dialect=\"mvel\" >list.add(\"Executing on entry action\");</action>\n"+ "      </onEntry>\n"+ "      <onExit>\n"+ "        <action type=\"expression\" name=\"Print\" dialect=\"java\" >list.add(\"Executing on exit action1\");</action>\n"+ "        <action type=\"expression\" name=\"Print\" dialect=\"java\" >list.add(\"Executing on exit action2\");</action>\n"+ "      </onExit>\n"+ "    </workItem>\n"+ "    <end id=\"3\" name=\"End\" />\n"+ "  </nodes>\n"+ "\n"+ "  <connections>\n"+ "    <connection from=\"1\" to=\"2\" />\n"+ "    <connection from=\"2\" to=\"3\" />\n"+ "  </connections>\n"+ "\n"+ "</process>");
  builder.addRuleFlow(source);
  Package pkg=builder.getPackage();
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  WorkingMemory workingMemory=ruleBase.newStatefulSession();
  TestWorkItemHandler handler=new TestWorkItemHandler();
  workingMemory.getWorkItemManager().registerWorkItemHandler("Human Task",handler);
  List list=new ArrayList();
  workingMemory.setGlobal("list",list);
  ProcessInstance processInstance=workingMemory.startProcess("org.drools.actions");
  assertEquals(ProcessInstance.STATE_ACTIVE,processInstance.getState());
  WorkItem workItem=handler.getWorkItem();
  assertNotNull(workItem);
  assertEquals(1,list.size());
  workingMemory.getWorkItemManager().completeWorkItem(workItem.getId(),null);
  assertEquals(3,list.size());
  assertEquals(ProcessInstance.STATE_COMPLETED,processInstance.getState());
}
