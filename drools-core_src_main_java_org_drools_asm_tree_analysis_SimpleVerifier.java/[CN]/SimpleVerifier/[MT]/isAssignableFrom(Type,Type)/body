{
  if (t.equals(u)) {
    return true;
  }
  if (this.currentClass != null && t.equals(this.currentClass)) {
    return isAssignableFrom(t,getSuperClass(u));
  }
  if (this.currentClass != null && u.equals(this.currentClass)) {
    if (isAssignableFrom(t,this.currentSuperClass)) {
      return true;
    }
    if (this.currentClassInterfaces != null) {
      for (int i=0; i < this.currentClassInterfaces.size(); ++i) {
        final Type v=(Type)this.currentClassInterfaces.get(i);
        if (isAssignableFrom(t,v)) {
          return true;
        }
      }
    }
    return false;
  }
  return getClass(t).isAssignableFrom(getClass(u));
}
