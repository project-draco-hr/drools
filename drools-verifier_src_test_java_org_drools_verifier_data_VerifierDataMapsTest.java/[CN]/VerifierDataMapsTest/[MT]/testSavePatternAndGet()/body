{
  VerifierData data=VerifierReportFactory.newVerifierData();
  VerifierRule rule=(VerifierRule)fillTestValues(new VerifierRule());
  rule.setRuleName("test");
  assertNotNull(rule.getRuleName());
  assertEquals("test",rule.getRuleName());
  ObjectType objectType=(ObjectType)fillTestValues(new ObjectType());
  Pattern pattern=(Pattern)fillTestValues(new Pattern());
  pattern.setRuleGuid(rule.getGuid());
  assertNotNull(pattern.getRuleGuid());
  assertEquals(rule.getGuid(),pattern.getRuleGuid());
  pattern.setRuleName(rule.getRuleName());
  assertNotNull(pattern.getRuleName());
  assertEquals(rule.getRuleName(),pattern.getRuleName());
  pattern.setObjectTypeGuid(objectType.getGuid());
  assertNotNull(pattern.getObjectTypeGuid());
  assertEquals(objectType.getGuid(),pattern.getObjectTypeGuid());
  data.add(rule);
  data.add(objectType);
  data.add(pattern);
  Collection<VerifierComponent> all=data.getAll();
  assertEquals(3,all.size());
  assertTrue(all.contains(pattern));
  assertTrue(all.contains(objectType));
  assertTrue(all.contains(rule));
  Collection<VerifierComponent> components=data.getAll(pattern.getVerifierComponentType());
  assertEquals(1,components.size());
  assertEquals(pattern,components.toArray()[0]);
  VerifierComponent objectType2=data.getVerifierObject(objectType.getVerifierComponentType(),objectType.getGuid());
  assertNotNull(objectType2);
  assertEquals(objectType,objectType2);
  VerifierComponent rule2=data.getVerifierObject(rule.getVerifierComponentType(),rule.getGuid());
  assertNotNull(rule2);
  assertEquals(rule,rule2);
}
