{
  VerifierBuilder vBuilder=VerifierBuilderFactory.newVerifierBuilder();
  Verifier verifier=vBuilder.newVerifier();
  verifier.addResourcesToVerify(ResourceFactory.newClassPathResource("RedundantRestrictions.drl",getClass()),ResourceType.DRL);
  assertFalse(verifier.hasErrors());
  boolean noProblems=verifier.fireAnalysis();
  assertTrue(noProblems);
  Collection<? extends Object> subsumptionList=((VerifierImpl)verifier).getKnowledgeSession().getObjects(new ClassObjectFilter(Subsumption.class));
  Collection<? extends Object> redundancyList=((VerifierImpl)verifier).getKnowledgeSession().getObjects(new ClassObjectFilter(Redundancy.class));
  assertEquals(2,subsumptionList.size());
  assertEquals(1,redundancyList.size());
  verifier.dispose();
}
