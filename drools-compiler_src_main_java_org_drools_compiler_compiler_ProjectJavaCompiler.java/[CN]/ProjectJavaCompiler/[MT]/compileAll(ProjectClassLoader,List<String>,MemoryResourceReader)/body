{
  List<KnowledgeBuilderResult> results=new ArrayList<KnowledgeBuilderResult>();
  if (classList.isEmpty()) {
    return results;
  }
  final String[] classes=new String[classList.size()];
  classList.toArray(classes);
  CompilationResult result=compiler.compile(classes,src,new ProjectResourceStore(projectClassLoader),projectClassLoader);
  if (result.getErrors().length > 0) {
    Map<String,ErrorHandler> errorHandlerMap=new HashMap<String,ErrorHandler>();
    for (int i=0; i < result.getErrors().length; i++) {
      final CompilationProblem err=result.getErrors()[i];
      ErrorHandler handler=errorHandlerMap.get(err.getFileName());
      if (handler == null) {
        handler=new SrcErrorHandler("Src compile error");
        errorHandlerMap.put(err.getFileName(),handler);
      }
      handler.addError(err);
    }
    for (    ErrorHandler handler : errorHandlerMap.values()) {
      if (handler.isInError()) {
        results.add(handler.getError());
      }
    }
  }
  return results;
}
