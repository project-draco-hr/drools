{
  String str="";
  str+="package org.simple \n";
  str+="import " + Person.class.getCanonicalName() + "\n";
  str+="import " + Cheese.class.getCanonicalName() + "\n";
  str+="import " + Cat.class.getCanonicalName() + "\n";
  str+="global java.util.List list \n";
  str+="rule x1 \n";
  str+="when \n";
  str+="    $pe : Person() from list\n";
  str+="then \n";
  str+="end  \n";
  str+="rule x2 \n";
  str+="when \n";
  str+="    $ch : Cheese() from list\n";
  str+="then \n";
  str+="end  \n";
  str+="rule x3 \n";
  str+="when \n";
  str+="    $ch : Cheese() from list\n";
  str+="then \n";
  str+="end  \n";
  str+="rule x4 \n";
  str+="when \n";
  str+="    $ch : Cheese() from list\n";
  str+="    eval( $ch != null ) \n";
  str+="then \n";
  str+="end  \n";
  KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
  InternalWorkingMemory wm=((InternalWorkingMemory)kbase.newStatefulKnowledgeSession());
  wm.fireAllRules();
  ObjectTypeNode otnInit=getObjectTypeNode(kbase,"InitialFactImpl");
  LeftInputAdapterNode liaNode=(LeftInputAdapterNode)otnInit.getSinkPropagator().getSinks()[0];
  LeftTupleSink[] sinks=liaNode.getSinkPropagator().getSinks();
  assertEquals(0,sinks[0].getLeftInputOtnId().getId());
  assertEquals(1,sinks[1].getLeftInputOtnId().getId());
  assertEquals(2,sinks[2].getLeftInputOtnId().getId());
  assertEquals(3,sinks[3].getLeftInputOtnId().getId());
}
