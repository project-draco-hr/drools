{
  boolean same=false;
  try {
    Class<?> objClass=objA.getClass();
    do {
      Field[] fields=objClass.getDeclaredFields();
      if (fields.length == 0) {
        same=true;
      }
 else {
        same=true;
        for (int i=0; same && i < fields.length; ++i) {
          DebugContext subContext=context.clone();
          subContext.level=context.level + 1;
          subContext.name=context.name + ": " + fields[i].getName()+ " > ";
          if (Modifier.isTransient(fields[i].getModifiers()) || doNotCompareFieldsMap.contains(fields[i])) {
            if (context.print) {
              logger.trace(context.name + ": " + fields[i].getName()+ " %");
            }
            continue;
          }
          fields[i].setAccessible(true);
          Object subObjA=fields[i].get(objA);
          Object subObjB=fields[i].get(objB);
          same=compareInstances(subContext,subObjA,subObjB);
        }
      }
      objClass=objClass.getSuperclass();
    }
 while (objClass != null && same);
    context.name+=": " + (same == true ? "=" : "X");
  }
 catch (  Exception e) {
    same=false;
    e.printStackTrace();
    Assert.fail(e.getClass().getSimpleName() + ": " + e.getMessage());
  }
  return same;
}
