{
  setKSession(getModelSession(source1,VERBOSE));
  setKbase(getKSession().getKieBase());
  KieSession kSession=getKSession();
  kSession.fireAllRules();
  kSession.getEntryPoint("in_Age").insert(33.0);
  kSession.getEntryPoint("in_Occupation").insert("SKYDIVER");
  kSession.getEntryPoint("in_ResidenceState").insert("KN");
  kSession.getEntryPoint("in_ValidLicense").insert(true);
  kSession.fireAllRules();
  FactType scoreCardType=getKbase().getFactType(PMML4Helper.pmmlDefaultPackageName(),"ScoreCard");
  assertNotNull(scoreCardType);
  assertEquals(1,kSession.getObjects(new ClassObjectFilter(scoreCardType.getFactClass())).size());
  Object scoreCard=kSession.getObjects(new ClassObjectFilter(scoreCardType.getFactClass())).iterator().next();
  assertEquals("SampleScore",scoreCardType.get(scoreCard,"modelName"));
  assertEquals(41.345,scoreCardType.get(scoreCard,"score"));
  Object x=scoreCardType.get(scoreCard,"ranking");
  assertTrue(x instanceof LinkedHashMap);
  LinkedHashMap map=(LinkedHashMap)x;
  assertTrue(map.containsKey("LX00"));
  assertTrue(map.containsKey("RES"));
  assertTrue(map.containsKey("CX2"));
  assertEquals(-1.0,map.get("LX00"));
  assertEquals(-10.0,map.get("RES"));
  assertEquals(-30.0,map.get("CX2"));
  Iterator iter=map.keySet().iterator();
  assertEquals("LX00",iter.next());
  assertEquals("RES",iter.next());
  assertEquals("CX2",iter.next());
}
