{
  final PropagationContext context=new PropagationContextImpl(0,PropagationContext.INSERTION,null,null,null);
  ReteooRuleBase ruleBase=(ReteooRuleBase)RuleBaseFactory.newRuleBase();
  IdGenerator idGenerator=ruleBase.getReteooBuilder().getIdGenerator();
  final AbstractWorkingMemory workingMemory=(AbstractWorkingMemory)ruleBase.newStatefulSession();
  final Rete source=ruleBase.getRete();
  final EntryPointNode entryPoint=new EntryPointNode(0,source,buildContext);
  entryPoint.attach(buildContext);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(idGenerator.getNextId(),entryPoint,new ClassObjectType(String.class),buildContext);
  final MockObjectSink sink=new MockObjectSink();
  objectTypeNode.addObjectSink(sink);
  final Object string1="cheese";
  final InternalFactHandle handle1=(InternalFactHandle)workingMemory.insert(string1);
  objectTypeNode.assertObject(handle1,context,workingMemory);
  final List asserted=sink.getAsserted();
  assertLength(1,asserted);
  assertSame(string1,workingMemory.getObject((DefaultFactHandle)((Object[])asserted.get(0))[0]));
  final ObjectTypeNodeMemory memory=(ObjectTypeNodeMemory)workingMemory.getNodeMemory(objectTypeNode);
  assertEquals(1,memory.memory.size());
  assertTrue(memory.memory.contains(handle1));
}
