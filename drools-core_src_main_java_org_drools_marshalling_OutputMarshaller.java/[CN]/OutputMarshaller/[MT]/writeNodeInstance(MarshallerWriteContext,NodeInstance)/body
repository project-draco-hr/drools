{
  ObjectOutputStream stream=context.stream;
  stream.writeLong(nodeInstance.getId());
  stream.writeLong(nodeInstance.getNodeId());
  if (nodeInstance instanceof RuleSetNodeInstance) {
    stream.writeInt(PersisterEnums.RULE_SET_NODE_INSTANCE);
  }
 else   if (nodeInstance instanceof WorkItemNodeInstance) {
    stream.writeInt(PersisterEnums.WORK_ITEM_NODE_INSTANCE);
    stream.writeLong(((WorkItemNodeInstance)nodeInstance).getWorkItem().getId());
  }
 else   if (nodeInstance instanceof SubProcessNodeInstance) {
    stream.writeInt(PersisterEnums.SUB_PROCESS_NODE_INSTANCE);
    stream.writeLong(((SubProcessNodeInstance)nodeInstance).getProcessInstanceId());
  }
 else   if (nodeInstance instanceof MilestoneNodeInstance) {
    stream.writeInt(PersisterEnums.MILESTONE_NODE_INSTANCE);
  }
 else   if (nodeInstance instanceof TimerNodeInstance) {
    stream.writeInt(PersisterEnums.TIMER_NODE_INSTANCE);
    stream.writeLong(((TimerNodeInstance)nodeInstance).getTimerId());
  }
 else {
    throw new IllegalArgumentException("Unknown node instance type: " + nodeInstance);
  }
}
