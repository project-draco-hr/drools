{
  InputStream in=getClass().getResourceAsStream("NamedConsequences.drl");
  KieSession session=getStatelessKieSession(in);
  VerifierReport result=VerifierReportFactory.newVerifierReport();
  Collection<? extends Object> testData=getTestData(this.getClass().getResourceAsStream("ConsequenceTest.drl"),result.getVerifierData());
  session.setGlobal("result",result);
  for (  Object o : testData) {
    session.insert(o);
  }
  session.fireAllRules(new RuleNameMatchesAgendaFilter("No action - possibly commented out"));
  Iterator<VerifierMessageBase> iter=result.getBySeverity(Severity.NOTE).iterator();
  Set<String> rulesThatHadErrors=new HashSet<String>();
  while (iter.hasNext()) {
    Object o=(Object)iter.next();
    if (o instanceof VerifierMessage) {
      VerifierMessage message=(VerifierMessage)o;
      rulesThatHadErrors.addAll(message.getImpactedRules().values());
    }
  }
  assertFalse(rulesThatHadErrors.contains("This one is has an unused named consequence"));
  if (!rulesThatHadErrors.isEmpty()) {
    for (    String string : rulesThatHadErrors) {
      fail("Rule " + string + " caused an error.");
    }
  }
}
