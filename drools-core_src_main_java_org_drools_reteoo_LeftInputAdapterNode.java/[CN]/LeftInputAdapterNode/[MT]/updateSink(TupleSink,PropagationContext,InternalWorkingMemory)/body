{
  if (this.hasMemory) {
    ObjectHashMap map=(ObjectHashMap)workingMemory.getNodeMemory(this);
    Iterator it=map.iterator();
    for (ObjectEntry entry=(ObjectEntry)it.next(); entry != null; it.next()) {
      InternalFactHandle handle=(InternalFactHandle)entry.getKey();
      LinkedList list=(LinkedList)entry.getValue();
      ReteTuple tuple=new ReteTuple(handle);
      list.add(new LinkedListEntry(tuple));
      sink.assertTuple(tuple,context,workingMemory);
    }
  }
 else {
    ObjectSinkAdapter adapter=new ObjectSinkAdapter(sink);
    this.objectSource.updateSink(adapter,context,workingMemory);
  }
}
