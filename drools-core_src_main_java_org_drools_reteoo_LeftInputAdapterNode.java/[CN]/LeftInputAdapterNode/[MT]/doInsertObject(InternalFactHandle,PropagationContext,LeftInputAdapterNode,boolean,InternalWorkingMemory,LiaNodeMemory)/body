{
  SegmentMemory sm=lm.getSegmentMemory();
  if (sm.getTipNode() == liaNode && sm.isEmpty()) {
    SegmentUtilities.createChildSegments(workingMemory,sm,liaNode.getSinkPropagator());
    sm=sm.getFirst();
  }
  LeftTupleSink sink=liaNode.getSinkPropagator().getFirstLeftTupleSink();
  LeftTuple leftTuple=sink.createLeftTuple(factHandle,sink,leftTupleMemoryEnabled);
  leftTuple.setPropagationContext(context);
  long mask=sink.getLeftInferredMask();
  if (mask == Long.MAX_VALUE || intersect(context.getModificationMask(),mask)) {
    sm.getStagedLeftTuples().addInsert(leftTuple);
  }
  if (sm.getRootNode() != liaNode) {
    for (SegmentMemory childSm=sm.getNext(); childSm != null; childSm=childSm.getNext()) {
      sink=childSm.getSinkFactory();
      leftTuple=sink.createPeer(leftTuple);
      leftTuple.setPropagationContext(context);
      mask=((LeftTupleSink)childSm.getRootNode()).getLeftInferredMask();
      if (mask == Long.MAX_VALUE || intersect(context.getModificationMask(),mask)) {
        childSm.getStagedLeftTuples().addInsert(leftTuple);
      }
    }
  }
  if (lm.getAndIncreaseCounter() == 0) {
    lm.linkNode(workingMemory);
  }
  ;
}
