{
  Class cls=(ctx instanceof Class ? ((Class)ctx) : ctx != null ? ctx.getClass() : null);
  Member member=cls != null ? PropertyTools.getFieldOrAccessor(cls,property) : null;
  if (member instanceof Field) {
    FieldAccessor accessor=new FieldAccessor();
    accessor.setField((Field)member);
    addAccessorNode(accessor);
    return ((Field)member).get(ctx);
  }
 else   if (member != null) {
    GetterAccessor accessor=new GetterAccessor((Method)member);
    addAccessorNode(accessor);
    return ((Method)member).invoke(ctx,EMPTYARG);
  }
 else   if (ctx instanceof Map && ((Map)ctx).containsKey(property)) {
    MapAccessor accessor=new MapAccessor();
    accessor.setProperty(property);
    addAccessorNode(accessor);
    return ((Map)ctx).get(property);
  }
 else   if ("this".equals(property)) {
    ThisValueAccessor accessor=new ThisValueAccessor();
    addAccessorNode(accessor);
    return this.ctx;
  }
 else   if (variableFactory != null && variableFactory.isResolveable(property)) {
    VariableAccessor accessor=new VariableAccessor(property,variableFactory);
    addAccessorNode(accessor);
    return variableFactory.getVariableResolver(property).getValue();
  }
 else   if (Token.LITERALS.containsKey(property)) {
    StaticReferenceAccessor accessor=new StaticReferenceAccessor();
    accessor.setLiteral(Token.LITERALS.get(property));
    addAccessorNode(accessor);
    return accessor.getLiteral();
  }
 else {
    Class tryStaticMethodRef=tryStaticAccess();
    if (tryStaticMethodRef != null) {
      StaticReferenceAccessor accessor=new StaticReferenceAccessor();
      accessor.setLiteral(tryStaticMethodRef);
      addAccessorNode(accessor);
      return tryStaticMethodRef;
    }
 else     throw new PropertyAccessException("could not access property (" + property + ")");
  }
}
