{
synchronized (this.registeredResources) {
    this.eventSupport.fireBeforeChangeSetProcessed(changeSet);
    for (    Resource resource : changeSet.getResourcesAdded()) {
      this.eventSupport.fireBeforeResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_ADDED);
      if (((InternalResource)resource).getResourceType() == ResourceType.DSL) {
        this.notifier.subscribeResourceChangeListener(this,resource);
        try {
          this.retrieveDSLResource(resource);
        }
 catch (        IOException ex) {
          this.listener.exception("KnowledgeAgent Fails trying to read DSL Resource: " + resource,ex);
        }
      }
 else       if (((InternalResource)resource).getResourceType() == ResourceType.CHANGE_SET) {
        this.listener.debug("KnowledgeAgent processing sub ChangeSet=" + resource);
        processChangeSet(resource,changeSetState);
      }
 else       if (changeSetState.scanDirectories && ((InternalResource)resource).isDirectory()) {
        this.resourceDirectories.add(resource);
        this.listener.debug("KnowledgeAgent subscribing to directory=" + resource);
        this.notifier.subscribeResourceChangeListener(this,resource);
        for (        Resource child : ((InternalResource)resource).listResources()) {
          if (((InternalResource)child).isDirectory()) {
            continue;
          }
          ((InternalResource)child).setResourceType(((InternalResource)resource).getResourceType());
          this.addDefinitionMapping(child,null,true);
          if (this.addResourceMapping(child,true) && changeSetState.incrementalBuild) {
            changeSetState.addedResources.add(child);
          }
        }
      }
 else {
        if (this.addResourceMapping(resource,true) && changeSetState.incrementalBuild) {
          changeSetState.addedResources.add(resource);
        }
      }
      this.eventSupport.fireAfterResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_ADDED);
    }
    for (    Resource resource : changeSet.getResourcesRemoved()) {
      this.eventSupport.fireBeforeResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_MODIFIED);
      if (((InternalResource)resource).getResourceType() == ResourceType.DSL) {
        this.notifier.unsubscribeResourceChangeListener(this,resource);
        this.dslResources.remove(resource);
      }
 else       if (((InternalResource)resource).getResourceType() == ResourceType.CHANGE_SET) {
        processChangeSet(resource,changeSetState);
      }
 else       if (changeSetState.scanDirectories && ((InternalResource)resource).isDirectory()) {
        this.listener.debug("KnowledgeAgent unsubscribing from directory resource=" + resource);
        this.resourceDirectories.remove(resource);
        this.notifier.unsubscribeResourceChangeListener(this,resource);
      }
 else {
        Set<KnowledgeDefinition> definitions=this.removeResourceMapping(resource,true);
        if (definitions != null && changeSetState.incrementalBuild) {
          changeSetState.removedResourceMappings.put(resource,definitions);
        }
      }
      this.eventSupport.fireAfterResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_MODIFIED);
    }
    for (    Resource resource : changeSet.getResourcesModified()) {
      this.eventSupport.fireBeforeResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_REMOVED);
      if (((InternalResource)resource).getResourceType() == ResourceType.DSL) {
        try {
          this.retrieveDSLResource(resource);
        }
 catch (        IOException ex) {
          this.listener.exception("KnowledgeAgent Fails trying to read DSL Resource: " + resource,ex);
        }
      }
 else       if (((InternalResource)resource).getResourceType() == ResourceType.CHANGE_SET) {
        continue;
      }
 else       if (((InternalResource)resource).isDirectory()) {
        if (this.resourceDirectories.add(resource)) {
          this.listener.warning("KnowledgeAgent is subscribing to a modified directory=" + resource + " when it should have already been subscribed");
          this.notifier.subscribeResourceChangeListener(this,resource);
        }
        for (        Resource child : ((InternalResource)resource).listResources()) {
          if (((InternalResource)child).isDirectory()) {
            continue;
          }
          if (this.addResourceMapping(child,true)) {
            ((InternalResource)child).setResourceType(((InternalResource)resource).getResourceType());
            if (changeSetState.incrementalBuild) {
              changeSetState.addedResources.add(child);
            }
          }
        }
      }
 else {
        boolean isResourceMapped=this.registeredResources.isResourceMapped(resource);
        if (!isResourceMapped) {
          this.listener.warning("KnowledgeAgent subscribing to new resource=" + resource + ", though it was marked as modified.");
          this.addResourceMapping(resource,true);
          if (changeSetState.incrementalBuild) {
            changeSetState.addedResources.add(resource);
          }
        }
 else {
          Set<KnowledgeDefinition> definitions=this.removeResourceMapping(resource,false);
          changeSetState.modifiedResourceMappings.put(resource,definitions);
          this.addResourceMapping(resource,false);
        }
      }
      this.eventSupport.fireAfterResourceProcessed(changeSet,resource,((InternalResource)resource).getResourceType(),ResourceStatus.RESOURCE_REMOVED);
    }
    this.eventSupport.fireAfterChangeSetProcessed(changeSet,changeSetState.addedResources,changeSetState.modifiedResourceMappings,changeSetState.removedResourceMappings);
  }
}
