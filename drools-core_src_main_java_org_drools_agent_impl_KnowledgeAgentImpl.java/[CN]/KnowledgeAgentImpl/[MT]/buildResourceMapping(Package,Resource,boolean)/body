{
synchronized (this.registeredResources) {
    if (!autoDiscoverResource && resource == null) {
      this.listener.warning("KnowledgeAgent: Impossible to map to a null resource! Use autoDiscoverResource = true ");
      return;
    }
    if (autoDiscoverResource && resource != null) {
      this.listener.warning("KnowledgeAgent: building resource map with resource set and autoDiscoverResource=true. Resource value wil be overwritten!");
    }
    for (    Rule rule : pkg.getRules()) {
      if (autoDiscoverResource) {
        resource=rule.getResource();
      }
      if (resource == null) {
        this.listener.debug("KnowledgeAgent no resource mapped for rule=" + rule);
      }
      if (isNewDefinition(resource,rule)) {
        this.addDefinitionMapping(resource,rule,true);
      }
    }
    for (    Process process : pkg.getRuleFlows().values()) {
      if (resource == null) {
        this.listener.debug("KnowledgeAgent no resource mapped for process=" + process);
      }
      if (autoDiscoverResource) {
        resource=((ResourcedObject)process).getResource();
      }
      if (isNewDefinition(resource,process)) {
        this.addDefinitionMapping(resource,process,true);
      }
    }
    for (    TypeDeclaration typeDeclaration : pkg.getTypeDeclarations().values()) {
      if (resource == null) {
        this.listener.debug("KnowledgeAgent no resource mapped for type=" + typeDeclaration);
      }
      if (autoDiscoverResource) {
        resource=typeDeclaration.getResource();
      }
      if (isNewDefinition(resource,typeDeclaration)) {
        this.addDefinitionMapping(resource,typeDeclaration,true);
      }
    }
    for (    Function function : pkg.getFunctions().values()) {
      if (resource != null && !((InternalResource)resource).hasURL()) {
        this.listener.debug("KnowledgeAgent no resource mapped for function=" + function);
      }
      if (autoDiscoverResource) {
        resource=function.getResource();
      }
      if (isNewDefinition(resource,function)) {
        this.addDefinitionMapping(resource,function,true);
      }
    }
  }
}
