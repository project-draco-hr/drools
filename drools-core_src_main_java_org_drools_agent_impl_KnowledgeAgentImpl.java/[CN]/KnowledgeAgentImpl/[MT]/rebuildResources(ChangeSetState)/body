{
  this.listener.debug("KnowledgeAgent rebuilding KnowledgeBase using ChangeSet");
synchronized (this.resources) {
    if (this.kbase != null) {
      this.kbase=KnowledgeBaseFactory.newKnowledgeBase(((InternalRuleBase)((KnowledgeBaseImpl)this.kbase).ruleBase).getConfiguration());
    }
 else {
      this.kbase=KnowledgeBaseFactory.newKnowledgeBase();
    }
    if (changeSetState.needsKnowledgeBuilder) {
      KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
      for (      Resource resource : this.resources.keySet()) {
        this.listener.debug("KnowledgeAgent building resource=" + resource);
        if (((InternalResource)resource).getResourceType() != ResourceType.PKG) {
          kbuilder.add(resource,((InternalResource)resource).getResourceType());
        }
      }
      if (kbuilder.hasErrors()) {
        this.listener.warning("KnowledgeAgent has KnowledgeBuilder errors ",kbuilder.getErrors());
      }
      this.kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
    }
    for (    Resource resource : this.resources.keySet()) {
      if (((InternalResource)resource).getResourceType() == ResourceType.PKG) {
        this.listener.debug("KnowledgeAgent building resource=" + resource);
        InputStream is=null;
        try {
          is=resource.getInputStream();
          Object object=DroolsStreamUtils.streamIn(is);
          Package pkg=null;
          if (object instanceof KnowledgePackage) {
            pkg=((KnowledgePackageImp)object).pkg;
          }
 else {
            pkg=(Package)object;
          }
          this.listener.debug("KnowledgeAgent adding KnowledgeDefinitionsPackage " + pkg.getName());
          ((KnowledgeBaseImpl)this.kbase).ruleBase.addPackage(pkg);
        }
 catch (        Exception e) {
          this.listener.exception(new RuntimeException("KnowledgeAgent exception while trying to deserialize KnowledgeDefinitionsPackage  ",e));
        }
 finally {
          try {
            is.close();
          }
 catch (          IOException e) {
            this.listener.exception(new RuntimeException("KnowledgeAgent exception while trying to close KnowledgeDefinitionsPackage  ",e));
          }
        }
      }
    }
    this.listener.info("KnowledgeAgent new KnowledgeBase now built and in use");
  }
}
