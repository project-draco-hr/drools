{
  RuleBase rbase=((KnowledgeBaseImpl)kbase).ruleBase;
synchronized (this.resources) {
    for (    Package pkg : rbase.getPackages()) {
      for (      Rule rule : pkg.getRules()) {
        Resource resource=rule.getResource();
        if (resource == null || !resource.hasURL()) {
          continue;
        }
        ResourceMapping mapping=this.resources.get(resource);
        if (mapping == null) {
          this.notifier.subscribeResourceChangeListener(this,resource);
          mapping=new ResourceMapping(resource);
          this.resources.put(resource,mapping);
        }
        mapping.getObjects().add(rule);
        System.out.println("agent : " + resource);
      }
      for (      Process process : pkg.getRuleFlows().values()) {
        Resource resource=((org.drools.process.core.Process)process).getResource();
        if (resource == null || !resource.hasURL()) {
          continue;
        }
        ResourceMapping mapping=this.resources.get(resource);
        if (mapping == null) {
          this.notifier.subscribeResourceChangeListener(this,resource);
          mapping=new ResourceMapping(resource);
          this.resources.put(resource,mapping);
        }
        mapping.getObjects().add(process);
        System.out.println("agent : " + resource);
      }
      for (      TypeDeclaration typeDeclaration : pkg.getTypeDeclarations().values()) {
        Resource resource=typeDeclaration.getResource();
        if (resource == null || !resource.hasURL()) {
          continue;
        }
        ResourceMapping mapping=this.resources.get(resource);
        if (mapping == null) {
          this.notifier.subscribeResourceChangeListener(this,resource);
          mapping=new ResourceMapping(resource);
          this.resources.put(resource,mapping);
        }
        mapping.getObjects().add(typeDeclaration);
        System.out.println("agent : " + resource);
      }
      for (      Function function : pkg.getFunctions().values()) {
        Resource resource=function.getResource();
        if (resource == null || !resource.hasURL()) {
          continue;
        }
        ResourceMapping mapping=this.resources.get(resource);
        if (mapping == null) {
          this.notifier.subscribeResourceChangeListener(this,resource);
          mapping=new ResourceMapping(resource);
          this.resources.put(resource,mapping);
        }
        mapping.getObjects().add(function);
        System.out.println("agent : " + resource);
      }
    }
  }
}
