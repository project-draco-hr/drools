{
  if (((InternalResource)resource).getResourceType() != ResourceType.PKG) {
    if (kbuilder == null) {
      kbuilder=this.createKBuilder();
    }
    kbuilder.add(resource,((InternalResource)resource).getResourceType());
    if (kbuilder.hasErrors()) {
      this.eventSupport.fireResourceCompilationFailed(kbuilder,resource,((InternalResource)resource).getResourceType());
      this.listener.warning("KnowledgeAgent has KnowledgeBuilder errors ",kbuilder.getErrors());
    }
    if (kbuilder.getKnowledgePackages().iterator().hasNext()) {
      return kbuilder.getKnowledgePackages();
    }
    return Collections.emptyList();
  }
 else {
    InputStream is=null;
    Collection<KnowledgePackage> kpkgs=null;
    try {
      is=resource.getInputStream();
      Object object=DroolsStreamUtils.streamIn(is);
      if (object instanceof Collection) {
        kpkgs=(Collection<KnowledgePackage>)object;
      }
 else       if (object instanceof KnowledgePackageImp) {
        kpkgs=Collections.singletonList((KnowledgePackage)object);
      }
 else       if (object instanceof Package) {
        kpkgs=Collections.singletonList((KnowledgePackage)new KnowledgePackageImp((Package)object));
      }
 else       if (object instanceof Package[]) {
        kpkgs=new ArrayList<KnowledgePackage>();
        for (        Package pkg : (Package[])object) {
          kpkgs.add(new KnowledgePackageImp(pkg));
        }
      }
 else {
        throw new RuntimeException("Unknown binary format trying to load resource " + resource.toString());
      }
      for (      KnowledgePackage kpkg : kpkgs) {
        for (        Rule rule : ((KnowledgePackageImp)kpkg).pkg.getRules()) {
          rule.setResource(resource);
        }
        for (        Process process : ((KnowledgePackageImp)kpkg).pkg.getRuleFlows().values()) {
          ((ResourcedObject)process).setResource(resource);
        }
        for (        TypeDeclaration type : ((KnowledgePackageImp)kpkg).pkg.getTypeDeclarations().values()) {
          type.setResource(resource);
        }
      }
    }
 catch (    Exception ex) {
      this.listener.exception(new RuntimeException("KnowledgeAgent exception while trying to deserialize KnowledgeDefinitionsPackage  ",ex));
    }
 finally {
      try {
        if (is != null) {
          is.close();
        }
      }
 catch (      IOException e) {
        this.listener.exception(new RuntimeException("KnowledgeAgent exception while trying to close KnowledgeDefinitionsPackage  ",e));
      }
    }
    return kpkgs;
  }
}
