{
  int rows=0;
  List<AssetItem> results=new ArrayList<AssetItem>();
  PropertyIterator it=n.getReferences();
  if (skip > 0)   it.skip(skip);
  while (it.hasNext() && (numRowsToReturn == -1 || rows < numRowsToReturn)) {
    Property ruleLink=(Property)it.next();
    Node parentNode=ruleLink.getParent();
    if (isNotSnapshot(parentNode) && parentNode.getPrimaryNodeType().getName().equals(AssetItem.RULE_NODE_TYPE_NAME)) {
      if (seekArchivedAsset || !parentNode.getProperty(AssetItem.CONTENT_PROPERTY_ARCHIVE_FLAG).getBoolean()) {
        AssetItem ai=new AssetItem(this,parentNode);
        if (filter == null || filter.accept(ai,"package.readonly")) {
          results.add(ai);
          rows++;
        }
      }
    }
  }
  return new AssetItemPageResult(results,it);
}
