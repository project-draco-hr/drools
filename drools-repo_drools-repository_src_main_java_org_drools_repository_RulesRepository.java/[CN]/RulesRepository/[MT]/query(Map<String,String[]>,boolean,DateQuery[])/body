{
  try {
    String sql="SELECT " + AssetItem.TITLE_PROPERTY_NAME + ", "+ AssetItem.DESCRIPTION_PROPERTY_NAME+ ", "+ AssetItem.CONTENT_PROPERTY_ARCHIVE_FLAG+ " FROM "+ AssetItem.RULE_NODE_TYPE_NAME;
    sql+=" WHERE jcr:path LIKE '/" + RULES_REPOSITORY_NAME + "/"+ RULE_PACKAGE_AREA+ "/%'";
    for (Iterator<Map.Entry<String,String[]>> iterator=params.entrySet().iterator(); iterator.hasNext(); ) {
      Map.Entry<String,String[]> en=iterator.next();
      String fld=en.getKey();
      String[] options=en.getValue();
      if (options != null && options.length > 0) {
        if (options.length > 1) {
          sql+=" AND (";
          for (int i=0; i < options.length; i++) {
            sql+=fld + " LIKE '" + options[i].replace("*","%")+ "'";
            if (i < options.length - 1) {
              sql+=" OR ";
            }
          }
          sql+=")";
        }
 else {
          sql+=" AND " + fld + " LIKE '"+ options[0].replace("*","%")+ "'";
        }
      }
    }
    if (seekArchived == false) {
      sql+=" AND " + AssetItem.CONTENT_PROPERTY_ARCHIVE_FLAG + " = 'false'";
    }
    if (dates != null) {
      for (int i=0; i < dates.length; i++) {
        DateQuery d=dates[i];
        if (d.after != null) {
          sql+=" AND " + d.field + " > TIMESTAMP '"+ d.after+ "'";
        }
        if (d.before != null) {
          sql+=" AND " + d.field + " < TIMESTAMP '"+ d.before+ "'";
        }
      }
    }
    Query q=this.session.getWorkspace().getQueryManager().createQuery(sql,Query.SQL);
    QueryResult res=q.execute();
    return new AssetItemIterator(res.getNodes(),this);
  }
 catch (  RepositoryException e) {
    throw new RulesRepositoryException(e);
  }
}
