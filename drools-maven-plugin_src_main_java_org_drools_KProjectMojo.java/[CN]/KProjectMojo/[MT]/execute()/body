{
  File file=new File(rootFolder,KnowledgeContainerImpl.KPROJECT_RELATIVE_PATH);
  if (!recreate && file.exists()) {
    return;
  }
  KProjectImpl kproj=new KProjectImpl();
  for (  File kBaseFolder : sourceFolder.listFiles()) {
    String qName=kBaseFolder.getName();
    int dotPos=qName.lastIndexOf('.');
    String namespace=dotPos > 0 ? qName.substring(0,dotPos) : "";
    String kBaseName=dotPos > 0 ? qName.substring(dotPos + 1) : qName;
    kproj.newKBase(namespace,kBaseName).newKSession(namespace,kBaseName + ".session").setType("stateful");
  }
  BufferedWriter output=null;
  try {
    file.getParentFile().mkdirs();
    output=new BufferedWriter(new FileWriter(file));
    output.write(kproj.toXML());
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (output != null) {
      try {
        output.close();
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
}
