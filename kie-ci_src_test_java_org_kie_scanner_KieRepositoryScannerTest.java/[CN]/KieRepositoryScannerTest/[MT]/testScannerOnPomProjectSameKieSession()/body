{
  KieServices ks=KieServices.Factory.get();
  ReleaseId releaseId1=ks.newReleaseId("org.kie","scanner-test","1.0");
  ReleaseId releaseId2=ks.newReleaseId("org.kie","scanner-test","2.0");
  MavenRepository repository=getMavenRepository();
  repository.deployPomArtifact("org.kie","scanner-master-test","1.0",createMasterKPom("scanner-test","1.0"));
  resetFileManager();
  InternalKieModule kJar1=createKieJarWithClass(ks,releaseId1,true,2,7);
  repository.installArtifact(releaseId1,kJar1,createKPom(fileManager,releaseId1));
  KieContainer kieContainer=ks.newKieContainer(ks.newReleaseId("org.kie","scanner-master-test","LATEST"));
  KieSession ksession=kieContainer.newKieSession("KSession1");
  checkKSession(false,ksession,14);
  KieScanner scanner=ks.newKieScanner(kieContainer);
  repository.deployPomArtifact("org.kie","scanner-master-test","2.0",createMasterKPom("scanner-test","2.0"));
  InternalKieModule kJar2=createKieJarWithClass(ks,releaseId2,true,3,5);
  repository.installArtifact(releaseId2,kJar2,createKPom(fileManager,releaseId1));
  scanner.scanNow();
  checkKSession(ksession,10,15);
  ks.getRepository().removeKieModule(releaseId1);
  ks.getRepository().removeKieModule(releaseId2);
}
