{
  String process="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<process xmlns=\"http://drools.org/drools-5.0/process\"\n" + "  xmlns:xs=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ "  xs:schemaLocation=\"http://drools.org/drools-5.0/process drools-processes-4.0.xsd\"\n"+ "  type=\"RuleFlow\" name=\"ruleflow\" id=\"com.sample.ruleflow\" package-name=\"com.sample\" >\n"+ "\n"+ "    <header>\n"+ "      <variables>\n"+ "        <variable name=\"list\" >\n"+ "          <type name=\"org.drools.process.core.datatype.impl.type.ObjectDataType\" className=\"java.util.List\" />\n"+ "        </variable>\n"+ "      </variables>\n"+ "    </header>\n"+ "\n"+ "    <nodes>\n"+ "      <forEach id=\"4\" name=\"ForEach\" variableName=\"item\" collectionExpression=\"list\" >\n"+ "        <nodes>\n"+ "          <humanTask id=\"1\" name=\"Human Task\" >\n"+ "            <work name=\"Human Task\" >\n"+ "              <parameter name=\"Comment\" >\n"+ "                <type name=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "              </parameter>\n"+ "              <parameter name=\"ActorId\" >\n"+ "                <type name=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "              </parameter>\n"+ "              <parameter name=\"Priority\" >\n"+ "                <type name=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "              </parameter>\n"+ "              <parameter name=\"TaskName\" >\n"+ "                <type name=\"org.drools.process.core.datatype.impl.type.StringDataType\" />\n"+ "                <value>Do something: #{item}</value>\n"+ "              </parameter>\n"+ "            </work>\n"+ "          </humanTask>\n"+ "        </nodes>\n"+ "        <connections>\n"+ "        </connections>\n"+ "        <in-ports>\n"+ "          <in-port type=\"DROOLS_DEFAULT\" nodeId=\"1\" nodeInType=\"DROOLS_DEFAULT\" />\n"+ "        </in-ports>\n"+ "        <out-ports>\n"+ "          <out-port type=\"DROOLS_DEFAULT\" nodeId=\"1\" nodeOutType=\"DROOLS_DEFAULT\" />\n"+ "        </out-ports>\n"+ "      </forEach>\n"+ "      <start id=\"1\" name=\"Start\" />\n"+ "      <end id=\"3\" name=\"End\" />\n"+ "    </nodes>\n"+ "\n"+ "    <connections>\n"+ "      <connection from=\"1\" to=\"4\" />\n"+ "      <connection from=\"4\" to=\"3\" />\n"+ "    </connections>\n"+ "\n"+ "</process>\n";
  final PackageBuilder builder=new PackageBuilder();
  builder.addProcessFromXml(new StringReader(process));
  final Package pkg=builder.getPackage();
  final RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  StatefulSession session=ruleBase.newStatefulSession();
  TestListWorkItemHandler handler=new TestListWorkItemHandler();
  session.getWorkItemManager().registerWorkItemHandler("Human Task",handler);
  List<String> list=new ArrayList<String>();
  list.add("one");
  list.add("two");
  list.add("three");
  Map<String,Object> parameters=new HashMap<String,Object>();
  parameters.put("list",list);
  session.startProcess("com.sample.ruleflow",parameters);
  assertEquals(1,session.getProcessInstances().size());
  assertEquals(3,handler.getWorkItems().size());
  session=getSerialisedStatefulSession(session);
  for (  WorkItem workItem : handler.getWorkItems()) {
    session.getWorkItemManager().completeWorkItem(workItem.getId(),null);
  }
  assertEquals(0,session.getProcessInstances().size());
}
