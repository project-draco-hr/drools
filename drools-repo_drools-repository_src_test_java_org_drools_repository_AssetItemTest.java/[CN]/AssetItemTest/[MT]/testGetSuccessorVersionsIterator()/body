{
  try {
    AssetItem ruleItem1=getRepo().loadDefaultPackage().addAsset("testGetSuccessorVersionsIterator","test content");
    ruleItem1.checkin("version0");
    Iterator iterator=ruleItem1.getSuccessorVersionsIterator();
    assertNotNull(iterator);
    assertFalse(iterator.hasNext());
    ruleItem1.updateContent("new content").checkin("ya");
    iterator=ruleItem1.getSuccessorVersionsIterator();
    assertNotNull(iterator);
    assertFalse(iterator.hasNext());
    AssetItem predecessorRuleItem=(AssetItem)ruleItem1.getPrecedingVersion();
    iterator=predecessorRuleItem.getSuccessorVersionsIterator();
    assertNotNull(iterator);
    assertTrue(iterator.hasNext());
    AssetItem nextRuleItem=(AssetItem)iterator.next();
    assertEquals("new content",nextRuleItem.getContent());
    assertFalse(iterator.hasNext());
    ruleItem1.updateContent("newer content");
    ruleItem1.checkin("boo");
    iterator=predecessorRuleItem.getSuccessorVersionsIterator();
    assertNotNull(iterator);
    assertTrue(iterator.hasNext());
    nextRuleItem=(AssetItem)iterator.next();
    assertEquals("new content",nextRuleItem.getContent());
    assertTrue(iterator.hasNext());
    nextRuleItem=(AssetItem)iterator.next();
    assertEquals("newer content",nextRuleItem.getContent());
    assertFalse(iterator.hasNext());
  }
 catch (  Exception e) {
    fail("Caught unexpected exception: " + e);
  }
}
