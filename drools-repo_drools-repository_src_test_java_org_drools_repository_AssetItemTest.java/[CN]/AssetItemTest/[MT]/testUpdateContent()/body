{
  AssetItem ruleItem1=getDefaultPackage().addAsset("testUpdateContent","test description");
  assertFalse(ruleItem1.getCreator().equals(""));
  ruleItem1.updateContent("test content");
  ruleItem1.checkin("yeah");
  assertFalse(ruleItem1.getLastContributor().equals(""));
  ruleItem1.updateContent("new rule content");
  assertEquals("new rule content",ruleItem1.getContent());
  assertTrue(ruleItem1.getNode().getSession().hasPendingChanges());
  ruleItem1.checkin("yeah !");
  assertFalse(ruleItem1.getNode().getSession().hasPendingChanges());
  assertEquals("yeah !",ruleItem1.getCheckinComment());
  AssetItem prev=(AssetItem)ruleItem1.getPrecedingVersion();
  assertEquals("test content",prev.getContent());
  assertFalse("yeah !".equals(prev.getCheckinComment()));
  assertEquals(prev,ruleItem1.getPrecedingVersion());
  ruleItem1=getDefaultPackage().loadAsset("testUpdateContent");
  VersionIterator it=VersionableItem.getVersionManager(ruleItem1.getNode()).getVersionHistory(ruleItem1.getNode().getPath()).getAllVersions();
  assertTrue(it.hasNext());
  while (it.hasNext()) {
    Version n=it.nextVersion();
    AssetItem item=new AssetItem(ruleItem1.getRulesRepository(),n);
    assertNotNull(item);
  }
}
