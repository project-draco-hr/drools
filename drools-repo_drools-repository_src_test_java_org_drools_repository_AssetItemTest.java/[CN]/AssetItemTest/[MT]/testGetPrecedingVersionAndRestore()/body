{
  getRepo().loadCategory("/").addCategory("foo","ka");
  AssetItem ruleItem1=getRepo().loadDefaultPackage().addAsset("testGetPrecedingVersion","descr");
  ruleItem1.checkin("version0");
  assertTrue(ruleItem1.getPrecedingVersion() == null);
  ruleItem1.addCategory("foo");
  ruleItem1.updateContent("test content");
  ruleItem1.updateDescription("descr2");
  Thread.sleep(100);
  ruleItem1.checkin("boo");
  AssetItem predecessorRuleItem=(AssetItem)ruleItem1.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertNotNull(predecessorRuleItem.getVersionSnapshotUUID());
  assertFalse(predecessorRuleItem.getVersionSnapshotUUID().equals(ruleItem1.getUUID()));
  assertEquals(ruleItem1.getState().getName(),predecessorRuleItem.getState().getName());
  AssetItem loadedHistorical=getRepo().loadAssetByUUID(predecessorRuleItem.getVersionSnapshotUUID());
  assertTrue(loadedHistorical.isHistoricalVersion());
  assertFalse(ruleItem1.getVersionNumber() == loadedHistorical.getVersionNumber());
  ruleItem1.updateContent("new content");
  ruleItem1.checkin("two changes");
  predecessorRuleItem=(AssetItem)ruleItem1.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals(1,predecessorRuleItem.getCategories().size());
  CategoryItem cat=(CategoryItem)predecessorRuleItem.getCategories().get(0);
  assertEquals("foo",cat.getName());
  assertEquals("test content",predecessorRuleItem.getContent());
  assertEquals(RulesRepository.DEFAULT_PACKAGE,predecessorRuleItem.getPackageName());
  ruleItem1.updateContent("newer lhs");
  ruleItem1.checkin("another");
  predecessorRuleItem=(AssetItem)ruleItem1.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals("new content",predecessorRuleItem.getContent());
  predecessorRuleItem=(AssetItem)predecessorRuleItem.getPrecedingVersion();
  assertNotNull(predecessorRuleItem);
  assertEquals("test content",predecessorRuleItem.getContent());
  long oldVersionNumber=ruleItem1.getVersionNumber();
  AssetItem toRestore=getRepo().loadAssetByUUID(predecessorRuleItem.getVersionSnapshotUUID());
  getRepo().restoreHistoricalAsset(toRestore,ruleItem1,"cause I want to");
  AssetItem restored=getRepo().loadDefaultPackage().loadAsset("testGetPrecedingVersion");
  assertEquals(predecessorRuleItem.getDescription(),restored.getDescription());
  assertEquals("cause I want to",restored.getCheckinComment());
  assertEquals(5,restored.getVersionNumber());
  assertFalse(oldVersionNumber == restored.getVersionNumber());
}
