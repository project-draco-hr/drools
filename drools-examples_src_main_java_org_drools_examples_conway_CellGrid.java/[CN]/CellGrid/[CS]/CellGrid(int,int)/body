{
  this.cells=new Cell[rows][columns];
  final RuleBase ruleBase=ConwayRuleBaseFactory.getRuleBase();
  this.session=ruleBase.newStatefulSession();
  DefaultAgendaEventListener listener=new DefaultAgendaEventListener(){
    public void agendaGroupPopped(    AgendaGroupPoppedEvent event,    WorkingMemory workingMemory){
      System.out.println("popped AgendaGroup = '" + event.getAgendaGroup().getName() + "'");
      System.out.println(CellGrid.this.toString());
      System.out.println("");
    }
  }
;
  this.session.addEventListener(listener);
  this.session.insert(this);
  for (int row=0; row < rows; row++) {
    for (int column=0; column < columns; column++) {
      final Cell newCell=new Cell(column,row);
      this.cells[row][column]=newCell;
      this.session.insert(newCell);
    }
  }
  this.session.setFocus("register neighbor");
  this.session.fireAllRules();
}
