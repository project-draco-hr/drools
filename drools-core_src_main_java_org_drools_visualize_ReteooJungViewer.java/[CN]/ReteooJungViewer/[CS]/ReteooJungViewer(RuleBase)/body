{
  final JPanel leftPanel=new JPanel(new BorderLayout());
  final JPanel rightPanel=new JPanel(new BorderLayout());
  final JSplitPane splitPane=new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,leftPanel,rightPanel);
  splitPane.setDividerLocation(0.75);
  splitPane.setResizeWeight(1);
  getContentPane().add(splitPane);
  this.graph=new DirectedSparseGraph();
  final ReteooToJungVisitor visitor=new ReteooToJungVisitor(this.graph);
  visitor.visit(ruleBase);
  final PluggableRenderer pr=new PluggableRenderer();
  pr.setEdgeShapeFunction(new EdgeShape.QuadCurve());
  pr.setVertexPaintFunction(new VertexPaintFunction(){
    public Paint getFillPaint(    final Vertex v){
      return ((DroolsVertex)v).getFillPaint();
    }
    public Paint getDrawPaint(    final Vertex v){
      return ((DroolsVertex)v).getDrawPaint();
    }
  }
);
  pr.setEdgePaintFunction(new PickableEdgePaintFunction(pr,Color.black,Color.cyan));
  pr.setGraphLabelRenderer(new DefaultGraphLabelRenderer(Color.cyan,Color.cyan));
  pr.setVertexShapeFunction(new EllipseVertexShapeFunction(new ConstantVertexSizeFunction(14),new ConstantVertexAspectRatioFunction(1.0f)));
  final ReteooLayoutSolver solver=new ReteooLayoutSolver(visitor.getRootVertex());
  final Layout layout=new ReteooLayout(this.graph,new VertexFunctions(),solver.getRowList());
  this.vv=new VisualizationViewer(layout,pr,new Dimension(800,800));
  this.vv.setBackground(Color.white);
  this.vv.setPickSupport(new ShapePickSupport());
  this.vv.setToolTipFunction(new DefaultToolTipFunction());
  final PluggableGraphMouse graphMouse=new PluggableGraphMouse();
  graphMouse.add(new PickingGraphMousePlugin());
  graphMouse.add(new ViewScalingGraphMousePlugin());
  graphMouse.add(new CrossoverScalingGraphMousePlugin());
  graphMouse.add(new RotatingGraphMousePlugin());
  this.vv.setGraphMouse(graphMouse);
  final ScalingControl scaler=new CrossoverScalingControl();
  final JButton plus=new JButton("+");
  plus.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      scaler.scale(ReteooJungViewer.this.vv,1.1f,ReteooJungViewer.this.vv.getCenter());
    }
  }
);
  final JButton minus=new JButton("-");
  minus.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      scaler.scale(ReteooJungViewer.this.vv,0.9f,ReteooJungViewer.this.vv.getCenter());
    }
  }
);
  final GraphZoomScrollPane graphPanel=new GraphZoomScrollPane(this.vv);
  leftPanel.add(graphPanel);
  final JPanel scaleGrid=new JPanel(new GridLayout(1,0));
  scaleGrid.setBorder(BorderFactory.createTitledBorder("Zoom"));
  final JPanel controls=new JPanel();
  scaleGrid.add(plus);
  scaleGrid.add(minus);
  controls.add(scaleGrid);
  leftPanel.add(controls,BorderLayout.SOUTH);
  final JEditorPane infoPane=new JEditorPane();
  infoPane.setEditable(false);
  infoPane.setContentType("text/html");
  final JScrollPane infoScrollPane=new JScrollPane(infoPane);
  infoScrollPane.setPreferredSize(new Dimension(250,800));
  infoScrollPane.setMinimumSize(new Dimension(50,800));
  this.vv.addGraphMouseListener(new GraphMouseListener(){
    public void graphClicked(    final Vertex vertex,    final MouseEvent e){
      infoPane.setText(((DroolsVertex)vertex).getHtml());
    }
    public void graphPressed(    final Vertex vertex,    final MouseEvent e){
    }
    public void graphReleased(    final Vertex vertex,    final MouseEvent e){
    }
  }
);
  rightPanel.add(infoScrollPane);
}
