{
  int alt18=25;
  alt18=dfa18.predict(input);
switch (alt18) {
case 1:
{
      mT27();
      if (failed)       return;
    }
  break;
case 2:
{
  mT28();
  if (failed)   return;
}
break;
case 3:
{
mT29();
if (failed) return;
}
break;
case 4:
{
mT30();
if (failed) return;
}
break;
case 5:
{
mT31();
if (failed) return;
}
break;
case 6:
{
mT32();
if (failed) return;
}
break;
case 7:
{
mT33();
if (failed) return;
}
break;
case 8:
{
mVAR();
if (failed) return;
}
break;
case 9:
{
mID();
if (failed) return;
}
break;
case 10:
{
mNULL();
if (failed) return;
}
break;
case 11:
{
mWS();
if (failed) return;
}
break;
case 12:
{
mINT();
if (failed) return;
}
break;
case 13:
{
mFLOAT();
if (failed) return;
}
break;
case 14:
{
mSTRING();
if (failed) return;
}
break;
case 15:
{
mBOOL();
if (failed) return;
}
break;
case 16:
{
mSH_STYLE_SINGLE_LINE_COMMENT();
if (failed) return;
}
break;
case 17:
{
mC_STYLE_SINGLE_LINE_COMMENT();
if (failed) return;
}
break;
case 18:
{
mLEFT_PAREN();
if (failed) return;
}
break;
case 19:
{
mRIGHT_PAREN();
if (failed) return;
}
break;
case 20:
{
mLEFT_SQUARE();
if (failed) return;
}
break;
case 21:
{
mRIGHT_SQUARE();
if (failed) return;
}
break;
case 22:
{
mLEFT_CURLY();
if (failed) return;
}
break;
case 23:
{
mRIGHT_CURLY();
if (failed) return;
}
break;
case 24:
{
mMULTI_LINE_COMMENT();
if (failed) return;
}
break;
case 25:
{
mMISC();
if (failed) return;
}
break;
}
}
