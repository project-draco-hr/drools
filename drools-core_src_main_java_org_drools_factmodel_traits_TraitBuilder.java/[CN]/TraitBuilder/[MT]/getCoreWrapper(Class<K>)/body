{
  if (wrapperCache == null) {
    wrapperCache=new HashMap<Class,Class<? extends CoreWrapper<K>>>();
  }
  Class<? extends CoreWrapper<K>> wrapperClass=null;
  if (wrapperCache.containsKey(coreKlazz)) {
    wrapperClass=wrapperCache.get(coreKlazz);
  }
 else {
    try {
      wrapperClass=buildCoreWrapper(coreKlazz);
    }
 catch (    IOException e) {
      return null;
    }
catch (    ClassNotFoundException e) {
      return null;
    }
    wrapperCache.put(coreKlazz,wrapperClass);
  }
  try {
    TraitRegistry.getInstance().addTraitable(buildWrapperClassDefinition(coreKlazz,wrapperClass));
    return wrapperClass != null ? wrapperClass.newInstance() : null;
  }
 catch (  InstantiationException e) {
    return null;
  }
catch (  IllegalAccessException e) {
    return null;
  }
catch (  IOException e) {
    return null;
  }
}
