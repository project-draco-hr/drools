{
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC + ACC_BRIDGE + ACC_SYNTHETIC,"put","(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitTypeInsn(CHECKCAST,"java/lang/String");
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(wrapper),"put","(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;");
    mv.visitInsn(ARETURN);
    mv.visitMaxs(3,3);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"equals","(Ljava/lang/Object;)Z",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    Label l0=new Label();
    mv.visitJumpInsn(IF_ACMPNE,l0);
    mv.visitInsn(ICONST_1);
    mv.visitInsn(IRETURN);
    mv.visitLabel(l0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitTypeInsn(CHECKCAST,"org/drools/factmodel/traits/MapWrapper");
    mv.visitVarInsn(ASTORE,2);
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(wrapper),"map","Ljava/util/Map;");
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEINTERFACE,"org/drools/factmodel/traits/MapWrapper","getInnerMap","()Ljava/util/Map;");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Object","equals","(Ljava/lang/Object;)Z");
    mv.visitInsn(IRETURN);
    mv.visitMaxs(2,3);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"hashCode","()I",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(wrapper),"map","Ljava/util/Map;");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Object","hashCode","()I");
    mv.visitInsn(IRETURN);
    mv.visitMaxs(1,1);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"getInnerMap","()Ljava/util/Map;","()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;",null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,BuildUtils.getInternalType(wrapper),"map","Ljava/util/Map;");
    mv.visitInsn(ARETURN);
    mv.visitMaxs(1,1);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"putAll","(Ljava/util/Map;)V","(Ljava/util/Map<+Ljava/lang/String;+Ljava/lang/Object;>;)V",null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,1);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","keySet","()Ljava/util/Set;");
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Set","iterator","()Ljava/util/Iterator;");
    mv.visitVarInsn(ASTORE,2);
    Label l0=new Label();
    mv.visitLabel(l0);
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Iterator","hasNext","()Z");
    Label l1=new Label();
    mv.visitJumpInsn(IFEQ,l1);
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Iterator","next","()Ljava/lang/Object;");
    mv.visitTypeInsn(CHECKCAST,"java/lang/String");
    mv.visitVarInsn(ASTORE,3);
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,3);
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,3);
    mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Map","get","(Ljava/lang/Object;)Ljava/lang/Object;");
    mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(wrapper),"put","(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;");
    mv.visitInsn(POP);
    mv.visitJumpInsn(GOTO,l0);
    mv.visitLabel(l1);
    mv.visitInsn(RETURN);
    mv.visitMaxs(4,4);
    mv.visitEnd();
  }
{
    MethodVisitor mv=cw.visitMethod(ACC_PUBLIC,"toString","()Ljava/lang/String;",null,null);
    mv.visitCode();
    mv.visitTypeInsn(NEW,"java/lang/StringBuilder");
    mv.visitInsn(DUP);
    mv.visitMethodInsn(INVOKESPECIAL,"java/lang/StringBuilder","<init>","()V");
    mv.visitLdcInsn("[[[[");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
    mv.visitVarInsn(ALOAD,0);
    mv.visitMethodInsn(INVOKEVIRTUAL,BuildUtils.getInternalType(wrapper),"entrySet","()Ljava/util/Set;");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","append","(Ljava/lang/Object;)Ljava/lang/StringBuilder;");
    mv.visitLdcInsn("]]]]");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","append","(Ljava/lang/String;)Ljava/lang/StringBuilder;");
    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","toString","()Ljava/lang/String;");
    mv.visitInsn(ARETURN);
    mv.visitMaxs(2,1);
    mv.visitEnd();
  }
}
