{
  esl.newRow(0,3);
  esl.newCell(0,0,"row0col0",0);
  esl.newCell(0,1,"row0col1",0);
  esl.newCell(0,2,"row0col2",0);
  esl.newRow(1,3);
  esl.newCell(1,0,"row1col0",0);
  esl.newCell(1,1,"row1col1",0);
  esl.newCell(1,2,"row1col2",0);
  esl.newRow(2,3);
  esl.newCell(2,0,"row2col0",0);
  esl.newCell(2,1,"row2col1",0);
  esl.newCell(2,2,"row2col2",0);
  esl.finishSheet();
  assertEquals(2,assertedRows.size());
  for (Iterator it=assertedRows.entrySet().iterator(); it.hasNext(); ) {
    Map.Entry entry=(Map.Entry)it.next();
    Row row=(Row)entry.getKey();
    List cells=(List)entry.getValue();
    int i=1;
    for (Iterator it2=cells.iterator(); it2.hasNext(); i++) {
      StringCell cell=(StringCell)it2.next();
      assertEquals("row" + row.getRowNumber() + "col"+ i,cell.getValue());
      assertEquals("Pattern " + i,cell.getColumn().getName());
    }
  }
}
