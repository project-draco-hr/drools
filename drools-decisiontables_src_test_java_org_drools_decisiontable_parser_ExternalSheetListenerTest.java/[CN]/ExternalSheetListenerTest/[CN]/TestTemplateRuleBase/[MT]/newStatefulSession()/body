{
  return new StatefulSession(){
    public void addEventListener(    WorkingMemoryEventListener arg0){
    }
    public void addEventListener(    AgendaEventListener arg0){
    }
    public void addEventListener(    RuleFlowEventListener arg0){
    }
    public FactHandle assertObject(    Object fact) throws FactException {
      if (fact instanceof Row) {
        assertedRows.put(fact,currentRow);
        currentRow=new ArrayList();
      }
 else {
        currentRow.add(fact);
      }
      return null;
    }
    public FactHandle assertObject(    Object arg0,    boolean arg1) throws FactException {
      return null;
    }
    public void clearAgenda(){
    }
    public void clearAgendaGroup(    String arg0){
    }
    public void dispose(){
    }
    public void fireAllRules() throws FactException {
    }
    public void fireAllRules(    AgendaFilter arg0) throws FactException {
    }
    public Agenda getAgenda(){
      return null;
    }
    public List getAgendaEventListeners(){
      return null;
    }
    public FactHandle getFactHandle(    Object arg0) throws NoSuchFactHandleException {
      return null;
    }
    public List getFactHandles(){
      return null;
    }
    public AgendaGroup getFocus(){
      return null;
    }
    public Object getGlobal(    String arg0){
      return null;
    }
    public Object getObject(    FactHandle arg0) throws NoSuchFactObjectException {
      return null;
    }
    public QueryResults getQueryResults(    String arg0){
      return null;
    }
    public RuleBase getRuleBase(){
      return null;
    }
    public List getWorkingMemoryEventListeners(){
      return null;
    }
    public void modifyObject(    FactHandle arg0,    Object arg1) throws FactException {
    }
    public void removeEventListener(    WorkingMemoryEventListener arg0){
    }
    public void removeEventListener(    AgendaEventListener arg0){
    }
    public void removeEventListener(    RuleFlowEventListener arg0){
    }
    public void retractObject(    FactHandle arg0) throws FactException {
    }
    public void setAsyncExceptionHandler(    AsyncExceptionHandler arg0){
    }
    public void setFocus(    String arg0){
    }
    public void setFocus(    AgendaGroup arg0){
    }
    public void setGlobal(    String arg0,    Object arg1){
    }
    public void setGlobalResolver(    GlobalResolver globalResolver){
    }
    public ProcessInstance startProcess(    String processId){
      return null;
    }
    public Map getGlobals(){
      return null;
    }
    public Iterator iterateFactHandles(){
      return null;
    }
    public Iterator iterateFactHandles(    ObjectFilter filter){
      return null;
    }
    public Iterator iterateObjects(){
      return null;
    }
    public Iterator iterateObjects(    ObjectFilter filter){
      return null;
    }
    public Future asyncAssertObject(    Object object){
      return null;
    }
    public Future asyncAssertObjects(    Object[] list){
      return null;
    }
    public Future asyncAssertObjects(    List list){
      return null;
    }
    public Future asyncFireAllRules(){
      return null;
    }
    public Future asyncFireAllRules(    AgendaFilter agendaFilter){
      return null;
    }
    public Future asyncModifyObject(    FactHandle factHandle,    Object object){
      return null;
    }
    public Future asyncRetractObject(    FactHandle factHandle){
      return null;
    }
  }
;
}
