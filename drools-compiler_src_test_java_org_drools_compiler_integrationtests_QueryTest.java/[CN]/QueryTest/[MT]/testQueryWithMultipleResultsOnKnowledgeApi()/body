{
  String str="";
  str+="package org.drools.compiler.test  \n";
  str+="import org.drools.compiler.Cheese \n";
  str+="query cheeses \n";
  str+="    stilton : Cheese(type == 'stilton') \n";
  str+="    cheddar : Cheese(type == 'cheddar', price == stilton.price) \n";
  str+="end\n";
  KieBase kbase=SerializationHelper.serializeObject(loadKnowledgeBaseFromString(str));
  KieSession session=createKieSession(kbase);
  Cheese stilton1=new Cheese("stilton",1);
  Cheese cheddar1=new Cheese("cheddar",1);
  Cheese stilton2=new Cheese("stilton",2);
  Cheese cheddar2=new Cheese("cheddar",2);
  Cheese stilton3=new Cheese("stilton",3);
  Cheese cheddar3=new Cheese("cheddar",3);
  Set set=new HashSet();
  List list=new ArrayList();
  list.add(stilton1);
  list.add(cheddar1);
  set.add(list);
  list=new ArrayList();
  list.add(stilton2);
  list.add(cheddar2);
  set.add(list);
  list=new ArrayList();
  list.add(stilton3);
  list.add(cheddar3);
  set.add(list);
  session.insert(stilton1);
  session.insert(stilton2);
  session.insert(stilton3);
  session.insert(cheddar1);
  session.insert(cheddar2);
  session.insert(cheddar3);
  org.kie.api.runtime.rule.QueryResults results=getQueryResults(session,"cheeses");
  assertEquals(3,results.size());
  assertEquals(2,results.getIdentifiers().length);
  Set newSet=new HashSet();
  for (  org.kie.api.runtime.rule.QueryResultsRow result : results) {
    list=new ArrayList();
    list.add(result.get("stilton"));
    list.add(result.get("cheddar"));
    newSet.add(list);
  }
  assertEquals(set,newSet);
  FlatQueryResults flatResults=new FlatQueryResults(((StatefulKnowledgeSessionImpl)session).getQueryResults("cheeses"));
  newSet=new HashSet();
  for (  org.kie.api.runtime.rule.QueryResultsRow result : flatResults) {
    list=new ArrayList();
    list.add(result.get("stilton"));
    list.add(result.get("cheddar"));
    newSet.add(list);
  }
  assertEquals(set,newSet);
}
