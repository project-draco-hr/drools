{
  String str="";
  str+="package org.drools.compiler.test  \n";
  str+="import org.drools.compiler.Person \n";
  str+="query peeps( String $name, String $likes, int $age ) \n";
  str+="    $p : Person( $name := name, $likes := likes, $age := age ) \n";
  str+="end\n";
  KnowledgeBase kbase=SerializationHelper.serializeObject(loadKnowledgeBaseFromString(str));
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  Person p1=new Person("darth","stilton",100);
  Person p2=new Person("yoda","stilton",300);
  Person p3=new Person("luke","brie",300);
  Person p4=new Person("bobba","cheddar",300);
  ksession.insert(p1);
  ksession.insert(p2);
  ksession.insert(p3);
  ksession.insert(p4);
  org.kie.runtime.rule.QueryResults results=ksession.getQueryResults("peeps",new Object[]{Variable.v,Variable.v,Variable.v});
  assertEquals(4,results.size());
  List names=new ArrayList();
  for (  org.kie.runtime.rule.QueryResultsRow row : results) {
    names.add(((Person)row.get("$p")).getName());
  }
  assertEquals(4,names.size());
  assertTrue(names.contains("luke"));
  assertTrue(names.contains("yoda"));
  assertTrue(names.contains("bobba"));
  assertTrue(names.contains("darth"));
  results=ksession.getQueryResults("peeps",new Object[]{Variable.v,Variable.v,300});
  assertEquals(3,results.size());
  names=new ArrayList();
  for (  org.kie.runtime.rule.QueryResultsRow row : results) {
    names.add(((Person)row.get("$p")).getName());
  }
  assertEquals(3,names.size());
  assertTrue(names.contains("luke"));
  assertTrue(names.contains("yoda"));
  assertTrue(names.contains("bobba"));
  results=ksession.getQueryResults("peeps",new Object[]{Variable.v,"stilton",300});
  assertEquals(1,results.size());
  names=new ArrayList();
  for (  org.kie.runtime.rule.QueryResultsRow row : results) {
    names.add(((Person)row.get("$p")).getName());
  }
  assertEquals(1,names.size());
  assertTrue(names.contains("yoda"));
  results=ksession.getQueryResults("peeps",new Object[]{Variable.v,"stilton",Variable.v});
  assertEquals(2,results.size());
  names=new ArrayList();
  for (  org.kie.runtime.rule.QueryResultsRow row : results) {
    names.add(((Person)row.get("$p")).getName());
  }
  assertEquals(2,names.size());
  assertTrue(names.contains("yoda"));
  assertTrue(names.contains("darth"));
  results=ksession.getQueryResults("peeps",new Object[]{"darth",Variable.v,Variable.v});
  assertEquals(1,results.size());
  names=new ArrayList();
  for (  org.kie.runtime.rule.QueryResultsRow row : results) {
    names.add(((Person)row.get("$p")).getName());
  }
  assertEquals(1,names.size());
  assertTrue(names.contains("darth"));
}
