{
  KieBaseModelImpl kBase=(KieBaseModelImpl)value;
  writer.addAttribute("name",kBase.getName());
  if (kBase.getEventProcessingMode() != null) {
    writer.addAttribute("eventProcessingMode",kBase.getEventProcessingMode().getMode());
  }
  if (kBase.getEqualsBehavior() != null) {
    writer.addAttribute("equalsBehavior",kBase.getEqualsBehavior().toString().toLowerCase());
  }
  if (kBase.getScope() != null) {
    writer.addAttribute("scope",kBase.getScope());
  }
  if (!kBase.getPackages().isEmpty()) {
    StringBuilder buf=new StringBuilder();
    boolean first=true;
    for (    String pkg : kBase.getPackages()) {
      if (first) {
        first=false;
      }
 else {
        buf.append(", ");
      }
      buf.append(pkg);
    }
    writer.addAttribute("packages",buf.toString());
  }
  if (!kBase.getIncludes().isEmpty()) {
    StringBuilder sb=new StringBuilder();
    boolean insertComma=false;
    for (    String include : kBase.getIncludes()) {
      if (insertComma) {
        sb.append(", ");
      }
      sb.append(include);
      if (!insertComma) {
        insertComma=true;
      }
    }
    writer.addAttribute("includes",sb.toString());
  }
  for (  KieSessionModel kSessionModel : kBase.getKieSessionModels().values()) {
    writeObject(writer,context,"ksession",kSessionModel);
  }
}
