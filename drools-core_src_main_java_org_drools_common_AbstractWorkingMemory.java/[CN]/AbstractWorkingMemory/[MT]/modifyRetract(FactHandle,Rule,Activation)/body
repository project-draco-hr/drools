{
  try {
    this.ruleBase.readLock();
    this.lock.lock();
    this.ruleBase.executeQueuedActions();
    InternalFactHandle handle=(InternalFactHandle)factHandle;
    if (factHandle instanceof DisconnectedFactHandle) {
      handle=this.objectStore.reconnect(handle);
    }
    if (handle.getId() == -1) {
      return;
    }
    if (activation != null) {
      activation.getPropagationContext().releaseResources();
    }
    final PropagationContext propagationContext=new PropagationContextImpl(getNextPropagationIdCounter(),PropagationContext.MODIFICATION,rule,(activation == null) ? null : (LeftTuple)activation.getTuple(),handle,this.agenda.getActiveActivations(),this.agenda.getDormantActivations(),entryPoint);
    modifyContexts.put(handle,propagationContext);
    this.entryPointNode.retractObject(handle,propagationContext,this.typeConfReg.getObjectTypeConf(this.entryPoint,handle.getObject()),this);
    if (this.maintainTms) {
      EqualityKey key=handle.getEqualityKey();
      if (key != null) {
        key.removeFactHandle(handle);
        if (key.isEmpty()) {
          this.tms.remove(key);
        }
      }
    }
  }
  finally {
    this.lock.unlock();
    this.ruleBase.readUnlock();
  }
}
