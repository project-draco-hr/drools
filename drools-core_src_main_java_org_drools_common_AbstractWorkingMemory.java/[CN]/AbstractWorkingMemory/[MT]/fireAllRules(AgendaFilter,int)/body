{
  this.halt=false;
  if (isSequential()) {
    for (Iterator it=this.liaPropagations.iterator(); it.hasNext(); ) {
      ((LIANodePropagation)it.next()).doPropagation(this);
    }
  }
  if (!this.actionQueue.isEmpty()) {
    executeQueuedActions();
  }
  boolean noneFired=true;
  if (!this.firing) {
    try {
      this.firing=true;
      while (continueFiring(fireLimit) && this.agenda.fireNextItem(agendaFilter)) {
        fireLimit=updateFireLimit(fireLimit);
        noneFired=false;
        if (!this.actionQueue.isEmpty()) {
          executeQueuedActions();
        }
      }
    }
  finally {
      this.firing=false;
      if (noneFired) {
        doOtherwise(agendaFilter,fireLimit);
      }
    }
  }
}
