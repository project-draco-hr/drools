{
  if (this.firing.compareAndSet(false,true)) {
    try {
      startOperation();
synchronized (this) {
        if (isSequential()) {
          for (Iterator it=this.liaPropagations.iterator(); it.hasNext(); ) {
            ((LIANodePropagation)it.next()).doPropagation(this);
          }
        }
        executeQueuedActions();
        int fireCount=0;
        fireCount=this.agenda.fireAllRules(agendaFilter,fireLimit);
        return fireCount;
      }
    }
  finally {
      endOperation();
      this.firing.set(false);
    }
  }
  return 0;
}
