{
  this.halt=false;
  if (isSequential()) {
    for (Iterator it=this.liaPropagations.iterator(); it.hasNext(); ) {
      ((LIANodePropagation)it.next()).doPropagation(this);
    }
  }
  executeQueuedActions();
  boolean noneFired=true;
  if (!this.firing) {
    try {
      this.firing=true;
      while (continueFiring(fireLimit) && this.agenda.fireNextItem(agendaFilter)) {
        fireLimit=updateFireLimit(fireLimit);
        noneFired=false;
        executeQueuedActions();
      }
    }
  finally {
      this.firing=false;
    }
  }
}
