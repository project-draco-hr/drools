{
  if (!this.actionQueue.isEmpty()) {
    executeQueuedActions();
  }
  final Process process=((InternalRuleBase)getRuleBase()).getProcess(processId);
  if (process == null) {
    throw new IllegalArgumentException("Unknown process ID: " + processId);
  }
  ProcessInstance processInstance=getProcessInstance(process);
  processInstance.setWorkingMemory(this);
  processInstance.setProcess(process);
  addProcessInstance(processInstance);
  VariableScope variableScope=(VariableScope)process.getDefaultContext(VariableScope.VARIABLE_SCOPE);
  VariableScopeInstance variableScopeInstance=(VariableScopeInstance)processInstance.getContextInstance(VariableScope.VARIABLE_SCOPE);
  if (variableScope != null) {
    for (    Variable variable : variableScope.getVariables()) {
      variableScopeInstance.setVariable(variable.getName(),variable.getValue());
    }
  }
  if (parameters != null) {
    if (variableScope != null) {
      for (      Map.Entry<String,Object> entry : parameters.entrySet()) {
        variableScopeInstance.setVariable(entry.getKey(),entry.getValue());
      }
    }
 else {
      throw new IllegalArgumentException("This process does not support parameters!");
    }
  }
  getRuleFlowEventSupport().fireBeforeRuleFlowProcessStarted(processInstance,this);
  processInstance.start();
  getRuleFlowEventSupport().fireAfterRuleFlowProcessStarted(processInstance,this);
  return processInstance;
}
