{
  LinkedList memory=(LinkedList)workingMemory.getNodeMemory(this);
  boolean exists=((tuple.getNext() != null && tuple.getPrevious() != null) || memory.getFirst() == tuple);
  if (exists) {
    memory.remove(tuple);
  }
  boolean allowed=this.condition.isAllowed(tuple,workingMemory);
  workingMemory.getReteooNodeEventSupport().propagateReteooNode(this,tuple,allowed);
  if (allowed) {
    memory.add(tuple);
    if (exists) {
      propagateAssertTuple(tuple,context,workingMemory);
    }
 else {
      propagateModifyTuple(tuple,context,workingMemory);
    }
  }
 else {
    propagateRetractTuple(tuple,context,workingMemory);
  }
}
