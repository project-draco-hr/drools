{
  final LinkedList memory=(LinkedList)workingMemory.getNodeMemory(this);
  boolean exists=(tuple.getChildEntries() != null && !tuple.getChildEntries().isEmpty());
  if (exists) {
    memory.remove(tuple);
  }
  final boolean allowed=this.condition.isAllowed(tuple,workingMemory);
  if (allowed) {
    memory.add(tuple);
    if (!exists) {
      this.sink.propagateAssertTuple(tuple,context,workingMemory);
    }
 else {
      tuple.modifyChildEntries(context,workingMemory);
    }
  }
 else {
    tuple.retractChildEntries(context,workingMemory);
  }
}
