{
  if (kProject != null) {
    KieContainerImpl kContainer=new KieContainerImpl(kProject,null);
    if (kBaseNames != null) {
      for (      String kBaseQName : kBaseNames) {
        KieBaseModel kBaseModel=kProject.getKieBaseModel(kBaseQName);
        if (kBaseModel == null) {
          log.error("Annotation @KBase({}) found, but no KieBaseModel exist.\nEither the required kproject.xml does not exist, was corrupted, or mising the KieBase entry",kBaseQName);
          continue;
        }
        KBaseBean bean=new KBaseBean(kBaseModel,kContainer);
        if (log.isDebugEnabled()) {
          InternalKieModule kModule=(InternalKieModule)kProject.getKieModuleForKBase(kBaseQName);
          log.debug("Added Bean for @KBase({})",kBaseQName,kModule.getFile());
        }
        abd.addBean(bean);
      }
    }
    kBaseNames=null;
    if (kSessionNames != null) {
      for (      String kSessionName : kSessionNames) {
        KieSessionModel kSessionModel=kProject.getKieSessionModel(kSessionName);
        if (kSessionModel == null) {
          log.error("Annotation @KSession({}) found, but no KieSessioneModel exist.\nEither the required kproject.xml does not exist, was corrupted, or mising the KieBase entry",kSessionName);
          continue;
        }
        if ("stateless".equals(kSessionModel.getType())) {
          if (log.isDebugEnabled()) {
            InternalKieModule kModule=(InternalKieModule)kProject.getKieModuleForKBase(((KieSessionModelImpl)kSessionModel).getKieBaseModel().getName());
            log.debug("Added Bean for Stateless @Session({}) from: {}",kSessionName,kModule.getFile());
          }
          abd.addBean(new StatelessKSessionBean(kSessionModel,kContainer));
        }
 else {
          InternalKieModule kModule=(InternalKieModule)kProject.getKieModuleForKBase(((KieSessionModelImpl)kSessionModel).getKieBaseModel().getName());
          log.debug("Added Bean for Stateful @Session({})  from: {}",kSessionName,kModule.getFile());
          abd.addBean(new StatefulKSessionBean(kSessionModel,kContainer));
        }
      }
    }
    kSessionNames=null;
  }
}
