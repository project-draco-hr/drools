{
  ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  final Enumeration<URL> e;
  try {
    e=classLoader.getResources("META-INF/kproject.xml");
  }
 catch (  IOException exc) {
    log.error("Unable to find and build index of kproject.xml \n" + exc.getMessage());
    return;
  }
  Map<String,String> urls=new HashMap<String,String>();
  while (e.hasMoreElements()) {
    URL url=e.nextElement();
    ;
    try {
      KProject kProject=KProjectImpl.fromXML(url);
      String kProjectId=kProject.getGroupArtifactVersion().getGroupId() + ":" + kProject.getGroupArtifactVersion().getArtifactId();
      urls.put(kProjectId,fixURL(url));
      kProjects.put(kProjectId,kProject);
    }
 catch (    Exception exc) {
      log.error("Unable to build and build index of kproject.xml url=" + url.toExternalForm() + "\n"+ exc.getMessage());
    }
  }
  for (  KProject kProject : kProjects.values()) {
    for (    org.drools.kproject.KBase kBase : kProject.getKBases().values()) {
      kBases.put(kBase.getQName(),kBase);
      ((KBaseImpl)kBase).setKProject(kProject);
      String kProjectId=kProject.getGroupArtifactVersion().getGroupId() + ":" + kProject.getGroupArtifactVersion().getArtifactId();
      kBaseURLs.put(kBase.getQName(),urls.get(kProjectId));
      for (      org.drools.kproject.KSession kSession : kBase.getKSessions().values()) {
        ((KSessionImpl)kSession).setKBase(kBase);
        kSessions.put(kSession.getQName(),kSession);
      }
    }
  }
}
