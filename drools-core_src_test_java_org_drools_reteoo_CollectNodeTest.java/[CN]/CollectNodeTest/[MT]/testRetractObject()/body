{
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("cheese",false,null);
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("other cheese",false,null);
  final LeftTuple tuple0=new LeftTuple(f0);
  this.node.assertObject(f0,this.contextAssert,this.workingMemory);
  this.node.assertObject(f1,this.contextAssert,this.workingMemory);
  assertEquals(2,this.memory.betaMemory.getFactHandleMemory().size());
  this.node.assertLeftTuple(tuple0,this.contextAssert,this.workingMemory);
  assertEquals(1,this.memory.betaMemory.getTupleMemory().size());
  assertEquals(0,this.sink.getRetracted().size());
  assertEquals(1,this.sink.getAsserted().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",2,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(0))[0]).get(1)).getObject()).size());
  this.node.retractObject(f1,this.contextRetract,this.workingMemory);
  assertEquals(1,this.memory.betaMemory.getFactHandleMemory().size());
  assertEquals(1,this.sink.getRetracted().size());
  assertEquals(2,this.sink.getAsserted().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",1,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(1))[0]).get(1)).getObject()).size());
  this.node.retractObject(f0,this.contextRetract,this.workingMemory);
  assertEquals(0,this.memory.betaMemory.getFactHandleMemory().size());
  assertEquals(2,this.sink.getRetracted().size());
  assertEquals(3,this.sink.getAsserted().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",0,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(2))[0]).get(1)).getObject()).size());
}
