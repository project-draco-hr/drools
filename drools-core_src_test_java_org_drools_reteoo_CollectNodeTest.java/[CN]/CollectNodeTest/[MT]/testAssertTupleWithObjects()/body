{
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("cheese");
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("other cheese");
  final ReteTuple tuple0=new ReteTuple(f0);
  this.node.assertObject(f0,this.context,this.workingMemory);
  this.node.assertObject(f1,this.context,this.workingMemory);
  this.node.assertTuple(tuple0,this.context,this.workingMemory);
  assertEquals(1,this.memory.getTupleMemory().size());
  assertEquals(2,this.memory.getFactHandleMemory().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",2,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(0))[0]).get(1)).getObject()).size());
  final ReteTuple tuple1=new ReteTuple(f1);
  this.node.assertTuple(tuple1,this.context,this.workingMemory);
  assertEquals(2,this.memory.getTupleMemory().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",2,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(1))[0]).get(1)).getObject()).size());
  final ReteTuple tuple=(ReteTuple)this.memory.getTupleMemory().iterator().next();
  assertEquals(tuple0,tuple);
  assertEquals(tuple1,tuple.getNext());
  Assert.assertEquals("Two tuples should have been propagated",2,this.sink.getAsserted().size());
}
