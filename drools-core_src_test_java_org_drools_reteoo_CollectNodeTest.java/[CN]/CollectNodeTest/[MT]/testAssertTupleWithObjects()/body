{
  final DefaultFactHandle f0=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("cheese",null,null);
  final DefaultFactHandle f1=(DefaultFactHandle)this.workingMemory.getFactHandleFactory().newFactHandle("other cheese",null,null);
  final LeftTuple tuple0=new LeftTuple(f0,this.node,true);
  this.node.assertObject(f0,this.contextAssert,this.workingMemory);
  this.node.assertObject(f1,this.contextAssert,this.workingMemory);
  this.node.assertLeftTuple(tuple0,this.contextAssert,this.workingMemory);
  assertEquals(1,this.memory.betaMemory.getLeftTupleMemory().size());
  assertEquals(2,this.memory.betaMemory.getRightTupleMemory().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",2,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(0))[0]).get(1)).getObject()).size());
  final LeftTuple tuple1=new LeftTuple(f1,this.node,true);
  this.node.assertLeftTuple(tuple1,this.contextAssert,this.workingMemory);
  assertEquals(2,this.memory.betaMemory.getLeftTupleMemory().size());
  Assert.assertEquals("Wrong number of elements in matching objects list ",2,((Collection)((DefaultFactHandle)((Tuple)((Object[])this.sink.getAsserted().get(1))[0]).get(1)).getObject()).size());
  assertTrue(this.memory.betaMemory.getLeftTupleMemory().contains(tuple0));
  assertTrue(this.memory.betaMemory.getLeftTupleMemory().contains(tuple1));
  Assert.assertEquals("Two tuples should have been propagated",2,this.sink.getAsserted().size());
}
