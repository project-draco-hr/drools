{
  final String a="a";
  final String b="b";
  final String c="c";
  final String d="d";
  final String e="e";
  final String f="f";
  final String g="g";
  final String h="h";
  final GroupElement and=GroupElementFactory.newAndInstance();
  final GroupElement and1=GroupElementFactory.newAndInstance();
  and1.addChild(a);
  final GroupElement or1=GroupElementFactory.newOrInstance();
  or1.addChild(b);
  or1.addChild(c);
  and1.addChild(or1);
  and.addChild(and1);
  final GroupElement or2=GroupElementFactory.newOrInstance();
  or2.addChild(d);
  or2.addChild(e);
  and.addChild(or2);
  final GroupElement and2=GroupElementFactory.newAndInstance();
  final GroupElement not1=GroupElementFactory.newNotInstance();
  not1.addChild(f);
  final GroupElement or3=GroupElementFactory.newOrInstance();
  or3.addChild(g);
  final GroupElement not2=GroupElementFactory.newNotInstance();
  not2.addChild(h);
  or3.addChild(not2);
  and2.addChild(not1);
  and2.addChild(or3);
  and.addChild(and2);
  GroupElement[] ands=LogicTransformer.getInstance().transform(and);
  final ObjectInputStream ois=new ObjectInputStream(this.getClass().getResourceAsStream("/correct_transform1.dat"));
  final GroupElement[] correctResultAnds=(GroupElement[])ois.readObject();
  for (int j=0; j < ands.length; j++) {
    assertEquals(correctResultAnds[j],ands[j]);
  }
}
