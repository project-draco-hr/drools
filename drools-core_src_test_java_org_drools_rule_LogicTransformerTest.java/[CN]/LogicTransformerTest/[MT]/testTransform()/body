{
  String a="a";
  String b="b";
  String c="c";
  String d="d";
  String e="e";
  String f="f";
  String g="g";
  String h="h";
  String i="i";
  And and=new And();
  And and1=new And();
  and1.addChild(a);
  Or or1=new Or();
  or1.addChild(b);
  or1.addChild(c);
  and1.addChild(or1);
  and.addChild(and1);
  Or or2=new Or();
  or2.addChild(d);
  or2.addChild(e);
  and.addChild(or2);
  And and2=new And();
  Not not1=new Not();
  Or or3=new Or();
  not1.addChild(or3);
  or3.addChild(f);
  or3.addChild(g);
  and2.addChild(not1);
  Or or4=new Or();
  or4.addChild(h);
  or4.addChild(i);
  and2.addChild(or4);
  and.addChild(and2);
  And[] ands=LogicTransformer.getInstance().transform(and1);
  assertLength(2,ands);
  assertTrue(ands[0] instanceof And);
  assertLength(2,ands[0].getChildren());
  assertLength(2,ands[0].getChildren());
  assertEquals(And.class,ands[0].getClass());
  assertEquals(And.class,ands[0].getClass());
  And newAnd=(And)ands[0];
  assertContains(a,newAnd.getChildren());
  assertContains(b,newAnd.getChildren());
  newAnd=(And)ands[1];
  assertContains(a,newAnd.getChildren());
  assertContains(c,newAnd.getChildren());
  ands=LogicTransformer.getInstance().transform(and);
  ObjectInputStream ois=new ObjectInputStream(this.getClass().getResourceAsStream("correct_transform1.dat"));
  And[] correctResultAnds=(And[])ois.readObject();
  for (int j=0; j < ands.length; j++) {
    assertEquals(correctResultAnds[j],ands[j]);
  }
}
