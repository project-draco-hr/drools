{
  final String a="a";
  final String b="b";
  final String c="c";
  final String d="d";
  final String e="e";
  final String f="f";
  final And and=new And();
  final Or or=new Or();
  or.addChild(a);
  or.addChild(b);
  and.addChild(or);
  and.addChild(c);
  final Or or2=new Or();
  or2.addChild(d);
  or2.addChild(e);
  and.addChild(or2);
  final Not not=new Not();
  not.addChild(f);
  and.addChild(not);
  final Or newOr=(Or)LogicTransformer.getInstance().applyOrTransformation(and,or);
  assertLength(4,newOr.getChildren());
  assertEquals(And.class,newOr.getChildren().get(0).getClass());
  assertEquals(And.class,newOr.getChildren().get(1).getClass());
  assertEquals(And.class,newOr.getChildren().get(2).getClass());
  assertEquals(And.class,newOr.getChildren().get(3).getClass());
  And and1=(And)newOr.getChildren().get(0);
  assertLength(4,and1.getChildren());
  assertContains(a,and1.getChildren());
  assertContains(c,and1.getChildren());
  assertContains(d,and1.getChildren());
  assertContains(not,and1.getChildren());
  and1=(And)newOr.getChildren().get(1);
  assertLength(4,and1.getChildren());
  assertContains(a,and1.getChildren());
  assertContains(c,and1.getChildren());
  assertContains(e,and1.getChildren());
  assertContains(not,and1.getChildren());
  and1=(And)newOr.getChildren().get(2);
  assertLength(4,and1.getChildren());
  assertContains(b,and1.getChildren());
  assertContains(c,and1.getChildren());
  assertContains(d,and1.getChildren());
  assertContains(not,and1.getChildren());
  and1=(And)newOr.getChildren().get(3);
  assertLength(4,and1.getChildren());
  assertContains(b,and1.getChildren());
  assertContains(c,and1.getChildren());
  assertContains(e,and1.getChildren());
  assertContains(not,and1.getChildren());
}
