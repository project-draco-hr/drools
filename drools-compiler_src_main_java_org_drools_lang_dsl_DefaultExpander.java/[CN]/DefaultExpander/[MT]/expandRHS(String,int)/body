{
  final StringBuilder buf=new StringBuilder();
  final String[] lines=lhs.split("\n");
  for (int i=0; i < lines.length; i++) {
    final String trimmed=lines[i].trim();
    if (trimmed.length() == 0 || trimmed.startsWith("#") || trimmed.startsWith("//")) {
      buf.append(lines[i]);
    }
 else     if (trimmed.startsWith(">")) {
      buf.append(lines[i].replaceFirst(">",""));
    }
 else {
      String expanded=lines[i];
      for (final Iterator it=this.consequence.iterator(); it.hasNext(); ) {
        final DSLMappingEntry entry=(DSLMappingEntry)it.next();
        expanded=entry.getKeyPattern().matcher(expanded).replaceAll(entry.getValuePattern());
      }
      buf.append(expanded);
      if (lines[i].equals(expanded)) {
        this.addError(new ExpanderException("Unable to expand: " + lines[i],i + lineOffset));
      }
    }
    buf.append("\n");
  }
  if (lines.length == 0) {
    buf.append("\n");
  }
  return buf.toString();
}
