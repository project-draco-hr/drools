{
  if (context.getRuleBase().getConfiguration().isRemoveIdentities() && pattern.getObjectType().getClass() == ClassObjectType.class) {
    List patterns=null;
    final Class thisClass=((ClassObjectType)pattern.getObjectType()).getClassType();
    for (final Iterator it=context.getObjectType().entrySet().iterator(); it.hasNext(); ) {
      final Map.Entry entry=(Map.Entry)it.next();
      final Class previousClass=((ClassObjectType)entry.getKey()).getClassType();
      if (thisClass.isAssignableFrom(previousClass)) {
        patterns=(List)entry.getValue();
        for (final Iterator patternIter=patterns.iterator(); patternIter.hasNext(); ) {
          betaConstraints.add(new InstanceNotEqualsConstraint((Pattern)patternIter.next()));
        }
      }
    }
    patterns=(List)context.getObjectType().get(pattern.getObjectType());
    if (patterns == null) {
      patterns=new ArrayList();
    }
    patterns.add(pattern);
    context.getObjectType().put(pattern.getObjectType(),patterns);
  }
}
