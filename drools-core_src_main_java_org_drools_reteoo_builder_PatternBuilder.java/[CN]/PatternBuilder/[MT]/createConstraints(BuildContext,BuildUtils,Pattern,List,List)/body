{
  final List constraints=pattern.getConstraints();
  checkRemoveIdentities(context,pattern,betaConstraints);
  for (final Iterator it=constraints.iterator(); it.hasNext(); ) {
    final Object object=it.next();
    if (object instanceof Declaration) {
      continue;
    }
    final Constraint constraint=(Constraint)object;
    final Declaration[] declarations=constraint.getRequiredDeclarations();
    boolean isAlphaConstraint=true;
    for (int i=0; isAlphaConstraint && i < declarations.length; i++) {
      if (declarations[i].getPattern() != pattern) {
        isAlphaConstraint=false;
      }
    }
    if (isAlphaConstraint) {
      alphaConstraints.add(constraint);
    }
 else {
      utils.checkUnboundDeclarations(context,constraint.getRequiredDeclarations());
      betaConstraints.add(constraint);
    }
  }
}
