{
  boolean objectMemory=context.isObjectTypeNodeMemoryEnabled();
  boolean alphaMemory=context.isAlphaMemoryAllowed();
  ObjectType objectType=pattern.getObjectType();
  if (pattern.getObjectType() instanceof ClassObjectType) {
    if (DroolsQuery.class == ((ClassObjectType)pattern.getObjectType()).getClassType()) {
      context.setTupleMemoryEnabled(false);
      context.setObjectTypeNodeMemoryEnabled(false);
      context.setAlphaNodeMemoryAllowed(false);
    }
  }
  ObjectTypeNode otn=new ObjectTypeNode(context.getNextId(),(EntryPointNode)context.getObjectSource(),objectType,context);
  if (objectType.isEvent() && EventProcessingOption.STREAM.equals(context.getRuleBase().getConfiguration().getEventProcessingMode())) {
    long expirationOffset=getExpiratioOffsetForType(context,objectType);
    if (expirationOffset != -1) {
      otn.setExpirationOffset(expirationOffset);
    }
 else {
      for (      Behavior behavior : pattern.getBehaviors()) {
        if (behavior.getExpirationOffset() != -1) {
          expirationOffset=Math.max(behavior.getExpirationOffset(),expirationOffset);
        }
      }
      long distance=context.getTemporalDistance().getExpirationOffset(pattern);
      if (distance == -1) {
        otn.setExpirationOffset(expirationOffset);
      }
 else {
        otn.setExpirationOffset(Math.max(distance,expirationOffset));
      }
    }
  }
  context.setObjectSource((ObjectSource)utils.attachNode(context,otn));
  if (context.isAttachAlphaNodes()) {
    for (    final AlphaNodeFieldConstraint constraint : alphaConstraints) {
      context.pushRuleComponent(constraint);
      context.setObjectSource((ObjectSource)utils.attachNode(context,new AlphaNode(context.getNextId(),(AlphaNodeFieldConstraint)constraint,context.getObjectSource(),context)));
      context.popRuleComponent();
    }
    if (context.getCurrentEntryPoint() != EntryPoint.DEFAULT) {
      context.setObjectSource((ObjectSource)utils.attachNode(context,new PropagationQueuingNode(context.getNextId(),context.getObjectSource(),context)));
      context.setCurrentEntryPoint(EntryPoint.DEFAULT);
    }
  }
 else {
    context.setAlphaConstraints(alphaConstraints);
  }
  context.setObjectTypeNodeMemoryEnabled(objectMemory);
  context.setAlphaNodeMemoryAllowed(alphaMemory);
}
