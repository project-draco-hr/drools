{
  pattern.setOffset(context.getCurrentPatternOffset());
  final List alphaConstraints=new LinkedList();
  final List betaConstraints=new LinkedList();
  this.createConstraints(context,utils,pattern,alphaConstraints,betaConstraints);
  context.setBetaconstraints(betaConstraints);
  if (pattern.getSource() != null) {
    context.setAlphaConstraints(alphaConstraints);
    final int currentOffset=context.getCurrentPatternOffset();
    PatternSource source=pattern.getSource();
    ReteooComponentBuilder builder=utils.getBuilderFor(source);
    builder.build(context,utils,source);
    context.setCurrentPatternOffset(currentOffset);
  }
  if (pattern.getSource() == null || context.getCurrentEntryPoint() != EntryPoint.DEFAULT) {
    attachAlphaNodes(context,utils,pattern,alphaConstraints);
    if (context.getCurrentEntryPoint() != EntryPoint.DEFAULT) {
      context.setObjectSource((RightTupleSource)utils.attachNode(context,new PropagationQueuingNode(context.getNextId(),context.getObjectSource(),context)));
      context.setCurrentEntryPoint(EntryPoint.DEFAULT);
    }
  }
  context.incrementCurrentPatternOffset();
}
