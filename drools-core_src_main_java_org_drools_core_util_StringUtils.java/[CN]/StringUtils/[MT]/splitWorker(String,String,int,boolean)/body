{
  if (str == null) {
    return null;
  }
  final int len=str.length();
  if (len == 0) {
    return EMPTY_STRING_ARRAY;
  }
  final List<String> list=new ArrayList<String>();
  int sizePlus1=1;
  int i=0, start=0;
  boolean match=false;
  boolean lastMatch=false;
  if (separatorChars == null) {
    while (i < len) {
      if (isWhitespace(str.charAt(i))) {
        if (match || preserveAllTokens) {
          lastMatch=true;
          if (sizePlus1++ == max) {
            i=len;
            lastMatch=false;
          }
          list.add(str.substring(start,i));
          match=false;
        }
        start=++i;
        continue;
      }
 else {
        lastMatch=false;
      }
      match=true;
      i++;
    }
  }
 else   if (separatorChars.length() == 1) {
    final char sep=separatorChars.charAt(0);
    while (i < len) {
      if (str.charAt(i) == sep) {
        if (match || preserveAllTokens) {
          lastMatch=true;
          if (sizePlus1++ == max) {
            i=len;
            lastMatch=false;
          }
          list.add(str.substring(start,i));
          match=false;
        }
        start=++i;
        continue;
      }
 else {
        lastMatch=false;
      }
      match=true;
      i++;
    }
  }
 else {
    while (i < len) {
      if (separatorChars.indexOf(str.charAt(i)) >= 0) {
        if (match || preserveAllTokens) {
          lastMatch=true;
          if (sizePlus1++ == max) {
            i=len;
            lastMatch=false;
          }
          list.add(str.substring(start,i));
          match=false;
        }
        start=++i;
        continue;
      }
 else {
        lastMatch=false;
      }
      match=true;
      i++;
    }
  }
  if (match || (preserveAllTokens && lastMatch)) {
    list.add(str.substring(start,i));
  }
  return list.toArray(new String[list.size()]);
}
