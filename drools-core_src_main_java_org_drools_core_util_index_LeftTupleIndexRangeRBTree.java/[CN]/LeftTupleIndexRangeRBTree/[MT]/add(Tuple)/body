{
  Comparable lowerBound=getLeftAscendingIndexedValue(tuple);
  Comparable upperBound=getLeftDescendingIndexedValue(tuple);
  RBTree<Comparable<Comparable>,TupleList> nestedTree=tree.lookup(lowerBound);
  if (nestedTree == null) {
    nestedTree=new RBTree<Comparable<Comparable>,TupleList>();
    tree.insert(lowerBound,nestedTree);
  }
  TupleList list=nestedTree.lookup(upperBound);
  if (list == null) {
    list=new TupleList();
    nestedTree.insert(upperBound,list);
  }
  list.add(tuple);
  size++;
}
