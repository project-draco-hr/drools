{
  final HashKey other=(HashKey)object;
  if (this.isNull) {
    return (other.isNull);
  }
switch (this.type) {
case BOOL:
    return (this.index == other.index) && (this.bvalue == other.getBooleanValue());
case LONG:
  return (this.index == other.index) && (this.lvalue == other.getLongValue());
case DOUBLE:
return (this.index == other.index) && (this.dvalue == other.getDoubleValue());
case OBJECT:
final Object otherValue=other.getObjectValue();
if ((this.ovalue != null) && (this.ovalue instanceof Number) && (otherValue instanceof Number)) {
return (this.index == other.index) && (((Number)this.ovalue).doubleValue() == ((Number)otherValue).doubleValue());
}
return (this.index == other.index) && (this.ovalue == null ? otherValue == null : this.ovalue.equals(otherValue));
}
return false;
}
