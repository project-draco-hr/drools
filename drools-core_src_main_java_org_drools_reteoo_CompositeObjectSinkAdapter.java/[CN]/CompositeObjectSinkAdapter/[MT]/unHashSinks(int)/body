{
  for (Iterator it=this.hashedSinks.entrySet().iterator(); it.hasNext(); ) {
    Entry entry=(Entry)it.next();
    ObjectSink sink=(ObjectSink)entry.getValue();
    if (sink.getClass() == AlphaNode.class) {
      AlphaNode alphaNode=(AlphaNode)sink;
      FieldConstraint fieldConstraint=alphaNode.getConstraint();
      if (fieldConstraint.getClass() == LiteralConstraint.class) {
        LiteralConstraint literalConstraint=(LiteralConstraint)fieldConstraint;
        Evaluator evaluator=literalConstraint.getEvaluator();
        Object value=literalConstraint.getField().getValue();
        if (evaluator.getOperator() == Operator.EQUAL && index == literalConstraint.getFieldExtractor().getIndex()) {
          this.hashedSinks.remove(entry.getKey());
          this.otherSinks.add((ObjectSinkNode)sink);
        }
      }
    }
  }
}
