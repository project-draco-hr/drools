{
  final int index=fieldIndex.getIndex();
  final List<HashKey> unhashedSinks=new ArrayList<HashKey>();
  final Iterator iter=this.hashedSinkMap.newIterator();
  ObjectHashMap.ObjectEntry entry=(ObjectHashMap.ObjectEntry)iter.next();
  while (entry != null) {
    final AlphaNode alphaNode=(AlphaNode)entry.getValue();
    final LiteralConstraint literalConstraint=(LiteralConstraint)alphaNode.getConstraint();
    if (index == literalConstraint.getFieldExtractor().getIndex()) {
      final FieldValue value=literalConstraint.getField();
      if (this.hashableSinks == null) {
        this.hashableSinks=new ObjectSinkNodeList();
      }
      this.hashableSinks.add(alphaNode);
      unhashedSinks.add(new HashKey(index,value,fieldIndex.getFieldExtractor()));
    }
    entry=(ObjectHashMap.ObjectEntry)iter.next();
  }
  for (  HashKey hashKey : unhashedSinks) {
    this.hashedSinkMap.remove(hashKey);
  }
  if (this.hashedSinkMap.isEmpty()) {
    this.hashedSinkMap=null;
  }
  fieldIndex.setHashed(false);
}
