{
  final int index=fieldIndex.getIndex();
  for (ObjectSinkNode sink=this.hashableSinks.getFirst(); sink != null; sink=sink.getNextObjectSinkNode()) {
    final AlphaNode alphaNode=(AlphaNode)sink;
    final AlphaNodeFieldConstraint fieldConstraint=alphaNode.getConstraint();
    final LiteralConstraint literalConstraint=(LiteralConstraint)fieldConstraint;
    final Evaluator evaluator=literalConstraint.getEvaluator();
    if (evaluator.getOperator() == Operator.EQUAL && index == literalConstraint.getFieldExtractor().getIndex()) {
      final Object value=literalConstraint.getField();
      this.hashKey.setIndex(index);
      this.hashKey.setValue(value);
      this.hashableSinks.add(sink);
      this.hashedSinkMap.remove(this.hashKey);
    }
  }
  if (this.hashedSinkMap.isEmpty()) {
    this.hashedSinkMap=null;
  }
  fieldIndex.setHashed(false);
}
