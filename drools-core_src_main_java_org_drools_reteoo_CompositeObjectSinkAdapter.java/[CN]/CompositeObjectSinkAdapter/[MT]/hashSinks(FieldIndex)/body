{
  if (this.hashedSinkMap == null) {
    this.hashedSinkMap=new ObjectHashMap();
  }
  final int index=fieldIndex.getIndex();
  final InternalReadAccessor fieldReader=fieldIndex.getFieldExtractor();
  ObjectSinkNode currentSink=this.hashableSinks.getFirst();
  while (currentSink != null) {
    final AlphaNode alphaNode=(AlphaNode)currentSink;
    final AlphaNodeFieldConstraint fieldConstraint=alphaNode.getConstraint();
    final LiteralConstraint literalConstraint=(LiteralConstraint)fieldConstraint;
    currentSink=currentSink.getNextObjectSinkNode();
    if (index == literalConstraint.getFieldExtractor().getIndex()) {
      final FieldValue value=literalConstraint.getField();
      this.hashedSinkMap.put(new HashKey(index,value,fieldReader),alphaNode);
      hashableSinks.remove(alphaNode);
    }
  }
  if (this.hashableSinks.isEmpty()) {
    this.hashableSinks=null;
  }
  fieldIndex.setHashed(true);
}
