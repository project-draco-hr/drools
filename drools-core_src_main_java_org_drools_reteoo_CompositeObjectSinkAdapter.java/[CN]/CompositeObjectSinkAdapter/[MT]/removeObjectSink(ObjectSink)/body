{
  if (sink.getClass() == AlphaNode.class) {
    AlphaNode alphaNode=(AlphaNode)sink;
    FieldConstraint fieldConstraint=alphaNode.getConstraint();
    if (fieldConstraint.getClass() == LiteralConstraint.class) {
      LiteralConstraint literalConstraint=(LiteralConstraint)fieldConstraint;
      Evaluator evaluator=literalConstraint.getEvaluator();
      Object value=literalConstraint.getField().getValue();
      if (evaluator.getOperator() == Operator.EQUAL) {
        int index=literalConstraint.getFieldExtractor().getIndex();
        FieldIndex fieldIndex=unregisterFieldIndex(index);
        if (fieldIndex.isHashed()) {
          this.hashKey.setIndex(index);
          this.hashKey.setValue(value);
          hashedSinkMap.remove(this.hashKey);
          if (fieldIndex.getCount() <= 2) {
            unHashSinks(fieldIndex);
          }
        }
 else {
          this.hashedSinks.remove((ObjectSinkNode)sink);
        }
        if (this.hashedSinks.isEmpty()) {
          this.hashedSinks=null;
        }
        return;
      }
    }
  }
  this.otherSinks.remove((ObjectSinkNode)sink);
  if (this.otherSinks.isEmpty()) {
    this.otherSinks=null;
  }
}
