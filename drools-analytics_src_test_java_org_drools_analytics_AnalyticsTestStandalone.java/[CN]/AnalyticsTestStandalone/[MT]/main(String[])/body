{
  try {
    PackageDescr descr=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("MissingRangesForDates.drl")));
    PackageDescr descr2=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("MissingRangesForDoubles.drl")));
    PackageDescr descr3=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("MissingRangesForInts.drl")));
    PackageDescr descr4=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("MissingRangesForVariables.drl")));
    PackageDescr descr5=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("Misc.drl")));
    PackageDescr descr6=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("Misc2.drl")));
    PackageDescr descr7=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("Misc3.drl")));
    PackageDescr descr8=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("ConsequenceTest.drl")));
    PackageDescr descr9=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("optimisation/OptimisationRestrictionOrderTest.drl")));
    PackageDescr descr10=new DrlParser().parse(new InputStreamReader(Analyzer.class.getResourceAsStream("optimisation/OptimisationPatternOrderTest.drl")));
    Analyzer a=new Analyzer();
    a.addPackageDescr(descr5);
    a.addPackageDescr(descr6);
    a.addPackageDescr(descr7);
    a.addPackageDescr(descr8);
    a.addPackageDescr(descr9);
    a.addPackageDescr(descr10);
    a.fireAnalysis();
    a.writeComponentsHTML("C:\\");
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
