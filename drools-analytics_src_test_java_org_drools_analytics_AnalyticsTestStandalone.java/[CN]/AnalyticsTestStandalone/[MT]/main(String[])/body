{
  try {
    Collection<String> fileNames=new ArrayList<String>();
    fileNames.add("Misc3.drl");
    DrlParser parser=new DrlParser();
    Analyzer a=new Analyzer();
    for (    String s : fileNames) {
      PackageDescr descr=parser.parse(new InputStreamReader(Analyzer.class.getResourceAsStream(s)));
      a.addPackageDescr(descr);
    }
    a.fireAnalysis();
    a.writeComponentsHTML("/Users/michaelneale/foo.html");
    AnalyticsResult result=a.getResult();
    Collection<AnalyticsMessageBase> msgs=result.getBySeverity(AnalyticsMessageBase.Severity.ERROR);
    for (Iterator iterator=msgs.iterator(); iterator.hasNext(); ) {
      AnalyticsMessageBase msg=(AnalyticsMessageBase)iterator.next();
      System.out.println("ERR: " + msg.getMessage());
    }
    msgs=result.getBySeverity(AnalyticsMessageBase.Severity.WARNING);
    for (Iterator iterator=msgs.iterator(); iterator.hasNext(); ) {
      AnalyticsMessageBase msg=(AnalyticsMessageBase)iterator.next();
      System.out.println("WARN (" + msg.getClass().getSimpleName() + "): "+ msg.getMessage());
      System.out.println("\t FAULT: [" + msg.getClass().getSimpleName() + "] "+ msg.getFaulty());
      if (msg instanceof AnalyticsMessage) {
        System.out.println("\t CAUSES (message):");
        AnalyticsMessage amsg=(AnalyticsMessage)msg;
        for (Iterator iterator2=amsg.getCauses().iterator(); iterator2.hasNext(); ) {
          Cause c=(Cause)iterator2.next();
          System.out.println("\t\t [" + c.getClass().getSimpleName() + "]"+ c);
        }
      }
 else       if (msg instanceof AnalyticsRangeCheckMessage) {
        System.out.println("\t CAUSES (range):");
        AnalyticsRangeCheckMessage amsg=(AnalyticsRangeCheckMessage)msg;
        for (Iterator iterator2=amsg.getCauses().iterator(); iterator2.hasNext(); ) {
          Cause c=(Cause)iterator2.next();
          System.out.println("\t\t" + c);
        }
      }
    }
    msgs=result.getBySeverity(AnalyticsMessageBase.Severity.NOTE);
    for (Iterator iterator=msgs.iterator(); iterator.hasNext(); ) {
      AnalyticsMessageBase msg=(AnalyticsMessageBase)iterator.next();
      System.out.println("NOTE: " + msg.getMessage());
      System.out.println("\t" + msg.getFaulty());
    }
    Collection<AnalyticsClass> classes=result.getAnalyticsData().getAllClasses();
    for (Iterator iterator=classes.iterator(); iterator.hasNext(); ) {
      AnalyticsClass c=(AnalyticsClass)iterator.next();
      Collection<AnalyticsRule> cr=result.getAnalyticsData().getRulesByClassId(c.getId());
      System.err.println("Class rules:" + cr);
      Set<Field> flds=c.getFields();
      for (Iterator iterator2=flds.iterator(); iterator2.hasNext(); ) {
        Field f=(Field)iterator2.next();
        cr=result.getAnalyticsData().getRulesByFieldId(f.getId());
        System.err.println("Field rules: " + cr);
      }
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
