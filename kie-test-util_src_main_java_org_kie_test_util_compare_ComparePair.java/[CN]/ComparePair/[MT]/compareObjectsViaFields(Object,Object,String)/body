{
  if (orig == copy) {
    return;
  }
 else   if (copy == null) {
    fail("Copy " + orig.getClass().getSimpleName() + " is null!");
  }
 else   if (orig == null) {
    fail("Original " + copy.getClass().getSimpleName() + " is null!");
  }
  Class<?> origClass=orig.getClass();
  String origClassName=origClass.getSimpleName();
  Class<?> copyClass=copy.getClass();
  assertEquals("copy is an instance of " + copyClass.getSimpleName() + " ( instead of "+ origClassName+ ")",origClass,copy.getClass());
  for (  Field field : orig.getClass().getDeclaredFields()) {
    try {
      field.setAccessible(true);
      Object origFieldVal=field.get(orig);
      Object copyFieldVal=field.get(copy);
      String fieldName=field.getName();
      boolean skip=false;
      for (      String skipFieldName : skipFields) {
        if (skipFieldName.matches(fieldName)) {
          skip=true;
          break;
        }
      }
      if (skip) {
        continue;
      }
      boolean nullFound=false;
      if (origFieldVal == null || copyFieldVal == null) {
        nullFound=true;
        for (        String nullFieldName : skipFields) {
          String actualNullFieldName=nullFieldName;
          if (nullFieldName.contains(".")) {
            int dotIndex=nullFieldName.indexOf(".");
            if (nullFieldName.substring(0,dotIndex).equals(origClassName)) {
              actualNullFieldName=nullFieldName.substring(dotIndex + 1);
            }
 else {
              continue;
            }
          }
          if (nullFound && actualNullFieldName.matches(fieldName)) {
            nullFound=false;
          }
        }
      }
      String objectFieldName=origClass.getSimpleName() + "." + field.getName();
      assertFalse(objectFieldName + "!",nullFound);
      if (copyFieldVal != origFieldVal) {
        compareValues(origFieldVal,copyFieldVal,objectFieldName,skipFields);
      }
    }
 catch (    Exception e) {
      throw new RuntimeException("Unable to access " + field.getName() + " when testing "+ origClass.getSimpleName()+ ".",e);
    }
  }
}
