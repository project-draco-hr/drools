{
  final InternalKnowledgeBase ruleBase=context.getKnowledgeBase();
  ruleBase.lock();
  try {
    InternalWorkingMemory[] wms=context.getWorkingMemories();
    NodeFactory nfactory=context.getComponentFactory().getNodeFactoryService();
    EntryPointNode epn=ruleBase.getRete().getEntryPointNode(context.getCurrentEntryPoint());
    if (epn == null) {
      epn=nfactory.buildEntryPointNode(context.getNextId(),ruleBase.getRete(),context);
      epn.attach(context);
    }
    ObjectTypeNode otn=nfactory.buildObjectTypeNode(context.getNextId(),epn,objectType,context);
    long expirationOffset=getExpiratioOffsetForType(context,objectType);
    otn.setExpirationOffset(expirationOffset);
    otn.attach(context);
    return otn;
  }
  finally {
    ruleBase.unlock();
  }
}
