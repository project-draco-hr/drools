{
  final ForallDescr forallDescr=(ForallDescr)descr;
  final PatternBuilder patternBuilder=(PatternBuilder)context.getDialect().getBuilder(PatternDescr.class);
  final Pattern basePattern=(Pattern)patternBuilder.build(context,forallDescr.getBasePattern());
  if (basePattern == null) {
    return null;
  }
  final Forall forall=new Forall(basePattern);
  context.getBuildStack().push(forall);
  for (final Iterator it=forallDescr.getRemainingPatterns().iterator(); it.hasNext(); ) {
    final Pattern anotherPattern=(Pattern)patternBuilder.build(context,(PatternDescr)it.next());
    forall.addRemainingPattern(anotherPattern);
  }
  if (forallDescr.getDescrs().size() == 1) {
    PatternDescr p=(PatternDescr)forallDescr.getDescrs().get(0);
    if (p.getConstraint().getDescrs().isEmpty()) {
      forall.setEmptyBetaConstraints(true);
    }
  }
  context.getBuildStack().pop();
  return forall;
}
