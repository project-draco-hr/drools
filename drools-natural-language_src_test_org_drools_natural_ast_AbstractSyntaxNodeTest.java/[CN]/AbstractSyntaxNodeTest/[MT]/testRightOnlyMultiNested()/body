{
  RightOnlyNode r1=new RightOnlyNode("some method","f( ${1}, ${2})",2);
  RightOnlyNode r2=new RightOnlyNode("another method","method(${right})",1);
  LiteralNode lit1=new LiteralNode("arg1");
  LiteralNode lit2=new LiteralNode("arg2");
  r1.next=lit1;
  lit1.prev=r1;
  lit1.next=r2;
  r2.prev=lit1;
  r2.next=lit2;
  lit2.prev=r2;
  assertFalse(r1.isAllSatisfied(RightOnlyNode.class));
  r1.processLeftToRight(RightOnlyNode.class);
  assertFalse(r1.isAllSatisfied(RightOnlyNode.class));
  assertTrue(r2.isSatisfied());
  assertFalse(r1.isSatisfied());
  assertEquals(r2,r1.next);
  List r1Args=r1.getArguments();
  assertEquals(1,r1Args.size());
  assertEquals(lit1,r1Args.get(0));
  assertEquals(1,r2.getArguments().size());
  assertEquals(lit2,r2.getArguments().get(0));
  r1.processLeftToRight(RightOnlyNode.class);
  assertTrue(r1.isAllSatisfied(RightOnlyNode.class));
  assertEquals(r1,lit1.findStartNode());
}
