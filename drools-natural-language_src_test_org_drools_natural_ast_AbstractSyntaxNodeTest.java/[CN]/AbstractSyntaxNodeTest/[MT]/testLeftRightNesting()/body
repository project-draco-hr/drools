{
  LiteralNode arg1=new LiteralNode("arg1");
  LeftRightNode left1=new LeftRightNode("left1","left1",1,0);
  LeftRightNode leftRight=new LeftRightNode("leftRight","leftRight",1,1);
  LiteralNode arg2=new LiteralNode("arg2");
  arg1.next=left1;
  left1.prev=arg1;
  left1.next=leftRight;
  leftRight.prev=left1;
  leftRight.next=arg2;
  arg2.prev=leftRight;
  assertFalse(arg1.isAllSatisfied(LeftRightNode.class));
  arg1.processLeftToRight(LeftRightNode.class);
  assertTrue(arg1.isAllSatisfied(LeftRightNode.class));
  assertEquals(null,arg1.next);
  assertEquals(arg1,left1.getArgumentsLeft().get(0));
  assertEquals(left1,leftRight.getArgumentsLeft().get(0));
  assertEquals(arg2,leftRight.getArgumentsRight().get(0));
  assertEquals(leftRight,arg1.findStartNode());
  assertEquals(null,leftRight.parent);
}
