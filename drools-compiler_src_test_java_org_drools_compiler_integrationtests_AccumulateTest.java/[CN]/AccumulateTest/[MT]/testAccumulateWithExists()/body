{
  String str="import " + Course.class.getCanonicalName() + "\n"+ "import "+ Lecture.class.getCanonicalName()+ "\n"+ "global java.util.List list; \n"+ "rule \"minimumWorkingDays\"\n"+ "    when\n"+ "        $course : Course($minWorkingDaySize : minWorkingDaySize)\n"+ "        $dayCount : Number(intValue <= $minWorkingDaySize) from accumulate(\n"+ "            $day : Integer()\n"+ "            and exists Lecture(course == $course, day == $day),\n"+ "            count($day)\n"+ "        )\n"+ "        // An uninitialized schedule should have no constraints broken\n"+ "        exists Lecture(course == $course)\n"+ "    then\n"+ "       list.add( $course );\n"+ "       list.add( $dayCount );\n"+ "end\n";
  KieSession ksession=getKieSessionFromContentStrings(str);
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  Integer day1=1;
  Integer day2=2;
  Integer day3=3;
  Course c=new Course(2);
  Lecture l1=new Lecture(c,day1);
  Lecture l2=new Lecture(c,day2);
  ksession.insert(day1);
  ksession.insert(day2);
  ksession.insert(day3);
  ksession.insert(c);
  ksession.insert(l1);
  ksession.insert(l2);
  assertEquals(1,ksession.fireAllRules());
  assertEquals(2,list.size());
  assertEquals(c,list.get(0));
  assertEquals(2l,list.get(1));
}
