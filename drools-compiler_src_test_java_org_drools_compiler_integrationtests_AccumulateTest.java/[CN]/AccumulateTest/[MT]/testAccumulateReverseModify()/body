{
  KnowledgeBase kbase=loadKnowledgeBase("test_AccumulateReverseModify.drl");
  StatefulKnowledgeSession wm=createKnowledgeSession(kbase);
  final List<?> results=new ArrayList<Object>();
  wm.setGlobal("results",results);
  final Cheese[] cheese=new Cheese[]{new Cheese("stilton",10),new Cheese("stilton",2),new Cheese("stilton",5),new Cheese("brie",15),new Cheese("brie",16),new Cheese("provolone",8)};
  final Person bob=new Person("Bob","stilton");
  final org.kie.api.runtime.rule.FactHandle[] cheeseHandles=new org.kie.api.runtime.rule.FactHandle[cheese.length];
  for (int i=0; i < cheese.length; i++) {
    cheeseHandles[i]=wm.insert(cheese[i]);
  }
  final org.kie.api.runtime.rule.FactHandle bobHandle=wm.insert(bob);
  wm.fireAllRules();
  assertEquals(0,results.size());
  final int index=1;
  cheese[index].setPrice(9);
  wm.update(cheeseHandles[index],cheese[index]);
  wm.fireAllRules();
  assertEquals(1,results.size());
  assertEquals(24,((Cheesery)results.get(results.size() - 1)).getTotalAmount());
  bob.setLikes("brie");
  wm.update(bobHandle,bob);
  cheese[3].setPrice(20);
  wm.update(cheeseHandles[3],cheese[3]);
  wm.fireAllRules();
  assertEquals(2,results.size());
  assertEquals(36,((Cheesery)results.get(results.size() - 1)).getTotalAmount());
  wm.retract(cheeseHandles[3]);
  wm.fireAllRules();
  assertEquals(2,results.size());
}
