{
  String str="import java.util.*;\n" + "import " + MyPerson.class.getName() + ";\n"+ "global java.util.Map map;\n"+ "dialect \"mvel\"\n"+ "\n"+ "rule \"Test\"\n"+ "    when\n"+ "        $total : Number()\n"+ "             from accumulate( MyPerson( $age: age ),\n"+ "                              sum( $age ) )\n"+ "\n"+ "        $p: MyPerson();\n"+ "        $k: List( size > 0 ) from accumulate( MyPerson($kids: kids) from $p.kids,\n"+ "            init( ArrayList myList = new ArrayList(); ),\n"+ "            action( myList.addAll($kids); ),\n"+ "            reverse( myList.removeAll($kids); ),\n"+ "            result( myList )\n"+ "        )\n"+ "\n"+ "        $r : MyPerson(name == \"Jos Jr Jr\")\n"+ "        or\n"+ "        $r : MyPerson(name == \"Jos\")\n"+ "    then\n"+ "        Map pMap = map.get( $r.getName() );\n"+ "        pMap.put( 'total', $total );\n"+ "        pMap.put( 'p', $p );\n"+ "        pMap.put( 'k', $k );\n"+ "        pMap.put( 'r', $r );\n"+ "        map.put('count', ((Integer)map.get('count')) + 1 );\n "+ "end\n";
  KieSession ksession=getKieSessionFromContentStrings(str);
  List list=new ArrayList();
  Map map=new HashMap();
  ksession.setGlobal("map",map);
  map.put("Jos Jr Jr",new HashMap());
  map.put("Jos",new HashMap());
  map.put("count",0);
  MyPerson josJr=new MyPerson("Jos Jr Jr",20,Arrays.asList(new MyPerson("John Jr 1st",10,Arrays.asList(new MyPerson("John Jr Jrx",4,Collections.<MyPerson>emptyList()))),new MyPerson("John Jr 2nd",8,Collections.<MyPerson>emptyList())));
  MyPerson jos=new MyPerson("Jos",30,Arrays.asList(new MyPerson("Jeff Jr 1st",10,Collections.<MyPerson>emptyList()),new MyPerson("Jeff Jr 2nd",8,Collections.<MyPerson>emptyList())));
  ksession.execute(new InsertElementsCommand(Arrays.asList(new Object[]{josJr,jos})));
  ksession.fireAllRules();
  System.out.println(map);
  assertEquals(2,map.get("count"));
  Map pMap=(Map)map.get("Jos Jr Jr");
  assertEquals(50.0,pMap.get("total"));
  List kids=(List)pMap.get("k");
  assertEquals(1,kids.size());
  assertEquals("John Jr Jrx",((MyPerson)kids.get(0)).getName());
  assertEquals(josJr,pMap.get("p"));
  assertEquals(josJr,pMap.get("r"));
  pMap=(Map)map.get("Jos");
  assertEquals(50.0,pMap.get("total"));
  kids=(List)pMap.get("k");
  assertEquals(1,kids.size());
  assertEquals("John Jr Jrx",((MyPerson)kids.get(0)).getName());
  assertEquals(josJr,pMap.get("p"));
  assertEquals(jos,pMap.get("r"));
}
