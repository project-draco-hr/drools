{
  KieSession wm=getKieSessionFromResources("test_AccumulateWithFromChaining.drl");
  final List<?> results=new ArrayList<Object>();
  wm.setGlobal("results",results);
  final Cheese[] cheese=new Cheese[]{new Cheese("stilton",8),new Cheese("stilton",10),new Cheese("stilton",9),new Cheese("brie",4),new Cheese("brie",1),new Cheese("provolone",8)};
  Cheesery cheesery=new Cheesery();
  for (int i=0; i < cheese.length; i++) {
    cheesery.addCheese(cheese[i]);
  }
  FactHandle cheeseryHandle=wm.insert(cheesery);
  final Person bob=new Person("Bob","stilton");
  final FactHandle bobHandle=wm.insert(bob);
  wm.fireAllRules();
  assertEquals(1,results.size());
  assertEquals(3,((List)results.get(results.size() - 1)).size());
  final int index=1;
  cheese[index].setType("brie");
  wm.update(cheeseryHandle,cheesery);
  wm.fireAllRules();
  assertEquals(1,results.size());
  System.out.println(results);
  bob.setLikes("brie");
  wm.update(bobHandle,bob);
  wm.fireAllRules();
  assertEquals(2,results.size());
  assertEquals(3,((List)results.get(results.size() - 1)).size());
  cheesery.getCheeses().remove(cheese[3]);
  wm.update(cheeseryHandle,cheesery);
  wm.fireAllRules();
  assertEquals(2,results.size());
}
