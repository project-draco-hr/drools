{
  final AccumulateDescr accumDescr=(AccumulateDescr)descr;
  if (!accumDescr.hasValidInput()) {
    return null;
  }
  BaseDescr input=accumDescr.getInput();
  if (input instanceof AndDescr && ((AndDescr)input).getDescrs().size() == 1) {
    input=((AndDescr)input).getDescrs().get(0);
  }
  final RuleConditionBuilder builder=(RuleConditionBuilder)context.getDialect().getBuilder(input.getClass());
  final RuleConditionElement source=builder.build(context,input);
  if (source == null) {
    return null;
  }
  final boolean readLocalsFromTuple=PackageBuilderUtil.isReadLocalsFromTuple(accumDescr,source);
  Map<String,Declaration> declsInScope=context.getDeclarationResolver().getDeclarations(context.getRule());
  Map<String,Class<?>> declCls=DeclarationScopeResolver.getDeclarationClasses(declsInScope);
  Accumulate accumulate;
  if (accumDescr.isExternalFunction()) {
    accumulate=buildExternalFunctionCall(context,accumDescr,source,declsInScope,declCls,readLocalsFromTuple);
  }
 else {
    accumulate=buildInlineAccumulate(context,accumDescr,source,declsInScope,declCls,readLocalsFromTuple);
  }
  return accumulate;
}
