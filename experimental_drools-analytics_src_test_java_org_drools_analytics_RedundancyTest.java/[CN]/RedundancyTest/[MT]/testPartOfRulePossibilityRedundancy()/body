{
  StatelessSession session=getStatelessSession(this.getClass().getResourceAsStream("Redundancy.drl"));
  session.setAgendaFilter(new RuleNameMatchesAgendaFilter("Find part of redundant RulePossibility combination"));
  Collection<Object> data=new ArrayList<Object>();
  AnalysisResultNormal analysisResult=new AnalysisResultNormal();
  session.setGlobal("result",analysisResult);
  String ruleName1="Rule 1";
  String ruleName2="Rule 2";
  AnalyticsRule r1=new AnalyticsRule();
  r1.setRuleName(ruleName1);
  AnalyticsRule r2=new AnalyticsRule();
  r2.setRuleName(ruleName2);
  PatternPossibility pp1=new PatternPossibility();
  pp1.setRuleName(ruleName1);
  PatternPossibility pp2=new PatternPossibility();
  pp2.setRuleName(ruleName2);
  RulePossibility rp1=new RulePossibility();
  rp1.setRuleId(r1.getId());
  rp1.setRuleName(ruleName1);
  rp1.add(pp1);
  RulePossibility rp2=new RulePossibility();
  rp2.setRuleId(r2.getId());
  rp2.setRuleName(ruleName2);
  rp2.add(pp2);
  Redundancy redundancy1=new Redundancy(pp1,pp2);
  Redundancy redundancy2=new Redundancy(r1,r2);
  data.add(r1);
  data.add(r2);
  data.add(rp1);
  data.add(rp2);
  data.add(pp1);
  data.add(pp2);
  data.add(redundancy1);
  data.add(redundancy2);
  StatelessSessionResult sessionResult=session.executeWithResults(data);
  Map<String,Set<Redundancy>> map=new HashMap<String,Set<Redundancy>>();
  Iterator iter=sessionResult.iterateObjects();
  while (iter.hasNext()) {
    Object o=(Object)iter.next();
    if (o instanceof PartialRedundancy) {
      PartialRedundancy pr=(PartialRedundancy)o;
      String key=pr.getLeft().getRuleName() + ":" + pr.getRight().getRuleName();
      if (map.containsKey(key)) {
        Set<Redundancy> set=map.get(key);
        set.add(pr.getRedundancy());
      }
 else {
        Set<Redundancy> set=new HashSet<Redundancy>();
        set.add(pr.getRedundancy());
        map.put(key,set);
      }
    }
  }
  assertTrue(RedundancyTest.mapContains(map,ruleName1 + ":" + ruleName2,redundancy1));
  if (!map.isEmpty()) {
    fail("More redundancies than was expected.");
  }
}
