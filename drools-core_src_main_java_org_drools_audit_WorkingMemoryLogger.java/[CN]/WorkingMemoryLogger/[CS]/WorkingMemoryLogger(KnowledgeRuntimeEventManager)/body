{
  if (session instanceof StatefulKnowledgeSessionImpl) {
    WorkingMemoryEventManager eventManager=((StatefulKnowledgeSessionImpl)session).session;
    eventManager.addEventListener((WorkingMemoryEventListener)this);
    eventManager.addEventListener((AgendaEventListener)this);
    ((StatefulKnowledgeSessionImpl)session).session.addEventListener((ProcessEventListener)this);
    eventManager.addEventListener((RuleBaseEventListener)this);
  }
 else   if (session instanceof StatelessKnowledgeSessionImpl) {
    ((StatelessKnowledgeSessionImpl)session).workingMemoryEventSupport.addEventListener(this);
    ((StatelessKnowledgeSessionImpl)session).agendaEventSupport.addEventListener(this);
    ((StatelessKnowledgeSessionImpl)session).processEventSupport.addEventListener(this);
    ((StatelessKnowledgeSessionImpl)session).getRuleBase().addEventListener(this);
  }
 else   if (session instanceof CommandBasedStatefulKnowledgeSession) {
    ReteooWorkingMemory eventManager=((StatefulKnowledgeSessionImpl)((KnowledgeCommandContext)((CommandBasedStatefulKnowledgeSession)session).getCommandService().getContext()).getStatefulKnowledgesession()).session;
    eventManager.addEventListener((WorkingMemoryEventListener)this);
    eventManager.addEventListener((AgendaEventListener)this);
    eventManager.addEventListener((ProcessEventListener)this);
    eventManager.addEventListener((RuleBaseEventListener)this);
  }
 else {
    throw new IllegalArgumentException("Not supported session in logger: " + session.getClass());
  }
}
