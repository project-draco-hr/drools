{
  final PropagationContext pcontext=new PropagationContextImpl(0,PropagationContext.INSERTION,null,null,null);
  BuildContext context=new BuildContext(ruleBase,ruleBase.getReteooBuilder().getIdGenerator());
  final EntryPointNode entryPoint=new EntryPointNode(-1,ruleBase.getRete(),context);
  entryPoint.attach(context);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(0,entryPoint,new ClassObjectType(Object.class),context);
  objectTypeNode.attach(context);
  final LeftInputAdapterNode liaNode=new LeftInputAdapterNode(23,objectTypeNode,buildContext);
  liaNode.attach(context);
  final AbstractWorkingMemory workingMemory=new AbstractWorkingMemory(1,(ReteooRuleBase)RuleBaseFactory.newRuleBase());
  final MockLeftTupleSink sink=new MockLeftTupleSink();
  liaNode.addTupleSink(sink);
  final Object string1="cheese";
  final DefaultFactHandle f0=(DefaultFactHandle)workingMemory.insert(string1);
  liaNode.assertObject(f0,pcontext,workingMemory);
  final List asserted=sink.getAsserted();
  assertLength(1,asserted);
  final Tuple tuple0=(Tuple)((Object[])asserted.get(0))[0];
  assertSame(string1,workingMemory.getObject(tuple0.get(0)));
}
