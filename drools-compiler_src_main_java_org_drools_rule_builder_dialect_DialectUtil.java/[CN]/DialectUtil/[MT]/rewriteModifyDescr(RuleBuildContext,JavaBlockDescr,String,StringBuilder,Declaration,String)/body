{
  boolean isInternalFact=declr != null && !declr.isInternalFact();
  boolean isPropSpecific=false;
  List<String> settableProperties=null;
  if (isInternalFact) {
    Class<?> typeClass=((ClassObjectType)declr.getPattern().getObjectType()).getClassType();
    TypeDeclaration typeDeclaration=context.getPackageBuilder().getTypeDeclaration(typeClass);
    if (typeDeclaration != null && typeDeclaration.isPropSpecific()) {
      isPropSpecific=true;
      typeDeclaration.setTypeClass(typeClass);
      settableProperties=typeDeclaration.getSettableProperties();
    }
  }
  long modificationMask=isPropSpecific ? 0 : Long.MAX_VALUE;
  int end=originalBlock.indexOf("{");
  if (end == -1) {
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),context.getRuleDescr(),null,"Block missing after modify" + d.getTargetExpression() + " ?\n"));
    return;
  }
  addLineBreaks(consequence,originalBlock.substring(0,end));
  int start=end + 1;
  for (  String exprStr : ((JavaModifyBlockDescr)d).getExpressions()) {
    end=originalBlock.indexOf(exprStr,start);
    addLineBreaks(consequence,originalBlock.substring(start,end));
    consequence.append(obj + ".");
    consequence.append(exprStr);
    consequence.append("; ");
    start=end + exprStr.length();
    if (isPropSpecific) {
      int endMethodName=exprStr.indexOf('(');
      String methodName=exprStr.substring(0,endMethodName).trim();
      String propertyName=setter2property(methodName);
      if (propertyName != null) {
        int pos=settableProperties.indexOf(propertyName);
        modificationMask=BitMaskUtil.set(modificationMask,pos);
      }
 else {
        modificationMask=Long.MAX_VALUE;
      }
    }
  }
  addLineBreaks(consequence,originalBlock.substring(end));
  consequence.append("drools.update( ").append(obj).append(isInternalFact ? "__Handle__, " : "__Handle2__, ").append(modificationMask).append("L ); }");
}
