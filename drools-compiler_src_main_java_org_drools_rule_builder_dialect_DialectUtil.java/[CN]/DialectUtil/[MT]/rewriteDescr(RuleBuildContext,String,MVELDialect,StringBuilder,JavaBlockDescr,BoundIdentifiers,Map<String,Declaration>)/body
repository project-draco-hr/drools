{
  if (d.getEnd() == 0) {
    return false;
  }
  boolean typeSafety=context.isTypesafe();
  context.setTypesafe(false);
  Map<String,Class<?>> localTypes=d.getInputs();
  if (d.getInScopeLocalVars() != null && !d.getInScopeLocalVars().isEmpty()) {
    localTypes=new HashMap<String,Class<?>>(d.getInputs() != null ? d.getInputs() : Collections.EMPTY_MAP);
    for (    JavaLocalDeclarationDescr local : d.getInScopeLocalVars()) {
      try {
        Class<?> type=context.getDialect("java").getPackageRegistry().getTypeResolver().resolveType(local.getType());
        for (        IdentifierDescr id : local.getIdentifiers()) {
          localTypes.put(id.getIdentifier(),type);
        }
      }
 catch (      ClassNotFoundException e) {
        context.addError(new DescrBuildError(context.getRuleDescr(),context.getParentDescr(),null,"Unable to resolve type " + local.getType() + ":\n"+ e.getMessage()));
      }
    }
  }
  MVELAnalysisResult mvelAnalysis=(MVELAnalysisResult)mvel.analyzeBlock(context,context.getRuleDescr(),mvel.getInterceptors(),d.getTargetExpression(),bindings,localTypes,"drools",KnowledgeHelper.class);
  context.setTypesafe(typeSafety);
  if (mvelAnalysis == null) {
    return false;
  }
  Class ret=mvelAnalysis.getReturnType();
  if (ret == null) {
    context.addError(new DescrBuildError(context.getParentDescr(),context.getRuleDescr(),originalCode,"Unable to determine the resulting type of the expression: " + d.getTargetExpression() + "\n"));
    return false;
  }
  String retString=ClassUtils.canonicalName(ret);
  String declrString;
  if (d.getTargetExpression().charAt(0) == '(') {
    declrString=d.getTargetExpression().substring(1,d.getTargetExpression().length() - 1).trim();
  }
 else {
    declrString=d.getTargetExpression();
  }
  String obj=declrString;
  Declaration declr=decls.get(declrString);
  consequence.append("{ ");
  if (declr == null) {
    obj="__obj__";
    consequence.append(retString);
    consequence.append(" ");
    consequence.append(obj);
    consequence.append(" = ");
    consequence.append(d.getTargetExpression());
    consequence.append("; ");
  }
  if (declr == null || declr.isInternalFact()) {
    consequence.append("org.drools.FactHandle ");
    consequence.append(obj);
    consequence.append("__Handle2__ = drools.getFactHandle(");
    consequence.append(obj);
    consequence.append(");");
  }
  String originalBlock=originalCode.substring(d.getStart() - 1,d.getEnd());
  if (d instanceof JavaModifyBlockDescr) {
    rewriteModifyDescr(context,d,originalBlock,consequence,declr,obj);
  }
 else   if (d instanceof JavaUpdateBlockDescr) {
    rewriteUpdateDescr(context,d,originalBlock,consequence,declr,obj);
  }
 else   if (d instanceof JavaRetractBlockDescr) {
    rewriteRetractDescr(context,d,originalBlock,consequence,declr,obj);
  }
  return declr != null;
}
