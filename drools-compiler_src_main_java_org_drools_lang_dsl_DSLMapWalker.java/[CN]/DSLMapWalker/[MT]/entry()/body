{
  entry_stack.push(new entry_scope());
  DSLMappingEntry mappingEntry=null;
  ((entry_scope)entry_stack.peek()).retval=new AntlrDSLMappingEntry();
  ((entry_scope)entry_stack.peek()).variables=new HashMap();
  ((entry_scope)entry_stack.peek()).keybuffer=new StringBuffer();
  ((entry_scope)entry_stack.peek()).valuebuffer=new StringBuffer();
  ((entry_scope)entry_stack.peek()).sentencebuffer=new StringBuffer();
  try {
{
      match(input,VT_ENTRY,FOLLOW_VT_ENTRY_in_entry119);
      match(input,Token.DOWN,null);
      pushFollow(FOLLOW_scope_section_in_entry121);
      scope_section();
      _fsp--;
      int alt3=2;
      int LA3_0=input.LA(1);
      if ((LA3_0 == VT_META)) {
        alt3=1;
      }
switch (alt3) {
case 1:
{
          pushFollow(FOLLOW_meta_section_in_entry123);
          meta_section();
          _fsp--;
        }
      break;
  }
  pushFollow(FOLLOW_key_section_in_entry126);
  key_section();
  _fsp--;
  ((entry_scope)entry_stack.peek()).retval.variables=((entry_scope)entry_stack.peek()).variables;
  ((entry_scope)entry_stack.peek()).retval.setMappingKey(((entry_scope)entry_stack.peek()).keybuffer.toString());
  ((entry_scope)entry_stack.peek()).retval.setSentence(((entry_scope)entry_stack.peek()).sentencebuffer.toString());
  pushFollow(FOLLOW_value_section_in_entry132);
  value_section();
  _fsp--;
  match(input,Token.UP,null);
  ((entry_scope)entry_stack.peek()).retval.setMappingValue(((entry_scope)entry_stack.peek()).valuebuffer.toString());
  mappingEntry=((entry_scope)entry_stack.peek()).retval;
  ((mapping_file_scope)mapping_file_stack.peek()).retval.addEntry(mappingEntry);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
entry_stack.pop();
}
return mappingEntry;
}
