{
  final int EOL_StartIndex=this.input.index();
  try {
    final int type=RuleParserLexer.EOL;
    final int start=getCharIndex();
    final int line=getLine();
    final int charPosition=getCharPositionInLine();
    final int channel=Token.DEFAULT_CHANNEL;
    if (this.backtracking > 0 && alreadyParsedRule(this.input,50)) {
      return;
    }
{
      int alt2=3;
      final int LA2_0=this.input.LA(1);
      if (LA2_0 == '\r') {
        final int LA2_1=this.input.LA(2);
        if (LA2_1 == '\n') {
          alt2=1;
        }
 else {
          alt2=2;
        }
      }
 else       if (LA2_0 == '\n') {
        alt2=3;
      }
 else {
        if (this.backtracking > 0) {
          this.failed=true;
          return;
        }
        final NoViableAltException nvae=new NoViableAltException("1024:17: ( ( \'\\r\\n\' )=> \'\\r\\n\' | \'\\r\' | \'\\n\' )",2,0,this.input);
        throw nvae;
      }
switch (alt2) {
case 1:
{
          match("\r\n");
          if (this.failed) {
            return;
          }
        }
      break;
case 2:
{
      match('\r');
      if (this.failed) {
        return;
      }
    }
  break;
case 3:
{
  match('\n');
  if (this.failed) {
    return;
  }
}
break;
}
}
if (this.token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (this.backtracking > 0) {
memoize(this.input,50,EOL_StartIndex);
}
}
}
