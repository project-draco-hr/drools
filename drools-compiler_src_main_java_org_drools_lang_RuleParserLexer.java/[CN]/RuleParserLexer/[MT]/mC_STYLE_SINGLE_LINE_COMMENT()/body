{
  int type=C_STYLE_SINGLE_LINE_COMMENT;
  int start=getCharIndex();
  int line=getLine();
  int charPosition=getCharPositionInLine();
  int channel=Token.DEFAULT_CHANNEL;
{
    match("//");
    if (failed)     return;
    loop14:     do {
      int alt14=2;
      int LA14_0=input.LA(1);
      if (LA14_0 == '\r') {
        alt14=2;
      }
 else       if (LA14_0 == '\n') {
        alt14=2;
      }
 else       if ((LA14_0 >= '\u0000' && LA14_0 <= '\t') || (LA14_0 >= '\u000B' && LA14_0 <= '\f') || (LA14_0 >= '\u000E' && LA14_0 <= '\uFFFE')) {
        alt14=1;
      }
switch (alt14) {
case 1:
{
          matchAny();
          if (failed)           return;
        }
      break;
default :
    break loop14;
}
}
 while (true);
mEOL();
if (failed) return;
if (backtracking == 0) {
channel=99;
}
}
if (token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
