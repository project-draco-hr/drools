{
  int ID_StartIndex=input.index();
  try {
    int type=ID;
    int start=getCharIndex();
    int line=getLine();
    int charPosition=getCharPositionInLine();
    int channel=Token.DEFAULT_CHANNEL;
    if (backtracking > 0 && alreadyParsedRule(input,58)) {
      return;
    }
{
      if (input.LA(1) == '$' || (input.LA(1) >= 'A' && input.LA(1) <= 'Z') || input.LA(1) == '_' || (input.LA(1) >= 'a' && input.LA(1) <= 'z') || (input.LA(1) >= '\u00C0' && input.LA(1) <= '\u00FF')) {
        input.consume();
        failed=false;
      }
 else {
        if (backtracking > 0) {
          failed=true;
          return;
        }
        MismatchedSetException mse=new MismatchedSetException(null,input);
        recover(mse);
        throw mse;
      }
      loop12:       do {
        int alt12=2;
        int LA12_0=input.LA(1);
        if ((LA12_0 >= '0' && LA12_0 <= '9') || (LA12_0 >= 'A' && LA12_0 <= 'Z') || LA12_0 == '_' || (LA12_0 >= 'a' && LA12_0 <= 'z') || (LA12_0 >= '\u00C0' && LA12_0 <= '\u00FF')) {
          alt12=1;
        }
switch (alt12) {
case 1:
{
            if ((input.LA(1) >= '0' && input.LA(1) <= '9') || (input.LA(1) >= 'A' && input.LA(1) <= 'Z') || input.LA(1) == '_' || (input.LA(1) >= 'a' && input.LA(1) <= 'z') || (input.LA(1) >= '\u00C0' && input.LA(1) <= '\u00FF')) {
              input.consume();
              failed=false;
            }
 else {
              if (backtracking > 0) {
                failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      break loop12;
  }
}
 while (true);
}
if (token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (backtracking > 0) {
memoize(input,58,ID_StartIndex);
}
}
}
