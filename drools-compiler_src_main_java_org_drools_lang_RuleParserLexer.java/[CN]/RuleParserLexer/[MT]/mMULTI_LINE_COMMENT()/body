{
  final int MULTI_LINE_COMMENT_StartIndex=this.input.index();
  try {
    final int type=RuleParserLexer.MULTI_LINE_COMMENT;
    final int start=getCharIndex();
    final int line=getLine();
    final int charPosition=getCharPositionInLine();
    int channel=Token.DEFAULT_CHANNEL;
    if (this.backtracking > 0 && alreadyParsedRule(this.input,58)) {
      return;
    }
{
      match("/*");
      if (this.failed) {
        return;
      }
      loop15:       do {
        int alt15=2;
        final int LA15_0=this.input.LA(1);
        if (LA15_0 == '*') {
          final int LA15_1=this.input.LA(2);
          if (LA15_1 == '/') {
            alt15=2;
          }
 else           if ((LA15_1 >= '\u0000' && LA15_1 <= '.') || (LA15_1 >= '0' && LA15_1 <= '\uFFFE')) {
            alt15=1;
          }
        }
 else         if ((LA15_0 >= '\u0000' && LA15_0 <= ')') || (LA15_0 >= '+' && LA15_0 <= '\uFFFE')) {
          alt15=1;
        }
switch (alt15) {
case 1:
{
            matchAny();
            if (this.failed) {
              return;
            }
          }
        break;
default :
      break loop15;
  }
}
 while (true);
match("*/");
if (this.failed) {
  return;
}
if (this.backtracking == 0) {
  channel=99;
}
}
if (this.token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (this.backtracking > 0) {
memoize(this.input,58,MULTI_LINE_COMMENT_StartIndex);
}
}
}
