{
  final int SH_STYLE_SINGLE_LINE_COMMENT_StartIndex=this.input.index();
  try {
    final int type=RuleParserLexer.SH_STYLE_SINGLE_LINE_COMMENT;
    final int start=getCharIndex();
    final int line=getLine();
    final int charPosition=getCharPositionInLine();
    int channel=Token.DEFAULT_CHANNEL;
    if (this.backtracking > 0 && alreadyParsedRule(this.input,56)) {
      return;
    }
{
      match('#');
      if (this.failed) {
        return;
      }
      loop13:       do {
        int alt13=2;
        final int LA13_0=this.input.LA(1);
        if (LA13_0 == '\r') {
          alt13=2;
        }
 else         if (LA13_0 == '\n') {
          alt13=2;
        }
 else         if ((LA13_0 >= '\u0000' && LA13_0 <= '\t') || (LA13_0 >= '\u000B' && LA13_0 <= '\f') || (LA13_0 >= '\u000E' && LA13_0 <= '\uFFFE')) {
          alt13=1;
        }
switch (alt13) {
case 1:
{
            matchAny();
            if (this.failed) {
              return;
            }
          }
        break;
default :
      break loop13;
  }
}
 while (true);
mEOL();
if (this.failed) {
  return;
}
if (this.backtracking == 0) {
  channel=99;
}
}
if (this.token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (this.backtracking > 0) {
memoize(this.input,56,SH_STYLE_SINGLE_LINE_COMMENT_StartIndex);
}
}
}
