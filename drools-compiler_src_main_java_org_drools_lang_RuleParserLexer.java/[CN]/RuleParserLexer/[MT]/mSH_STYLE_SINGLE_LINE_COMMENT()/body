{
  int SH_STYLE_SINGLE_LINE_COMMENT_StartIndex=input.index();
  try {
    int type=SH_STYLE_SINGLE_LINE_COMMENT;
    int start=getCharIndex();
    int line=getLine();
    int charPosition=getCharPositionInLine();
    int channel=Token.DEFAULT_CHANNEL;
    if (backtracking > 0 && alreadyParsedRule(input,51)) {
      return;
    }
{
      match('#');
      if (failed)       return;
      loop12:       do {
        int alt12=2;
        int LA12_0=input.LA(1);
        if (LA12_0 == '\r') {
          alt12=2;
        }
 else         if (LA12_0 == '\n') {
          alt12=2;
        }
 else         if ((LA12_0 >= '\u0000' && LA12_0 <= '\t') || (LA12_0 >= '\u000B' && LA12_0 <= '\f') || (LA12_0 >= '\u000E' && LA12_0 <= '\uFFFE')) {
          alt12=1;
        }
switch (alt12) {
case 1:
{
            matchAny();
            if (failed)             return;
          }
        break;
default :
      break loop12;
  }
}
 while (true);
mEOL();
if (failed) return;
if (backtracking == 0) {
  channel=99;
}
}
if (token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (backtracking > 0) {
memoize(input,51,SH_STYLE_SINGLE_LINE_COMMENT_StartIndex);
}
}
}
