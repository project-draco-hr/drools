{
  int STRING_StartIndex=input.index();
  try {
    int type=STRING;
    int start=getCharIndex();
    int line=getLine();
    int charPosition=getCharPositionInLine();
    int channel=Token.DEFAULT_CHANNEL;
    if (backtracking > 0 && alreadyParsedRule(input,64)) {
      return;
    }
    int alt11=2;
    int LA11_0=input.LA(1);
    if (LA11_0 == '"') {
      alt11=1;
    }
 else     if (LA11_0 == '\'') {
      alt11=2;
    }
 else {
      if (backtracking > 0) {
        failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("1391:1: STRING : ( ( \'\"\' ( options {greedy=false; } : . )* \'\"\' ) | ( \'\\\'\' ( options {greedy=false; } : . )* \'\\\'\' ) );",11,0,input);
      throw nvae;
    }
switch (alt11) {
case 1:
{
{
          match('"');
          if (failed)           return;
          loop9:           do {
            int alt9=2;
            int LA9_0=input.LA(1);
            if (LA9_0 == '"') {
              alt9=2;
            }
 else             if ((LA9_0 >= '\u0000' && LA9_0 <= '!') || (LA9_0 >= '#' && LA9_0 <= '\uFFFE')) {
              alt9=1;
            }
switch (alt9) {
case 1:
{
                matchAny();
                if (failed)                 return;
              }
            break;
default :
          break loop9;
      }
    }
 while (true);
    match('"');
    if (failed)     return;
  }
}
break;
case 2:
{
{
match('\'');
if (failed) return;
loop10: do {
  int alt10=2;
  int LA10_0=input.LA(1);
  if (LA10_0 == '\'') {
    alt10=2;
  }
 else   if ((LA10_0 >= '\u0000' && LA10_0 <= '&') || (LA10_0 >= '(' && LA10_0 <= '\uFFFE')) {
    alt10=1;
  }
switch (alt10) {
case 1:
{
      matchAny();
      if (failed)       return;
    }
  break;
default :
break loop10;
}
}
 while (true);
match('\'');
if (failed) return;
}
}
break;
}
if (token == null) {
emit(type,line,charPosition,channel,start,getCharIndex() - 1);
}
}
  finally {
if (backtracking > 0) {
memoize(input,64,STRING_StartIndex);
}
}
}
