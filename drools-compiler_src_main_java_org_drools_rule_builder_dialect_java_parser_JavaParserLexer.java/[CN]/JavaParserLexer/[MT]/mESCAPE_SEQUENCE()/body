{
  try {
    int alt24=12;
    int LA24_0=input.LA(1);
    if ((LA24_0 == '\\')) {
switch (input.LA(2)) {
case '\'':
{
          alt24=7;
        }
      break;
case 'u':
{
      alt24=12;
    }
  break;
case 'b':
{
  alt24=1;
}
break;
case '\\':
{
alt24=8;
}
break;
case 'r':
{
alt24=5;
}
break;
case '0':
case '1':
case '2':
case '3':
{
int LA24_7=input.LA(3);
if (((LA24_7 >= '0' && LA24_7 <= '7'))) {
int LA24_14=input.LA(4);
if (((LA24_14 >= '0' && LA24_14 <= '7'))) {
alt24=9;
}
 else {
alt24=10;
}
}
 else {
alt24=11;
}
}
break;
case '\"':
{
alt24=6;
}
break;
case 'f':
{
alt24=4;
}
break;
case 't':
{
alt24=2;
}
break;
case 'n':
{
alt24=3;
}
break;
case '4':
case '5':
case '6':
case '7':
{
int LA24_12=input.LA(3);
if (((LA24_12 >= '0' && LA24_12 <= '7'))) {
alt24=10;
}
 else {
alt24=11;
}
}
break;
default :
NoViableAltException nvae=new NoViableAltException("1145:1: fragment ESCAPE_SEQUENCE : ( '\\\\' 'b' | '\\\\' 't' | '\\\\' 'n' | '\\\\' 'f' | '\\\\' 'r' | '\\\\' '\\\"' | '\\\\' '\\'' | '\\\\' '\\\\' | '\\\\' '0' .. '3' OCTAL_DIGIT OCTAL_DIGIT | '\\\\' OCTAL_DIGIT OCTAL_DIGIT | '\\\\' OCTAL_DIGIT | UNICODE_CHAR );",24,1,input);
throw nvae;
}
}
 else {
NoViableAltException nvae=new NoViableAltException("1145:1: fragment ESCAPE_SEQUENCE : ( '\\\\' 'b' | '\\\\' 't' | '\\\\' 'n' | '\\\\' 'f' | '\\\\' 'r' | '\\\\' '\\\"' | '\\\\' '\\'' | '\\\\' '\\\\' | '\\\\' '0' .. '3' OCTAL_DIGIT OCTAL_DIGIT | '\\\\' OCTAL_DIGIT OCTAL_DIGIT | '\\\\' OCTAL_DIGIT | UNICODE_CHAR );",24,0,input);
throw nvae;
}
switch (alt24) {
case 1:
{
match('\\');
match('b');
}
break;
case 2:
{
match('\\');
match('t');
}
break;
case 3:
{
match('\\');
match('n');
}
break;
case 4:
{
match('\\');
match('f');
}
break;
case 5:
{
match('\\');
match('r');
}
break;
case 6:
{
match('\\');
match('\"');
}
break;
case 7:
{
match('\\');
match('\'');
}
break;
case 8:
{
match('\\');
match('\\');
}
break;
case 9:
{
match('\\');
matchRange('0','3');
mOCTAL_DIGIT();
mOCTAL_DIGIT();
}
break;
case 10:
{
match('\\');
mOCTAL_DIGIT();
mOCTAL_DIGIT();
}
break;
case 11:
{
match('\\');
mOCTAL_DIGIT();
}
break;
case 12:
{
mUNICODE_CHAR();
}
break;
}
}
  finally {
}
}
