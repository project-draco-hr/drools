{
  try {
    this.ruleNestingLevel++;
    final int _type=SL_COMMENT;
    final int _start=getCharIndex();
    final int _line=getLine();
    final int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      match("//");
      loop3:       do {
        int alt3=2;
        final int LA3_0=this.input.LA(1);
        if ((LA3_0 == '\r')) {
          alt3=2;
        }
 else         if ((LA3_0 == '\n')) {
          alt3=2;
        }
 else         if (((LA3_0 >= '\u0000' && LA3_0 <= '\t') || (LA3_0 >= '\u000B' && LA3_0 <= '\f') || (LA3_0 >= '\u000E' && LA3_0 <= '\uFFFE'))) {
          alt3=1;
        }
switch (alt3) {
case 1:
{
            matchAny();
          }
        break;
default :
      break loop3;
  }
}
 while (true);
int alt4=2;
final int LA4_0=this.input.LA(1);
if ((LA4_0 == '\r')) {
  alt4=1;
}
switch (alt4) {
case 1:
{
    match('\r');
  }
break;
}
match('\n');
_channel=HIDDEN;
}
if (this.token == null && this.ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
  finally {
this.ruleNestingLevel--;
}
}
