{
  String drl="import " + SimpleEvent.class.getCanonicalName() + "\n"+ "import java.util.Date\n"+ "global java.util.List list"+ "\n"+ "declare SimpleEvent\n"+ "    @role( event )\n"+ "    @timestamp( dateEvt )\n"+ "end\n"+ "\n"+ "rule R \n"+ "    when\n"+ "        $e1 : SimpleEvent( this after \"01-Jan-2014\"  )\n"+ "        $e2 : SimpleEvent( this after $e1 ) \n"+ "    then\n"+ "        list.add(\"1\");\n"+ "    end\n "+ "";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(drl.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KieBaseConfiguration baseConfig=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  baseConfig.setOption(EventProcessingOption.STREAM);
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase(baseConfig);
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  KieSession ksession=kbase.newKieSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  SimpleEvent event1=new SimpleEvent("code1",DateUtils.parseDate("18-Mar-2014").getTime());
  ksession.insert(event1);
  SimpleEvent event2=new SimpleEvent("code2",DateUtils.parseDate("19-Mar-2014").getTime());
  ksession.insert(event2);
  ksession.fireAllRules();
  assertEquals(1,list.size());
}
