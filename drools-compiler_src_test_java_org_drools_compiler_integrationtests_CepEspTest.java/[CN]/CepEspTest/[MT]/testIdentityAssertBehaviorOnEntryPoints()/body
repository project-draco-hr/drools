{
  StockTickInterface st1=new StockTick(1,"RHT",10,10);
  StockTickInterface st2=new StockTick(1,"RHT",10,10);
  StockTickInterface st3=new StockTick(2,"RHT",15,20);
  final KieBaseConfiguration kbconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kbconf.setOption(EventProcessingOption.STREAM);
  kbconf.setOption(EqualityBehaviorOption.IDENTITY);
  final KnowledgeBase kbase1=loadKnowledgeBase(kbconf,"test_CEP_AssertBehaviorOnEntryPoints.drl");
  final StatefulKnowledgeSession ksession=kbase1.newStatefulKnowledgeSession();
  AgendaEventListener ael1=mock(AgendaEventListener.class);
  ksession.addEventListener(ael1);
  SessionEntryPoint ep1=ksession.getEntryPoint("stocktick stream");
  FactHandle fh1=ep1.insert(st1);
  FactHandle fh1_2=ep1.insert(st1);
  FactHandle fh2=ep1.insert(st2);
  FactHandle fh3=ep1.insert(st3);
  assertSame(fh1,fh1_2);
  assertNotSame(fh1,fh2);
  assertNotSame(fh1,fh3);
  assertNotSame(fh2,fh3);
  ksession.fireAllRules();
  verify(ael1,times(3)).afterMatchFired(any(AfterMatchFiredEvent.class));
  ksession.dispose();
}
