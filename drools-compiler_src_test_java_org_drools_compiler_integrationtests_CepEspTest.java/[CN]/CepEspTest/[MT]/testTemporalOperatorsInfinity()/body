{
  final RuleBaseConfiguration kbconf=new RuleBaseConfiguration();
  kbconf.setEventProcessingMode(EventProcessingOption.STREAM);
  KnowledgeBase kbase=loadKnowledgeBase(kbconf,"test_CEP_TemporalOperators3.drl");
  KieSessionConfiguration sconf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  sconf.setOption(ClockTypeOption.get(ClockType.PSEUDO_CLOCK.getId()));
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession(sconf,null);
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  SessionPseudoClock clock=(SessionPseudoClock)ksession.<SessionClock>getSessionClock();
  EntryPoint ep=ksession.getEntryPoint("X");
  clock.advanceTime(1000,TimeUnit.SECONDS);
  int rules=0;
  ep.insert(new StockTick(1,"A",10,clock.getCurrentTime()));
  clock.advanceTime(8,TimeUnit.SECONDS);
  System.out.println(list);
  ep.insert(new StockTick(2,"B",10,clock.getCurrentTime()));
  clock.advanceTime(8,TimeUnit.SECONDS);
  System.out.println(list);
  ep.insert(new StockTick(3,"B",10,clock.getCurrentTime()));
  clock.advanceTime(8,TimeUnit.SECONDS);
  rules=ksession.fireAllRules();
  System.out.println(list);
  assertEquals(3,rules);
}
