{
  String drl="package org.drools.test;\n" + "import org.drools.compiler.StockTick; \n" + "global java.util.List list; \n"+ "\n"+ "declare StockTick\n"+ "  @role( event )\n"+ "end\n"+ "\n"+ "rule \"One\"\n"+ "when\n"+ "  StockTick( $id : seq, company == \"BBB\" ) over window:time( 1s )\n"+ "then\n"+ "  list.add( $id );\n"+ "end\n"+ "\n"+ "";
  final KieBaseConfiguration kbconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kbconf.setOption(EventProcessingOption.STREAM);
  kbconf.setOption(RuleEngineOption.PHREAK);
  KnowledgeBase kb=loadKnowledgeBaseFromString(kbconf,drl);
  StatefulKnowledgeSession ks=kb.newStatefulKnowledgeSession();
  ks.insert(new StockTick(2,"BBB",1.0,0));
  Thread.sleep(1500);
  try {
    ks=SerializationHelper.getSerialisedStatefulKnowledgeSession(ks,true,false);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  ArrayList list=new ArrayList();
  ks.setGlobal("list",list);
  ks.fireAllRules();
  ks.insert(new StockTick(3,"BBB",1.0,0));
  ks.fireAllRules();
  System.out.print(list);
  assertEquals(1,list.size());
  assertEquals(Arrays.asList(3L),list);
}
