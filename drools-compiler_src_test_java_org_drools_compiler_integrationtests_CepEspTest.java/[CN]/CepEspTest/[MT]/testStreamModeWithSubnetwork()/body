{
  String drl="package org.drools.compiler.integrationtests\n" + "\n" + "declare Event\n"+ "  @role(event)\n"+ "  name : String\n"+ "end\n"+ "\n"+ "global java.util.List list\n"+ "\n"+ "rule \"firstRule\"\n"+ "\n"+ "    when\n"+ "        not (\n"+ "            $e : Event() over window:length(3)\n"+ "            and Event( this == $e ) // test pass when you comment this line\n"+ "        )\n"+ "    then\n"+ "        list.add(\"firstRule\");\n"+ "\n"+ "end";
  KieServices ks=KieServices.Factory.get();
  KieFileSystem kfs=ks.newKieFileSystem();
  kfs.write("src/main/resources/notinfusion.drl",drl);
  KieModuleModel kmoduleModel=ks.newKieModuleModel();
  kmoduleModel.newKieBaseModel("KieBase").addPackage("*").setDefault(true).setEventProcessingMode(EventProcessingOption.STREAM).newKieSessionModel("KieSession").setDefault(true);
  kfs.writeKModuleXML(kmoduleModel.toXML());
  KieBuilder kbuilder=ks.newKieBuilder(kfs).buildAll();
  List<org.kie.api.builder.Message> res=kbuilder.getResults().getMessages(org.kie.api.builder.Message.Level.ERROR);
  assertEquals(res.toString(),0,res.size());
  KieSession ksession=ks.newKieContainer(kbuilder.getKieModule().getReleaseId()).newKieSession();
  ArrayList<String> list=new ArrayList<String>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertEquals(1,list.size());
}
