{
  KieServices ks=KieServices.Factory.get();
  String kmodule="<kmodule xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n" + "         xmlns=\"http://www.drools.org/xsd/kmodule\">\n" + "  <kbase name=\"kbase1\">\n"+ "    <ksession name=\"ksession1\" default=\"true\"/>\n"+ "  </kbase>\n"+ "</kmodule>";
  ReleaseId releaseId1=ks.newReleaseId("org.kie","test-upgrade-java","1.0.0");
  Resource javaResource=ResourceFactory.newByteArrayResource(javaSrc.getBytes()).setResourceType(ResourceType.JAVA).setSourcePath("org/drools/compiler/test/PersonObject.java");
  Resource drlResource=ResourceFactory.newByteArrayResource(person_drl.getBytes()).setResourceType(ResourceType.DRL).setSourcePath("kbase1/person.drl");
  KieModule km=createAndDeployJar(ks,kmodule,releaseId1,javaResource,drlResource);
  kieContainer=ks.newKieContainer(km.getReleaseId());
  ksession=kieContainer.newKieSession();
  Class<?> clazz=kieContainer.getClassLoader().loadClass("org.drools.compiler.test.PersonObject");
  Object person=clazz.newInstance();
  ksession.insert(person);
  ksession.fireAllRules();
  assertNotNull(person);
  Object personId=valueOf(person,"id");
  assertNotNull(personId);
  assertEquals("Person from version 1",personId);
  ReleaseId releaseId2=ks.newReleaseId("org.kie","test-upgrade-java","1.1.0");
  Resource javaResource2=ResourceFactory.newByteArrayResource(javaSrc_2.getBytes()).setResourceType(ResourceType.JAVA).setSourcePath("org/drools/compiler/test/PersonObject.java");
  Resource drlResource2=ResourceFactory.newByteArrayResource(person_drl.getBytes()).setResourceType(ResourceType.DRL).setSourcePath("kbase1/person.drl");
  createAndDeployJar(ks,kmodule,releaseId2,javaResource2,drlResource2);
  kieContainer.updateToVersion(releaseId2);
  assertEquals(releaseId2,kieContainer.getReleaseId());
  ksession=kieContainer.newKieSession();
  person=kieContainer.getClassLoader().loadClass("org.drools.compiler.test.PersonObject").newInstance();
  ksession.insert(person);
  ksession.fireAllRules();
  assertNotNull(person);
  personId=valueOf(person,"id");
  assertNotNull(personId);
  assertEquals("Person from version 2",personId);
}
