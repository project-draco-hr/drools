{
  KieBaseConfiguration kconf=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  kconf.setOption(EventProcessingOption.STREAM);
  KnowledgeBase kbase=loadKnowledgeBase("test_EventExpiration.drl",kconf);
  KieSessionConfiguration ksessionConfig=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  ksessionConfig.setOption(ClockTypeOption.get("pseudo"));
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession(ksessionConfig,null);
  WorkingMemoryEventListener wml=mock(WorkingMemoryEventListener.class);
  ksession.addEventListener(wml);
  PseudoClockScheduler clock=(PseudoClockScheduler)ksession.<SessionClock>getSessionClock();
  final StockTickInterface st1=new StockTick(1,"RHT",100,1000);
  final StockTickInterface st2=new StockTick(2,"RHT",100,1000);
  ksession.insert(st1);
  ksession.insert(st2);
  verify(wml,times(2)).objectInserted(any(org.kie.api.event.rule.ObjectInsertedEvent.class));
  assertThat(ksession.getObjects().size(),equalTo(2));
  assertThat((Collection<Object>)ksession.getObjects(),hasItems((Object)st1,st2));
  ksession.fireAllRules();
  clock.advanceTime(3,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertThat(ksession.getObjects().size(),equalTo(0));
}
