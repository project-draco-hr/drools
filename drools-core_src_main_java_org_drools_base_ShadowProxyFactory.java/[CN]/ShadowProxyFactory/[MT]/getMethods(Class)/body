{
  Map map=new HashMap();
  List helperList=new ArrayList();
  final Method[] methods=clazz.getMethods();
  for (int i=0; i < methods.length; i++) {
    Method previous=null;
    Map signatures=(Map)map.get(methods[i].getName());
    ParametersWrapper key=new ParametersWrapper(methods[i].getParameterTypes());
    if (signatures != null) {
      previous=(Method)signatures.get(key);
    }
    if ((previous == null) || (previous.getReturnType().isAssignableFrom(methods[i].getReturnType()))) {
      if (signatures == null) {
        signatures=new HashMap();
        map.put(methods[i].getName(),signatures);
      }
      if (signatures.put(key,methods[i]) != null) {
        helperList.remove(previous);
      }
      helperList.add(methods[i]);
    }
  }
  return (Method[])helperList.toArray(new Method[helperList.size()]);
}
