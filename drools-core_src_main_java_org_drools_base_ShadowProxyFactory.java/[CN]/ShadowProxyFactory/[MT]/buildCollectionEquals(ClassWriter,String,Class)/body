{
  final MethodVisitor mv=cw.visitMethod(Opcodes.ACC_PUBLIC,"equals",Type.getMethodDescriptor(Type.BOOLEAN_TYPE,new Type[]{Type.getType(Object.class)}),null,null);
  Label l0=new Label();
  mv.visitLabel(l0);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitVarInsn(Opcodes.ALOAD,1);
  Label l1=new Label();
  mv.visitJumpInsn(Opcodes.IF_ACMPNE,l1);
  Label l2=new Label();
  mv.visitLabel(l2);
  mv.visitInsn(Opcodes.ICONST_1);
  mv.visitInsn(Opcodes.IRETURN);
  mv.visitLabel(l1);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitFieldInsn(Opcodes.GETFIELD,className,DELEGATE_FIELD_NAME,Type.getDescriptor(clazz));
  mv.visitVarInsn(Opcodes.ALOAD,1);
  if (clazz.isInterface()) {
    mv.visitMethodInsn(Opcodes.INVOKEINTERFACE,Type.getInternalName(clazz),"equals",Type.getMethodDescriptor(Type.BOOLEAN_TYPE,new Type[]{Type.getType(Object.class)}));
  }
 else {
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(clazz),"equals",Type.getMethodDescriptor(Type.BOOLEAN_TYPE,new Type[]{Type.getType(Object.class)}));
  }
  mv.visitInsn(Opcodes.IRETURN);
  Label l3=new Label();
  mv.visitLabel(l3);
  mv.visitLocalVariable("this","L" + className + ";",null,l0,l3,0);
  mv.visitLocalVariable("object",Type.getDescriptor(Object.class),null,l0,l3,1);
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
