{
  MethodVisitor mv;
{
    mv=cw.visitMethod(Opcodes.ACC_PUBLIC,"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{Type.getType(clazz)}),null,null);
    mv.visitCode();
    final Label l0=new Label();
    mv.visitLabel(l0);
    mv.visitLineNumber(41,l0);
    mv.visitVarInsn(Opcodes.ALOAD,0);
    if (clazz.isInterface()) {
      mv.visitMethodInsn(Opcodes.INVOKESPECIAL,Type.getInternalName(Object.class),"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{}));
    }
 else {
      mv.visitMethodInsn(Opcodes.INVOKESPECIAL,Type.getInternalName(clazz),"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{}));
    }
    final Label l1=new Label();
    mv.visitLabel(l1);
    mv.visitVarInsn(Opcodes.ALOAD,0);
    mv.visitVarInsn(Opcodes.ALOAD,1);
    mv.visitFieldInsn(Opcodes.PUTFIELD,className,ShadowProxyFactory.DELEGATE_FIELD_NAME,Type.getDescriptor(clazz));
    final Label l4=new Label();
    mv.visitLabel(l4);
    mv.visitVarInsn(Opcodes.ALOAD,0);
    mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,className,ShadowProxyFactory.UPDATE_PROXY,Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{}));
    final Label l2=new Label();
    mv.visitLabel(l2);
    mv.visitLineNumber(43,l2);
    mv.visitInsn(Opcodes.RETURN);
    final Label l3=new Label();
    mv.visitLabel(l3);
    mv.visitLocalVariable("this","L" + className + ";",null,l0,l3,0);
    mv.visitLocalVariable(ShadowProxyFactory.DELEGATE_FIELD_NAME,Type.getDescriptor(clazz),null,l0,l3,1);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
