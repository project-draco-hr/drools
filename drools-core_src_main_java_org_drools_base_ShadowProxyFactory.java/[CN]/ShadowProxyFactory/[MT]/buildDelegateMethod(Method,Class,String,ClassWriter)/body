{
  final String[] exceptions=getExceptionArrayAsString(method.getExceptionTypes());
  final MethodVisitor mv=cw.visitMethod(Opcodes.ACC_PUBLIC,method.getName(),Type.getMethodDescriptor(method),null,exceptions);
  mv.visitCode();
  final Label l0=new Label();
  mv.visitLabel(l0);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitFieldInsn(Opcodes.GETFIELD,className,ShadowProxyFactory.DELEGATE_FIELD_NAME,Type.getDescriptor(clazz));
  final Class[] parameters=method.getParameterTypes();
  for (int i=0; i < parameters.length; i++) {
    mv.visitVarInsn(Type.getType(parameters[i]).getOpcode(Opcodes.ILOAD),i + 1);
  }
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(clazz),method.getName(),Type.getMethodDescriptor(method));
  mv.visitInsn(Type.getType(method.getReturnType()).getOpcode(Opcodes.IRETURN));
  final Label l1=new Label();
  mv.visitLabel(l1);
  mv.visitLocalVariable("this","L" + className + ";",null,l0,l1,0);
  for (int i=0; i < parameters.length; i++) {
    mv.visitLocalVariable("arg" + i,Type.getDescriptor(parameters[i]),null,l0,l1,i + 1);
  }
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
