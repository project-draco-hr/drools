{
  Class[] exceptionTypes=method.getExceptionTypes();
  String[] exceptions=new String[exceptionTypes.length];
  for (int i=0; i < exceptions.length; i++) {
    exceptions[i]=Type.getInternalName(exceptionTypes[i]);
  }
  MethodVisitor mv=cw.visitMethod(Opcodes.ACC_PUBLIC,method.getName(),Type.getMethodDescriptor(method),null,exceptions);
  mv.visitCode();
  Label l0=new Label();
  mv.visitLabel(l0);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitFieldInsn(Opcodes.GETFIELD,className,fieldFlag,Type.BOOLEAN_TYPE.getDescriptor());
  Label l1=new Label();
  mv.visitJumpInsn(Opcodes.IFNE,l1);
  Label l2=new Label();
  mv.visitLabel(l2);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitFieldInsn(Opcodes.GETFIELD,className,DELEGATE_FIELD_NAME,Type.getDescriptor(clazz));
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getInternalName(clazz),method.getName(),Type.getMethodDescriptor(method));
  mv.visitFieldInsn(Opcodes.PUTFIELD,className,fieldName,Type.getDescriptor(fieldType));
  Label l3=new Label();
  mv.visitLabel(l3);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitInsn(Opcodes.ICONST_1);
  mv.visitFieldInsn(Opcodes.PUTFIELD,className,fieldFlag,Type.BOOLEAN_TYPE.getDescriptor());
  mv.visitLabel(l1);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitFieldInsn(Opcodes.GETFIELD,className,fieldName,Type.getDescriptor(fieldType));
  mv.visitInsn(Type.getType(fieldType).getOpcode(Opcodes.IRETURN));
  Label l4=new Label();
  mv.visitLabel(l4);
  mv.visitLocalVariable("this","L" + className + ";",null,l0,l4,0);
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
