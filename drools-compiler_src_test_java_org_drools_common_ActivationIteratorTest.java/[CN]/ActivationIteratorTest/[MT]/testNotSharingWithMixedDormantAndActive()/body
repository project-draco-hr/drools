{
  String str="package org.drools.test \n" + "\n" + "rule rule1 salience 10 when\n"+ "    not String( this == '1' )\n"+ "then\n"+ "end\n"+ "rule rule2  salience ( Integer.parseInt( $s1+'1' ) ) when\n"+ "    not String( this == '1' )\n"+ "    $s1 : String( )\n"+ "    eval( 1 == 1 ) \n"+ "then\n"+ "end\n"+ "rule rule3 salience ( Integer.parseInt( $s1+'2' ) ) when\n"+ "    $s1 : String( )\n"+ "    not String( this == '1' )\n"+ "    eval( 1 == 1 ) \n"+ "    eval( 1 == 1 ) \n"+ "then\n"+ "    kcontext.getKnowledgeRuntime().halt();\n"+ "end\n"+ "\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  ksession.insert("0");
  ksession.insert("2");
  ksession.fireAllRules();
  ActivationIterator it=ActivationIterator.iterator(ksession);
  List list=new ArrayList();
  for (Activation act=(Activation)it.next(); act != null; act=(Activation)it.next()) {
    if (act.getRule().getName().equals("rule3")) {
      list.add(act.getRule().getName() + ":" + act.getDeclarationValue("$s1")+ ":"+ act.isActive());
    }
 else     if (act.getRule().getName().equals("rule1")) {
      list.add(act.getRule().getName() + ":" + act.isActive());
    }
 else     if (act.getRule().getName().equals("rule2")) {
      list.add(act.getRule().getName() + ":" + act.getDeclarationValue("$s1")+ ":"+ act.isActive());
    }
  }
  assertContains(new String[]{"rule1:true","rule2:0:true","rule2:2:true","rule3:0:true","rule3:2:false"},list);
}
