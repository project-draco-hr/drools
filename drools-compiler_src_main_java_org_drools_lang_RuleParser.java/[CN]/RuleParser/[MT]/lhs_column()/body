{
  PatternDescr d;
  PatternDescr f=null;
  d=null;
  try {
    int alt32=2;
    alt32=dfa32.predict(input);
switch (alt32) {
case 1:
{
        following.push(FOLLOW_fact_binding_in_lhs_column1024);
        f=fact_binding();
        following.pop();
        d=f;
      }
    break;
case 2:
{
    following.push(FOLLOW_fact_in_lhs_column1033);
    f=fact();
    following.pop();
    d=f;
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
