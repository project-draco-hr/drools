{
  PatternDescr d;
  Token id=null;
  PatternDescr f=null;
  d=null;
  boolean multi=false;
  try {
{
      id=(Token)input.LT(1);
      match(input,ID,FOLLOW_ID_in_fact_binding1227);
      System.err.println("fact_binding(" + id.getText() + ")");
      following.push(FOLLOW_opt_eol_in_fact_binding1242);
      opt_eol();
      following.pop();
      match(input,29,FOLLOW_29_in_fact_binding1244);
      following.push(FOLLOW_opt_eol_in_fact_binding1246);
      opt_eol();
      following.pop();
      following.push(FOLLOW_fact_in_fact_binding1254);
      f=fact();
      following.pop();
      following.push(FOLLOW_opt_eol_in_fact_binding1256);
      opt_eol();
      following.pop();
      ((ColumnDescr)f).setIdentifier(id.getText());
      d=f;
      loop37:       do {
        int alt37=2;
        int LA37_0=input.LA(1);
        if (LA37_0 == 38) {
          alt37=1;
        }
switch (alt37) {
case 1:
{
            match(input,38,FOLLOW_38_in_fact_binding1268);
            if (!multi) {
              PatternDescr first=d;
              d=new OrDescr();
              ((OrDescr)d).addDescr(first);
              multi=true;
            }
            following.push(FOLLOW_fact_in_fact_binding1282);
            f=fact();
            following.pop();
            ((ColumnDescr)f).setIdentifier(id.getText());
            ((OrDescr)d).addDescr(f);
          }
        break;
default :
      break loop37;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
