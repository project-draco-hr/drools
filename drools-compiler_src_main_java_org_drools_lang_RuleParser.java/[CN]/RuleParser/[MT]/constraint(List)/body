{
  Token fb=null;
  Token f=null;
  Token op=null;
  Token bvc=null;
  String lc=null;
  String rvc=null;
  PatternDescr d=null;
  try {
{
      this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1734);
      opt_eol();
      this.following.pop();
      int alt51=2;
      alt51=this.dfa51.predict(this.input);
switch (alt51) {
case 1:
{
          fb=(Token)this.input.LT(1);
          match(this.input,RuleParser.ID,RuleParser.FOLLOW_ID_in_constraint1742);
          this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1744);
          opt_eol();
          this.following.pop();
          match(this.input,32,RuleParser.FOLLOW_32_in_constraint1746);
          this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1748);
          opt_eol();
          this.following.pop();
        }
      break;
  }
  f=(Token)this.input.LT(1);
  match(this.input,RuleParser.ID,RuleParser.FOLLOW_ID_in_constraint1758);
  if (fb != null) {
    d=new FieldBindingDescr(f.getText(),fb.getText());
    d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
    constraints.add(d);
  }
  this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1768);
  opt_eol();
  this.following.pop();
  int alt53=2;
  final int LA53_0=this.input.LA(1);
  if ((LA53_0 >= 42 && LA53_0 <= 50)) {
    alt53=1;
  }
 else   if (LA53_0 == RuleParser.EOL || LA53_0 == 15 || (LA53_0 >= 24 && LA53_0 <= 25)) {
    alt53=2;
  }
 else {
    final NoViableAltException nvae=new NoViableAltException("715:33: (op= (\'==\'|\'>\'|\'>=\'|\'<\'|\'<=\'|\'!=\'|\'contains\'|\'matches\'|\'excludes\') opt_eol (bvc= ID | lc= enum_constraint | lc= literal_constraint | rvc= retval_constraint ) )?",53,0,this.input);
    throw nvae;
  }
switch (alt53) {
case 1:
{
      op=(Token)this.input.LT(1);
      if ((this.input.LA(1) >= 42 && this.input.LA(1) <= 50)) {
        this.input.consume();
        this.errorRecovery=false;
      }
 else {
        final MismatchedSetException mse=new MismatchedSetException(null,this.input);
        recoverFromMismatchedSet(this.input,mse,RuleParser.FOLLOW_set_in_constraint1776);
        throw mse;
      }
      this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1863);
      opt_eol();
      this.following.pop();
      int alt52=4;
switch (this.input.LA(1)) {
case ID:
        final int LA52_1=this.input.LA(2);
      if (LA52_1 == 18) {
        alt52=2;
      }
 else       if (LA52_1 == RuleParser.EOL || LA52_1 == 15 || (LA52_1 >= 24 && LA52_1 <= 25)) {
        alt52=1;
      }
 else {
        final NoViableAltException nvae=new NoViableAltException("726:41: (bvc= ID | lc= enum_constraint | lc= literal_constraint | rvc= retval_constraint )",52,1,this.input);
        throw nvae;
      }
    break;
case INT:
case BOOL:
case STRING:
case FLOAT:
case 51:
  alt52=3;
break;
case 23:
alt52=4;
break;
default :
final NoViableAltException nvae=new NoViableAltException("726:41: (bvc= ID | lc= enum_constraint | lc= literal_constraint | rvc= retval_constraint )",52,0,this.input);
throw nvae;
}
switch (alt52) {
case 1:
{
bvc=(Token)this.input.LT(1);
match(this.input,RuleParser.ID,RuleParser.FOLLOW_ID_in_constraint1881);
d=new BoundVariableDescr(f.getText(),op.getText(),bvc.getText());
d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
constraints.add(d);
}
break;
case 2:
{
this.following.push(RuleParser.FOLLOW_enum_constraint_in_constraint1906);
lc=enum_constraint();
this.following.pop();
d=new LiteralDescr(f.getText(),op.getText(),lc,true);
d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
constraints.add(d);
}
break;
case 3:
{
this.following.push(RuleParser.FOLLOW_literal_constraint_in_constraint1938);
lc=literal_constraint();
this.following.pop();
d=new LiteralDescr(f.getText(),op.getText(),lc);
d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
constraints.add(d);
}
break;
case 4:
{
this.following.push(RuleParser.FOLLOW_retval_constraint_in_constraint1958);
rvc=retval_constraint();
this.following.pop();
d=new ReturnValueDescr(f.getText(),op.getText(),rvc);
d.setLocation(offset(f.getLine()),f.getCharPositionInLine());
constraints.add(d);
}
break;
}
}
break;
}
this.following.push(RuleParser.FOLLOW_opt_eol_in_constraint1991);
opt_eol();
this.following.pop();
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
