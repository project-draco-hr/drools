{
  ArgumentValueDescr value;
  Token t=null;
  ArgumentValueDescr.MapDescr m=null;
  value=null;
  String text=null;
  try {
{
      int alt50=8;
switch (input.LA(1)) {
case STRING:
        alt50=1;
      break;
case INT:
    alt50=2;
  break;
case FLOAT:
alt50=3;
break;
case BOOL:
alt50=4;
break;
case ID:
alt50=5;
break;
case 43:
alt50=6;
break;
case 26:
alt50=8;
break;
default :
NoViableAltException nvae=new NoViableAltException("785:17: (t= STRING | t= INT | t= FLOAT | t= BOOL | t= ID | t= \'null\' | t= \'null\' | m= inline_map )",50,0,input);
throw nvae;
}
switch (alt50) {
case 1:
{
t=(Token)input.LT(1);
match(input,STRING,FOLLOW_STRING_in_argument_value1851);
text=getString(t);
value=new ArgumentValueDescr(ArgumentValueDescr.STRING,text);
}
break;
case 2:
{
t=(Token)input.LT(1);
match(input,INT,FOLLOW_INT_in_argument_value1862);
text=t.getText();
value=new ArgumentValueDescr(ArgumentValueDescr.INTEGRAL,text);
}
break;
case 3:
{
t=(Token)input.LT(1);
match(input,FLOAT,FOLLOW_FLOAT_in_argument_value1875);
text=t.getText();
value=new ArgumentValueDescr(ArgumentValueDescr.DECIMAL,text);
}
break;
case 4:
{
t=(Token)input.LT(1);
match(input,BOOL,FOLLOW_BOOL_in_argument_value1886);
text=t.getText();
value=new ArgumentValueDescr(ArgumentValueDescr.BOOLEAN,text);
}
break;
case 5:
{
t=(Token)input.LT(1);
match(input,ID,FOLLOW_ID_in_argument_value1898);
text=t.getText();
value=new ArgumentValueDescr(ArgumentValueDescr.VARIABLE,text);
}
break;
case 6:
{
t=(Token)input.LT(1);
match(input,43,FOLLOW_43_in_argument_value1909);
text="null";
value=new ArgumentValueDescr(ArgumentValueDescr.NULL,text);
}
break;
case 7:
{
t=(Token)input.LT(1);
match(input,43,FOLLOW_43_in_argument_value1920);
text="null";
value=new ArgumentValueDescr(ArgumentValueDescr.NULL,text);
}
break;
case 8:
{
following.push(FOLLOW_inline_map_in_argument_value1939);
m=inline_map();
following.pop();
value=new ArgumentValueDescr(ArgumentValueDescr.MAP,m.getKeyValuePairs());
}
break;
}
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return value;
}
