{
  BaseDescr pd;
  BaseDescr fe=null;
  BaseDescr f=null;
  pd=null;
  boolean multi=false;
  try {
    int alt61=2;
    int LA61_0=input.LA(1);
    if (LA61_0 == 23) {
      alt61=1;
    }
 else     if (LA61_0 == ID) {
      alt61=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("919:2: fact_expression[String id] returns [BaseDescr pd] : ( \'(\' opt_eol fe= fact_expression[id] opt_eol \')\' | f= fact opt_eol ( (\'or\'|\'||\') opt_eol f= fact )* );",61,0,input);
      throw nvae;
    }
switch (alt61) {
case 1:
{
        match(input,23,FOLLOW_23_in_fact_expression2565);
        following.push(FOLLOW_opt_eol_in_fact_expression2567);
        opt_eol();
        following.pop();
        following.push(FOLLOW_fact_expression_in_fact_expression2571);
        fe=fact_expression(id);
        following.pop();
        following.push(FOLLOW_opt_eol_in_fact_expression2573);
        opt_eol();
        following.pop();
        match(input,25,FOLLOW_25_in_fact_expression2575);
        pd=fe;
      }
    break;
case 2:
{
    following.push(FOLLOW_fact_in_fact_expression2586);
    f=fact();
    following.pop();
    following.push(FOLLOW_opt_eol_in_fact_expression2588);
    opt_eol();
    following.pop();
    ((ColumnDescr)f).setIdentifier(id);
    pd=f;
    loop60:     do {
      int alt60=2;
      int LA60_0=input.LA(1);
      if ((LA60_0 >= 52 && LA60_0 <= 53)) {
        alt60=1;
      }
switch (alt60) {
case 1:
{
          if ((input.LA(1) >= 52 && input.LA(1) <= 53)) {
            input.consume();
            errorRecovery=false;
          }
 else {
            MismatchedSetException mse=new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FOLLOW_set_in_fact_expression2601);
            throw mse;
          }
          following.push(FOLLOW_opt_eol_in_fact_expression2606);
          opt_eol();
          following.pop();
          if (!multi) {
            BaseDescr first=pd;
            pd=new OrDescr();
            ((OrDescr)pd).addDescr(first);
            multi=true;
          }
          following.push(FOLLOW_fact_in_fact_expression2620);
          f=fact();
          following.pop();
          ((ColumnDescr)f).setIdentifier(id);
          ((OrDescr)pd).addDescr(f);
        }
      break;
default :
    break loop60;
}
}
 while (true);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return pd;
}
