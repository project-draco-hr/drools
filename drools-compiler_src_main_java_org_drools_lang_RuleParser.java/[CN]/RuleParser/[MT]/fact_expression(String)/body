{
  PatternDescr pd;
  PatternDescr fe=null;
  PatternDescr f=null;
  pd=null;
  boolean multi=false;
  try {
    int alt44=2;
    int LA44_0=input.LA(1);
    if (LA44_0 == 21) {
      alt44=1;
    }
 else     if (LA44_0 == ID) {
      alt44=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("616:2: fact_expression[String id] returns [PatternDescr pd] : ( \'(\' fe= fact_expression[id] \')\' | f= fact opt_eol ( \'or\' f= fact )* );",44,0,input);
      throw nvae;
    }
switch (alt44) {
case 1:
{
        match(input,21,FOLLOW_21_in_fact_expression1470);
        following.push(FOLLOW_fact_expression_in_fact_expression1474);
        fe=fact_expression(id);
        following.pop();
        match(input,23,FOLLOW_23_in_fact_expression1477);
        pd=fe;
      }
    break;
case 2:
{
    following.push(FOLLOW_fact_in_fact_expression1488);
    f=fact();
    following.pop();
    following.push(FOLLOW_opt_eol_in_fact_expression1490);
    opt_eol();
    following.pop();
    ((ColumnDescr)f).setIdentifier(id);
    pd=f;
    loop43:     do {
      int alt43=2;
      int LA43_0=input.LA(1);
      if (LA43_0 == 39) {
        alt43=1;
      }
switch (alt43) {
case 1:
{
          match(input,39,FOLLOW_39_in_fact_expression1502);
          if (!multi) {
            PatternDescr first=pd;
            pd=new OrDescr();
            ((OrDescr)pd).addDescr(first);
            multi=true;
          }
          following.push(FOLLOW_fact_in_fact_expression1516);
          f=fact();
          following.pop();
          ((ColumnDescr)f).setIdentifier(id);
          ((OrDescr)pd).addDescr(f);
        }
      break;
default :
    break loop43;
}
}
 while (true);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return pd;
}
