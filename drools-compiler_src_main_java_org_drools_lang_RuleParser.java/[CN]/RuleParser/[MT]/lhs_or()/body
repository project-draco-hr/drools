{
  PatternDescr d;
  PatternDescr left=null;
  PatternDescr right=null;
  d=null;
  try {
{
      OrDescr or=null;
      following.push(FOLLOW_lhs_and_in_lhs_or1900);
      left=lhs_and();
      following.pop();
      d=left;
      loop44:       do {
        int alt44=2;
        int LA44_0=input.LA(1);
        if (LA44_0 == 36 || LA44_0 == 45) {
          alt44=1;
        }
switch (alt44) {
case 1:
{
            if (input.LA(1) == 36 || input.LA(1) == 45) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_lhs_or1910);
              throw mse;
            }
            following.push(FOLLOW_lhs_and_in_lhs_or1921);
            right=lhs_and();
            following.pop();
            if (or == null) {
              or=new OrDescr();
              or.addDescr(left);
              d=or;
            }
            or.addDescr(right);
          }
        break;
default :
      break loop44;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
