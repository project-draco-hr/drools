{
  PatternDescr d;
  PatternDescr left=null;
  PatternDescr right=null;
  d=null;
  try {
{
      OrDescr or=null;
      following.push(FOLLOW_lhs_and_in_lhs_or3512);
      left=lhs_and();
      following.pop();
      d=left;
      loop74:       do {
        int alt74=2;
        int LA74_0=input.LA(1);
        if ((LA74_0 >= 51 && LA74_0 <= 52)) {
          alt74=1;
        }
switch (alt74) {
case 1:
{
            if ((input.LA(1) >= 51 && input.LA(1) <= 52)) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_lhs_or3521);
              throw mse;
            }
            following.push(FOLLOW_opt_eol_in_lhs_or3526);
            opt_eol();
            following.pop();
            following.push(FOLLOW_lhs_and_in_lhs_or3533);
            right=lhs_and();
            following.pop();
            if (or == null) {
              or=new OrDescr();
              or.addDescr(left);
              d=or;
            }
            or.addDescr(right);
          }
        break;
default :
      break loop74;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
