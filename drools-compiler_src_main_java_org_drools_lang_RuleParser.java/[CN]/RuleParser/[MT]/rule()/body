{
  RuleDescr rule;
  Token loc=null;
  Token any=null;
  String ruleName=null;
  List a=null;
  PatternDescr l=null;
  rule=null;
  String consequence="";
  try {
{
      following.push(FOLLOW_opt_eol_in_rule258);
      opt_eol();
      following.pop();
      loc=(Token)input.LT(1);
      match(input,20,FOLLOW_20_in_rule264);
      following.push(FOLLOW_word_in_rule268);
      ruleName=word();
      following.pop();
      following.push(FOLLOW_opt_eol_in_rule270);
      opt_eol();
      following.pop();
      rule=new RuleDescr(ruleName,null);
      rule.setLocation(loc.getLine(),loc.getCharPositionInLine());
      int alt10=2;
      int LA10_0=input.LA(1);
      if (LA10_0 == 25) {
        alt10=1;
      }
 else       if (LA10_0 == EOL || LA10_0 == 21 || LA10_0 == 23) {
        alt10=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("88:17: (a= rule_options )?",10,0,input);
        throw nvae;
      }
switch (alt10) {
case 1:
{
          following.push(FOLLOW_rule_options_in_rule283);
          a=rule_options();
          following.pop();
          rule.setAttributes(a);
        }
      break;
  }
  int alt13=2;
  int LA13_0=input.LA(1);
  if (LA13_0 == 21) {
    alt13=1;
  }
 else   if (LA13_0 == EOL || LA13_0 == 23) {
    alt13=2;
  }
 else {
    NoViableAltException nvae=new NoViableAltException("93:17: (loc= \'when\' ( \':\' )? opt_eol (l= lhs )* )?",13,0,input);
    throw nvae;
  }
switch (alt13) {
case 1:
{
      loc=(Token)input.LT(1);
      match(input,21,FOLLOW_21_in_rule301);
      int alt11=2;
      int LA11_0=input.LA(1);
      if (LA11_0 == 22) {
        alt11=1;
      }
 else       if ((LA11_0 >= EOL && LA11_0 <= ID) || LA11_0 == 23 || LA11_0 == 28 || (LA11_0 >= 41 && LA11_0 <= 43)) {
        alt11=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("93:36: ( \':\' )?",11,0,input);
        throw nvae;
      }
switch (alt11) {
case 1:
{
          match(input,22,FOLLOW_22_in_rule303);
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_rule306);
  opt_eol();
  following.pop();
  AndDescr lhs=new AndDescr();
  rule.setLhs(lhs);
  lhs.setLocation(loc.getLine(),loc.getCharPositionInLine());
  loop12:   do {
    int alt12=2;
    int LA12_0=input.LA(1);
    if (LA12_0 == ID || LA12_0 == 28 || (LA12_0 >= 41 && LA12_0 <= 43)) {
      alt12=1;
    }
switch (alt12) {
case 1:
{
        following.push(FOLLOW_lhs_in_rule320);
        l=lhs();
        following.pop();
        lhs.addDescr(l);
      }
    break;
default :
  break loop12;
}
}
 while (true);
}
break;
}
int alt16=2;
int LA16_0=input.LA(1);
if (LA16_0 == 23) {
alt16=1;
}
 else if (LA16_0 == EOL) {
alt16=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("100:17: ( \'then\' ( \':\' )? (any= . )* )?",16,0,input);
throw nvae;
}
switch (alt16) {
case 1:
{
match(input,23,FOLLOW_23_in_rule336);
int alt14=2;
int LA14_0=input.LA(1);
if (LA14_0 == 22) {
alt14=1;
}
 else if ((LA14_0 >= EOL && LA14_0 <= 21) || (LA14_0 >= 23 && LA14_0 <= 43)) {
alt14=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("100:32: ( \':\' )?",14,0,input);
throw nvae;
}
switch (alt14) {
case 1:
{
match(input,22,FOLLOW_22_in_rule338);
}
break;
}
loop15: do {
int alt15=2;
alt15=dfa15.predict(input);
switch (alt15) {
case 1:
{
any=(Token)input.LT(1);
matchAny(input);
consequence=consequence + " " + any.getText();
}
break;
default :
break loop15;
}
}
 while (true);
rule.setConsequence(consequence);
}
break;
}
match(input,EOL,FOLLOW_EOL_in_rule373);
match(input,24,FOLLOW_24_in_rule375);
following.push(FOLLOW_opt_eol_in_rule377);
opt_eol();
following.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return rule;
}
