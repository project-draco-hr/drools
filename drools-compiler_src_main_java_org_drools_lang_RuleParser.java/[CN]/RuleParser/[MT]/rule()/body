{
  RuleDescr rule;
  Token loc=null;
  Token any=null;
  String ruleName=null;
  rule=null;
  String consequence="";
  try {
{
      this.following.push(RuleParser.FOLLOW_opt_eol_in_rule598);
      opt_eol();
      this.following.pop();
      loc=(Token)this.input.LT(1);
      match(this.input,30,RuleParser.FOLLOW_30_in_rule604);
      this.following.push(RuleParser.FOLLOW_word_in_rule608);
      ruleName=word();
      this.following.pop();
      this.following.push(RuleParser.FOLLOW_opt_eol_in_rule610);
      opt_eol();
      this.following.pop();
      debug("start rule: " + ruleName);
      rule=new RuleDescr(ruleName,null);
      rule.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      int alt18=2;
switch (this.input.LA(1)) {
case 32:
case 34:
        alt18=1;
      break;
case EOL:
case 15:
case 24:
case 35:
case 36:
case 37:
case 38:
case 39:
case 40:
    alt18=1;
  break;
case 31:
alt18=1;
break;
case 33:
alt18=1;
break;
case 29:
alt18=1;
break;
default :
final NoViableAltException nvae=new NoViableAltException("401:17: ( rule_attributes[rule] )?",18,0,this.input);
throw nvae;
}
switch (alt18) {
case 1:
{
this.following.push(RuleParser.FOLLOW_rule_attributes_in_rule621);
rule_attributes(rule);
this.following.pop();
}
break;
}
this.following.push(RuleParser.FOLLOW_opt_eol_in_rule631);
opt_eol();
this.following.pop();
int alt25=2;
final int LA25_0=this.input.LA(1);
if (LA25_0 == RuleParser.EOL || LA25_0 == 15 || LA25_0 == 31 || LA25_0 == 33) {
alt25=1;
}
 else if (LA25_0 == 29) {
alt25=1;
}
 else {
final NoViableAltException nvae=new NoViableAltException("404:17: ( (loc= \'when\' ( \':\' )? opt_eol ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] ) )? ( opt_eol loc= \'then\' ( \':\' )? opt_eol ( options {greedy=false; } : any= . )* )? )?",25,0,this.input);
throw nvae;
}
switch (alt25) {
case 1:
{
int alt21=2;
final int LA21_0=this.input.LA(1);
if (LA21_0 == 31) {
alt21=1;
}
 else if (LA21_0 == RuleParser.EOL || LA21_0 == 15 || LA21_0 == 29 || LA21_0 == 33) {
alt21=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("404:18: (loc= \'when\' ( \':\' )? opt_eol ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] ) )?",21,0,this.input);
throw nvae;
}
switch (alt21) {
case 1:
{
loc=(Token)this.input.LT(1);
match(this.input,31,RuleParser.FOLLOW_31_in_rule640);
int alt19=2;
final int LA19_0=this.input.LA(1);
if (LA19_0 == 32) {
final int LA19_1=this.input.LA(2);
if (!(this.expander != null)) {
alt19=1;
}
 else if (this.expander != null) {
alt19=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("404:36: ( \':\' )?",19,1,this.input);
throw nvae;
}
}
 else if ((LA19_0 >= RuleParser.EOL && LA19_0 <= 31) || (LA19_0 >= 33 && LA19_0 <= 61)) {
alt19=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("404:36: ( \':\' )?",19,0,this.input);
throw nvae;
}
switch (alt19) {
case 1:
{
match(this.input,32,RuleParser.FOLLOW_32_in_rule642);
}
break;
}
this.following.push(RuleParser.FOLLOW_opt_eol_in_rule645);
opt_eol();
this.following.pop();
final AndDescr lhs=new AndDescr();
rule.setLhs(lhs);
lhs.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
int alt20=2;
switch (this.input.LA(1)) {
case 23:
final int LA20_1=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,1,this.input);
throw nvae;
}
break;
case EOL:
final int LA20_2=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,2,this.input);
throw nvae;
}
break;
case 15:
final int LA20_3=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,3,this.input);
throw nvae;
}
break;
case 33:
final int LA20_4=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,4,this.input);
throw nvae;
}
break;
case 29:
final int LA20_5=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,5,this.input);
throw nvae;
}
break;
case 56:
final int LA20_6=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,6,this.input);
throw nvae;
}
break;
case 57:
final int LA20_7=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,7,this.input);
throw nvae;
}
break;
case 58:
final int LA20_8=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,8,this.input);
throw nvae;
}
break;
case ID:
final int LA20_9=this.input.LA(2);
if (this.expander != null) {
alt20=1;
}
 else if (true) {
alt20=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,9,this.input);
throw nvae;
}
break;
case INT:
case BOOL:
case STRING:
case FLOAT:
case MISC:
case WS:
case SH_STYLE_SINGLE_LINE_COMMENT:
case C_STYLE_SINGLE_LINE_COMMENT:
case MULTI_LINE_COMMENT:
case 16:
case 17:
case 18:
case 19:
case 20:
case 21:
case 22:
case 24:
case 25:
case 26:
case 27:
case 28:
case 30:
case 31:
case 32:
case 34:
case 35:
case 36:
case 37:
case 38:
case 39:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 59:
case 60:
case 61:
alt20=1;
break;
default :
final NoViableAltException nvae=new NoViableAltException("409:25: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",20,0,this.input);
throw nvae;
}
switch (alt20) {
case 1:
{
if (!(this.expander != null)) {
throw new FailedPredicateException(this.input,"rule"," expander != null ");
}
this.following.push(RuleParser.FOLLOW_expander_lhs_block_in_rule663);
expander_lhs_block(lhs);
this.following.pop();
}
break;
case 2:
{
this.following.push(RuleParser.FOLLOW_normal_lhs_block_in_rule672);
normal_lhs_block(lhs);
this.following.pop();
}
break;
}
}
break;
}
int alt24=2;
final int LA24_0=this.input.LA(1);
if (LA24_0 == RuleParser.EOL || LA24_0 == 15 || LA24_0 == 33) {
alt24=1;
}
 else if (LA24_0 == 29) {
alt24=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("415:17: ( opt_eol loc= \'then\' ( \':\' )? opt_eol ( options {greedy=false; } : any= . )* )?",24,0,this.input);
throw nvae;
}
switch (alt24) {
case 1:
{
this.following.push(RuleParser.FOLLOW_opt_eol_in_rule695);
opt_eol();
this.following.pop();
loc=(Token)this.input.LT(1);
match(this.input,33,RuleParser.FOLLOW_33_in_rule699);
int alt22=2;
final int LA22_0=this.input.LA(1);
if (LA22_0 == 32) {
alt22=1;
}
 else if ((LA22_0 >= RuleParser.EOL && LA22_0 <= 31) || (LA22_0 >= 33 && LA22_0 <= 61)) {
alt22=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("415:38: ( \':\' )?",22,0,this.input);
throw nvae;
}
switch (alt22) {
case 1:
{
match(this.input,32,RuleParser.FOLLOW_32_in_rule701);
}
break;
}
this.following.push(RuleParser.FOLLOW_opt_eol_in_rule705);
opt_eol();
this.following.pop();
loop23: do {
int alt23=2;
final int LA23_0=this.input.LA(1);
if (LA23_0 == 29) {
alt23=2;
}
 else if ((LA23_0 >= RuleParser.EOL && LA23_0 <= 28) || (LA23_0 >= 30 && LA23_0 <= 61)) {
alt23=1;
}
switch (alt23) {
case 1:
{
any=(Token)this.input.LT(1);
matchAny(this.input);
consequence=consequence + " " + any.getText();
}
break;
default :
break loop23;
}
}
 while (true);
if (this.expander != null) {
final String expanded=runThenExpander(consequence,offset(loc.getLine()));
rule.setConsequence(expanded);
}
 else {
rule.setConsequence(consequence);
}
rule.setConsequenceLocation(offset(loc.getLine()),loc.getCharPositionInLine());
}
break;
}
}
break;
}
match(this.input,29,RuleParser.FOLLOW_29_in_rule751);
this.following.push(RuleParser.FOLLOW_opt_eol_in_rule753);
opt_eol();
this.following.pop();
debug("end rule: " + ruleName);
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return rule;
}
