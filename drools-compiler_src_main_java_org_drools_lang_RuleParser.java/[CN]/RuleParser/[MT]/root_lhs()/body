{
  PatternDescr d;
  PatternDescr e=null;
  PatternDescr l=null;
  d=null;
  try {
    int alt25=2;
switch (input.LA(1)) {
case EOL:
case INT:
case STRING:
case FLOAT:
case MISC:
case WS:
case SH_STYLE_SINGLE_LINE_COMMENT:
case C_STYLE_SINGLE_LINE_COMMENT:
case MULTI_LINE_COMMENT:
case 14:
case 15:
case 16:
case 17:
case 18:
case 19:
case 20:
case 21:
case 22:
case 23:
case 24:
case 25:
case 26:
case 27:
case 29:
case 30:
case 31:
case 32:
case 33:
case 34:
case 35:
case 36:
case 37:
case 38:
case 39:
case 43:
      alt25=1;
    break;
case 40:
  int LA25_2=input.LA(2);
if (expander != null) {
  alt25=1;
}
 else if (true) {
  alt25=2;
}
 else {
  NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,2,input);
  throw nvae;
}
break;
case 41:
int LA25_3=input.LA(2);
if (expander != null) {
alt25=1;
}
 else if (true) {
alt25=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,3,input);
throw nvae;
}
break;
case 42:
int LA25_4=input.LA(2);
if (expander != null) {
alt25=1;
}
 else if (true) {
alt25=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,4,input);
throw nvae;
}
break;
case ID:
int LA25_5=input.LA(2);
if (expander != null) {
alt25=1;
}
 else if (true) {
alt25=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,5,input);
throw nvae;
}
break;
case 28:
int LA25_6=input.LA(2);
if (expander != null) {
alt25=1;
}
 else if (true) {
alt25=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,6,input);
throw nvae;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("208:1: root_lhs returns [PatternDescr d] : ({...}?e= expander_lhs | l= lhs );",25,0,input);
throw nvae;
}
switch (alt25) {
case 1:
{
if (!(expander != null)) {
throw new FailedPredicateException(input,"root_lhs"," expander != null ");
}
following.push(FOLLOW_expander_lhs_in_root_lhs695);
e=expander_lhs();
following.pop();
d=e;
}
break;
case 2:
{
following.push(FOLLOW_lhs_in_root_lhs705);
l=lhs();
following.pop();
d=l;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
