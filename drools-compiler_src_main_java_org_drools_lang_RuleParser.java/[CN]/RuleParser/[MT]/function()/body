{
  Token name=null;
  Token paramName=null;
  String retType=null;
  String paramType=null;
  String body=null;
  FunctionDescr f=null;
  try {
{
      match(input,20,FOLLOW_20_in_function313);
      following.push(FOLLOW_opt_eol_in_function315);
      opt_eol();
      following.pop();
      int alt10=2;
      alt10=dfa10.predict(input);
switch (alt10) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function320);
          retType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function324);
  opt_eol();
  following.pop();
  name=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function328);
  following.push(FOLLOW_opt_eol_in_function330);
  opt_eol();
  following.pop();
  f=new FunctionDescr(name.getText(),retType);
  match(input,21,FOLLOW_21_in_function339);
  following.push(FOLLOW_opt_eol_in_function341);
  opt_eol();
  following.pop();
  int alt14=2;
  int LA14_0=input.LA(1);
  if ((LA14_0 >= EOL && LA14_0 <= ID) || LA14_0 == 15) {
    alt14=1;
  }
 else   if (LA14_0 == 23) {
    alt14=2;
  }
 else {
    NoViableAltException nvae=new NoViableAltException("264:25: ( (paramType= dotted_name )? opt_eol paramName= ID opt_eol ( \',\' opt_eol (paramType= dotted_name )? opt_eol paramName= ID opt_eol )* )?",14,0,input);
    throw nvae;
  }
switch (alt14) {
case 1:
{
      int alt11=2;
      alt11=dfa11.predict(input);
switch (alt11) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function351);
          paramType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function355);
  opt_eol();
  following.pop();
  paramName=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function359);
  following.push(FOLLOW_opt_eol_in_function361);
  opt_eol();
  following.pop();
  f.addParameter(paramType,paramName.getText());
  loop13:   do {
    int alt13=2;
    int LA13_0=input.LA(1);
    if (LA13_0 == 22) {
      alt13=1;
    }
switch (alt13) {
case 1:
{
        match(input,22,FOLLOW_22_in_function375);
        following.push(FOLLOW_opt_eol_in_function377);
        opt_eol();
        following.pop();
        int alt12=2;
        alt12=dfa12.predict(input);
switch (alt12) {
case 1:
{
            following.push(FOLLOW_dotted_name_in_function382);
            paramType=dotted_name();
            following.pop();
          }
        break;
    }
    following.push(FOLLOW_opt_eol_in_function386);
    opt_eol();
    following.pop();
    paramName=(Token)input.LT(1);
    match(input,ID,FOLLOW_ID_in_function390);
    following.push(FOLLOW_opt_eol_in_function392);
    opt_eol();
    following.pop();
    f.addParameter(paramType,paramName.getText());
  }
break;
default :
break loop13;
}
}
 while (true);
}
break;
}
match(input,23,FOLLOW_23_in_function417);
following.push(FOLLOW_opt_eol_in_function421);
opt_eol();
following.pop();
match(input,24,FOLLOW_24_in_function425);
following.push(FOLLOW_curly_chunk_in_function432);
body=curly_chunk();
following.pop();
f.setText(body);
match(input,25,FOLLOW_25_in_function441);
packageDescr.addFunction(f);
following.push(FOLLOW_opt_eol_in_function449);
opt_eol();
following.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
