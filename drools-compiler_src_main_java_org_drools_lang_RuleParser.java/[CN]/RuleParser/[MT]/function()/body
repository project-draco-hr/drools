{
  Token name=null;
  Token paramName=null;
  String retType=null;
  String paramType=null;
  String body=null;
  FunctionDescr f=null;
  try {
{
      match(input,19,FOLLOW_19_in_function303);
      following.push(FOLLOW_opt_eol_in_function305);
      opt_eol();
      following.pop();
      int alt13=2;
      alt13=dfa13.predict(input);
switch (alt13) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function310);
          retType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function314);
  opt_eol();
  following.pop();
  name=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function318);
  following.push(FOLLOW_opt_eol_in_function320);
  opt_eol();
  following.pop();
  f=new FunctionDescr(name.getText(),retType);
  match(input,20,FOLLOW_20_in_function329);
  following.push(FOLLOW_opt_eol_in_function331);
  opt_eol();
  following.pop();
  int alt17=2;
  int LA17_0=input.LA(1);
  if ((LA17_0 >= EOL && LA17_0 <= ID)) {
    alt17=1;
  }
 else   if (LA17_0 == 22) {
    alt17=2;
  }
 else {
    NoViableAltException nvae=new NoViableAltException("160:25: ( (paramType= dotted_name )? opt_eol paramName= ID opt_eol ( \',\' opt_eol (paramType= dotted_name )? opt_eol paramName= ID opt_eol )* )?",17,0,input);
    throw nvae;
  }
switch (alt17) {
case 1:
{
      int alt14=2;
      alt14=dfa14.predict(input);
switch (alt14) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function341);
          paramType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function345);
  opt_eol();
  following.pop();
  paramName=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function349);
  following.push(FOLLOW_opt_eol_in_function351);
  opt_eol();
  following.pop();
  f.addParameter(paramType,paramName.getText());
  loop16:   do {
    int alt16=2;
    int LA16_0=input.LA(1);
    if (LA16_0 == 21) {
      alt16=1;
    }
switch (alt16) {
case 1:
{
        match(input,21,FOLLOW_21_in_function365);
        following.push(FOLLOW_opt_eol_in_function367);
        opt_eol();
        following.pop();
        int alt15=2;
        alt15=dfa15.predict(input);
switch (alt15) {
case 1:
{
            following.push(FOLLOW_dotted_name_in_function372);
            paramType=dotted_name();
            following.pop();
          }
        break;
    }
    following.push(FOLLOW_opt_eol_in_function376);
    opt_eol();
    following.pop();
    paramName=(Token)input.LT(1);
    match(input,ID,FOLLOW_ID_in_function380);
    following.push(FOLLOW_opt_eol_in_function382);
    opt_eol();
    following.pop();
    f.addParameter(paramType,paramName.getText());
  }
break;
default :
break loop16;
}
}
 while (true);
}
break;
}
match(input,22,FOLLOW_22_in_function407);
following.push(FOLLOW_opt_eol_in_function411);
opt_eol();
following.pop();
match(input,23,FOLLOW_23_in_function415);
following.push(FOLLOW_curly_chunk_in_function422);
body=curly_chunk();
following.pop();
f.setText(body);
match(input,24,FOLLOW_24_in_function431);
packageDescr.addFunction(f);
following.push(FOLLOW_opt_eol_in_function439);
opt_eol();
following.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
