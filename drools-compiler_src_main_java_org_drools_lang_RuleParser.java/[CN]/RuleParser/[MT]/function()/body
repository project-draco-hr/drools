{
  Token name=null;
  String retType=null;
  String paramType=null;
  String paramName=null;
  String body=null;
  FunctionDescr f=null;
  try {
{
      match(input,22,FOLLOW_22_in_function372);
      following.push(FOLLOW_opt_eol_in_function374);
      opt_eol();
      following.pop();
      int alt12=2;
      alt12=dfa12.predict(input);
switch (alt12) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function379);
          retType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function383);
  opt_eol();
  following.pop();
  name=(Token)input.LT(1);
  match(input,ID,FOLLOW_ID_in_function387);
  following.push(FOLLOW_opt_eol_in_function389);
  opt_eol();
  following.pop();
  f=new FunctionDescr(name.getText(),retType);
  match(input,23,FOLLOW_23_in_function398);
  following.push(FOLLOW_opt_eol_in_function400);
  opt_eol();
  following.pop();
  int alt16=2;
  int LA16_0=input.LA(1);
  if ((LA16_0 >= EOL && LA16_0 <= ID) || LA16_0 == 15) {
    alt16=1;
  }
 else   if (LA16_0 == 25) {
    alt16=2;
  }
 else {
    NoViableAltException nvae=new NoViableAltException("365:25: ( (paramType= dotted_name )? opt_eol paramName= argument opt_eol ( \',\' opt_eol (paramType= dotted_name )? opt_eol paramName= argument opt_eol )* )?",16,0,input);
    throw nvae;
  }
switch (alt16) {
case 1:
{
      int alt13=2;
      alt13=dfa13.predict(input);
switch (alt13) {
case 1:
{
          following.push(FOLLOW_dotted_name_in_function410);
          paramType=dotted_name();
          following.pop();
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_function414);
  opt_eol();
  following.pop();
  following.push(FOLLOW_argument_in_function418);
  paramName=argument();
  following.pop();
  following.push(FOLLOW_opt_eol_in_function420);
  opt_eol();
  following.pop();
  f.addParameter(paramType,paramName);
  loop15:   do {
    int alt15=2;
    int LA15_0=input.LA(1);
    if (LA15_0 == 24) {
      alt15=1;
    }
switch (alt15) {
case 1:
{
        match(input,24,FOLLOW_24_in_function434);
        following.push(FOLLOW_opt_eol_in_function436);
        opt_eol();
        following.pop();
        int alt14=2;
        alt14=dfa14.predict(input);
switch (alt14) {
case 1:
{
            following.push(FOLLOW_dotted_name_in_function441);
            paramType=dotted_name();
            following.pop();
          }
        break;
    }
    following.push(FOLLOW_opt_eol_in_function445);
    opt_eol();
    following.pop();
    following.push(FOLLOW_argument_in_function449);
    paramName=argument();
    following.pop();
    following.push(FOLLOW_opt_eol_in_function451);
    opt_eol();
    following.pop();
    f.addParameter(paramType,paramName);
  }
break;
default :
break loop15;
}
}
 while (true);
}
break;
}
match(input,25,FOLLOW_25_in_function476);
following.push(FOLLOW_opt_eol_in_function480);
opt_eol();
following.pop();
match(input,26,FOLLOW_26_in_function484);
following.push(FOLLOW_curly_chunk_in_function491);
body=curly_chunk();
following.pop();
f.setText(body);
match(input,27,FOLLOW_27_in_function500);
packageDescr.addFunction(f);
following.push(FOLLOW_opt_eol_in_function508);
opt_eol();
following.pop();
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
