{
  Token name=null;
  String retType=null;
  String paramType=null;
  String paramName=null;
  String body=null;
  FunctionDescr f=null;
  try {
{
      match(this.input,22,RuleParser.FOLLOW_22_in_function362);
      this.following.push(RuleParser.FOLLOW_opt_eol_in_function364);
      opt_eol();
      this.following.pop();
      int alt12=2;
      alt12=this.dfa12.predict(this.input);
switch (alt12) {
case 1:
{
          this.following.push(RuleParser.FOLLOW_dotted_name_in_function369);
          retType=dotted_name();
          this.following.pop();
        }
      break;
  }
  this.following.push(RuleParser.FOLLOW_opt_eol_in_function373);
  opt_eol();
  this.following.pop();
  name=(Token)this.input.LT(1);
  match(this.input,RuleParser.ID,RuleParser.FOLLOW_ID_in_function377);
  this.following.push(RuleParser.FOLLOW_opt_eol_in_function379);
  opt_eol();
  this.following.pop();
  f=new FunctionDescr(name.getText(),retType);
  match(this.input,23,RuleParser.FOLLOW_23_in_function388);
  this.following.push(RuleParser.FOLLOW_opt_eol_in_function390);
  opt_eol();
  this.following.pop();
  int alt16=2;
  final int LA16_0=this.input.LA(1);
  if ((LA16_0 >= RuleParser.EOL && LA16_0 <= RuleParser.ID) || LA16_0 == 15) {
    alt16=1;
  }
 else   if (LA16_0 == 25) {
    alt16=2;
  }
 else {
    final NoViableAltException nvae=new NoViableAltException("342:25: ( (paramType= dotted_name )? opt_eol paramName= argument opt_eol ( \',\' opt_eol (paramType= dotted_name )? opt_eol paramName= argument opt_eol )* )?",16,0,this.input);
    throw nvae;
  }
switch (alt16) {
case 1:
{
      int alt13=2;
      alt13=this.dfa13.predict(this.input);
switch (alt13) {
case 1:
{
          this.following.push(RuleParser.FOLLOW_dotted_name_in_function400);
          paramType=dotted_name();
          this.following.pop();
        }
      break;
  }
  this.following.push(RuleParser.FOLLOW_opt_eol_in_function404);
  opt_eol();
  this.following.pop();
  this.following.push(RuleParser.FOLLOW_argument_in_function408);
  paramName=argument();
  this.following.pop();
  this.following.push(RuleParser.FOLLOW_opt_eol_in_function410);
  opt_eol();
  this.following.pop();
  f.addParameter(paramType,paramName);
  loop15:   do {
    int alt15=2;
    final int LA15_0=this.input.LA(1);
    if (LA15_0 == 24) {
      alt15=1;
    }
switch (alt15) {
case 1:
{
        match(this.input,24,RuleParser.FOLLOW_24_in_function424);
        this.following.push(RuleParser.FOLLOW_opt_eol_in_function426);
        opt_eol();
        this.following.pop();
        int alt14=2;
        alt14=this.dfa14.predict(this.input);
switch (alt14) {
case 1:
{
            this.following.push(RuleParser.FOLLOW_dotted_name_in_function431);
            paramType=dotted_name();
            this.following.pop();
          }
        break;
    }
    this.following.push(RuleParser.FOLLOW_opt_eol_in_function435);
    opt_eol();
    this.following.pop();
    this.following.push(RuleParser.FOLLOW_argument_in_function439);
    paramName=argument();
    this.following.pop();
    this.following.push(RuleParser.FOLLOW_opt_eol_in_function441);
    opt_eol();
    this.following.pop();
    f.addParameter(paramType,paramName);
  }
break;
default :
break loop15;
}
}
 while (true);
}
break;
}
match(this.input,25,RuleParser.FOLLOW_25_in_function466);
this.following.push(RuleParser.FOLLOW_opt_eol_in_function470);
opt_eol();
this.following.pop();
match(this.input,26,RuleParser.FOLLOW_26_in_function474);
this.following.push(RuleParser.FOLLOW_curly_chunk_in_function481);
body=curly_chunk();
this.following.pop();
f.setText(body);
match(this.input,27,RuleParser.FOLLOW_27_in_function490);
this.packageDescr.addFunction(f);
this.following.push(RuleParser.FOLLOW_opt_eol_in_function498);
opt_eol();
this.following.pop();
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
