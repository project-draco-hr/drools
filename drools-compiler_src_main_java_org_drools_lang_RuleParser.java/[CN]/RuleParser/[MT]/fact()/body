{
  PatternDescr d;
  Token loc=null;
  Token endLoc=null;
  String id=null;
  List c=null;
  d=null;
  try {
{
      following.push(FOLLOW_dotted_name_in_fact1614);
      id=dotted_name();
      following.pop();
      d=new ColumnDescr(id);
      following.push(FOLLOW_opt_eol_in_fact1622);
      opt_eol();
      following.pop();
      loc=(Token)input.LT(1);
      match(input,23,FOLLOW_23_in_fact1630);
      d.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      following.push(FOLLOW_opt_eol_in_fact1633);
      opt_eol();
      following.pop();
      int alt47=2;
      alt47=dfa47.predict(input);
switch (alt47) {
case 1:
{
          following.push(FOLLOW_constraints_in_fact1639);
          c=constraints();
          following.pop();
          for (Iterator cIter=c.iterator(); cIter.hasNext(); ) {
            ((ColumnDescr)d).addDescr((PatternDescr)cIter.next());
          }
        }
      break;
  }
  following.push(FOLLOW_opt_eol_in_fact1658);
  opt_eol();
  following.pop();
  endLoc=(Token)input.LT(1);
  match(input,25,FOLLOW_25_in_fact1662);
  following.push(FOLLOW_opt_eol_in_fact1664);
  opt_eol();
  following.pop();
  d.setEndLocation(offset(endLoc.getLine()),endLoc.getCharPositionInLine());
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
