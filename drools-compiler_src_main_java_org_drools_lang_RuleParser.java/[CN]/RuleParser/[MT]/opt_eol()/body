{
  try {
{
      loop1:       do {
        int alt1=2;
        final int LA1_0=this.input.LA(1);
        if (LA1_0 == RuleParser.EOL) {
          alt1=1;
        }
 else         if (LA1_0 == 15) {
          alt1=1;
        }
switch (alt1) {
case 1:
{
            if (this.input.LA(1) == RuleParser.EOL || this.input.LA(1) == 15) {
              this.input.consume();
              this.errorRecovery=false;
            }
 else {
              final MismatchedSetException mse=new MismatchedSetException(null,this.input);
              recoverFromMismatchedSet(this.input,mse,RuleParser.FOLLOW_set_in_opt_eol41);
              throw mse;
            }
          }
        break;
default :
      break loop1;
  }
}
 while (true);
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return;
}
