{
  Token a=null;
  PatternDescr d=null;
  String text=null;
  try {
{
      loop23:       do {
        int alt23=3;
switch (input.LA(1)) {
case 22:
          int LA23_1=input.LA(2);
        if (LA23_1 == EOL) {
          alt23=1;
        }
      break;
case EOL:
    int LA23_2=input.LA(2);
  if (LA23_2 == EOL) {
    alt23=1;
  }
break;
case 27:
int LA23_3=input.LA(2);
if (LA23_3 == EOL) {
alt23=1;
}
 else if (LA23_3 == ID || LA23_3 == 29 || (LA23_3 >= 41 && LA23_3 <= 43)) {
alt23=2;
}
break;
case ID:
case INT:
case STRING:
case FLOAT:
case MISC:
case WS:
case SH_STYLE_SINGLE_LINE_COMMENT:
case C_STYLE_SINGLE_LINE_COMMENT:
case MULTI_LINE_COMMENT:
case 14:
case 15:
case 16:
case 17:
case 18:
case 19:
case 20:
case 21:
case 23:
case 24:
case 25:
case 26:
case 28:
case 29:
case 30:
case 31:
case 32:
case 33:
case 34:
case 35:
case 36:
case 37:
case 38:
case 39:
case 40:
case 41:
case 42:
case 43:
case 44:
alt23=1;
break;
}
switch (alt23) {
case 1:
{
{
a=(Token)input.LT(1);
matchAny(input);
if (text == null) {
text=a.getText();
}
 else {
text=text + " " + a.getText();
}
match(input,EOL,FOLLOW_EOL_in_expander_lhs_block640);
d=runExpander(text);
descrs.addDescr(d);
text=null;
d=null;
}
}
break;
case 2:
{
match(input,27,FOLLOW_27_in_expander_lhs_block659);
following.push(FOLLOW_lhs_in_expander_lhs_block663);
d=lhs();
following.pop();
descrs.addDescr(d);
}
break;
default :
break loop23;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
