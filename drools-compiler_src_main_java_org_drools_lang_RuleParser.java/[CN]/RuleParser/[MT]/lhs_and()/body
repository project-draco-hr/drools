{
  PatternDescr d;
  PatternDescr left=null;
  PatternDescr right=null;
  d=null;
  try {
{
      AndDescr and=null;
      following.push(FOLLOW_lhs_unary_in_lhs_and2426);
      left=lhs_unary();
      following.pop();
      d=left;
      loop57:       do {
        int alt57=2;
        int LA57_0=input.LA(1);
        if ((LA57_0 >= 52 && LA57_0 <= 53)) {
          alt57=1;
        }
switch (alt57) {
case 1:
{
            if ((input.LA(1) >= 52 && input.LA(1) <= 53)) {
              input.consume();
              errorRecovery=false;
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recoverFromMismatchedSet(input,mse,FOLLOW_set_in_lhs_and2435);
              throw mse;
            }
            following.push(FOLLOW_opt_eol_in_lhs_and2440);
            opt_eol();
            following.pop();
            following.push(FOLLOW_lhs_unary_in_lhs_and2447);
            right=lhs_unary();
            following.pop();
            if (and == null) {
              and=new AndDescr();
              and.addDescr(left);
              d=and;
            }
            and.addDescr(right);
          }
        break;
default :
      break loop57;
  }
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return d;
}
