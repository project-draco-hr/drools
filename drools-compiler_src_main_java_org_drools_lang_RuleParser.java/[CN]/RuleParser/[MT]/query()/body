{
  QueryDescr query;
  Token loc=null;
  String queryName=null;
  query=null;
  try {
{
      this.following.push(RuleParser.FOLLOW_opt_eol_in_query522);
      opt_eol();
      this.following.pop();
      loc=(Token)this.input.LT(1);
      match(this.input,28,RuleParser.FOLLOW_28_in_query528);
      this.following.push(RuleParser.FOLLOW_word_in_query532);
      queryName=word();
      this.following.pop();
      this.following.push(RuleParser.FOLLOW_opt_eol_in_query534);
      opt_eol();
      this.following.pop();
      query=new QueryDescr(queryName,null);
      query.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      final AndDescr lhs=new AndDescr();
      query.setLhs(lhs);
      lhs.setLocation(offset(loc.getLine()),loc.getCharPositionInLine());
      int alt17=2;
switch (this.input.LA(1)) {
case 23:
        final int LA17_1=this.input.LA(2);
      if (this.expander != null) {
        alt17=1;
      }
 else       if (true) {
        alt17=2;
      }
 else {
        final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,1,this.input);
        throw nvae;
      }
    break;
case EOL:
  final int LA17_2=this.input.LA(2);
if (this.expander != null) {
  alt17=1;
}
 else if (true) {
  alt17=2;
}
 else {
  final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,2,this.input);
  throw nvae;
}
break;
case 29:
final int LA17_3=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,3,this.input);
throw nvae;
}
break;
case 56:
final int LA17_4=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,4,this.input);
throw nvae;
}
break;
case 57:
final int LA17_5=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,5,this.input);
throw nvae;
}
break;
case 58:
final int LA17_6=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,6,this.input);
throw nvae;
}
break;
case ID:
final int LA17_7=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,7,this.input);
throw nvae;
}
break;
case 15:
final int LA17_8=this.input.LA(2);
if (this.expander != null) {
alt17=1;
}
 else if (true) {
alt17=2;
}
 else {
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,8,this.input);
throw nvae;
}
break;
case INT:
case BOOL:
case STRING:
case FLOAT:
case MISC:
case WS:
case SH_STYLE_SINGLE_LINE_COMMENT:
case C_STYLE_SINGLE_LINE_COMMENT:
case MULTI_LINE_COMMENT:
case 16:
case 17:
case 18:
case 19:
case 20:
case 21:
case 22:
case 24:
case 25:
case 26:
case 27:
case 28:
case 30:
case 31:
case 32:
case 33:
case 34:
case 35:
case 36:
case 37:
case 38:
case 39:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
case 53:
case 54:
case 55:
case 59:
case 60:
case 61:
alt17=1;
break;
default :
final NoViableAltException nvae=new NoViableAltException("380:17: ({...}? expander_lhs_block[lhs] | normal_lhs_block[lhs] )",17,0,this.input);
throw nvae;
}
switch (alt17) {
case 1:
{
if (!(this.expander != null)) {
throw new FailedPredicateException(this.input,"query"," expander != null ");
}
this.following.push(RuleParser.FOLLOW_expander_lhs_block_in_query550);
expander_lhs_block(lhs);
this.following.pop();
}
break;
case 2:
{
this.following.push(RuleParser.FOLLOW_normal_lhs_block_in_query558);
normal_lhs_block(lhs);
this.following.pop();
}
break;
}
match(this.input,29,RuleParser.FOLLOW_29_in_query573);
this.following.push(RuleParser.FOLLOW_opt_eol_in_query575);
opt_eol();
this.following.pop();
}
}
 catch (final RecognitionException re) {
reportError(re);
recover(this.input,re);
}
 finally {
}
return query;
}
