{
  System.out.println("Setting up the repository, registering node types etc.");
  try {
    Node root=session.getRootNode();
    Workspace ws=session.getWorkspace();
    boolean registered=RulesRepositoryAdministrator.isNamespaceRegistered(session);
    if (!registered) {
      ws.getNamespaceRegistry().registerNamespace("drools",RulesRepository.DROOLS_URI);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/tag_node_type.cnd",session,ws);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/state_node_type.cnd",session,ws);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/versionable_node_type.cnd",session,ws);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/versionable_asset_folder_node_type.cnd",session,ws);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/rule_node_type.cnd",session,ws);
      jcrRepositoryConfigurator.registerNodeTypesFromCndFile("/node_type_definitions/rulepackage_node_type.cnd",session,ws);
    }
    Node repositoryNode=RulesRepository.addNodeIfNew(root,RulesRepository.RULES_REPOSITORY_NAME,"nt:folder");
    Node packageAreaNode=RulesRepository.addNodeIfNew(repositoryNode,RulesRepository.RULE_PACKAGE_AREA,"nt:folder");
    if (!packageAreaNode.hasNode(RulesRepository.RULE_GLOBAL_AREA)) {
      Node globalAreaNode=RulesRepository.addNodeIfNew(packageAreaNode,RulesRepository.RULE_GLOBAL_AREA,PackageItem.RULE_PACKAGE_TYPE_NAME);
      globalAreaNode.addNode(PackageItem.ASSET_FOLDER_NAME,"drools:versionableAssetFolder");
      globalAreaNode.setProperty(PackageItem.TITLE_PROPERTY_NAME,RulesRepository.RULE_GLOBAL_AREA);
      globalAreaNode.setProperty(AssetItem.DESCRIPTION_PROPERTY_NAME,"the global area that holds sharable assets");
      globalAreaNode.setProperty(AssetItem.FORMAT_PROPERTY_NAME,PackageItem.PACKAGE_FORMAT);
      globalAreaNode.setProperty(PackageItem.CREATOR_PROPERTY_NAME,session.getUserID());
      Calendar lastModified=Calendar.getInstance();
      globalAreaNode.setProperty(PackageItem.LAST_MODIFIED_PROPERTY_NAME,lastModified);
    }
    RulesRepository.addNodeIfNew(repositoryNode,RulesRepository.PACKAGE_SNAPSHOT_AREA,"nt:folder");
    RulesRepository.addNodeIfNew(repositoryNode,RulesRepository.TAG_AREA,"nt:folder");
    RulesRepository.addNodeIfNew(repositoryNode,RulesRepository.STATE_AREA,"nt:folder");
    RulesRepository.addNodeIfNew(repositoryNode.getNode(RulesRepository.STATE_AREA),StateItem.DRAFT_STATE_NAME,StateItem.STATE_NODE_TYPE_NAME);
    session.save();
  }
 catch (  Exception e) {
    log.error("Caught Exception",e);
    System.err.println(e.getMessage());
    throw new RepositoryException(e);
  }
}
