{
  String str="" + "package org.drools.test \n" + "import java.util.List\n"+ "import java.util.ArrayList\n"+ "global List list\n"+ "declare Foo id : int end \n"+ "declare Bar "+ " name : String "+ " val : int "+ "end \n"+ "query fooffa( String $name, Foo $f )\n"+ " Bar( name == $name, $id : val )\n"+ " $f := Foo( id == $id ) \n"+ "end\n"+ "rule R when\n"+ " o : String( this == 'go' )\n"+ " fooffa( \"x\", $f ; )\n"+ "then\n"+ " list.add( $f );\n"+ "end\n"+ "rule S when\n"+ "then\n"+ " insert( new Foo( 1 ) );\n"+ " insert( new Bar( \"x\", 1 ) );\n"+ "end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(str.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  kbase=SerializationHelper.serializeObject(kbase);
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List<Integer> list=new ArrayList<Integer>();
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  ksession.insert("go");
  ksession.fireAllRules();
  System.out.println(list);
  assertEquals(1,list.size());
}
