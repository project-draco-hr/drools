{
  String str="" + "package org.drools.test  \n" + "import java.util.List\n"+ "import java.util.ArrayList\n"+ "global List list\n"+ "dialect \"mvel\"\n"+ "\n"+ "import BackwardChainingTest.Q\n"+ "import BackwardChainingTest.R\n"+ "import BackwardChainingTest.S\n"+ "query object(Object o)\n"+ "    o := Object() \n"+ "end\n"+ "rule collectObjects when\n"+ "   String( this == 'go1' )\n"+ "   object( o; )\n"+ "then\n"+ "   list.add( o );\n"+ "end\n"+ "rule init when\n"+ "   String( this == 'init' )\n"+ "then\n"+ " insert( new Q(1) );\n "+ " insert( new Q(5) );\n "+ " insert( new Q(6) );\n "+ " insert( new R(1) );\n "+ " insert( new R(4) );\n "+ " insert( new R(6) );\n "+ " insert( new R(2) );\n "+ " insert( new S(2) );\n "+ " insert( new S(3) );\n "+ " insert( new S(6) );\n "+ "end\n"+ "";
  KnowledgeBase kbase=SerializationHelper.serializeObject(loadKnowledgeBaseFromString(str));
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List<Integer> list=new ArrayList<Integer>();
  ksession.setGlobal("list",list);
  ksession.insert("init");
  ksession.fireAllRules();
  ksession.insert("go1");
  ksession.fireAllRules();
  System.out.println(list);
  assertEquals(13,list.size());
  assertContains(new Object[]{"go1","init",new Q(6),new R(6),new S(3),new R(2),new R(1),new R(4),new S(2),new S(6),new Q(1),new Q(5)},list);
  ksession.dispose();
  ksession=createKnowledgeSession(kbase);
  list=new ArrayList<Integer>();
  ksession.setGlobal("list",list);
  ksession.insert("go1");
  ksession.fireAllRules();
  ksession.insert("init");
  ksession.fireAllRules();
  System.out.println(list);
  assertEquals(13,list.size());
  assertContains(new Object[]{"go1","init",new Q(6),new R(6),new S(3),new R(2),new R(1),new R(4),new S(2),new S(6),new Q(1),new Q(5)},list);
}
