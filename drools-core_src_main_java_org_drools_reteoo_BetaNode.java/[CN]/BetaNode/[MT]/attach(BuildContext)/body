{
  constraints.init(context,this);
  setUnificationJoin();
  this.rightInput.addObjectSink(this);
  this.leftInput.addTupleSink(this,context);
  if (context == null) {
    return;
  }
  for (  InternalWorkingMemory workingMemory : context.getWorkingMemories()) {
    final PropagationContext propagationContext=new PropagationContextImpl(workingMemory.getNextPropagationIdCounter(),PropagationContext.RULE_ADDITION,null,null,null);
    if (!lrUnlinkingEnabled || !(this instanceof JoinNode)) {
      this.rightInput.updateSink(this,propagationContext,workingMemory);
    }
    this.leftInput.updateSink(this,propagationContext,workingMemory);
  }
}
