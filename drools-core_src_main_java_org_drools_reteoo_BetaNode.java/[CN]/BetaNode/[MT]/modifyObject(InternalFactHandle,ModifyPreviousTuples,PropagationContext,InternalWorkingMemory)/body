{
  RightTuple rightTuple=modifyPreviousTuples.peekRightTuple();
  while (rightTuple != null && ((BetaNode)rightTuple.getRightTupleSink()).getRightInputOtnId() < getRightInputOtnId()) {
    modifyPreviousTuples.removeRightTuple();
    rightTuple.setPropagationContext(context);
    if (isUnlinkingEnabled()) {
      BetaMemory bm=null;
      if (getType() == NodeTypeEnums.AccumulateNode) {
        bm=((AccumulateMemory)wm.getNodeMemory(this)).getBetaMemory();
      }
 else {
        bm=((BetaMemory)wm.getNodeMemory(this));
      }
      bm.getStagedRightTuples().addDelete(rightTuple);
    }
 else {
      rightTuple.getRightTupleSink().retractRightTuple(rightTuple,context,wm);
    }
    rightTuple=modifyPreviousTuples.peekRightTuple();
  }
  if (rightTuple != null && ((BetaNode)rightTuple.getRightTupleSink()).getRightInputOtnId() == getRightInputOtnId()) {
    modifyPreviousTuples.removeRightTuple();
    rightTuple.reAdd();
    rightTuple.setPropagationContext(context);
    if (intersect(context.getModificationMask(),rightInferredMask)) {
      if (isUnlinkingEnabled()) {
        BetaMemory bm=null;
        if (getType() == NodeTypeEnums.AccumulateNode) {
          bm=((AccumulateMemory)wm.getNodeMemory(this)).getBetaMemory();
        }
 else {
          bm=((BetaMemory)wm.getNodeMemory(this));
        }
        rightTuple.setPropagationContext(context);
        bm.getStagedRightTuples().addUpdate(rightTuple);
      }
 else {
        modifyRightTuple(rightTuple,context,wm);
      }
    }
  }
 else {
    if (intersect(context.getModificationMask(),rightInferredMask)) {
      assertObject(factHandle,context,wm);
    }
  }
}
