{
  PortableWorkDefinition def1=new PortableWorkDefinition();
  def1.setName("def1name");
  column1.setWorkItemDefinition(def1);
  column1.setHeader("header1");
  column1.setHideColumn(false);
  column1.setDefaultValue(new DTCellValue52("default1"));
  PortableWorkDefinition def2=new PortableWorkDefinition();
  def2.setName("def2name");
  column2.setWorkItemDefinition(def2);
  column2.setHeader("header2");
  column2.setHideColumn(true);
  column2.setDefaultValue(new DTCellValue52("default2"));
  List<BaseColumnFieldDiff> diff=column1.diff(column2);
  assertNotNull(diff);
  assertEquals(4,diff.size());
  assertEquals(FIELD_HIDE_COLUMN,diff.get(0).getFieldName());
  assertEquals(false,diff.get(0).getOldValue());
  assertEquals(true,diff.get(0).getValue());
  assertEquals(FIELD_DEFAULT_VALUE,diff.get(1).getFieldName());
  assertEquals("default1",diff.get(1).getOldValue());
  assertEquals("default2",diff.get(1).getValue());
  assertEquals(FIELD_HEADER,diff.get(2).getFieldName());
  assertEquals("header1",diff.get(2).getOldValue());
  assertEquals("header2",diff.get(2).getValue());
  assertEquals(FIELD_WORKITEM_DEFINITION_NAME,diff.get(3).getFieldName());
  assertEquals("def1name",diff.get(3).getOldValue());
  assertEquals("def2name",diff.get(3).getValue());
}
