{
  ReleaseId releaseId1=KieServices.Factory.get().newReleaseId("org.test","test","1.0.0-SNAPSHOT");
  KieServices ks=KieServices.Factory.get();
  KieFileSystem kfs=ks.newKieFileSystem();
  KieBuilder kb=ks.newKieBuilder(kfs);
  kfs.generateAndWritePomXML(releaseId1);
  kfs.write(ResourceFactory.newClassPathResource(source1).setResourceType(ResourceType.PMML));
  kb.buildAll();
  KieContainer kc=ks.newKieContainer(releaseId1);
  KieSession kSession=kc.newKieSession();
  kSession.fireAllRules();
  kfs.write(ResourceFactory.newClassPathResource(source2).setResourceType(ResourceType.PMML));
  IncrementalResults results=((InternalKieBuilder)kb).incrementalBuild();
  kc.updateToVersion(releaseId1);
  kSession.fireAllRules();
  System.err.println(reportWMObjects(kSession));
  assertEquals(2,kSession.getObjects(new ClassObjectFilter(ModelMarker.class)).size());
  assertEquals(11,kSession.getObjects(new ClassObjectFilter(kSession.getKieBase().getFactType(packageName,"Synapse").getFactClass())).size());
  kSession.dispose();
}
