{
  String type="package org.drools.test\n" + "declare Message\n" + "   message : String\n"+ "end\n";
  String drl1="package org.drools.test\n" + "rule R1 when\n" + "   $m : Message()\n"+ "then\n"+ "   if ($m.getClass() != new Message(\"Test\").getClass()) {\n"+ "       throw new RuntimeException();\n"+ "   }\n"+ "end\n";
  String drl2="package org.drools.test\n" + "rule R2_2 when\n" + "   $m : Message( message == \"Hello World\" )\n"+ "then\n"+ "   if ($m.getClass() != new Message(\"Test\").getClass()) {\n"+ "       throw new RuntimeException();\n"+ "   }\n"+ "end\n";
  KieServices ks=KieServices.Factory.get();
  ReleaseId releaseId1=ks.newReleaseId("org.kie","test-delete","1.0.0");
  KieModule km=createAndDeployJar(ks,releaseId1,type,drl1,drl2);
  KieContainer kieContainer=ks.newKieContainer(releaseId1);
  KieContainer kieContainer2=ks.newKieContainer(releaseId1);
  KieSession ksession=kieContainer.newKieSession();
  KieSession ksession2=kieContainer2.newKieSession();
  insertMessageFromTypeDeclaration(ksession);
  assertEquals(2,ksession.fireAllRules());
  ReleaseId releaseId2=ks.newReleaseId("org.kie","test-delete","1.0.1");
  km=createAndDeployJar(ks,releaseId2,type,null,drl2);
  kieContainer.updateToVersion(releaseId2);
  ksession=kieContainer.newKieSession();
  insertMessageFromTypeDeclaration(ksession);
  assertEquals(1,ksession.fireAllRules());
  ksession=kieContainer.newKieSession();
  insertMessageFromTypeDeclaration(ksession);
  assertEquals(1,ksession.fireAllRules());
  insertMessageFromTypeDeclaration(ksession2);
  assertEquals(2,ksession2.fireAllRules());
  ksession2=kieContainer2.newKieSession();
  insertMessageFromTypeDeclaration(ksession2);
  assertEquals(2,ksession2.fireAllRules());
}
