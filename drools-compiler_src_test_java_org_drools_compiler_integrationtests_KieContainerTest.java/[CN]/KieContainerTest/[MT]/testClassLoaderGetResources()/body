{
  KieServices kieServices=KieServices.Factory.get();
  String drl1="package org.drools.testdrl;\n" + "rule R1 when\n" + "   $m : Object()\n"+ "then\n"+ "end\n";
  Resource resource1=kieServices.getResources().newReaderResource(new StringReader(drl1),"UTF-8");
  resource1.setTargetPath("org/drools/testdrl/rules1.drl");
  String drl2="package org.drools.testdrl;\n" + "rule R2 when\n" + "   $m : Object()\n"+ "then\n"+ "end\n";
  Resource resource2=kieServices.getResources().newReaderResource(new StringReader(drl2),"UTF-8");
  resource2.setTargetPath("org/drools/testdrl/rules2.drl");
  String java3="package org.drools.testjava;\n" + "public class Message {}";
  Resource resource3=kieServices.getResources().newReaderResource(new StringReader(java3),"UTF-8");
  resource3.setTargetPath("org/drools/testjava/Message.java");
  resource3.setResourceType(ResourceType.JAVA);
  String kmodule="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<kmodule xmlns=\"http://www.drools.org/xsd/kmodule\">\n" + "  <kbase name=\"testKbase\" packages=\"org.drools.testdrl\">\n"+ "    <ksession name=\"testKsession\"/>\n"+ "  </kbase>\n"+ "</kmodule>";
  ReleaseId releaseId=kieServices.newReleaseId("org.kie","test-delete","1.0.0");
  createAndDeployJar(kieServices,kmodule,releaseId,resource1,resource2,resource3);
  KieContainer kieContainer=kieServices.newKieContainer(releaseId);
  ClassLoader classLoader=kieContainer.getClassLoader();
  assertEnumerationSize(1,classLoader.getResources("org/drools/testjava"));
  assertEnumerationSize(1,classLoader.getResources("org/drools/testdrl/"));
  URL url=classLoader.getResources("org/drools/testdrl").nextElement();
  List<String> lines=IOUtils.readLines(url.openStream());
  Assertions.assertThat(lines).contains("rules1.drl","rules1.drl.properties","rules2.drl","rules2.drl.properties");
  assertUrlEnumerationContainsMatch("^mfs\\:/$",classLoader.getResources(""));
}
