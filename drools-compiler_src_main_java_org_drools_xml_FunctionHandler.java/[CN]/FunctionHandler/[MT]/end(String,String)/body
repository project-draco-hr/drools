{
  Configuration config=xmlPackageReader.endConfiguration();
  String name=config.getAttribute("name");
  if (name == null || name.trim().equals("")) {
    throw new SAXParseException("<function> requires a 'name' attribute",xmlPackageReader.getLocator());
  }
  String returnType=config.getAttribute("return-type");
  if (returnType == null || returnType.trim().equals("")) {
    throw new SAXParseException("<function> requires a 'return-type' attribute",xmlPackageReader.getLocator());
  }
  FunctionDescr functionDescr=new FunctionDescr(name,returnType);
  Configuration[] parameters=config.getChildren("parameter");
  for (int i=0, length=parameters.length; i < length; i++) {
    String identifier=parameters[i].getAttribute("identifier");
    if (name == null || identifier.trim().equals("")) {
      throw new SAXParseException("function's <parameter> requires an 'identifier' attribute",xmlPackageReader.getLocator());
    }
    String type=parameters[i].getAttribute("type");
    if (type == null || type.trim().equals("")) {
      throw new SAXParseException("function's <parameter> requires an 'type' attribute",xmlPackageReader.getLocator());
    }
    functionDescr.addParameter(type,identifier);
  }
  Configuration body=config.getChild("body");
  if (body == null) {
    throw new SAXParseException("function must have a <body>",xmlPackageReader.getLocator());
  }
  functionDescr.setText(body.getText());
  PackageDescr packageDescr=this.xmlPackageReader.getPackageDescr();
  packageDescr.addFunction(functionDescr);
  return functionDescr;
}
