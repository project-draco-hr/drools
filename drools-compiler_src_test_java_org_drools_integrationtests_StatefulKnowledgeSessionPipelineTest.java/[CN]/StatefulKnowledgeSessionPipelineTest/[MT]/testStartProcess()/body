{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  Reader source=new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<process xmlns=\"http://drools.org/drools-5.0/process\"\n" + "         xmlns:xs=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ "         xs:schemaLocation=\"http://drools.org/drools-5.0/process drools-processes-5.0.xsd\"\n"+ "         type=\"RuleFlow\" name=\"flow\" id=\"org.drools.actions\" package-name=\"org.drools\" version=\"1\" >\n"+ "\n"+ "  <header>\n"+ "    <globals>\n"+ "      <global identifier=\"list\" type=\"java.util.List\" />\n"+ "    </globals>\n"+ "  </header>\n"+ "\n"+ "  <nodes>\n"+ "    <start id=\"1\" name=\"Start\" />\n"+ "    <actionNode id=\"2\" name=\"MyActionNode\" >\n"+ "      <action type=\"expression\" dialect=\"java\" >"+ "        String variable = (String) context.getVariable(\"variable\");\n"+ "        list.add(variable);\n"+ "       </action>\n"+ "    </actionNode>\n"+ "    <end id=\"3\" name=\"End\" />\n"+ "  </nodes>\n"+ "\n"+ "  <connections>\n"+ "    <connection from=\"1\" to=\"2\" />\n"+ "    <connection from=\"2\" to=\"3\" />\n"+ "  </connections>\n"+ "\n"+ "</process>");
  kbuilder.add(ResourceFactory.newReaderResource(source),ResourceType.DRF);
  KnowledgeBuilderErrors errors=kbuilder.getErrors();
  if (!errors.isEmpty()) {
    for (    KnowledgeBuilderError error : errors) {
      System.err.println(error);
    }
    fail("Errors while building package");
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List<String> list=new ArrayList<String>();
  Map globals=new HashMap();
  globals.put("list",list);
  StatefulKnowledgeSessionSetGlobalStage setGlobal=new StatefulKnowledgeSessionSetGlobalStage();
  StatefulKnowledgeSessionPipelineImpl pipeline=new StatefulKnowledgeSessionPipelineImpl(ksession);
  pipeline.setReceiver(setGlobal);
  pipeline.insert(globals,null);
  Map vars=new HashMap();
  vars.put("variable","SomeText");
  StatefulKnowledgeSessionStartProcessStage startProcess=new StatefulKnowledgeSessionStartProcessStage("org.drools.actions");
  pipeline=new StatefulKnowledgeSessionPipelineImpl(ksession);
  pipeline.setReceiver(startProcess);
  pipeline.insert(vars,null);
  assertEquals(1,list.size());
  assertEquals("SomeText",list.get(0));
}
