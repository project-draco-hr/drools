{
  RiaPathMemory pathMem=bm.getRiaRuleMemory();
  SegmentMemory[] subnetworkSmems=pathMem.getSegmentMemories();
  SegmentMemory subSmem=null;
  for (int i=0; subSmem == null; i++) {
    subSmem=subnetworkSmems[i];
  }
  StackEntry stackEntry=new StackEntry(liaNode,betaNode,bm.getNodePosMaskBit(),sink,pmem,nodeMem,smems,smemIndex,srcTuples,visitedRules,false);
  stack.add(stackEntry);
  if (log.isTraceEnabled()) {
    int offset=getOffset(betaNode);
    log.trace("{} RiaQueue {} {}",indent(offset),betaNode.toString(),srcTuples.toStringSizes());
  }
  LeftTupleSets subLts=subSmem.getStagedLeftTuples().takeAll();
  innerEval(liaNode,pathMem,subSmem.getRootNode(),1,subSmem.getNodeMemories().getFirst(),subnetworkSmems,subSmem.getPos(),subLts,wm,stack,outerStack,visitedRules,true,executor);
}
