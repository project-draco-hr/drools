{
  for (RightTuple rightTuple=betaNode.getFirstRightTuple(leftTuple,rtm,null,it); rightTuple != null; ) {
    RightTuple nextRight=(RightTuple)it.next(rightTuple);
    if (constraints.isAllowedCachedLeft(contextEntry,rightTuple.getFactHandle())) {
      leftTuple.setBlocker(rightTuple);
      if (useLeftMemory) {
        rightTuple.addBlocked(leftTuple);
        break;
      }
 else       if (betaNode.isRightInputIsRiaNode()) {
        rtm.remove(rightTuple);
      }
 else {
        break;
      }
    }
    rightTuple=nextRight;
  }
}
