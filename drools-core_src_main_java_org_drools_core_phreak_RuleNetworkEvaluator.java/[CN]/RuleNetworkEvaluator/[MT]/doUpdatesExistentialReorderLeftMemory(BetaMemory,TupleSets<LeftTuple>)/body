{
  TupleMemory ltm=bm.getLeftTupleMemory();
  for (LeftTuple leftTuple=srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {
    LeftTuple next=leftTuple.getStagedNext();
    if (leftTuple.getMemory() != null) {
      ltm.remove(leftTuple);
    }
    leftTuple=next;
  }
  for (LeftTuple leftTuple=srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {
    LeftTuple next=leftTuple.getStagedNext();
    RightTuple blocker=leftTuple.getBlocker();
    if (blocker == null) {
      ltm.add(leftTuple);
      for (LeftTuple childLeftTuple=leftTuple.getFirstChild(); childLeftTuple != null; ) {
        LeftTuple childNext=childLeftTuple.getLeftParentNext();
        childLeftTuple.reAddRight();
        childLeftTuple=childNext;
      }
    }
 else     if (blocker.getStagedType() != LeftTuple.NONE) {
      blocker.removeBlocked(leftTuple);
    }
    leftTuple=next;
  }
}
