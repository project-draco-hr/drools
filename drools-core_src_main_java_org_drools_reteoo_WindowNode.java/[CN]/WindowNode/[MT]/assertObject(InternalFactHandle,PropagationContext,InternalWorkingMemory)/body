{
  final WindowMemory memory=(WindowMemory)workingMemory.getNodeMemory(this);
  memory.gate.lock();
  try {
    int index=0;
    for (    AlphaNodeFieldConstraint constraint : constraints) {
      if (!constraint.isAllowed(factHandle,workingMemory,memory.context[index++])) {
        return;
      }
    }
    if (!behavior.assertFact(memory,factHandle,workingMemory)) {
      return;
    }
    WindowTupleList list=new WindowTupleList((EventFactHandle)factHandle,this);
    context.setActiveWindowTupleList(list);
    memory.events.put(factHandle,list);
    this.sink.propagateAssertObject(factHandle,context,workingMemory);
  }
  finally {
    memory.gate.unlock();
  }
}
