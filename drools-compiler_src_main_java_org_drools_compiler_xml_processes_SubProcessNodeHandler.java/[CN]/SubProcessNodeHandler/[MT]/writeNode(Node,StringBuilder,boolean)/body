{
  SubProcessNode subProcessNode=(SubProcessNode)node;
  writeNode("subProcess",subProcessNode,xmlDump,includeMeta);
  String processId=subProcessNode.getProcessId();
  if (processId != null) {
    xmlDump.append("processId=\"" + processId + "\" ");
  }
  if (!subProcessNode.isWaitForCompletion()) {
    xmlDump.append("waitForCompletion=\"false\" ");
  }
  if (!subProcessNode.isIndependent()) {
    xmlDump.append("independent=\"false\" ");
  }
  xmlDump.append(">" + EOL);
  Map<String,String> inMappings=subProcessNode.getInMappings();
  for (  Map.Entry<String,String> inMapping : inMappings.entrySet()) {
    xmlDump.append("      <mapping type=\"in\" " + "from=\"" + inMapping.getValue() + "\" "+ "to=\""+ inMapping.getKey()+ "\" />"+ EOL);
  }
  Map<String,String> outMappings=subProcessNode.getOutMappings();
  for (  Map.Entry<String,String> outMapping : outMappings.entrySet()) {
    xmlDump.append("      <mapping type=\"out\" " + "from=\"" + outMapping.getKey() + "\" "+ "to=\""+ outMapping.getValue()+ "\" />"+ EOL);
  }
  for (  String eventType : subProcessNode.getActionTypes()) {
    writeActions(eventType,subProcessNode.getActions(eventType),xmlDump);
  }
  writeTimers(subProcessNode.getTimers(),xmlDump);
  endNode("subProcess",xmlDump);
}
