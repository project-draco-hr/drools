{
  int localFireCount=0;
  if (!tupleList.isEmpty()) {
    if (!fireExitedEarly && isDeclarativeAgendaEnabled()) {
      RuleAgendaItem nextRule=agenda.peekNextRule();
      if (isLowerSalience(nextRule,ruleAgendaItem.getSalience())) {
        fireExitedEarly=true;
        return localFireCount;
      }
    }
    RuleTerminalNode rtn=(RuleTerminalNode)pmem.getNetworkNode();
    RuleImpl rule=rtn.getRule();
    LeftTuple leftTuple=getNextLeftTuple();
    if (rule.isAllMatches()) {
      agenda.fireConsequenceEvent((AgendaItem)leftTuple,DefaultAgenda.ON_BEFORE_ALL_FIRES_CONSEQUENCE_NAME);
    }
    LeftTuple lastLeftTuple=null;
    for (; leftTuple != null; lastLeftTuple=leftTuple, leftTuple=getNextLeftTuple()) {
      PropagationContext pctx=leftTuple.getPropagationContext();
      pctx=RuleTerminalNode.findMostRecentPropagationContext(leftTuple,pctx);
      if (cancelAndContinue(wm,rtn,rule,leftTuple,pctx,filter)) {
        continue;
      }
      AgendaItem item=(AgendaItem)leftTuple;
      if (agenda.getActivationsFilter() != null && !agenda.getActivationsFilter().accept(item,wm,rtn)) {
        continue;
      }
      agenda.fireActivation(item);
      localFireCount++;
      if (rtn.getLeftTupleSource() == null) {
        break;
      }
      int salience=ruleAgendaItem.getSalience();
      if (queue != null && !queue.isEmpty() && salience != queue.peek().getSalience()) {
        ruleAgendaItem.dequeue();
        ruleAgendaItem.setSalience(queue.peek().getSalience());
        ruleAgendaItem.getAgendaGroup().add(ruleAgendaItem);
        salience=ruleAgendaItem.getSalience();
      }
      if (!rule.isAllMatches()) {
        RuleAgendaItem nextRule=agenda.peekNextRule();
        if (haltRuleFiring(nextRule,fireCount,fireLimit,localFireCount,agenda,salience)) {
          break;
        }
        reEvaluateNetwork(wm,outerStack,fireUntilHalt);
        wm.executeQueuedActions();
      }
      if (tupleList.isEmpty() && !outerStack.isEmpty()) {
        StackEntry entry=outerStack.removeFirst();
        NETWORK_EVALUATOR.evalStackEntry(entry,outerStack,outerStack,this,wm);
      }
    }
    if (rule.isAllMatches()) {
      agenda.fireConsequenceEvent((AgendaItem)lastLeftTuple,DefaultAgenda.ON_AFTER_ALL_FIRES_CONSEQUENCE_NAME);
    }
  }
  removeRuleAgendaItemWhenEmpty(wm);
  fireExitedEarly=false;
  return localFireCount;
}
