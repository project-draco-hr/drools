{
  String qualifiedClass=null;
  Class<?> clazz=null;
  if (importText.endsWith("*")) {
    qualifiedClass=importText.substring(0,importText.indexOf('*')) + className;
  }
 else   if (importText.endsWith("." + className)) {
    qualifiedClass=importText;
  }
 else   if ((className.indexOf('.') > 0) && (importText.endsWith(className.split("\\.")[0]))) {
    qualifiedClass=importText + className.substring(className.indexOf('.'));
  }
 else   if (importText.equals(className)) {
    qualifiedClass=importText;
  }
  if (qualifiedClass != null) {
    try {
      clazz=this.classLoader.loadClass(qualifiedClass);
    }
 catch (    final ClassNotFoundException e) {
      clazz=null;
    }
    int lastIndex;
    while (clazz == null && (lastIndex=qualifiedClass.lastIndexOf('.')) != -1) {
      try {
        qualifiedClass=qualifiedClass.substring(0,lastIndex) + "$" + qualifiedClass.substring(lastIndex + 1);
        clazz=this.classLoader.loadClass(qualifiedClass);
      }
 catch (      final ClassNotFoundException e) {
        clazz=null;
      }
    }
  }
  if (clazz != null) {
    if (this.cachedImports == Collections.EMPTY_MAP) {
      this.cachedImports=new HashMap<String,Class<?>>();
    }
    this.cachedImports.put(clazz.getSimpleName(),clazz);
  }
  return clazz;
}
