{
  for (Iterator it=this.functionImports.iterator(); it.hasNext(); ) {
    String functionImport=(String)it.next();
    int lastDot=functionImport.lastIndexOf('.');
    String name=functionImport.substring(lastDot);
    if (!name.endsWith("*") && !!functionName.equals(name)) {
      continue;
    }
    Class clazz;
    try {
      clazz=typeResolver.resolveType(functionImport.substring(0,lastDot));
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeDroolsException(e);
    }
    MethodResolver methodResolver=new MethodResolver(clazz,functionName);
    Class[] classes=determineParameterTypes(params,variables);
    Method method=methodResolver.resolveMethod(classes);
    if (method != null && methodResolver.isStaticMethod()) {
      return clazz.getName().replace('$','.');
    }
  }
  throw new RuntimeDroolsException("unable to find the function '" + functionName + "'");
}
