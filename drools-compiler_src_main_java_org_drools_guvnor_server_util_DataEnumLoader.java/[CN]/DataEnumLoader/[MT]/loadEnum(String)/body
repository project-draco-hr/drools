{
  if (mvelSource == null || (mvelSource.trim().equals(""))) {
    return Collections.emptyMap();
  }
  if (mvelSource.startsWith("=")) {
    mvelSource=mvelSource.substring(1);
  }
 else {
    mvelSource="[ " + addCommasForNewLines(mvelSource) + " ]";
  }
  final Object mvelData;
  try {
    mvelData=MVEL.eval(mvelSource,new HashMap<String,Object>());
  }
 catch (  RuntimeException e) {
    addError("Unable to load enumeration data.");
    addError(e.getMessage());
    addError("Error type: " + e.getClass().getName());
    return Collections.emptyMap();
  }
  if (!(mvelData instanceof Map<?,?>)) {
    addError("The expression is not a map, it is a " + mvelData.getClass().getName());
    return Collections.emptyMap();
  }
  Map<String,Object> map=(Map<String,Object>)mvelData;
  Map<String,String[]> newMap=new HashMap<String,String[]>();
  for (  Map.Entry<String,Object> entry : map.entrySet()) {
    String key=entry.getKey();
    Object list=entry.getValue();
    if (!(list instanceof List<?> || list instanceof String)) {
      if (list == null) {
        addError("The item with " + key + " is null.");
      }
 else {
        addError("The item with " + key + " is not a list or a string, it is a "+ list.getClass().getName());
      }
      return Collections.emptyMap();
    }
 else     if (list instanceof String) {
      newMap.put(key,new String[]{(String)list});
    }
 else {
      List<?> items=(List<?>)list;
      String[] newItems=new String[items.size()];
      for (int i=0; i < items.size(); i++) {
        Object listItem=items.get(i);
        if (!(listItem instanceof String)) {
          newItems[i]=listItem.toString();
        }
 else {
          newItems[i]=(String)listItem;
        }
      }
      newMap.put(key,newItems);
    }
  }
  return newMap;
}
