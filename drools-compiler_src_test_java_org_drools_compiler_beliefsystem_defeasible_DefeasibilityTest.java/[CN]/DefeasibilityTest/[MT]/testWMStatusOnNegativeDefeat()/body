{
  String droolsSource="package org.drools.tms.test; " + "global java.util.List posList;" + "global java.util.List negList;"+ "declare Bar value : int @key end "+ "rule Top "+ "@Defeasible "+ "@Defeats( 'Sub' ) "+ "when "+ "   $i : Integer( this < 10 ) "+ "then "+ "   insertLogical( new Bar( $i ) ); "+ "end "+ "rule Sub "+ "@Defeasible "+ "when "+ "   $i : Integer() "+ "then "+ "   insertLogical( new Bar( $i ), $i > 10 ? 'pos' : 'neg' ); "+ "end "+ "rule Sup "+ "@Defeasible "+ "@Defeats( 'Sub' ) "+ "when "+ "   $i : Integer( this > 10 ) "+ "then "+ "   insertLogical( new Bar( $i ), 'neg' ); "+ "end "+ "rule React_Pos "+ "when "+ "   $b : Bar() "+ "then "+ "   posList.add( $b ); "+ "   System.out.println( ' ++++ ' + $b ); "+ "end "+ "rule React_Neg "+ "when "+ "   $b : Bar( _.neg )"+ "then "+ "   negList.add( $b ); "+ "   System.out.println( ' ---- ' + $b ); "+ "end "+ "";
  StatefulKnowledgeSession session=getSessionFromString(droolsSource);
  List posList=new ArrayList();
  List negList=new ArrayList();
  session.setGlobal("posList",posList);
  session.setGlobal("negList",negList);
  session.insert(20);
  session.insert(5);
  session.fireAllRules();
  assertEquals(1,posList.size());
  assertEquals(1,negList.size());
  Object posBar=posList.get(0);
  InternalFactHandle posHandle=(InternalFactHandle)session.getFactHandle(posBar);
  DefeasibleBeliefSet dbs=(DefeasibleBeliefSet)posHandle.getEqualityKey().getBeliefSet();
  assertEquals(1,dbs.size());
  assertFalse(dbs.isNegated());
  assertTrue(dbs.isDecided());
  assertTrue(dbs.isPositive());
  assertSame(posHandle,dbs.getFactHandle());
  assertFalse(posHandle.isNegated());
  assertTrue(dbs.isDefeasiblyPosProveable());
  assertTrue(session.getObjects().contains(posBar));
  Object negBar=negList.get(0);
  InternalFactHandle negHandle=(InternalFactHandle)getNegativeHandles(session).get(0);
  dbs=(DefeasibleBeliefSet)negHandle.getEqualityKey().getBeliefSet();
  assertEquals(1,dbs.size());
  assertFalse(dbs.isPositive());
  assertTrue(dbs.isDecided());
  assertTrue(dbs.isNegated());
  assertSame(negHandle,dbs.getFactHandle());
  assertTrue(negHandle.isNegated());
  assertTrue(dbs.isDefeasiblyNegProveable());
  assertTrue(session.getObjects().contains(negBar));
}
