{
  context.getBuildStack().push(context.getRule().getLhs());
  try {
    MVELDialect dialect=(MVELDialect)context.getDialect();
    final DroolsMVELFactory factory=new DroolsMVELFactory(context.getDeclarationResolver().getDeclarations(),null,context.getPkg().getGlobals());
    factory.setNextFactory(dialect.getStaticMethodImportResolverFactory());
    String text=processMacros((String)context.getRuleDescr().getConsequence());
    Dialect.AnalysisResult analysis=dialect.analyzeBlock(context,context.getRuleDescr(),dialect.getInterceptors(),text,null);
    final Serializable expr=dialect.compile(text,analysis,dialect.getInterceptors(),null,context);
    String s=org.mvel.debug.DebugTools.decompile(expr);
    context.getRule().setConsequence(new MVELConsequence(expr,factory));
  }
 catch (  final Exception e) {
    context.getErrors().add(new RuleError(context.getRule(),context.getRuleDescr(),null,"Unable to build expression for 'consequence' '" + context.getRuleDescr().getConsequence() + "'"));
  }
}
