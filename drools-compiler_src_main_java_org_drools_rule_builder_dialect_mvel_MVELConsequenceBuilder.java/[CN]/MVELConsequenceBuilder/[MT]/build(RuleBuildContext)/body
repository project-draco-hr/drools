{
  context.getBuildStack().push(context.getRule().getLhs());
  try {
    MVELDialect dialect=(MVELDialect)context.getDialect();
    String text=processMacros((String)context.getRuleDescr().getConsequence());
    Dialect.AnalysisResult analysis=dialect.analyzeBlock(context,context.getRuleDescr(),dialect.getInterceptors(),text,new Set[]{context.getDeclarationResolver().getDeclarations().keySet(),context.getPkg().getGlobals().keySet()},null);
    final Serializable expr=dialect.compile(text,analysis,dialect.getInterceptors(),null,null,context);
    final DroolsMVELFactory factory=new DroolsMVELFactory(context.getDeclarationResolver().getDeclarations(),null,context.getPkg().getGlobals(),analysis.getBoundIdentifiers());
    context.getRule().setConsequence(new MVELConsequence(expr,factory));
  }
 catch (  final Exception e) {
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),context.getRuleDescr(),null,"Unable to build expression for 'consequence': " + e.getMessage() + " '"+ context.getRuleDescr().getConsequence()+ "'"));
  }
}
