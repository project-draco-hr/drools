{
  context.getBuildStack().push(context.getRule().getLhs());
  try {
    final DroolsMVELFactory factory=new DroolsMVELFactory(context.getDeclarationResolver().getDeclarations(),null,context.getPkg().getGlobals());
    factory.setNextFactory(((MVELDialect)context.getDialect()).getClassImportResolverFactory());
    MacroProcessor macroProcessor=new MacroProcessor();
    macroProcessor.setMacros(macros);
    final Serializable expr=MVEL.compileExpression(macroProcessor.parse(delimitExpressions((String)context.getRuleDescr().getConsequence())),((MVELDialect)context.getDialect()).getClassImportResolverFactory().getImportedClasses(),this.interceptors);
    context.getRule().setConsequence(new MVELConsequence(expr,factory));
  }
 catch (  final Exception e) {
    context.getErrors().add(new RuleError(context.getRule(),context.getRuleDescr(),null,"Unable to build expression for 'consequence' '" + context.getRuleDescr().getConsequence() + "'"));
  }
}
