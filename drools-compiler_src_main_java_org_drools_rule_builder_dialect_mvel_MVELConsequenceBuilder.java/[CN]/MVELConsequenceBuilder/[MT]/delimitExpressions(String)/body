{
  StringBuilder result=new StringBuilder();
  char[] cs=s.toCharArray();
  int brace=0;
  int sqre=0;
  int crly=0;
  char lastNonWhite=';';
  for (int i=0; i < cs.length; i++) {
    char c=cs[i];
switch (c) {
case '/':
      if (i < cs.length - 1 && cs[i + 1] == '*') {
        int start=i;
        i+=2;
        for (; i < cs.length; i++) {
          if (cs[i] == '*' && i < cs.length - 1 && cs[i + 1] == '/') {
            i++;
            break;
          }
 else           if (cs[i] == '\n' || cs[i] == '\r') {
            lastNonWhite=checkAndAddSemiColon(result,brace,sqre,crly,lastNonWhite);
          }
        }
        result.append(cs,start,i - start);
        break;
      }
 else       if (i < cs.length - 1 && cs[i + 1] != '/') {
        break;
      }
case '#':
    lastNonWhite=checkAndAddSemiColon(result,brace,sqre,crly,lastNonWhite);
  i=processLineComment(cs,i,result);
continue;
case '(':
brace++;
break;
case '{':
crly++;
break;
case '[':
sqre++;
break;
case ')':
brace--;
break;
case '}':
crly--;
break;
case ']':
sqre--;
break;
default :
break;
}
if (brace == 0 && sqre == 0 && crly == 0 && (c == '\n' || c == '\r')) {
if (lastNonWhite != ';') {
result.append(';');
lastNonWhite=';';
}
}
 else if (!Character.isWhitespace(c)) {
lastNonWhite=c;
}
result.append(c);
}
return result.toString();
}
