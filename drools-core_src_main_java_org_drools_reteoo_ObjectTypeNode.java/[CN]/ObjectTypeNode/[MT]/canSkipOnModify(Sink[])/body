{
  boolean hasConstraints=false;
  for (int i=0; i < sinks.length && !hasConstraints; i++) {
    if (sinks[i] instanceof AlphaNode || sinks[i] instanceof AccumulateNode || sinks[i] instanceof CollectNode|| sinks[i] instanceof FromNode) {
      hasConstraints=true;
    }
 else     if (sinks[i] instanceof BetaNode && ((BetaNode)sinks[i]).getConstraints().length > 0) {
      hasConstraints=this.usesDeclaration(((BetaNode)sinks[i]).getConstraints());
    }
 else     if (sinks[i] instanceof EvalConditionNode) {
      hasConstraints=this.usesDeclaration(((EvalConditionNode)sinks[i]).getCondition());
    }
    if (!hasConstraints && sinks[i] instanceof RightTupleSource) {
      hasConstraints=!this.canSkipOnModify(((RightTupleSource)sinks[i]).getSinkPropagator().getSinks());
    }
 else     if (!hasConstraints && sinks[i] instanceof LeftTupleSource) {
      hasConstraints=!this.canSkipOnModify(((LeftTupleSource)sinks[i]).getSinkPropagator().getSinks());
    }
  }
  return !hasConstraints;
}
