{
  if (lock.isWriteLockedByCurrentThread()) {
    lock.writeLock().lock();
    return;
  }
  int[] lockCounter=lockCounters.get();
  if (lockCounter[0] > 0) {
    lockCounter[1]=lockCounter[0];
    if (shouldTryAtomicUpgrade && tryingLockUpgrade.compareAndSet(false,true)) {
      atomicLockUpgrade(lockCounter[0]);
    }
 else {
      for (int i=lockCounter[0]; i > 0; i--)       lock.readLock().unlock();
      notifyUpgradingThread();
      lowPriorityWriteLock();
    }
  }
 else {
    lowPriorityWriteLock();
  }
}
