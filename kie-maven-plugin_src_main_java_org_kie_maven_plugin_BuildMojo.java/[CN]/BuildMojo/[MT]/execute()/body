{
  ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
  try {
    Set<URL> urls=new HashSet<URL>();
    for (    String element : project.getCompileClasspathElements()) {
      urls.add(new File(element).toURI().toURL());
    }
    project.setArtifactFilter(new CumulativeScopeArtifactFilter(Arrays.asList("compile","runtime")));
    for (    Artifact artifact : project.getArtifacts()) {
      File file=artifact.getFile();
      if (file != null) {
        urls.add(file.toURI().toURL());
      }
    }
    urls.add(outputDirectory.toURI().toURL());
    ClassLoader projectClassLoader=URLClassLoader.newInstance(urls.toArray(new URL[0]),Thread.currentThread().getContextClassLoader());
    Thread.currentThread().setContextClassLoader(projectClassLoader);
    BPMN2ProcessFactory.loadProvider(projectClassLoader);
    DecisionTableFactory.loadProvider(projectClassLoader);
    ProcessBuilderFactory.loadProvider(projectClassLoader);
    PMMLCompilerFactory.loadProvider(projectClassLoader);
  }
 catch (  DependencyResolutionRequiredException e) {
    throw new RuntimeException(e);
  }
catch (  MalformedURLException e) {
    throw new RuntimeException(e);
  }
  KieServices ks=KieServices.Factory.get();
  try {
    KieRepository kr=ks.getRepository();
    KieModule kModule=kr.addKieModule(ks.getResources().newFileSystemResource(sourceFolder));
    KieContainerImpl kContainer=(KieContainerImpl)ks.newKieContainer(kModule.getReleaseId());
    KieProject kieProject=kContainer.getKieProject();
    ResultsImpl messages=kieProject.verify();
    List<Message> errors=messages.filterMessages(Message.Level.ERROR);
    if (!errors.isEmpty()) {
      for (      Message error : errors) {
        getLog().error(error.toString());
      }
      throw new MojoFailureException("Build failed!");
    }
 else {
      new KieMetaInfoBuilder(new DiskResourceStore(outputDirectory),(InternalKieModule)kModule).writeKieModuleMetaInfo();
    }
  }
  finally {
    Thread.currentThread().setContextClassLoader(contextClassLoader);
  }
  getLog().info("KieModule successfully built!");
}
