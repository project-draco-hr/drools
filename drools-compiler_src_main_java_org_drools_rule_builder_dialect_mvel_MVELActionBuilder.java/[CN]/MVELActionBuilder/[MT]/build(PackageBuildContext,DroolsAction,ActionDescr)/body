{
  String text=processMacros(actionDescr.getText());
  try {
    MVELDialect dialect=(MVELDialect)context.getDialect("mvel");
    Set<String> variables=new HashSet<String>();
    variables.add("context");
    Dialect.AnalysisResult analysis=dialect.analyzeBlock(context,actionDescr,dialect.getInterceptors(),text,new Set[]{variables,context.getPkg().getGlobals().keySet()},null);
    Map<String,Class> variableClasses=new HashMap<String,Class>();
    variableClasses.put("context",ProcessContext.class);
    MVELCompilationUnit unit=dialect.getMVELCompilationUnit(text,analysis,null,null,variableClasses,context);
    MVELAction expr=new MVELAction(unit,context.getDialect().getId());
    expr.setVariableNames(analysis.getNotBoundedIdentifiers());
    action.setMetaData("Action",expr);
    MVELDialectRuntimeData data=(MVELDialectRuntimeData)context.getPkg().getDialectRuntimeRegistry().getDialectData(dialect.getId());
    data.addCompileable(action,expr);
    expr.compile(context.getPackageBuilder().getRootClassLoader());
  }
 catch (  final Exception e) {
    context.getErrors().add(new DescrBuildError(context.getParentDescr(),actionDescr,null,"Unable to build expression for 'action' : " + e.getMessage() + " '"+ actionDescr.getText()+ "'"));
  }
}
