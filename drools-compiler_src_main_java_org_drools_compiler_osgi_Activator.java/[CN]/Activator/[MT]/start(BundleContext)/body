{
  logger.info("registering compiler services");
  this.kbuilderReg=bc.registerService(new String[]{KnowledgeBuilderFactoryService.class.getName(),Service.class.getName()},new KnowledgeBuilderFactoryServiceImpl(),new Hashtable());
  this.dtableTracker=new ServiceTracker(bc,bc.createFilter("(|(" + Constants.OBJECTCLASS + "="+ DecisionTableProvider.class.getName()+ ")("+ Constants.OBJECTCLASS+ "="+ BPMN2ProcessProvider.class.getName()+ ") )"),new DroolsServiceTracker(bc,this));
  this.dtableTracker.open();
  this.bpmn2Tracker=new ServiceTracker(bc,BPMN2ProcessProvider.class.getName(),new DroolsServiceTracker(bc,this));
  this.bpmn2Tracker.open();
  this.processRuntimeTracker=new ServiceTracker(bc,ProcessRuntimeFactoryService.class.getName(),new DroolsServiceTracker(bc,this));
  this.processRuntimeTracker.open();
  this.processMarshallerTracker=new ServiceTracker(bc,ProcessMarshallerFactoryService.class.getName(),new DroolsServiceTracker(bc,this));
  this.processRuntimeTracker.open();
  this.scannerTracker=new ServiceTracker(bc,KieScannerFactoryService.class.getName(),new DroolsServiceTracker(bc,this));
  this.scannerTracker.open();
  this.classResolverTracker=new ServiceTracker(bc,ClassLoaderResolver.class.getName(),new DroolsServiceTracker(bc,this));
  this.classResolverTracker.open();
  logger.info("compiler services registered");
}
