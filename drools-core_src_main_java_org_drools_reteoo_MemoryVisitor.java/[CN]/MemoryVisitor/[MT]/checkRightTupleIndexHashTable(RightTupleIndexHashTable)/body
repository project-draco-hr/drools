{
  final Entry[] entries=memory.getTable();
  int factCount=0;
  int bucketCount=0;
  for (int i=0, length=entries.length; i < length; i++) {
    if (entries[i] != null) {
      RightTupleList rightTupleList=(RightTupleList)entries[i];
      while (rightTupleList != null) {
        if (rightTupleList.first != null) {
          Entry entry=rightTupleList.first;
          while (entry != null) {
            entry=entry.getNext();
            factCount++;
          }
        }
 else {
          System.out.println("error : fieldIndexHashTable cannot have empty FieldIndexEntry objects");
        }
        rightTupleList=(RightTupleList)rightTupleList.getNext();
        bucketCount++;
      }
    }
  }
  try {
    final Field field=AbstractHashTable.class.getDeclaredField("size");
    field.setAccessible(true);
    System.out.println(indent() + "FieldIndexBuckets: " + ((Integer)field.get(memory)).intValue()+ ":"+ bucketCount);
    if (((Integer)field.get(memory)).intValue() != bucketCount) {
      System.out.println(indent() + "error");
    }
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
  System.out.println(indent() + "FieldIndexFacts: " + memory.size()+ ":"+ factCount);
  if (memory.size() != factCount) {
    System.out.println(indent() + "error");
  }
}
