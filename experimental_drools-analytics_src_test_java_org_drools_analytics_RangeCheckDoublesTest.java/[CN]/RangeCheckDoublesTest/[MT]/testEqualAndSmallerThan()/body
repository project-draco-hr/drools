{
  StatelessSession session=getStatelessSession(this.getClass().getResourceAsStream("RangeCheckDoubles.drl"));
  session.setAgendaFilter(new RuleNameMatchesAgendaFilter("Range check for doubles, equal and smaller than"));
  Collection<Object> data=getTestData(this.getClass().getResourceAsStream("MissingRangesForDoubles.drl"));
  AnalysisResultNormal analysisResult=new AnalysisResultNormal();
  session.setGlobal("result",analysisResult);
  StatelessSessionResult sessionResult=session.executeWithResults(data);
  Iterator iter=sessionResult.iterateObjects();
  Set<String> rulesThatHadErrors=new HashSet<String>();
  while (iter.hasNext()) {
    Object o=(Object)iter.next();
    if (o instanceof Gap) {
      rulesThatHadErrors.add(((Gap)o).getRuleName());
    }
  }
  assertTrue(rulesThatHadErrors.remove("Double range 6b, has gap"));
  assertTrue(rulesThatHadErrors.remove("Double range 17b, has gap"));
  if (!rulesThatHadErrors.isEmpty()) {
    for (    String string : rulesThatHadErrors) {
      fail("Rule " + string + " fired.");
    }
  }
}
