{
  AccumulateDescr accumDescr=new DescrFactory().createAccumulate();
  FieldBindingDescr price=new FieldBindingDescr("price","$price");
  PatternDescr cheeseDescr=new PatternDescr("org.drools.Cheese");
  cheeseDescr.addConstraint(price);
  accumDescr.setInputPattern(cheeseDescr);
  accumDescr.setInitCode("int x = 0;");
  accumDescr.setActionCode("x += $price;");
  accumDescr.setResultCode("new Integer( x )");
  org.drools.rule.Package pkg=new org.drools.rule.Package("org.drools");
  PackageBuilder pkgBuilder=new PackageBuilder(pkg);
  DialectRegistry registry=new DialectRegistry();
  Dialect java=new JavaDialect(pkgBuilder);
  registry.addDialect("java",java);
  RuleDescr ruleDescr=new RuleDescr("test rule");
  PackageBuilderConfiguration conf=new PackageBuilderConfiguration();
  RuleBuildContext context=new RuleBuildContext(conf,pkg,ruleDescr,registry,java);
  Accumulate accumulate=(Accumulate)builder.build(context,accumDescr);
  assertTrue(context.getErrors().toString(),context.getErrors().isEmpty());
}
