{
  AccumulateDescr accumDescr=new DescrFactory().createAccumulate();
  FieldBindingDescr price=new FieldBindingDescr("price","$price");
  PatternDescr cheeseDescr=new PatternDescr("org.drools.Cheese");
  cheeseDescr.addConstraint(price);
  accumDescr.setInputPattern(cheeseDescr);
  accumDescr.setInitCode("int x = 0;");
  accumDescr.setActionCode("x += $price;");
  accumDescr.setResultCode("new Integer( x )");
  org.drools.rule.Package pkg=new org.drools.rule.Package("org.drools");
  final PackageBuilder pkgBulider=new PackageBuilder(pkg);
  final PackageBuilderConfiguration conf=pkgBulider.getPackageBuilderConfiguration();
  Dialect dialect=pkgBulider.getDialectRegistry().getDialect("java");
  RuleDescr ruleDescr=new RuleDescr("test rule");
  RuleBuildContext context=new RuleBuildContext(conf,pkg,ruleDescr,conf.buildDialectRegistry(),dialect);
  Accumulate accumulate=(Accumulate)builder.build(context,accumDescr);
  assertTrue(context.getErrors().toString(),context.getErrors().isEmpty());
}
