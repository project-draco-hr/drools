{
  AccumulateDescr accumDescr=new AccumulateDescr();
  BindingDescr price=new BindingDescr("$price","price");
  PatternDescr cheeseDescr=new PatternDescr("org.drools.Cheese");
  cheeseDescr.addBinding(price);
  accumDescr.setInputPattern(cheeseDescr);
  accumDescr.setInitCode("int x = 0; int y = 0;");
  accumDescr.setActionCode("x += $price;");
  accumDescr.setResultCode("new Integer( x )");
  final PackageBuilder pkgBuilder=new PackageBuilder();
  pkgBuilder.addPackage(new PackageDescr("org.drools"));
  final PackageBuilderConfiguration conf=pkgBuilder.getPackageBuilderConfiguration();
  PackageRegistry pkgReg=pkgBuilder.getPackageRegistry("org.drools");
  Package pkg=pkgReg.getPackage();
  DialectCompiletimeRegistry dialectRegistry=pkgReg.getDialectCompiletimeRegistry();
  Dialect dialect=dialectRegistry.getDialect("java");
  RuleDescr ruleDescr=new RuleDescr("test rule");
  RuleBuildContext context=new RuleBuildContext(pkgBuilder,ruleDescr,dialectRegistry,pkg,dialect);
  Accumulate accumulate=(Accumulate)builder.build(context,accumDescr);
  String generatedCode=(String)context.getMethods().get(0);
  assertTrue(generatedCode.contains("private int x;"));
  assertTrue(generatedCode.contains("private int y;"));
  assertTrue(generatedCode.contains("x = 0;y = 0;"));
}
