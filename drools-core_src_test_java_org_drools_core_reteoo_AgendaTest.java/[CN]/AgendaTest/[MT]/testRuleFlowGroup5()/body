{
  final ReteooWorkingMemory workingMemory=(ReteooWorkingMemory)ruleBase.newStatefulSession();
  final DefaultAgenda agenda=(DefaultAgenda)workingMemory.getAgenda();
  final Consequence consequence0=new Consequence(){
    private static final long serialVersionUID=510l;
    public void evaluate(    KnowledgeHelper knowledgeHelper,    WorkingMemory w){
    }
    public void readExternal(    ObjectInput in) throws IOException, ClassNotFoundException {
    }
    public void writeExternal(    ObjectOutput out) throws IOException {
    }
    public String getName(){
      return "default";
    }
  }
;
  final Rule rule0=new Rule("test-rule0");
  rule0.setRuleFlowGroup("rule-flow-group-0");
  rule0.setConsequence(consequence0);
  final RuleFlowGroup ruleFlowGroup0=agenda.getRuleFlowGroup("rule-flow-group-0");
  assertTrue(ruleFlowGroup0.isAutoDeactivate());
  assertEquals(0,ruleFlowGroup0.size());
  assertEquals(0,agenda.agendaSize());
}
