{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newInputStreamResource(PersistenceTest.class.getResourceAsStream("lifecycle.drl")),ResourceType.DRL);
  kbuilder.add(ResourceFactory.newInputStreamResource(PersistenceTest.class.getResourceAsStream("cep-lifecycle.drl")),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    throw new RuntimeException(kbuilder.getErrors().toString());
  }
  kbase=kbuilder.newKnowledgeBase();
  storage=File.createTempFile("session","bin");
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  marshallSession(ksession);
  ksession=unmarshallSession();
  ksession.fireAllRules();
  marshallSession(ksession);
  ksession=unmarshallSession();
  MessageEvent event=new MessageEvent(Type.received,new Message("update"));
  ksession.getWorkingMemoryEntryPoint("EventStream").insert(event);
  marshallSession(ksession);
  ksession=unmarshallSession();
  ksession.getWorkingMemoryEntryPoint("EventStream").insert(event);
  ksession.fireAllRules();
  marshallSession(ksession);
}
