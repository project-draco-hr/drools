{
  BetaNode betaNode=(BetaNode)this.sink.getSinks()[0];
  Memory betaMemory=workingMemory.getNodeMemory(betaNode);
  BetaMemory bm;
  if (betaNode.getType() == NodeTypeEnums.AccumulateNode) {
    bm=((AccumulateMemory)betaMemory).getBetaMemory();
  }
 else {
    bm=(BetaMemory)betaMemory;
  }
  if (bm.getRightTupleMemory().size() > 0) {
    final Iterator it=bm.getRightTupleMemory().iterator();
    for (RightTuple entry=(RightTuple)it.next(); entry != null; entry=(RightTuple)it.next()) {
      LeftTuple leftTuple=(LeftTuple)entry.getFactHandle().getObject();
      leftTuple.unlinkFromLeftParent();
      leftTuple.unlinkFromRightParent();
    }
  }
  workingMemory.clearNodeMemory(this);
}
