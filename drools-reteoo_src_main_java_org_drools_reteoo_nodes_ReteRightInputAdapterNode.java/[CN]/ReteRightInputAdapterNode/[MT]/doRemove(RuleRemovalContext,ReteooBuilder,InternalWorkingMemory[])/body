{
  if (!this.isInUse()) {
    for (    InternalWorkingMemory workingMemory : workingMemories) {
      BetaNode betaNode=(BetaNode)this.getNextLeftTupleSinkNode();
      Memory betaMemory=workingMemory.getNodeMemory(betaNode);
      BetaMemory bm;
      if (betaNode.getType() == NodeTypeEnums.AccumulateNode) {
        bm=((AccumulateMemory)betaMemory).getBetaMemory();
      }
 else {
        bm=(BetaMemory)betaMemory;
      }
      bm.getRightTupleMemory().iterator();
      if (bm.getRightTupleMemory().size() > 0) {
        ProtobufMessages.NodeMemory.RIANodeMemory.Builder _ria=ProtobufMessages.NodeMemory.RIANodeMemory.newBuilder();
        final org.drools.core.util.Iterator it=bm.getRightTupleMemory().iterator();
        for (RightTuple entry=(RightTuple)it.next(); entry != null; entry=(RightTuple)it.next()) {
          LeftTuple leftTuple=(LeftTuple)entry.getFactHandle().getObject();
          leftTuple.unlinkFromLeftParent();
          leftTuple.unlinkFromRightParent();
        }
      }
      workingMemory.clearNodeMemory(this);
    }
  }
  if (!isInUse()) {
    getLeftTupleSource().removeTupleSink(this);
  }
}
