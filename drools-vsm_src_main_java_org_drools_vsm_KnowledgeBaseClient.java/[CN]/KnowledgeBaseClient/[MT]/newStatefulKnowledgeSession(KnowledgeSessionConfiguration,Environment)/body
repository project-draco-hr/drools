{
  String kresultsId="kresults_" + serviceManager.getSessionId();
  String localId=UUID.randomUUID().toString();
  Message msg=new Message(serviceManager.getSessionId(),serviceManager.counter.incrementAndGet(),false,null,new SetVariableCommand("__TEMP__",localId,new KnowledgeContextResolveFromContextCommand(new NewStatefulKnowledgeSessionCommand(null),null,instanceId,null,kresultsId)));
  BlockingMessageResponseHandler handler=new BlockingMessageResponseHandler();
  try {
    serviceManager.client.handler.addResponseHandler(msg.getResponseId(),handler);
    serviceManager.client.session.write(msg);
    Object object=handler.getMessage().getPayload();
    if (!(object instanceof FinishedCommand)) {
      throw new RuntimeException("Response was not correctly ended");
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to execute message",e);
  }
  return new StatefulKnowledgeSessionClient(localId,serviceManager);
}
