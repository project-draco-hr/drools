{
  super.fireActivation(activation);
  LeapsTuple tuple=(LeapsTuple)activation.getTuple();
  ColumnConstraints[] constraints;
  if (tuple.isNotConstraintsPresent()) {
    constraints=tuple.getNotConstraints();
    for (int i=0; i < constraints.length; i++) {
      FactTable factTable=this.workingMemory.getFactTable(((ClassObjectType)constraints[i].getColumn().getObjectType()).getClassType());
      factTable.removeTuple(tuple);
    }
  }
}
