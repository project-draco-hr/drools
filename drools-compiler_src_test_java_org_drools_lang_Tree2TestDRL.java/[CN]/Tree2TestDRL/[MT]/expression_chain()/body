{
  try {
{
      match(input,VT_EXPRESSION_CHAIN,FOLLOW_VT_EXPRESSION_CHAIN_in_expression_chain1258);
      match(input,Token.DOWN,null);
      match(input,ID,FOLLOW_ID_in_expression_chain1260);
      int alt55=2;
      int LA55_0=input.LA(1);
      if ((LA55_0 == VT_SQUARE_CHUNK)) {
        alt55=1;
      }
switch (alt55) {
case 1:
{
          match(input,VT_SQUARE_CHUNK,FOLLOW_VT_SQUARE_CHUNK_in_expression_chain1262);
        }
      break;
  }
  int alt56=2;
  int LA56_0=input.LA(1);
  if ((LA56_0 == VT_PAREN_CHUNK)) {
    alt56=1;
  }
switch (alt56) {
case 1:
{
      match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_expression_chain1265);
    }
  break;
}
int alt57=2;
int LA57_0=input.LA(1);
if ((LA57_0 == VT_EXPRESSION_CHAIN)) {
alt57=1;
}
switch (alt57) {
case 1:
{
  pushFollow(FOLLOW_expression_chain_in_expression_chain1268);
  expression_chain();
  _fsp--;
}
break;
}
match(input,Token.UP,null);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
