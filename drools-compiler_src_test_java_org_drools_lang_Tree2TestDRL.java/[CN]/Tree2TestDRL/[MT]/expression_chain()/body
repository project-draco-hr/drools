{
  try {
{
      match(input,VT_EXPRESSION_CHAIN,FOLLOW_VT_EXPRESSION_CHAIN_in_expression_chain1213);
      match(input,Token.DOWN,null);
      match(input,ID,FOLLOW_ID_in_expression_chain1215);
      int alt52=2;
      int LA52_0=input.LA(1);
      if ((LA52_0 == VT_SQUARE_CHUNK)) {
        alt52=1;
      }
switch (alt52) {
case 1:
{
          match(input,VT_SQUARE_CHUNK,FOLLOW_VT_SQUARE_CHUNK_in_expression_chain1217);
        }
      break;
  }
  int alt53=2;
  int LA53_0=input.LA(1);
  if ((LA53_0 == VT_PAREN_CHUNK)) {
    alt53=1;
  }
switch (alt53) {
case 1:
{
      match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_expression_chain1220);
    }
  break;
}
int alt54=2;
int LA54_0=input.LA(1);
if ((LA54_0 == VT_EXPRESSION_CHAIN)) {
alt54=1;
}
switch (alt54) {
case 1:
{
  pushFollow(FOLLOW_expression_chain_in_expression_chain1223);
  expression_chain();
  state._fsp--;
}
break;
}
match(input,Token.UP,null);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
