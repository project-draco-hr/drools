{
  try {
{
      match(input,VT_EXPRESSION_CHAIN,FOLLOW_VT_EXPRESSION_CHAIN_in_expression_chain1140);
      match(input,Token.DOWN,null);
      match(input,ID,FOLLOW_ID_in_expression_chain1142);
      int alt49=2;
      int LA49_0=input.LA(1);
      if ((LA49_0 == VT_SQUARE_CHUNK)) {
        alt49=1;
      }
switch (alt49) {
case 1:
{
          match(input,VT_SQUARE_CHUNK,FOLLOW_VT_SQUARE_CHUNK_in_expression_chain1144);
        }
      break;
  }
  int alt50=2;
  int LA50_0=input.LA(1);
  if ((LA50_0 == VT_PAREN_CHUNK)) {
    alt50=1;
  }
switch (alt50) {
case 1:
{
      match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_expression_chain1147);
    }
  break;
}
int alt51=2;
int LA51_0=input.LA(1);
if ((LA51_0 == VT_EXPRESSION_CHAIN)) {
alt51=1;
}
switch (alt51) {
case 1:
{
  pushFollow(FOLLOW_expression_chain_in_expression_chain1150);
  expression_chain();
  _fsp--;
}
break;
}
match(input,Token.UP,null);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
