{
  try {
    int alt33=4;
switch (input.LA(1)) {
case VK_ACCUMULATE:
{
        alt33=1;
      }
    break;
case VK_COLLECT:
{
    alt33=2;
  }
break;
case VK_ENTRY_POINT:
{
alt33=3;
}
break;
case VT_FROM_SOURCE:
{
alt33=4;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("140:1: from_elements : ( ^( VK_ACCUMULATE lhs ( accumulate_init_clause | accumulate_id_clause ) ) | ^( VK_COLLECT lhs ) | ^( VK_ENTRY_POINT VT_ENTRYPOINT_ID ) | ^( VT_FROM_SOURCE ID ( VT_PAREN_CHUNK )? ( expression_chain )? ) );",33,0,input);
throw nvae;
}
switch (alt33) {
case 1:
{
match(input,VK_ACCUMULATE,FOLLOW_VK_ACCUMULATE_in_from_elements724);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_from_elements726);
lhs();
_fsp--;
int alt30=2;
int LA30_0=input.LA(1);
if ((LA30_0 == VT_ACCUMULATE_INIT_CLAUSE)) {
alt30=1;
}
 else if ((LA30_0 == VT_ACCUMULATE_ID_CLAUSE)) {
alt30=2;
}
 else {
NoViableAltException nvae=new NoViableAltException("141:24: ( accumulate_init_clause | accumulate_id_clause )",30,0,input);
throw nvae;
}
switch (alt30) {
case 1:
{
pushFollow(FOLLOW_accumulate_init_clause_in_from_elements729);
accumulate_init_clause();
_fsp--;
}
break;
case 2:
{
pushFollow(FOLLOW_accumulate_id_clause_in_from_elements731);
accumulate_id_clause();
_fsp--;
}
break;
}
match(input,Token.UP,null);
}
break;
case 2:
{
match(input,VK_COLLECT,FOLLOW_VK_COLLECT_in_from_elements739);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_from_elements741);
lhs();
_fsp--;
match(input,Token.UP,null);
}
break;
case 3:
{
match(input,VK_ENTRY_POINT,FOLLOW_VK_ENTRY_POINT_in_from_elements748);
match(input,Token.DOWN,null);
match(input,VT_ENTRYPOINT_ID,FOLLOW_VT_ENTRYPOINT_ID_in_from_elements750);
match(input,Token.UP,null);
}
break;
case 4:
{
match(input,VT_FROM_SOURCE,FOLLOW_VT_FROM_SOURCE_in_from_elements757);
match(input,Token.DOWN,null);
match(input,ID,FOLLOW_ID_in_from_elements759);
int alt31=2;
int LA31_0=input.LA(1);
if ((LA31_0 == VT_PAREN_CHUNK)) {
alt31=1;
}
switch (alt31) {
case 1:
{
match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_from_elements761);
}
break;
}
int alt32=2;
int LA32_0=input.LA(1);
if ((LA32_0 == VT_EXPRESSION_CHAIN)) {
alt32=1;
}
switch (alt32) {
case 1:
{
pushFollow(FOLLOW_expression_chain_in_from_elements764);
expression_chain();
_fsp--;
}
break;
}
match(input,Token.UP,null);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
