{
  try {
    int alt25=10;
switch (input.LA(1)) {
case VT_OR_PREFIX:
{
        alt25=1;
      }
    break;
case VT_OR_INFIX:
{
    alt25=2;
  }
break;
case VT_AND_PREFIX:
{
alt25=3;
}
break;
case VT_AND_INFIX:
{
alt25=4;
}
break;
case VK_EXISTS:
{
alt25=5;
}
break;
case VK_NOT:
{
alt25=6;
}
break;
case VK_EVAL:
{
alt25=7;
}
break;
case VK_FORALL:
{
alt25=8;
}
break;
case VK_FROM:
{
alt25=9;
}
break;
case VT_PATTERN:
{
alt25=10;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("112:1: lhs : ( ^( VT_OR_PREFIX ( lhs )+ ) | ^( VT_OR_INFIX lhs lhs ) | ^( VT_AND_PREFIX ( lhs )+ ) | ^( VT_AND_INFIX lhs lhs ) | ^( VK_EXISTS lhs ) | ^( VK_NOT lhs ) | ^( VK_EVAL VT_PAREN_CHUNK ) | ^( VK_FORALL ( lhs )+ ) | ^( VK_FROM lhs_pattern from_elements ) | lhs_pattern );",25,0,input);
throw nvae;
}
switch (alt25) {
case 1:
{
match(input,VT_OR_PREFIX,FOLLOW_VT_OR_PREFIX_in_lhs543);
match(input,Token.DOWN,null);
int cnt22=0;
loop22: do {
int alt22=2;
int LA22_0=input.LA(1);
if (((LA22_0 >= VT_AND_PREFIX && LA22_0 <= VT_OR_INFIX) || LA22_0 == VT_PATTERN || LA22_0 == VK_EVAL || LA22_0 == VK_NOT || (LA22_0 >= VK_EXISTS && LA22_0 <= VK_FROM))) {
alt22=1;
}
switch (alt22) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs545);
lhs();
_fsp--;
}
break;
default :
if (cnt22 >= 1) break loop22;
EarlyExitException eee=new EarlyExitException(22,input);
throw eee;
}
cnt22++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 2:
{
match(input,VT_OR_INFIX,FOLLOW_VT_OR_INFIX_in_lhs553);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs555);
lhs();
_fsp--;
pushFollow(FOLLOW_lhs_in_lhs557);
lhs();
_fsp--;
match(input,Token.UP,null);
}
break;
case 3:
{
match(input,VT_AND_PREFIX,FOLLOW_VT_AND_PREFIX_in_lhs564);
match(input,Token.DOWN,null);
int cnt23=0;
loop23: do {
int alt23=2;
int LA23_0=input.LA(1);
if (((LA23_0 >= VT_AND_PREFIX && LA23_0 <= VT_OR_INFIX) || LA23_0 == VT_PATTERN || LA23_0 == VK_EVAL || LA23_0 == VK_NOT || (LA23_0 >= VK_EXISTS && LA23_0 <= VK_FROM))) {
alt23=1;
}
switch (alt23) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs566);
lhs();
_fsp--;
}
break;
default :
if (cnt23 >= 1) break loop23;
EarlyExitException eee=new EarlyExitException(23,input);
throw eee;
}
cnt23++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 4:
{
match(input,VT_AND_INFIX,FOLLOW_VT_AND_INFIX_in_lhs574);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs576);
lhs();
_fsp--;
pushFollow(FOLLOW_lhs_in_lhs578);
lhs();
_fsp--;
match(input,Token.UP,null);
}
break;
case 5:
{
match(input,VK_EXISTS,FOLLOW_VK_EXISTS_in_lhs585);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs587);
lhs();
_fsp--;
match(input,Token.UP,null);
}
break;
case 6:
{
match(input,VK_NOT,FOLLOW_VK_NOT_in_lhs594);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs596);
lhs();
_fsp--;
match(input,Token.UP,null);
}
break;
case 7:
{
match(input,VK_EVAL,FOLLOW_VK_EVAL_in_lhs603);
match(input,Token.DOWN,null);
match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_lhs605);
match(input,Token.UP,null);
}
break;
case 8:
{
match(input,VK_FORALL,FOLLOW_VK_FORALL_in_lhs612);
match(input,Token.DOWN,null);
int cnt24=0;
loop24: do {
int alt24=2;
int LA24_0=input.LA(1);
if (((LA24_0 >= VT_AND_PREFIX && LA24_0 <= VT_OR_INFIX) || LA24_0 == VT_PATTERN || LA24_0 == VK_EVAL || LA24_0 == VK_NOT || (LA24_0 >= VK_EXISTS && LA24_0 <= VK_FROM))) {
alt24=1;
}
switch (alt24) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs614);
lhs();
_fsp--;
}
break;
default :
if (cnt24 >= 1) break loop24;
EarlyExitException eee=new EarlyExitException(24,input);
throw eee;
}
cnt24++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 9:
{
match(input,VK_FROM,FOLLOW_VK_FROM_in_lhs622);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_pattern_in_lhs624);
lhs_pattern();
_fsp--;
pushFollow(FOLLOW_from_elements_in_lhs626);
from_elements();
_fsp--;
match(input,Token.UP,null);
}
break;
case 10:
{
pushFollow(FOLLOW_lhs_pattern_in_lhs632);
lhs_pattern();
_fsp--;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
