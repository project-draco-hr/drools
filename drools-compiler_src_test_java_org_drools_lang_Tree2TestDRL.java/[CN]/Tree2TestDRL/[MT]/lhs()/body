{
  try {
    int alt30=10;
switch (input.LA(1)) {
case VT_OR_PREFIX:
{
        alt30=1;
      }
    break;
case VT_OR_INFIX:
{
    alt30=2;
  }
break;
case VT_AND_PREFIX:
{
alt30=3;
}
break;
case VT_AND_INFIX:
{
alt30=4;
}
break;
case VK_EXISTS:
{
alt30=5;
}
break;
case VK_NOT:
{
alt30=6;
}
break;
case VK_EVAL:
{
alt30=7;
}
break;
case VK_FORALL:
{
alt30=8;
}
break;
case FROM:
{
alt30=9;
}
break;
case VT_PATTERN:
{
alt30=10;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("",30,0,input);
throw nvae;
}
switch (alt30) {
case 1:
{
match(input,VT_OR_PREFIX,FOLLOW_VT_OR_PREFIX_in_lhs624);
match(input,Token.DOWN,null);
int cnt27=0;
loop27: do {
int alt27=2;
int LA27_0=input.LA(1);
if (((LA27_0 >= VT_AND_PREFIX && LA27_0 <= VT_OR_INFIX) || LA27_0 == VT_PATTERN || LA27_0 == VK_EVAL || LA27_0 == VK_NOT || (LA27_0 >= VK_EXISTS && LA27_0 <= VK_FORALL) || LA27_0 == FROM)) {
alt27=1;
}
switch (alt27) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs626);
lhs();
state._fsp--;
}
break;
default :
if (cnt27 >= 1) break loop27;
EarlyExitException eee=new EarlyExitException(27,input);
throw eee;
}
cnt27++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 2:
{
match(input,VT_OR_INFIX,FOLLOW_VT_OR_INFIX_in_lhs634);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs636);
lhs();
state._fsp--;
pushFollow(FOLLOW_lhs_in_lhs638);
lhs();
state._fsp--;
match(input,Token.UP,null);
}
break;
case 3:
{
match(input,VT_AND_PREFIX,FOLLOW_VT_AND_PREFIX_in_lhs645);
match(input,Token.DOWN,null);
int cnt28=0;
loop28: do {
int alt28=2;
int LA28_0=input.LA(1);
if (((LA28_0 >= VT_AND_PREFIX && LA28_0 <= VT_OR_INFIX) || LA28_0 == VT_PATTERN || LA28_0 == VK_EVAL || LA28_0 == VK_NOT || (LA28_0 >= VK_EXISTS && LA28_0 <= VK_FORALL) || LA28_0 == FROM)) {
alt28=1;
}
switch (alt28) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs647);
lhs();
state._fsp--;
}
break;
default :
if (cnt28 >= 1) break loop28;
EarlyExitException eee=new EarlyExitException(28,input);
throw eee;
}
cnt28++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 4:
{
match(input,VT_AND_INFIX,FOLLOW_VT_AND_INFIX_in_lhs655);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs657);
lhs();
state._fsp--;
pushFollow(FOLLOW_lhs_in_lhs659);
lhs();
state._fsp--;
match(input,Token.UP,null);
}
break;
case 5:
{
match(input,VK_EXISTS,FOLLOW_VK_EXISTS_in_lhs666);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs668);
lhs();
state._fsp--;
match(input,Token.UP,null);
}
break;
case 6:
{
match(input,VK_NOT,FOLLOW_VK_NOT_in_lhs675);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_in_lhs677);
lhs();
state._fsp--;
match(input,Token.UP,null);
}
break;
case 7:
{
match(input,VK_EVAL,FOLLOW_VK_EVAL_in_lhs684);
match(input,Token.DOWN,null);
match(input,VT_PAREN_CHUNK,FOLLOW_VT_PAREN_CHUNK_in_lhs686);
match(input,Token.UP,null);
}
break;
case 8:
{
match(input,VK_FORALL,FOLLOW_VK_FORALL_in_lhs693);
match(input,Token.DOWN,null);
int cnt29=0;
loop29: do {
int alt29=2;
int LA29_0=input.LA(1);
if (((LA29_0 >= VT_AND_PREFIX && LA29_0 <= VT_OR_INFIX) || LA29_0 == VT_PATTERN || LA29_0 == VK_EVAL || LA29_0 == VK_NOT || (LA29_0 >= VK_EXISTS && LA29_0 <= VK_FORALL) || LA29_0 == FROM)) {
alt29=1;
}
switch (alt29) {
case 1:
{
pushFollow(FOLLOW_lhs_in_lhs695);
lhs();
state._fsp--;
}
break;
default :
if (cnt29 >= 1) break loop29;
EarlyExitException eee=new EarlyExitException(29,input);
throw eee;
}
cnt29++;
}
 while (true);
match(input,Token.UP,null);
}
break;
case 9:
{
match(input,FROM,FOLLOW_FROM_in_lhs703);
match(input,Token.DOWN,null);
pushFollow(FOLLOW_lhs_pattern_in_lhs705);
lhs_pattern();
state._fsp--;
pushFollow(FOLLOW_from_elements_in_lhs707);
from_elements();
state._fsp--;
match(input,Token.UP,null);
}
break;
case 10:
{
pushFollow(FOLLOW_lhs_pattern_in_lhs713);
lhs_pattern();
state._fsp--;
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
