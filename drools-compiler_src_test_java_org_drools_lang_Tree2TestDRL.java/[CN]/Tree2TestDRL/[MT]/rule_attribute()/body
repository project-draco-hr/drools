{
  try {
    int alt25=12;
switch (input.LA(1)) {
case VK_SALIENCE:
{
        alt25=1;
      }
    break;
case VK_NO_LOOP:
{
    alt25=2;
  }
break;
case VK_AGENDA_GROUP:
{
alt25=3;
}
break;
case VK_DURATION:
{
alt25=4;
}
break;
case VK_ACTIVATION_GROUP:
{
alt25=5;
}
break;
case VK_AUTO_FOCUS:
{
alt25=6;
}
break;
case VK_DATE_EFFECTIVE:
{
alt25=7;
}
break;
case VK_DATE_EXPIRES:
{
alt25=8;
}
break;
case VK_ENABLED:
{
alt25=9;
}
break;
case VK_RULEFLOW_GROUP:
{
alt25=10;
}
break;
case VK_LOCK_ON_ACTIVE:
{
alt25=11;
}
break;
case VK_DIALECT:
{
alt25=12;
}
break;
default :
NoViableAltException nvae=new NoViableAltException("",25,0,input);
throw nvae;
}
switch (alt25) {
case 1:
{
match(input,VK_SALIENCE,FOLLOW_VK_SALIENCE_in_rule_attribute473);
match(input,Token.DOWN,null);
if (input.LA(1) == VT_PAREN_CHUNK || input.LA(1) == INT) {
input.consume();
state.errorRecovery=false;
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
throw mse;
}
match(input,Token.UP,null);
}
break;
case 2:
{
match(input,VK_NO_LOOP,FOLLOW_VK_NO_LOOP_in_rule_attribute487);
if (input.LA(1) == Token.DOWN) {
match(input,Token.DOWN,null);
int alt22=2;
int LA22_0=input.LA(1);
if ((LA22_0 == BOOL)) {
alt22=1;
}
switch (alt22) {
case 1:
{
match(input,BOOL,FOLLOW_BOOL_in_rule_attribute489);
}
break;
}
match(input,Token.UP,null);
}
}
break;
case 3:
{
match(input,VK_AGENDA_GROUP,FOLLOW_VK_AGENDA_GROUP_in_rule_attribute499);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute501);
match(input,Token.UP,null);
}
break;
case 4:
{
match(input,VK_DURATION,FOLLOW_VK_DURATION_in_rule_attribute510);
match(input,Token.DOWN,null);
match(input,INT,FOLLOW_INT_in_rule_attribute512);
match(input,Token.UP,null);
}
break;
case 5:
{
match(input,VK_ACTIVATION_GROUP,FOLLOW_VK_ACTIVATION_GROUP_in_rule_attribute522);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute524);
match(input,Token.UP,null);
}
break;
case 6:
{
match(input,VK_AUTO_FOCUS,FOLLOW_VK_AUTO_FOCUS_in_rule_attribute532);
if (input.LA(1) == Token.DOWN) {
match(input,Token.DOWN,null);
int alt23=2;
int LA23_0=input.LA(1);
if ((LA23_0 == BOOL)) {
alt23=1;
}
switch (alt23) {
case 1:
{
match(input,BOOL,FOLLOW_BOOL_in_rule_attribute534);
}
break;
}
match(input,Token.UP,null);
}
}
break;
case 7:
{
match(input,VK_DATE_EFFECTIVE,FOLLOW_VK_DATE_EFFECTIVE_in_rule_attribute543);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute545);
match(input,Token.UP,null);
}
break;
case 8:
{
match(input,VK_DATE_EXPIRES,FOLLOW_VK_DATE_EXPIRES_in_rule_attribute553);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute555);
match(input,Token.UP,null);
}
break;
case 9:
{
match(input,VK_ENABLED,FOLLOW_VK_ENABLED_in_rule_attribute563);
match(input,Token.DOWN,null);
match(input,BOOL,FOLLOW_BOOL_in_rule_attribute565);
match(input,Token.UP,null);
}
break;
case 10:
{
match(input,VK_RULEFLOW_GROUP,FOLLOW_VK_RULEFLOW_GROUP_in_rule_attribute573);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute575);
match(input,Token.UP,null);
}
break;
case 11:
{
match(input,VK_LOCK_ON_ACTIVE,FOLLOW_VK_LOCK_ON_ACTIVE_in_rule_attribute583);
if (input.LA(1) == Token.DOWN) {
match(input,Token.DOWN,null);
int alt24=2;
int LA24_0=input.LA(1);
if ((LA24_0 == BOOL)) {
alt24=1;
}
switch (alt24) {
case 1:
{
match(input,BOOL,FOLLOW_BOOL_in_rule_attribute585);
}
break;
}
match(input,Token.UP,null);
}
}
break;
case 12:
{
match(input,VK_DIALECT,FOLLOW_VK_DIALECT_in_rule_attribute593);
match(input,Token.DOWN,null);
match(input,STRING,FOLLOW_STRING_in_rule_attribute595);
match(input,Token.UP,null);
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
