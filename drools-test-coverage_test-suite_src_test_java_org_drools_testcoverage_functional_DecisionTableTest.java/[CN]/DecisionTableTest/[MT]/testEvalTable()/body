{
  final Resource decisionTable=ResourceUtil.getDecisionTableResourceFromClasspath("eval_dt.xls",getClass(),DecisionTableInputType.XLS);
  final KieBase kbase=KieBaseUtil.getKieBaseFromResources(true,decisionTable);
  Assertions.assertThat(2).isEqualTo(kbase.getKiePackages().size());
  KieSession session=kbase.newKieSession();
  final TrackingAgendaEventListener rulesFired=new TrackingAgendaEventListener();
  session.addEventListener(rulesFired);
  rulesFired.clear();
  final Subject mary=new Subject("Mary");
  mary.setDummy(1);
  session.insert(mary);
  session.fireAllRules();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest1")).isTrue();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest2")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest3")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest4")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("simpleBindingTest")).isFalse();
  session.dispose();
  session=kbase.newKieSession();
  session.addEventListener(rulesFired);
  rulesFired.clear();
  final Subject inge=new Subject("Inge");
  inge.setAge(7);
  inge.setSex("F");
  final Subject jochen=new Subject("Jochen");
  jochen.setAge(9);
  jochen.setSex("M");
  session.insert(inge);
  session.insert(jochen);
  session.fireAllRules();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest1")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest2")).isTrue();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest3")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest4")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("simpleBindingTest")).isFalse();
  session.dispose();
  session=kbase.newKieSession();
  session.addEventListener(rulesFired);
  rulesFired.clear();
  final Subject karl=new Subject("Karl");
  karl.setSex("male");
  final Subject egon=new Subject("Egon");
  egon.setSex("male");
  session.insert(karl);
  session.insert(egon);
  session.fireAllRules();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest1")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest2")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest3")).isTrue();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest4")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("simpleBindingTest")).isFalse();
  session.dispose();
  session=kbase.newKieSession();
  session.addEventListener(rulesFired);
  rulesFired.clear();
  final Subject gerda=new Subject("Gerda");
  gerda.setSex("female");
  gerda.setAge(9);
  gerda.setDummy(-10);
  session.insert(gerda);
  session.fireAllRules();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest1")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest2")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest3")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest4")).isTrue();
  Assertions.assertThat(rulesFired.isRuleFired("simpleBindingTest")).isFalse();
  session.dispose();
  session=kbase.newKieSession();
  session.addEventListener(rulesFired);
  rulesFired.clear();
  final List<Sample> results=new ArrayList<Sample>();
  session.setGlobal("results",results);
  final Sample sample=new Sample();
  session.insert(sample);
  session.fireAllRules();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest1")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest2")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest3")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("evalTest4")).isFalse();
  Assertions.assertThat(rulesFired.isRuleFired("simpleBindingTest")).isTrue();
  session.dispose();
}
