{
  final String drl="rule \"test_0\"" + "when \n" + "  Person( name == \"Michael\" )\n"+ "  Address( country == \"England\" )\n"+ "then \n"+ "end";
  final GuidedDecisionTree expected=new GuidedDecisionTree();
  expected.setTreeName("test");
  final TypeNode type1=new TypeNodeImpl("Person");
  final ConstraintNode c1=new ConstraintNodeImpl("Person","name","==",new StringValue("Michael"));
  final TypeNode type2=new TypeNodeImpl("Address");
  final ConstraintNode c2=new ConstraintNodeImpl("Address","country","==",new StringValue("England"));
  expected.setRoot(type1);
  type1.addChild(c1);
  c1.addChild(type2);
  type2.addChild(c2);
  addModelField("Person","this","Person",DataType.TYPE_THIS);
  addModelField("Person","name",String.class.getName(),DataType.TYPE_STRING);
  addModelField("Address","this","Address",DataType.TYPE_THIS);
  addModelField("Address","country",String.class.getName(),DataType.TYPE_STRING);
  final GuidedDecisionTree model=GuidedDecisionTreeDRLPersistence.getInstance().unmarshal(drl,"test",dmo);
  assertNotNull(model);
  assertEquals(expected.getTreeName(),model.getTreeName());
  assertNotNull(model.getRoot());
  final TypeNode _t1=model.getRoot();
  assertEquals(type1.getClassName(),_t1.getClassName());
  assertFalse(_t1.isBound());
  assertEquals(1,_t1.getChildren().size());
  assertNotNull(_t1.getChildren().get(0));
  assertTrue(_t1.getChildren().get(0) instanceof ConstraintNode);
  final ConstraintNode _c1=(ConstraintNode)_t1.getChildren().get(0);
  assertEquals(c1.getClassName(),_c1.getClassName());
  assertEquals(c1.getFieldName(),_c1.getFieldName());
  assertEquals(c1.getOperator(),_c1.getOperator());
  assertEquals(c1.getValue().getValue().toString(),_c1.getValue().getValue().toString());
  assertEquals(1,_c1.getChildren().size());
  assertNotNull(_c1.getChildren().get(0));
  assertTrue(_c1.getChildren().get(0) instanceof TypeNode);
  final TypeNode _t2=(TypeNode)_c1.getChildren().get(0);
  assertEquals(type2.getClassName(),_t2.getClassName());
  assertFalse(_t2.isBound());
  assertEquals(1,_t2.getChildren().size());
  assertNotNull(_t2.getChildren().get(0));
  assertTrue(_t2.getChildren().get(0) instanceof ConstraintNode);
  final ConstraintNode _c2=(ConstraintNode)_t2.getChildren().get(0);
  assertEquals(c2.getClassName(),_c2.getClassName());
  assertEquals(c2.getFieldName(),_c2.getFieldName());
  assertEquals(c2.getOperator(),_c2.getOperator());
  assertEquals(c2.getValue().getValue().toString(),_c2.getValue().getValue().toString());
  assertEquals(0,_c2.getChildren().size());
}
