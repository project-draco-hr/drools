{
  try {
    InputStreamReader isr=new InputStreamReader(givenStream);
    LineNumberReader templateReader=new LineNumberReader(isr);
    final ColumnFactory cf=new ColumnFactory();
    String line=null;
    StringBuilder header=new StringBuilder();
    boolean inTemplate=false;
    boolean inHeader=false;
    boolean inContents=false;
    RuleTemplate template=null;
    StringBuilder contents=new StringBuilder();
    String lastTemplateName="?";
    int lastTemplateLine=0;
    while ((line=templateReader.readLine()) != null) {
      String trimmed=line.trim();
      if (trimmed.length() > 0) {
        int lineNo=templateReader.getLineNumber();
        if (trimmed.matches("template\\s+header")) {
          inHeader=true;
        }
 else         if (trimmed.startsWith("template")) {
          if (inTemplate) {
            throw new DecisionTableParseException("Nested template, within '" + lastTemplateName + "'. at line "+ lineNo);
          }
          inTemplate=true;
          String quotedName=line.substring(8).trim();
          if (quotedName.startsWith("\"") && quotedName.endsWith("\"") || quotedName.startsWith("'") && quotedName.endsWith("'")) {
            quotedName=quotedName.substring(1,quotedName.length() - 1);
          }
          if (quotedName.length() == 0) {
            throw new DecisionTableParseException("Template name missing at line " + lineNo);
          }
          if (templates.containsKey(quotedName)) {
            throw new DecisionTableParseException("Duplicate template name '" + quotedName + "' at line "+ lineNo);
          }
          lastTemplateName=quotedName;
          lastTemplateLine=lineNo;
          template=new RuleTemplate(quotedName,this);
          addTemplate(template);
        }
 else         if (trimmed.startsWith("package")) {
          if (!inHeader) {
            throw new DecisionTableParseException("Missing header at line " + lineNo);
          }
          inHeader=false;
          header.append(line).append("\n");
        }
 else         if (inHeader) {
          if (!addColumn(cf.getColumn(trimmed))) {
            throw new DecisionTableParseException("Duplicate parameter '" + trimmed + "' at line "+ lineNo);
          }
        }
 else         if (!inTemplate && !inHeader) {
          header.append(line).append("\n");
        }
 else         if (!inContents && trimmed.startsWith("rule")) {
          if (!inTemplate) {
            header.append(line).append("\n");
          }
 else {
            inContents=true;
            checkLine(line,lineNo);
            contents.append(line).append("\n");
          }
        }
 else         if (trimmed.matches("end\\s+template")) {
          template.setContents(contents.toString());
          contents.setLength(0);
          inTemplate=false;
          inContents=false;
        }
 else         if (inContents) {
          checkLine(line,lineNo);
          contents.append(line).append("\n");
        }
 else         if (inTemplate) {
          template.addColumn(trimmed);
        }
      }
    }
    if (inTemplate) {
      throw new DecisionTableParseException("Unterminated template '" + lastTemplateName + "', started in line "+ lastTemplateLine);
    }
    this.header=header.toString();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (givenStream != null)     closeStream(givenStream);
  }
}
