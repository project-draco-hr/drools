{
  String s="package org.drools.test\n" + "import org.drools.Person\n" + "global java.util.List list\n"+ "rule r1 when\n"+ "    s1 : String( this == 's1' )\n"+ "    p1 : Person( $name1 : name, name == s1 )\n"+ "    eval( p1.getName().equals( s1 ) ) \n"+ "    s2 : String( this == 's2' )\n"+ "    p2 : Person( $name2 : name, name == s2, eval( p2.getName().equals( s2 ) && "+ "                                                  ! $name2.equals( $name1 )  ) )\n"+ "    s3 : String( this == 's3' )\n"+ "    not String( this == 's5')\n "+ "    p3 : Person( $name3 : name, name == s3, name == ( new String( $name1.charAt(0) + \"3\" ) ) )\n"+ "then\n"+ "    // *2 are missed out on purpose to make sure we only resolved required declarations\n"+ "    list.add( s1 + p1 + $name1 + s3 + p3 + $name3 ); \n"+ "end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(s.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=kbase.newStatefulKnowledgeSession();
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.insert("s1");
  ksession.insert(new Person("s1"));
  ksession.insert("s2");
  ksession.insert(new Person("s2"));
  ksession.insert("s3");
  ksession.insert(new Person("s3"));
  ksession.fireAllRules();
  assertEquals(1,list.size());
  assertEquals("s1[Person name='s1 age='0' likes='']s1s3[Person name='s3 age='0' likes='']s3",list.get(0));
}
