{
  String s="package org.drools.test\n" + "import org.drools.Person\n" + "import org.drools.Cheese\n"+ "global java.util.List list\n"+ "rule r1 when\n"+ "    s1 : String( this == 's1' )\n"+ "    Cheese( $type : type == \"stilton\", $price : price ) or\n"+ "    ( Cheese( $type : type == \"brie\", $price : price ) and Person( name == \"bob\", likes == $type ) )\n"+ "then\n"+ "    // *2 are missed out on purpose to make sure we only resolved required declarations\n"+ "    list.add( \"test3\"+$type +\":\"+ new Integer( $price ) ); \n"+ "end\n";
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  kbuilder.add(ResourceFactory.newByteArrayResource(s.getBytes()),ResourceType.DRL);
  if (kbuilder.hasErrors()) {
    fail(kbuilder.getErrors().toString());
  }
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(kbuilder.getKnowledgePackages());
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  List list=new ArrayList();
  ksession.setGlobal("list",list);
  ksession.insert("s1");
  ksession.insert(new Person("bob","brie"));
  ksession.insert(new Cheese("stilton"));
  ksession.insert(new Cheese("brie"));
  ksession.insert(new Person("s2"));
  ksession.fireAllRules();
  assertEquals(2,list.size());
  assertTrue(list.contains("test3brie:0"));
  assertTrue(list.contains("test3stilton:0"));
}
