{
  final PropagationQueueingNodeMemory memory=(PropagationQueueingNodeMemory)workingMemory.getNodeMemory(this);
  memory.isQueued().compareAndSet(true,false);
  Action next;
  for (int counter=0; counter < PROPAGATION_SLICE_LIMIT; counter++) {
    next=memory.getNextAction();
    if (next != null) {
      next.execute(this.sink,workingMemory);
    }
 else {
      break;
    }
  }
  if (memory.hasNextAction() && memory.isQueued().compareAndSet(false,true)) {
    workingMemory.queueWorkingMemoryAction(this.action);
  }
}
