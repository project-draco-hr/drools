{
  WorkflowProcessInstance processInstance=(WorkflowProcessInstance)workingMemory.getProcessInstance(processInstanceId);
  if (processInstance == null) {
    throw new IllegalArgumentException("Could not find process instance " + processInstanceId);
  }
  if (processId == null) {
    throw new IllegalArgumentException("Null process id");
  }
  WorkflowProcess process=(WorkflowProcess)((InternalRuleBase)workingMemory.getRuleBase()).getProcess(processId);
  if (process == null) {
    throw new IllegalArgumentException("Could not find process " + processId);
  }
  if (processInstance.getProcessId().equals(processId)) {
    return;
  }
  ((WorkflowProcessInstanceImpl)processInstance).disconnect();
  processInstance.setProcess(process);
  for (  NodeInstance nodeInstance : processInstance.getNodeInstances()) {
    Long oldNodeId=nodeInstance.getNodeId();
    Long newNodeId=nodeMapping.get(oldNodeId);
    if (newNodeId == null) {
      newNodeId=oldNodeId;
    }
    if (process.getNode(newNodeId) == null) {
      throw new IllegalArgumentException("Could not find node " + newNodeId);
    }
    if (newNodeId != oldNodeId) {
      ((NodeInstanceImpl)nodeInstance).setNodeId(newNodeId);
    }
  }
  processInstance.setWorkingMemory((InternalWorkingMemory)workingMemory);
  ((WorkflowProcessInstanceImpl)processInstance).reconnect();
}
