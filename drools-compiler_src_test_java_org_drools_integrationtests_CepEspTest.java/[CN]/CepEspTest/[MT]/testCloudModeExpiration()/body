{
  String str="package org.drools.cloud\n" + "import org.drools.*\n" + "declare Event\n"+ "        @role ( event )\n"+ "        name : String\n"+ "        value : Object\n"+ "end\n"+ "declare AnotherEvent\n"+ "        @role ( event )\n"+ "        message : String\n"+ "        type : String\n"+ "end\n"+ "declare StockTick\n"+ "        @role ( event )\n"+ "end\n"+ "rule \"two events\"\n"+ "    when\n"+ "        Event( value != null ) from entry-point X\n"+ "        StockTick( company != null ) from entry-point X\n"+ "    then\n"+ "end";
  KieBaseConfiguration config=KnowledgeBaseFactory.newKnowledgeBaseConfiguration();
  config.setOption(EventProcessingOption.CLOUD);
  KnowledgeBase kbase=loadKnowledgeBaseFromString(config,str);
  StatefulKnowledgeSession ksession=createKnowledgeSession(kbase);
  SessionEntryPoint ep=ksession.getEntryPoint("X");
  ep.insert(new StockTick(1,"RHT",10,1000));
  int rulesFired=ksession.fireAllRules();
  assertEquals(0,rulesFired);
  org.kie.definition.type.FactType event=kbase.getFactType("org.drools.cloud","Event");
  Object e1=event.newInstance();
  event.set(e1,"name","someKey");
  event.set(e1,"value","someValue");
  ep.insert(e1);
  rulesFired=ksession.fireAllRules();
  assertEquals(1,rulesFired);
  Thread.currentThread().sleep(1000);
  assertEquals(2,ep.getFactCount());
}
