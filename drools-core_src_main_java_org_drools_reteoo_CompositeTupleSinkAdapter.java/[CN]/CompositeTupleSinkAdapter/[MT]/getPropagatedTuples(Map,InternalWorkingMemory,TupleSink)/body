{
  int index=0;
  for (TupleSinkNode node=this.sinks.getFirst(); node != null; node=node.getNextTupleSinkNode()) {
    if (node.equals(sink)) {
      break;
    }
    index++;
  }
  final List propagatedTuples=new ArrayList(memory.size());
  for (final Iterator it=memory.values().iterator(); it.hasNext(); ) {
    final LinkedList tuples=(LinkedList)it.next();
    LinkedListObjectWrapper wrapper=(LinkedListObjectWrapper)tuples.getFirst();
    for (int i=0; i < index; i++) {
      wrapper=(LinkedListObjectWrapper)wrapper.getNext();
    }
    propagatedTuples.add(wrapper.getObject());
  }
  return propagatedTuples;
}
