{
  String str="";
  str+="package org.simple \n";
  str+="global java.util.List list \n";
  str+="rule xxx \n";
  str+="  timer (int:30s 10s) ";
  str+="when \n";
  str+="then \n";
  str+="  list.add(\"fired\"); \n";
  str+="end  \n";
  KieSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  conf.setOption(ClockTypeOption.get("pseudo"));
  KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
  KieSession ksession=createKnowledgeSession(kbase,conf);
  final BlockingQueue<TimedRuleExecution> queue=new LinkedBlockingQueue<TimedRuleExecution>();
  ((StatefulKnowledgeSessionImpl)ksession).session.setTimedExecutionsQueue(queue);
  Thread t=new Thread(new Runnable(){
    public void run(){
      try {
        while (true) {
          queue.take().evauateAndFireRule();
        }
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  t.setDaemon(true);
  t.start();
  List list=new ArrayList();
  PseudoClockScheduler timeService=(PseudoClockScheduler)ksession.<SessionClock>getSessionClock();
  timeService.advanceTime(new Date().getTime(),TimeUnit.MILLISECONDS);
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  timeService.advanceTime(55,TimeUnit.SECONDS);
  Thread.sleep(1000000L);
  assertEquals(3,list.size());
}
