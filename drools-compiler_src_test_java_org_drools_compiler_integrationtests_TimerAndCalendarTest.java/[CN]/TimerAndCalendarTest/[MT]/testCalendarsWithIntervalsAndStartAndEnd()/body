{
  String str="";
  str+="package org.simple \n";
  str+="global java.util.List list \n";
  str+="rule xxx \n";
  str+="  calendars \"cal1\"\n";
  str+="  timer (0d 1d start=3-JAN-2010 end=5-JAN-2010) ";
  str+="when \n";
  str+="then \n";
  str+="  list.add(\"fired\"); \n";
  str+="end  \n";
  KieSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  conf.setOption(ClockTypeOption.get("pseudo"));
  KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
  KieSession ksession=createKnowledgeSession(kbase,conf);
  List list=new ArrayList();
  PseudoClockScheduler timeService=(PseudoClockScheduler)ksession.<SessionClock>getSessionClock();
  DateFormat df=new SimpleDateFormat("dd-MMM-yyyy",Locale.UK);
  Date date=df.parse("1-JAN-2010");
  Calendar cal1=new Calendar(){
    public boolean isTimeIncluded(    long timestamp){
      return true;
    }
  }
;
  long oneDay=60 * 60 * 24;
  ksession.getCalendars().set("cal1",cal1);
  ksession.setGlobal("list",list);
  timeService.advanceTime(date.getTime(),TimeUnit.MILLISECONDS);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  timeService.advanceTime(oneDay,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  timeService.advanceTime(oneDay,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  timeService.advanceTime(oneDay,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  timeService.advanceTime(oneDay,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(3,list.size());
  timeService.advanceTime(oneDay,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(3,list.size());
}
