{
  String str="package org.simple;\n" + "global java.util.List list;\n" + "\n"+ "declare Bean\n"+ "  delay   : String = \"30s\"\n"+ "  period  : long = 60000\n"+ "  start   : String = \"3-JAN-2010\"\n"+ "end\n"+ "\n"+ "rule init \n"+ "when \n"+ "then \n"+ " insert( new Bean() );\n"+ "end \n"+ "\n"+ "rule xxx\n"+ "  salience ($d) \n"+ "  timer( expr: $d, $p; start=" + (useExprForStart ? "$s" : "3-JAN-2010") + " )\n"+ "when\n"+ "  Bean( $d : delay, $p : period, $s : start )\n"+ "then\n"+ "  list.add( \"fired\" );\n"+ "end";
  KieSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
  conf.setOption(ClockTypeOption.get("pseudo"));
  KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
  KieSession ksession=createKnowledgeSession(kbase,conf);
  List list=new ArrayList();
  PseudoClockScheduler timeService=(PseudoClockScheduler)ksession.<SessionClock>getSessionClock();
  timeService.setStartupTime(DateUtils.parseDate(startTime).getTime());
  ksession.setGlobal("list",list);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(0,list.size());
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  timeService.advanceTime(40,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  timeService.advanceTime(60,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(3,list.size());
  timeService.setStartupTime(DateUtils.parseDate("3-MAR-2010").getTime());
  list.clear();
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(1,list.size());
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  timeService.advanceTime(20,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(2,list.size());
  timeService.advanceTime(40,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(3,list.size());
  timeService.advanceTime(60,TimeUnit.SECONDS);
  ksession.fireAllRules();
  assertEquals(4,list.size());
}
