{
  Locale defaultLoc=Locale.getDefault();
  try {
    Locale.setDefault(Locale.UK);
    String str="package org.simple \n" + "global java.util.List list \n" + "rule xxx \n"+ "  date-effective \"2-JAN-2010\"\n"+ "  calendars \"cal1\"\n"+ "  timer (cron: 0 0 0 * * ?; repeat-limit=6) "+ "when \n"+ "then \n"+ "  list.add(\"fired\"); \n"+ "end  \n";
    KieSessionConfiguration conf=KnowledgeBaseFactory.newKnowledgeSessionConfiguration();
    conf.setOption(ClockTypeOption.get("pseudo"));
    KnowledgeBase kbase=loadKnowledgeBaseFromString(str);
    KieSession ksession=createKnowledgeSession(kbase,conf);
    List list=new ArrayList();
    PseudoClockScheduler timeService=(PseudoClockScheduler)ksession.<SessionClock>getSessionClock();
    DateFormat df=new SimpleDateFormat("dd-MMM-yyyy",Locale.UK);
    Date date=df.parse("1-JAN-2010");
    Calendar cal1=new Calendar(){
      public boolean isTimeIncluded(      long timestamp){
        return true;
      }
    }
;
    long oneDay=60 * 60 * 24;
    ksession.getCalendars().set("cal1",cal1);
    ksession.setGlobal("list",list);
    timeService.advanceTime(date.getTime(),TimeUnit.MILLISECONDS);
    ksession.fireAllRules();
    assertEquals(0,list.size());
    timeService.advanceTime(oneDay,TimeUnit.SECONDS);
    ksession.fireAllRules();
    assertEquals(0,list.size());
    timeService.advanceTime(oneDay,TimeUnit.SECONDS);
    ksession.fireAllRules();
    assertEquals(1,list.size());
    timeService.advanceTime(oneDay,TimeUnit.SECONDS);
    ksession.fireAllRules();
    assertEquals(2,list.size());
    timeService.advanceTime(oneDay,TimeUnit.SECONDS);
    ksession.fireAllRules();
    assertEquals(3,list.size());
    timeService.advanceTime(oneDay,TimeUnit.SECONDS);
    ksession.fireAllRules();
    assertEquals(4,list.size());
  }
  finally {
    Locale.setDefault(defaultLoc);
  }
}
