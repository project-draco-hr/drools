{
  ExecutorService thread=Executors.newSingleThreadExecutor();
  final Future fireUntilHaltResult=thread.submit(new Runnable(){
    @Override public void run(){
      ksession.fireUntilHalt();
    }
  }
);
  try {
    final Date eventTime=new Date(clock.getCurrentTime());
    for (int i=0; i < 205; i++) {
      ksession.insert(new MetadataEvent(eventTime,0L));
    }
    ksession.insert("events_inserted");
    TimerUtils.sleepMillis(500);
    for (int count=0; count < 40; count++) {
      clock.advanceTime(1,TimeUnit.SECONDS);
    }
    TimerUtils.sleepMillis(500);
    assertTrue("The result does not contain at least 2 elements",result.size() >= 2);
    assertEquals(205,(long)result.get(0));
    assertEquals(0,(long)result.get(1));
  }
  finally {
    ksession.halt();
    fireUntilHaltResult.get(60000,TimeUnit.SECONDS);
    thread.shutdown();
  }
}
