{
  if (number == null)   throw new RuntimeException("Number parameter can not be null.");
  if (value == null)   throw new RuntimeException("Number: " + number + " can not be compared with a null value.");
  if (number instanceof Short) {
    return new Short(number.shortValue()).compareTo(Short.valueOf(value));
  }
 else   if (number instanceof Integer) {
    return new Integer(number.intValue()).compareTo(Integer.valueOf(value));
  }
 else   if (number instanceof Long) {
    return new Long(number.longValue()).compareTo(Long.valueOf(value));
  }
 else   if (number instanceof Float) {
    return new Float(number.floatValue()).compareTo(Float.valueOf(value));
  }
 else   if (number instanceof Double) {
    return new Double(number.doubleValue()).compareTo(Double.valueOf(value));
  }
 else   if (number instanceof BigDecimal) {
    return ((BigDecimal)number).compareTo((new BigDecimal(value)));
  }
 else   if (number instanceof BigInteger) {
    return ((BigInteger)number).compareTo((new BigInteger(value)));
  }
  throw new RuntimeException("Unsupported type: " + number.getClass() + " was provided for parameter number: "+ number);
}
