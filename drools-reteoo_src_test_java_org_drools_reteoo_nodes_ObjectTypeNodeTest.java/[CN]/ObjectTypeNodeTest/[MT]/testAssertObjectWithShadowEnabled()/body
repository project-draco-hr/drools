{
  InternalKnowledgeBase kBase=(InternalKnowledgeBase)KnowledgeBaseFactory.newKnowledgeBase();
  final StatefulKnowledgeSessionImpl workingMemory=new StatefulKnowledgeSessionImpl(1,kBase);
  final Rete source=kBase.getRete();
  final EntryPointNode entryPoint=new EntryPointNode(0,source,buildContext);
  entryPoint.attach(buildContext);
  final ObjectTypeNode objectTypeNode=new ObjectTypeNode(1,this.entryPoint,new ClassObjectType(Cheese.class),buildContext);
  final MockObjectSink sink=new MockObjectSink();
  objectTypeNode.addObjectSink(sink);
  entryPoint.addObjectSink(objectTypeNode);
  final Object cheese=new Cheese("muzzarela",5);
  final InternalFactHandle handle1=(InternalFactHandle)workingMemory.insert(cheese);
  final List asserted=sink.getAsserted();
  assertLength(1,asserted);
  assertEquals(cheese,((InternalFactHandle)((Object[])asserted.get(0))[0]).getObject());
  final ObjectTypeNodeMemory memory=(ObjectTypeNodeMemory)workingMemory.getNodeMemory(objectTypeNode);
  assertEquals(1,memory.memory.size());
  assertTrue(memory.memory.contains(handle1));
}
