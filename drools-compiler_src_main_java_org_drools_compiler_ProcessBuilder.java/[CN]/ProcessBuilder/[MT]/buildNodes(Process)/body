{
  RuleFlowProcess rfp=(RuleFlowProcess)process;
  ProcessDescr processDescr=new ProcessDescr();
  processDescr.setClassName(rfp.getName());
  processDescr.setName(rfp.getPackageName());
  Dialect dialect=this.packageBuilder.getDialectRegistry().getDialect("java");
  ProcessBuildContext context=new ProcessBuildContext(this.packageBuilder.getPackageBuilderConfiguration(),this.packageBuilder.getPackage(),process,processDescr,this.packageBuilder.getDialectRegistry(),dialect);
  for (  Node node : rfp.getNodes()) {
    if (node instanceof ActionNode) {
      buildAction(process,processDescr,context,(ActionNodeImpl)node);
    }
 else     if (node instanceof SplitImpl) {
      buildSplit(process,processDescr,context,(SplitImpl)node);
    }
  }
  if (!context.getErrors().isEmpty()) {
    this.errors.addAll(context.getErrors());
  }
  for (Iterator it=this.packageBuilder.getDialectRegistry().iterator(); it.hasNext(); ) {
    dialect=(Dialect)it.next();
    dialect.addProcess(context);
  }
}
