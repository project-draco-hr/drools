{
  for (int i=0; i < nodes.length; i++) {
    if (nodes[i] instanceof Split) {
      Split split=(Split)nodes[i];
      if (split.getType() == Split.TYPE_XOR || split.getType() == Split.TYPE_OR) {
        for (        Connection connection : split.getDefaultOutgoingConnections()) {
          Constraint constraint=split.getConstraint(connection);
          if ("rule".equals(constraint.getType())) {
            builder.append(createSplitRule(process,connection,split.getConstraint(connection).getConstraint()));
          }
        }
      }
    }
 else     if (nodes[i] instanceof MilestoneNode) {
      MilestoneNode milestone=(MilestoneNode)nodes[i];
      builder.append(createMilestoneRule(process,milestone));
    }
 else     if (nodes[i] instanceof StateNode) {
      StateNode state=(StateNode)nodes[i];
      builder.append(createStateRules(process,state));
    }
 else     if (nodes[i] instanceof StartNode) {
      StartNode startNode=(StartNode)nodes[i];
      List<Trigger> triggers=startNode.getTriggers();
      if (triggers != null) {
        for (        Trigger trigger : triggers) {
          if (trigger instanceof ConstraintTrigger) {
            builder.append(createStartConstraintRule(process,(ConstraintTrigger)trigger));
          }
        }
      }
    }
 else     if (nodes[i] instanceof NodeContainer) {
      generateRules(((NodeContainer)nodes[i]).getNodes(),process,builder);
    }
  }
}
