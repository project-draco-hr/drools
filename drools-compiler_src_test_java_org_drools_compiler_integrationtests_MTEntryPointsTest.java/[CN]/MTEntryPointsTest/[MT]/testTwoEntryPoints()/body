{
  final EntryPoint firstThreadEntryPoint=kieSession.getEntryPoint("FirstStream");
  final EntryPoint secondThreadEntryPoint=kieSession.getEntryPoint("SecondStream");
  int numInsertersInEachEntryPoint=10;
  int numThreadPoolCapacity=numInsertersInEachEntryPoint * 2;
  ExecutorService executorService=Executors.newFixedThreadPool(numThreadPoolCapacity);
  List<Future<?>> futures=new ArrayList<Future<?>>();
  for (int i=0; i < numInsertersInEachEntryPoint; i++) {
    Future<?> futureForFirstThread=executorService.submit(new TestInserter(kieSession,firstThreadEntryPoint));
    futures.add(futureForFirstThread);
    Future<?> futureForSecondThread=executorService.submit(new TestInserter(kieSession,secondThreadEntryPoint));
    futures.add(futureForSecondThread);
  }
  try {
    for (    Future<?> f : futures) {
      f.get(30,TimeUnit.SECONDS);
    }
  }
 catch (  ExecutionException ex) {
    throw ex;
  }
}
