{
  ObjectType list1ObjectType=new ClassObjectType(List.class);
  ObjectType list2ObjectType=new ClassObjectType(List.class);
  Rule rule=new Rule("rule-1");
  Column list1Column=new Column(0,list1ObjectType,"list1");
  Column list2Column=new Column(1,list2ObjectType,"list2");
  rule.addPattern(list1Column);
  rule.addPattern(list2Column);
  final Declaration list1Declaration=rule.getDeclaration("list1");
  final Declaration list2Declaration=rule.getDeclaration("list2");
  final List values=new ArrayList();
  rule.setConsequence(new Consequence(){
    public void evaluate(    KnowledgeHelper knowledgeHelper,    WorkingMemory workingMemory) throws Exception {
      List list1=(List)knowledgeHelper.get(list1Declaration);
      List list2=(List)knowledgeHelper.get(list2Declaration);
      values.add(new List[]{list1,list2});
    }
  }
);
  Package pkg=new Package("org.drools");
  pkg.addRule(rule);
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  ruleBase.addPackage(pkg);
  WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  workingMemory.assertObject(new ArrayList());
  workingMemory.assertObject(new ArrayList());
  workingMemory.assertObject(new LinkedList());
  workingMemory.assertObject(new LinkedList());
  workingMemory.fireAllRules();
  assertEquals(12,values.size());
}
