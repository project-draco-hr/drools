{
  String consequence=" System.out.println(\"this is a test\");\n " + " entryPoints[\"foo\"].insert( new Cheese() );\n " + " System.out.println(\"we are done with entryPoints\");\n ";
  setupTest(consequence,new HashMap<String,Object>());
  try {
    JavaExprAnalyzer analyzer=new JavaExprAnalyzer();
    JavaAnalysisResult analysis=(JavaAnalysisResult)analyzer.analyzeBlock((String)ruleDescr.getConsequence(),new BoundIdentifiers(new HashMap<String,Class>(),new HashMap<String,Class>()));
    String fixed=builder.fixBlockDescr(consequence,context,analysis,(String)ruleDescr.getConsequence(),new HashMap());
    String expected=" System.out.println(\"this is a test\");\n " + " drools.getEntryPoint(\"foo\").insert( new Cheese() );\n " + " System.out.println(\"we are done with entryPoints\");\n ";
    assertNotNull(context.getErrors().toString(),fixed);
    assertEqualsIgnoreSpaces(expected,fixed);
  }
 catch (  RecognitionException e) {
    e.printStackTrace();
  }
}
