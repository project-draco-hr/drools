{
  String consequence=" System.out.println(\"this is a test\");\n " + " exitPoints[\"foo\"].insert( new Cheese() );\n " + " System.out.println(\"we are done with exitPoints\");\n ";
  setupTest(consequence);
  try {
    JavaExprAnalyzer analyzer=new JavaExprAnalyzer();
    JavaAnalysisResult analysis=(JavaAnalysisResult)analyzer.analyzeBlock((String)ruleDescr.getConsequence(),new Set[]{});
    String fixed=builder.fixExitPointsReferences(context,analysis,(String)ruleDescr.getConsequence());
    String expected=" System.out.println(\"this is a test\");\n " + " exitPoints.get(\"foo\").insert( new Cheese() );\n " + " System.out.println(\"we are done with exitPoints\");\n ";
    System.out.println("=============================");
    System.out.println(ruleDescr.getConsequence());
    System.out.println("=============================");
    System.out.println(fixed);
    assertNotNull(context.getErrors().toString(),fixed);
    assertEqualsIgnoreSpaces(expected,fixed);
  }
 catch (  RecognitionException e) {
    e.printStackTrace();
  }
}
