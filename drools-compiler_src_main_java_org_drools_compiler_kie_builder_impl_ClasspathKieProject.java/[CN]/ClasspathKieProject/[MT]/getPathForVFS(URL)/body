{
  String urlString=url.toString();
  int kModulePos=urlString.length() - ("/" + KieModuleModelImpl.KMODULE_JAR_PATH).length();
  boolean isInJar=urlString.substring(kModulePos - 4,kModulePos).equals(".jar");
  try {
    Method m=Class.forName("org.jboss.vfs.VirtualFile").getMethod("getPhysicalFile");
    Object content=url.openConnection().getContent();
    File f=(File)m.invoke(content);
    String path=f.getPath();
    if (isInJar && path.contains("contents" + File.separator)) {
      String jarName=urlString.substring(0,kModulePos);
      jarName=jarName.substring(jarName.lastIndexOf('/') + 1);
      String jarFolderPath=path.substring(0,path.length() - ("contents/" + KieModuleModelImpl.KMODULE_JAR_PATH).length());
      String jarPath=jarFolderPath + jarName;
      path=new File(jarPath).exists() ? jarPath : jarFolderPath + "content";
    }
 else     if (path.endsWith(File.separator + KieModuleModelImpl.KMODULE_FILE_NAME)) {
      path=path.substring(0,path.length() - ("/" + KieModuleModelImpl.KMODULE_JAR_PATH).length());
    }
    log.info("Virtual file physical path = " + path);
    return path;
  }
 catch (  Exception e) {
    log.error("Error when reading virtual file from " + url.toString(),e);
  }
  return url.getPath();
}
