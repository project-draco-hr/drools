{
  String[] configFiles={KieModuleModelImpl.KMODULE_JAR_PATH,KieModuleModelImpl.KMODULE_SPRING_JAR_PATH};
  for (  String configFile : configFiles) {
    final Enumeration<URL> e;
    try {
      e=classLoader.getResources(configFile);
    }
 catch (    IOException exc) {
      log.error("Unable to find and build index of " + configFile + "."+ exc.getMessage());
      return;
    }
    while (e.hasMoreElements()) {
      URL url=e.nextElement();
      notifyKieModuleFound(url);
      try {
        InternalKieModule kModule=fetchKModule(url);
        if (kModule != null) {
          ReleaseId releaseId=kModule.getReleaseId();
          kieModules.put(releaseId,kModule);
          log.debug("Discovered classpath module " + releaseId.toExternalForm());
          kieRepository.addKieModule(kModule);
        }
      }
 catch (      Exception exc) {
        log.error("Unable to build index of kmodule.xml url=" + url.toExternalForm() + "\n"+ exc.getMessage());
      }
    }
  }
}
