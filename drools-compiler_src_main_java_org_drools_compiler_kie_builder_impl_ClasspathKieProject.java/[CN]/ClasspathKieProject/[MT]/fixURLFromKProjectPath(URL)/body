{
  String urlPath=url.toExternalForm();
  String urlType="file";
  int colonIndex=urlPath.indexOf(":");
  if (colonIndex != -1) {
    urlType=urlPath.substring(0,colonIndex);
  }
  urlPath=url.getPath();
  if ("jar".equals(urlType)) {
    if (urlPath.indexOf('!') > 0) {
      urlPath=urlPath.substring(0,urlPath.indexOf('!'));
    }
  }
 else   if ("vfs".equals(urlType)) {
    urlPath=getPathForVFS(url);
  }
 else {
    if (url.toString().contains("-spring.xml")) {
      urlPath=urlPath.substring(0,urlPath.length() - ("/" + KieModuleModelImpl.KMODULE_SPRING_JAR_PATH).length());
    }
 else     if (url.toString().endsWith(KieModuleModelImpl.KMODULE_JAR_PATH)) {
      urlPath=urlPath.substring(0,urlPath.length() - ("/" + KieModuleModelImpl.KMODULE_JAR_PATH).length());
    }
  }
  if (urlPath.endsWith(".jar!")) {
    urlPath=urlPath.substring(0,urlPath.length() - 1);
  }
  int firstSlash=urlPath.indexOf('/');
  colonIndex=firstSlash > 0 ? urlPath.lastIndexOf(":",firstSlash) : urlPath.lastIndexOf(":");
  if (colonIndex >= 0) {
    urlPath=IoUtils.asSystemSpecificPath(urlPath,colonIndex);
  }
  try {
    urlPath=URLDecoder.decode(urlPath,"UTF-8");
  }
 catch (  UnsupportedEncodingException e) {
    throw new IllegalArgumentException("Error decoding URL (" + url + ") using UTF-8",e);
  }
  log.debug("KieModule URL type=" + urlType + " url="+ urlPath);
  return urlPath;
}
