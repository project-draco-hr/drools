{
  RulePackage rulePackage=data.getPackageByName(descr.getName());
  StringBuilder header=new StringBuilder();
  for (  ImportDescr i : descr.getImports()) {
    String fullPath=i.getTarget();
    String name=fullPath.substring(fullPath.lastIndexOf(".") + 1);
    header.append("import ");
    header.append(fullPath);
    header.append("\n");
    imports.put(name,fullPath);
    ObjectType objectType=this.data.getObjectTypeByFullName(fullPath);
    if (objectType == null)     objectType=new ObjectType();
    objectType.setName(name);
    objectType.setFullName(fullPath);
    data.add(objectType);
  }
  SuggestionCompletionLoader loader=new SuggestionCompletionLoader();
  SuggestionCompletionEngine engine=loader.getSuggestionEngine(header.toString(),jars,Collections.EMPTY_LIST);
  for (  String factTypeName : engine.getFactTypes()) {
    for (    String fieldName : engine.getFieldCompletions(factTypeName)) {
      ObjectType ot=this.data.getObjectTypeByFullName(imports.get(factTypeName));
      Field field=data.getFieldByObjectTypeAndFieldName(ot.getFullName(),fieldName);
      if (field == null) {
        field=createField(fieldName,ot);
        field.setFieldType(engine.getFieldType(ot.getName(),fieldName));
        data.add(field);
      }
    }
  }
  for (  TypeDeclarationDescr typeDeclaration : descr.getTypeDeclarations()) {
    String objectTypeName=imports.get(typeDeclaration.getTypeName());
    if (objectTypeName == null)     objectTypeName=typeDeclaration.getTypeName();
    ObjectType objectType=this.data.getObjectTypeByFullName(objectTypeName);
    if (objectType == null) {
      objectType=new ObjectType();
      objectType.setName(typeDeclaration.getTypeName());
      objectType.setFullName(typeDeclaration.getTypeName());
      data.add(objectType);
    }
    for (    String fieldName : typeDeclaration.getFields().keySet()) {
      Field field=data.getFieldByObjectTypeAndFieldName(objectType.getFullName(),fieldName);
      if (field == null) {
        field=createField(fieldName,objectType);
        field.setFieldType(typeDeclaration.getFields().get(fieldName).getPattern().getObjectType());
        data.add(field);
      }
    }
    for (    String metadata : typeDeclaration.getMetaAttributes().keySet()) {
      objectType.getMetadata().put(metadata,typeDeclaration.getMetaAttribute(metadata));
    }
  }
  if (rulePackage == null) {
    rulePackage=new RulePackage();
    rulePackage.setName(descr.getName());
    data.add(rulePackage);
  }
  currentPackage=rulePackage;
  visit(descr.getRules(),rulePackage);
}
