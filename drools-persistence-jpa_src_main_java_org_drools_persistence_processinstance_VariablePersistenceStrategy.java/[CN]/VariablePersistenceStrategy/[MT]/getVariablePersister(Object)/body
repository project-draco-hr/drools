{
  VariablePersister persister=null;
  String persisterFQN=getVariablePersistenceType(o);
  if (persisterFQN != null && !persisterFQN.equals("")) {
    Class<VariablePersister> persisterClass=null;
    persister=variablePersisters.get(persisterFQN);
    if (persister != null) {
      return persister;
    }
    try {
      persisterClass=(Class<VariablePersister>)Class.forName(persisterFQN);
      Constructor<VariablePersister> constructor=persisterClass.getConstructor();
      persister=(VariablePersister)constructor.newInstance();
      variablePersisters.put(persisterFQN,persister);
      return persister;
    }
 catch (    ClassNotFoundException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    NoSuchMethodException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    SecurityException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    InstantiationException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    IllegalAccessException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    IllegalArgumentException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
catch (    InvocationTargetException ex) {
      Logger.getLogger(VariablePersistenceStrategy.class.getName()).log(Level.SEVERE,null,ex);
    }
  }
  return null;
}
