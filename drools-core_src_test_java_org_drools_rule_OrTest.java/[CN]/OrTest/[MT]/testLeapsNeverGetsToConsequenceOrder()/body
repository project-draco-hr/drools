{
  this.pkg.addRule(this.getNeverGetsToConsequenceRule());
  final org.drools.leaps.LeapsRuleBase ruleBase=(LeapsRuleBase)RuleBaseFactory.newRuleBase(RuleBase.LEAPS);
  ruleBase.addPackage(this.pkg);
  final WorkingMemory workingMemory=ruleBase.newWorkingMemory();
  workingMemory.assertObject(new Stage(Stage.LABELING));
  workingMemory.assertObject(new Edge(1000,1,false,Edge.NIL,Edge.NIL));
  workingMemory.assertObject(new Edge(1000,2,false,Edge.NIL,Edge.NIL));
  workingMemory.assertObject(new Edge(5555,3,false,Edge.NIL,Edge.NIL));
  workingMemory.fireAllRules();
  workingMemory.assertObject(new Stage(Stage.DETECT_JUNCTIONS));
  workingMemory.fireAllRules();
}
