{
  Assert.assertNotNull(myConversationBean);
  ContextControl ctxCtrl=BeanProvider.getContextualReference(ContextControl.class);
  ctxCtrl.startContext(SessionScoped.class);
  ctxCtrl.startContext(ConversationScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  myConversationBean.begin();
  int myBeanHashcode=myConversationBean.getMyBean().hashCode();
  int myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  int result=myConversationBean.doSomething("hello 0");
  Assert.assertEquals(1,result);
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  Assert.assertEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  myBeanHashcode=myConversationBean.getMyBean().hashCode();
  myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  result=myConversationBean.doSomething("hello 1");
  Assert.assertEquals(1,result);
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  Assert.assertEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  result=myConversationBean.doSomething("hello 2");
  Assert.assertEquals(1,result);
  myBeanHashcode=myConversationBean.getMyBean().hashCode();
  myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  myConversationBean.end();
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.stopContext(ConversationScoped.class);
  ctxCtrl.startContext(ConversationScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  myConversationBean.begin();
  Assert.assertNotEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertNotEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  result=myConversationBean.doSomething("hello 3");
  Assert.assertEquals(1,result);
  myBeanHashcode=myConversationBean.getMyBean().hashCode();
  myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  Assert.assertEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  myBeanHashcode=myConversationBean.getMyBean().hashCode();
  myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  result=myConversationBean.doSomething("hello 4");
  Assert.assertEquals(1,result);
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  Assert.assertEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  result=myConversationBean.doSomething("hello 5");
  Assert.assertEquals(1,result);
  myBeanHashcode=myConversationBean.getMyBean().hashCode();
  myKieSessionHashcode=myConversationBean.getkSession().hashCode();
  myConversationBean.end();
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.stopContext(ConversationScoped.class);
  ctxCtrl.startContext(ConversationScoped.class);
  ctxCtrl.startContext(RequestScoped.class);
  myConversationBean.begin();
  Assert.assertNotEquals(myBeanHashcode,myConversationBean.getMyBean().hashCode());
  Assert.assertNotEquals(myKieSessionHashcode,myConversationBean.getkSession().hashCode());
  myConversationBean.end();
  ctxCtrl.stopContext(RequestScoped.class);
  ctxCtrl.stopContext(ConversationScoped.class);
  ctxCtrl.stopContext(SessionScoped.class);
}
