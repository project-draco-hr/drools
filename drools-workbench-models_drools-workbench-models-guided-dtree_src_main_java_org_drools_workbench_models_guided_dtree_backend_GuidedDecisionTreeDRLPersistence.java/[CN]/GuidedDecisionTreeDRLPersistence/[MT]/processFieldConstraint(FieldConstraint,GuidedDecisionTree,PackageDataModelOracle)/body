{
  final List<Node> nodes=new ArrayList<Node>();
  if (fc instanceof SingleFieldConstraintEBLeftSide) {
    throw new GuidedDecisionTreeDRLParserException("Can only process SingleFieldConstraints");
  }
  if (!(fc instanceof SingleFieldConstraint)) {
    throw new GuidedDecisionTreeDRLParserException("Can only process SingleFieldConstraints");
  }
  final SingleFieldConstraint sfc=(SingleFieldConstraint)fc;
  if (sfc.getConnectives() != null) {
    throw new GuidedDecisionTreeDRLParserException("Cannot process ConnectiveConstraints");
  }
  ConstraintNode node=null;
  final String className=sfc.getFactType();
  final String fieldName=sfc.getFieldName();
  if (sfc.getConstraintValueType() == BaseSingleFieldConstraint.TYPE_LITERAL) {
    final String operator=sfc.getOperator();
    final Value value=getValue(className,fieldName,model,dmo,sfc.getValue());
    node=new ConstraintNodeImpl(className,fieldName,operator,value);
  }
 else   if (sfc.getConstraintValueType() == BaseSingleFieldConstraint.TYPE_ENUM) {
    final String operator=sfc.getOperator();
    final Value value=getValue(className,fieldName,model,dmo,sfc.getValue());
    node=new ConstraintNodeImpl(className,fieldName,operator,value);
  }
 else   if (sfc.getConstraintValueType() == BaseSingleFieldConstraint.TYPE_UNDEFINED) {
    node=new ConstraintNodeImpl(className,fieldName);
  }
 else {
    throw new GuidedDecisionTreeDRLParserException("Cannot process FieldConstraint: ConstraintValueType is unsupported.");
  }
  if (node != null) {
    if (sfc.isBound()) {
      node.setBinding(sfc.getFieldBinding());
    }
    nodes.add(node);
  }
  return nodes;
}
