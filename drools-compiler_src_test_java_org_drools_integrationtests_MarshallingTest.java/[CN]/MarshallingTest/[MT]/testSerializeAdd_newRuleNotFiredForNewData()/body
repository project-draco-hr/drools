{
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1_0.drl")));
  Package pkg=SerializationHelper.serializeObject(builder.getPackage());
  ruleBase.addPackage(pkg);
  List results=new ArrayList();
  StatefulSession session=ruleBase.newStatefulSession();
  session.setGlobal("results",results);
  InternalFactHandle stilton1=(InternalFactHandle)session.insert(new Cheese("stilton",10));
  InternalFactHandle brie1=(InternalFactHandle)session.insert(new Cheese("brie",10));
  session.fireAllRules();
  GlobalResolver resolver=session.getGlobalResolver();
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  Marshaller marshaller=new DefaultMarshaller();
  ruleBase.writeStatefulSession(session,baos,marshaller);
  byte[] serializedRulebase=DroolsStreamUtils.streamOut(ruleBase);
  session.dispose();
  assertEquals(1,results.size());
  assertEquals(stilton1.getObject(),results.get(0));
  ruleBase=(RuleBase)DroolsStreamUtils.streamIn(serializedRulebase);
  session=ruleBase.readStatefulSession(new ByteArrayInputStream(baos.toByteArray()),marshaller);
  session.setGlobalResolver(resolver);
  results=(List)session.getGlobal("results");
  builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1_1.drl")));
  pkg=SerializationHelper.serializeObject(builder.getPackage());
  ruleBase.addPackage(pkg);
  InternalFactHandle stilton2=(InternalFactHandle)session.insert(new Cheese("stilton",20));
  InternalFactHandle brie2=(InternalFactHandle)session.insert(new Cheese("brie",20));
  InternalFactHandle brie3=(InternalFactHandle)session.insert(new Cheese("brie",30));
  session.fireAllRules();
  assertEquals(5,results.size());
  assertEquals(brie1.getObject(),results.get(1));
  assertEquals(stilton2.getObject(),results.get(2));
  assertEquals(brie2.getObject(),results.get(4));
  assertEquals(brie3.getObject(),results.get(3));
  serializedRulebase=null;
  session=SerializationHelper.getSerialisedStatefulSession(session,ruleBase);
  serializedRulebase=DroolsStreamUtils.streamOut(ruleBase);
  session.dispose();
}
