{
  RuleBase ruleBase=RuleBaseFactory.newRuleBase();
  PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic1.drl")));
  Package pkg=SerializationHelper.serializeObject(builder.getPackage());
  ruleBase.addPackage(pkg);
  ruleBase=SerializationHelper.serializeObject(ruleBase);
  StatefulSession session=ruleBase.newStatefulSession();
  List list=new ArrayList();
  session.setGlobal("list",list);
  InternalFactHandle stilton=(InternalFactHandle)session.insert(new Cheese("stilton",10));
  InternalFactHandle brie=(InternalFactHandle)session.insert(new Cheese("brie",10));
  session.fireAllRules();
  assertEquals(list.size(),1);
  assertEquals("stilton",list.get(0));
  session=SerializationHelper.getSerialisedStatefulSession(session,ruleBase);
  list=(List)session.getGlobal("list");
  assertNotNull(list);
  assertEquals(list.size(),1);
  assertEquals("stilton",list.get(0));
  builder=new PackageBuilder();
  builder.addPackageFromDrl(new InputStreamReader(getClass().getResourceAsStream("test_Dynamic3.drl")));
  pkg=SerializationHelper.serializeObject(builder.getPackage());
  ruleBase.addPackage(pkg);
  InternalFactHandle stilton2=(InternalFactHandle)session.insert(new Cheese("stilton",10));
  InternalFactHandle brie2=(InternalFactHandle)session.insert(new Cheese("brie",10));
  InternalFactHandle bob=(InternalFactHandle)session.insert(new Person("bob",30));
  session.fireAllRules();
  assertEquals(list.size(),3);
  assertEquals(bob.getObject(),list.get(1));
  assertEquals("stilton",list.get(2));
  session.dispose();
}
