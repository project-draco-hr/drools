{
  final Reader reader=new InputStreamReader(getClass().getResourceAsStream("test_Serializable2.drl"));
  final PackageBuilder builder=new PackageBuilder();
  builder.addPackageFromDrl(reader);
  final Package pkg=builder.getPackage();
  assertEquals(builder.getErrors().toString(),0,builder.getErrors().getErrors().length);
  RuleBase ruleBase=getRuleBase(pkg);
  Map map=new HashMap();
  map.put("x",ruleBase);
  map=SerializationHelper.serializeObject(map);
  ruleBase=(RuleBase)map.get("x");
  final Rule[] rules=ruleBase.getPackages()[0].getRules();
  assertEquals(3,rules.length);
  StatefulSession session=ruleBase.newStatefulSession();
  session.setGlobal("list",new ArrayList());
  final Primitives p=new Primitives();
  p.setBytePrimitive((byte)1);
  p.setShortPrimitive((short)2);
  p.setIntPrimitive((int)3);
  session.insert(p);
  session=SerializationHelper.getSerialisedStatefulSession(session,ruleBase);
  assertEquals(1,IteratorToList.convert(session.iterateObjects()).size());
  assertEquals(p,IteratorToList.convert(session.iterateObjects()).get(0));
  assertEquals(3,session.getAgenda().agendaSize());
  session=SerializationHelper.getSerialisedStatefulSession(session,ruleBase);
  session.fireAllRules();
  final List list=(List)session.getGlobal("list");
  assertEquals(3,list.size());
  assertEquals("1",list.get(0));
  assertEquals("2",list.get(1));
  assertEquals("3",list.get(2));
}
