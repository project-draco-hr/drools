{
  try {
    checkIsUpdateable();
    if (value == null) {
      return;
    }
    this.checkout();
    node.setProperty(prop,value);
    if (setLastUpdated) {
      Calendar lastModified=Calendar.getInstance();
      this.node.setProperty(LAST_MODIFIED_PROPERTY_NAME,lastModified);
      this.node.setProperty(LAST_CONTRIBUTOR_PROPERTY_NAME,node.getSession().getUserID());
    }
  }
 catch (  RulesRepositoryException e) {
    throw new RulesRepositoryException(e);
  }
catch (  UnsupportedRepositoryOperationException e) {
    throw new RulesRepositoryException(e);
  }
catch (  LockException e) {
    throw new RulesRepositoryException(e);
  }
catch (  RepositoryException e) {
    throw new RulesRepositoryException(e);
  }
}
