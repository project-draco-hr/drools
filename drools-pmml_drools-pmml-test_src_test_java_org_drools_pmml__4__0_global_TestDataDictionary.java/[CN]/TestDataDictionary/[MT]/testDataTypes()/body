{
  FactType gender=getKbase().getFactType(packageName,"Gender");
  FactType noclaims=getKbase().getFactType(packageName,"NoOfClaims");
  FactType scrambled=getKbase().getFactType(packageName,"Scrambled");
  FactType domicile=getKbase().getFactType(packageName,"Domicile");
  FactType agecar=getKbase().getFactType(packageName,"AgeOfCar");
  FactType amklaims=getKbase().getFactType(packageName,"AmountOfClaims");
  Object g=gender.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.Gender",g.getClass().getName());
  gender.set(g,"value","M");
  Assert.assertEquals("M",gender.get(g,"value"));
  Object n=noclaims.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.NoOfClaims",n.getClass().getName());
  noclaims.set(n,"value","> 3");
  Assert.assertEquals("> 3",noclaims.get(n,"value"));
  Object s=scrambled.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.Scrambled",s.getClass().getName());
  scrambled.set(s,"value",1);
  Assert.assertEquals(1,scrambled.get(s,"value"));
  Object d=domicile.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.Domicile",d.getClass().getName());
  domicile.set(d,"value","SomeWhere");
  Assert.assertEquals("SomeWhere",domicile.get(d,"value"));
  Object a=agecar.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.AgeOfCar",a.getClass().getName());
  agecar.set(a,"value",24.3);
  Assert.assertEquals(24.3,agecar.get(a,"value"));
  Object k=amklaims.newInstance();
  Assert.assertEquals("org.drools.pmml_4_0.test.AmountOfClaims",k.getClass().getName());
  amklaims.set(k,"value",9);
  Assert.assertEquals(9,amklaims.get(k,"value"));
  try {
    agecar.set(a,"value","Not a String field");
    Assert.fail();
  }
 catch (  ClassCastException cce) {
    Assert.assertEquals(24.3,agecar.get(a,"value"));
  }
  Assert.assertFalse((Boolean)agecar.get(a,"valid"));
  agecar.set(a,"valid",true);
  Assert.assertTrue((Boolean)agecar.get(a,"valid"));
  Assert.assertFalse((Boolean)agecar.get(a,"missing"));
  agecar.set(a,"missing",true);
  Assert.assertTrue((Boolean)agecar.get(a,"missing"));
}
