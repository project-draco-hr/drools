{
  Class clazz=null;
  clazz=lookupFromCache(className);
  if (clazz == null) {
    try {
      clazz=this.classLoader.loadClass(className);
    }
 catch (    final ClassNotFoundException e) {
      clazz=null;
    }
  }
  if ("boolean".equals(className)) {
    return boolean.class;
  }
 else   if ("byte".equals(className)) {
    return byte.class;
  }
 else   if ("short".equals(className)) {
    return short.class;
  }
 else   if ("char".equals(className)) {
    return char.class;
  }
 else   if ("int".equals(className)) {
    return int.class;
  }
 else   if ("long".equals(className)) {
    return long.class;
  }
 else   if ("float".equals(className)) {
    return float.class;
  }
 else   if ("double".equals(className)) {
    return double.class;
  }
  if (clazz == null) {
    final Set validClazzCandidates=new HashSet();
    final Iterator it=this.imports.iterator();
    while (it.hasNext()) {
      clazz=importClass((String)it.next(),className);
      if (clazz != null) {
        validClazzCandidates.add(clazz);
      }
    }
    if (validClazzCandidates.size() > 1) {
      final StringBuffer sb=new StringBuffer();
      final Iterator clazzCandIter=validClazzCandidates.iterator();
      while (clazzCandIter.hasNext()) {
        if (0 != sb.length()) {
          sb.append(", ");
        }
        sb.append(((Class)clazzCandIter.next()).getName());
      }
      throw new Error("Unable to find unambiguously defined class '" + className + "', candidates are: ["+ sb.toString()+ "]");
    }
 else     if (validClazzCandidates.size() == 1) {
      clazz=(Class)validClazzCandidates.toArray()[0];
    }
 else {
      clazz=null;
    }
  }
  if (clazz == null) {
    clazz=defaultClass(className);
  }
  if (clazz == null) {
    throw new ClassNotFoundException("Unable to find class '" + className + "'");
  }
  return clazz;
}
