{
  try {
    this.memory.add(this.workingMemory,matches0);
    this.memory.add(this.workingMemory,matches1);
    this.memory.add(this.workingMemory,matches2);
    Assert.assertEquals("Memory should have size 3",3,this.memory.size());
    Iterator i=this.memory.iterator();
    Assert.assertTrue("There should be a next match",i.hasNext());
    ObjectMatches matches=(ObjectMatches)i.next();
    Assert.assertSame("Wrong returned match",matches0,matches);
    Assert.assertTrue("There should be a next match",i.hasNext());
    matches=(ObjectMatches)i.next();
    Assert.assertSame("Wrong returned match",matches1,matches);
    Assert.assertTrue("There should be a next match",i.hasNext());
    matches=(ObjectMatches)i.next();
    Assert.assertSame("Wrong returned match",matches2,matches);
    Assert.assertFalse("There should not be a next match",i.hasNext());
  }
 catch (  UnsupportedOperationException e) {
    Assert.fail("Beta memory was not supposed to throw any exception: " + e.getMessage());
  }
catch (  ClassCastException e) {
    Assert.fail("BetaRightMemory was not supposed to throw ClassCastException: " + e.getMessage());
  }
}
