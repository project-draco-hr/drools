{
  KnowledgeBuilder kbuilder=KnowledgeBuilderFactory.newKnowledgeBuilder();
  final Reader source=new InputStreamReader(getClass().getResourceAsStream("rule_with_expander_dsl_more.dslr"));
  final Reader dsl=new InputStreamReader(getClass().getResourceAsStream("test_expander.dsl"));
  kbuilder.addResource(dsl,KnowledgeType.DSL);
  kbuilder.addResource(source,KnowledgeType.DSLR);
  assertFalse(kbuilder.hasErrors());
  final String err=kbuilder.getErrors().toString();
  assertEquals("",err);
  assertEquals(0,kbuilder.getErrors().size());
  final Collection<KnowledgePackage> pkgs=kbuilder.getKnowledgePackages();
  assertEquals(1,pkgs.size());
  KnowledgeBase kbase=KnowledgeBaseFactory.newKnowledgeBase();
  kbase.addKnowledgePackages(pkgs);
  kbase=SerializationHelper.serializeObject(kbase);
  StatefulKnowledgeSession session=kbase.newStatefulKnowledgeSession();
  session.insert(new Person("rage"));
  session.insert(new Cheese("cheddar",15));
  final List messages=new ArrayList();
  session.setGlobal("messages",messages);
  session.fireAllRules();
  assertEquals(0,messages.size());
  session.insert(new Person("fire"));
  session.fireAllRules();
  assertEquals(0,messages.size());
  session.insert(new Cheese("brie",15));
  session.fireAllRules();
  assertEquals(1,messages.size());
}
