{
  try {
    int _type=DECIMAL;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int cnt18=0;
      loop18:       while (true) {
        int alt18=2;
        int LA18_0=input.LA(1);
        if (((LA18_0 >= '0' && LA18_0 <= '9'))) {
          alt18=1;
        }
switch (alt18) {
case 1:
{
            if ((input.LA(1) >= '0' && input.LA(1) <= '9')) {
              input.consume();
              state.failed=false;
            }
 else {
              if (state.backtracking > 0) {
                state.failed=true;
                return;
              }
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      if (cnt18 >= 1)       break loop18;
    if (state.backtracking > 0) {
      state.failed=true;
      return;
    }
  EarlyExitException eee=new EarlyExitException(18,input);
throw eee;
}
cnt18++;
}
int alt19=2;
int LA19_0=input.LA(1);
if ((LA19_0 == 'I' || LA19_0 == 'L' || LA19_0 == 'l')) {
alt19=1;
}
switch (alt19) {
case 1:
{
if (input.LA(1) == 'I' || input.LA(1) == 'L' || input.LA(1) == 'l') {
input.consume();
state.failed=false;
}
 else {
if (state.backtracking > 0) {
  state.failed=true;
  return;
}
MismatchedSetException mse=new MismatchedSetException(null,input);
recover(mse);
throw mse;
}
}
break;
}
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
