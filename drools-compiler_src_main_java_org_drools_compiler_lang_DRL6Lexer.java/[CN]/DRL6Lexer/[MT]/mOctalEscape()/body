{
  try {
    int alt55=3;
    int LA55_0=input.LA(1);
    if ((LA55_0 == '\\')) {
      int LA55_1=input.LA(2);
      if (((LA55_1 >= '0' && LA55_1 <= '3'))) {
        int LA55_2=input.LA(3);
        if (((LA55_2 >= '0' && LA55_2 <= '7'))) {
          int LA55_4=input.LA(4);
          if (((LA55_4 >= '0' && LA55_4 <= '7'))) {
            alt55=1;
          }
 else {
            alt55=2;
          }
        }
 else {
          alt55=3;
        }
      }
 else       if (((LA55_1 >= '4' && LA55_1 <= '7'))) {
        int LA55_3=input.LA(3);
        if (((LA55_3 >= '0' && LA55_3 <= '7'))) {
          alt55=2;
        }
 else {
          alt55=3;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return;
        }
        int nvaeMark=input.mark();
        try {
          input.consume();
          NoViableAltException nvae=new NoViableAltException("",55,1,input);
          throw nvae;
        }
  finally {
          input.rewind(nvaeMark);
        }
      }
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      NoViableAltException nvae=new NoViableAltException("",55,0,input);
      throw nvae;
    }
switch (alt55) {
case 1:
{
        match('\\');
        if (state.failed)         return;
        if ((input.LA(1) >= '0' && input.LA(1) <= '3')) {
          input.consume();
          state.failed=false;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
        if ((input.LA(1) >= '0' && input.LA(1) <= '7')) {
          input.consume();
          state.failed=false;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
        if ((input.LA(1) >= '0' && input.LA(1) <= '7')) {
          input.consume();
          state.failed=false;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return;
          }
          MismatchedSetException mse=new MismatchedSetException(null,input);
          recover(mse);
          throw mse;
        }
      }
    break;
case 2:
{
    match('\\');
    if (state.failed)     return;
    if ((input.LA(1) >= '0' && input.LA(1) <= '7')) {
      input.consume();
      state.failed=false;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
    if ((input.LA(1) >= '0' && input.LA(1) <= '7')) {
      input.consume();
      state.failed=false;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return;
      }
      MismatchedSetException mse=new MismatchedSetException(null,input);
      recover(mse);
      throw mse;
    }
  }
break;
case 3:
{
match('\\');
if (state.failed) return;
if ((input.LA(1) >= '0' && input.LA(1) <= '7')) {
  input.consume();
  state.failed=false;
}
 else {
  if (state.backtracking > 0) {
    state.failed=true;
    return;
  }
  MismatchedSetException mse=new MismatchedSetException(null,input);
  recover(mse);
  throw mse;
}
}
break;
}
}
  finally {
}
}
