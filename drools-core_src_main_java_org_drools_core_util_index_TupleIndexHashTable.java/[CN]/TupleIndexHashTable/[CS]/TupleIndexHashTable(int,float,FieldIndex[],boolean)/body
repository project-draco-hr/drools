{
  super(capacity,loadFactor);
  this.left=left;
  this.startResult=PRIME;
  for (  FieldIndex i : index) {
    this.startResult+=PRIME * this.startResult + i.getExtractor().getIndex();
  }
switch (index.length) {
case 0:
    throw new IllegalArgumentException("FieldIndexHashTable cannot use an index[] of length  0");
case 1:
  this.index=new SingleIndex(index,this.startResult);
break;
case 2:
this.index=new DoubleCompositeIndex(index,this.startResult);
break;
case 3:
this.index=new TripleCompositeIndex(index,this.startResult);
break;
default :
throw new IllegalArgumentException("FieldIndexHashTable cannot use an index[] of length  great than 3");
}
}
